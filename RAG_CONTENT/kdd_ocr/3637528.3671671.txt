Label Learning Method Based on Tensor Projection
Jing Li
School of Telecommunications
Engineering, Xidian University
Xi’an, Shaanxi, China
jinglxd@stu.xidian.edu.cnQuanxue Gao∗
School of Telecommunications
Engineering, Xidian University
Xi’an, Shaanxi, China
qxgao@xidian.edu.cnQianqian Wang
School of Telecommunications
Engineering, Xidian University
Xi’an, Shaanxi, China
qqwang@xidian.edu.cn
Cheng Deng
School of Electronic Engineering,
Xidian University
Xi’an, Shaanxi, China
chdeng@mail.xidian.edu.cnDeyan Xie
School of Science and Information
Science, Qingdao Agricultural
University
Qingdao, Shandong, China
xdy123@qau.edu.cn
ABSTRACT
Multi-view clustering method based on anchor graph has been
widely concerned due to its high efficiency and effectiveness. In
order to avoid post-processing, most of the existing anchor graph-
based methods learn bipartite graphs with connected components.
However, such methods have high requirements on parameters,
and in some cases it may not be possible to obtain bipartite graphs
with clear connected components. To end this, we propose a label
learning method based on tensor projection (LLMTP). Specifically,
we project anchor graph into the label space through an orthogonal
projection matrix to obtain cluster labels directly. Considering that
the spatial structure information of multi-view data may be ignored
to a certain extent when projected in different views separately, we
extend the matrix projection transformation to tensor projection,
so that the spatial structure information between views can be
fully utilized. In addition, we introduce the tensor Schatten 𝑝-norm
regularization to make the clustering label matrices of different
views as consistent as possible. Extensive experiments have proved
the effectiveness of the proposed method.
CCS CONCEPTS
•Computing methodologies →Cluster analysis; •Informa-
tion systems→Clustering and classification ;Clustering .
KEYWORDS
Multi-View clustering, Anchor graph, Tensor Schatten 𝑝-norm,
Tensor projection
ACM Reference Format:
Jing Li, Quanxue Gao, Qianqian Wang, Cheng Deng, and Deyan Xie. 2024.
Label Learning Method Based on Tensor Projection. In Proceedings of the
∗Corresponding author.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
KDD ’24, August 25–29, 2024, Barcelona, Spain
©2024 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ACM ISBN 979-8-4007-0490-1/24/08. . . $15.00
https://doi.org/10.1145/3637528.367167130th ACM SIGKDD Conference on Knowledge Discovery and Data Mining
(KDD ’24), August 25–29, 2024, Barcelona, Spain. ACM, New York, NY, USA,
11 pages. https://doi.org/10.1145/3637528.3671671
1 INTRODUCTION
As one of the common techniques of data mining, clustering can
be used to discover the internal structure and organization of data
and divide them into different meaningful clusters. With the wide
application of various sensors and other technologies, the descrip-
tion of the same object is more and more prone to diversification
and isomerization. For example, an event can be described by a
text, a picture, a voice and a video; A picture can be described with
different features, such as GIST [ 14], CMT [ 32], HOG [ 1], etc. A
section of path information in automatic driving can be represented
by liDAR point cloud data, depth camera data, and infrared data, etc.
Data like this can be called multi-view data. Multi-view clustering
(MVC) is the operation of clustering multi-view data.
As an effective data mining method, multi-view clustering has
been widely concerned [ 4,11,23,29,33,36,38]. One of the most
representative methods is the graph-based multi-view clustering
method [ 5,13,16,18,26,37]. These method involve similarity
graphs construction and eigen-decomposition of Laplacian matrices,
and the computational complexity is O(𝑛2)andO(𝑛3), respectively,
where𝑛represents the number of samples. With the advent of the
era of big data, data acquisition is becoming easier, resulting in
the continuous expansion of the scale of datasets. So graph-based
multi-view clustering methods have been somewhat difficult to deal
with large-scale multi-view data. On this basis, anchor graph-based
multi-view clustering methods have been proposed and widely
used.
The core idea of the anchor graph-based method is to select 𝑚
representative points (called anchors) from the 𝑛samples, and then
learn the relationship between the samples and anchors (called
anchor graph). The anchor graph is 𝑛×𝑚. Generally speaking,
𝑚≪𝑛, so the anchor graph-based multi-view clustering methods
can handle large-scale multi-view data well. In addition to being able
to handle large-scale data, anchor graph-based methods also inherit
the advantages of graph-based methods represented by spectral
clustering, i.e., they are not affected by the geometric distribution of
data. This method usually first explores the geometrical structure
of multi-view data by constructing anchor graph, and then clusters
 
1599
KDD ’24, August 25–29, 2024, Barcelona, Spain Jing Li, Quanxue Gao, Qianqian Wang, Cheng Deng, & Deyan Xie
on the anchor graph using existing clustering techniques. However,
the second step is still time-consuming.
To end this, another method using anchor graph clustering is
proposed. These methods use anchor graphs to obtain bipartite
graphs, and then learns bipartite graphs with 𝐾connected com-
ponents (where 𝐾is the number of classes), so that the clustering
results can be obtained directly without post-processing. However,
these methods of learning bipartite graphs have high parameter
requirements so may not find 𝐾connected components in some
cases.
In order to avoid the above problems and avoid post-processing,
we consider the use of projection matrix to project the anchor graph
directly into the label space, i.e., the𝑛×𝑚anchor graph is regarded
as feature matrices with 𝑛samples and 𝑚feature dimensions, and
the𝑛×𝑐cluster label matrix can be directly obtained after the
projection transformation. Generally speaking, the above process
requires the projection transformation of the anchor graph on each
view, and then the clustering label matrix of each view is obtained,
finally these matrices are fused to obtain the clustering results of
multi-view data. However, projective transformation in each view
separately may cause the spatial structure information between
different views not fully utilized.
To end this, we propose a multi-view data label learning method
based on tensor projection (LLMTP). In order to get the cluster
labels directly from the anchor graph, we consider projecting the
anchor graph into the label space, so that the cluster results can
be obtained directly. Considering that the projection of each view
separately will cause the model to be unable to make good use of
the complementary information and spatial structure information
between different views, we extend the matrix projection transfor-
mation of the anchor graph to the tensor projection transformation
of the anchor graph tensor, i.e., project the third-order tensor di-
rectly. So that the spatial structure information embedded between
different views can be preserved to a large extent. Thus, better clus-
tering performance can be obtained. Extensive experiments have
proved the superiority of our proposed model.
In summary, the main contributions of this paper are as follows:
•It is proposed to project the anchor graph into the label
space to obtain the clustering label directly. Meanwhile, the
matrix projection is extended to tensor projection so that
complementary information and spatial structure informa-
tion between views can be fully mined.
•From clustering perspective, our method can integrates multi-
view information at both the data level and decision level.
•We propose an algorithm to optimize the tensor projection
and verify the convergence of this algorithm by experiments.
•We introduce the tensor Schatten p-norm to exploit comple-
mentary information across different views, facilitating the
derivation of a common consensus label matrix.
2 RELATED WORKS
2.1 Anchor Graph-Based Multi-View Clustering
Methods
Since the computational complexity of 𝑛×𝑛similarity graph is
O(𝑉𝑛2)during graph construction, and O(𝑛3)during eigen de-
composition of Laplacian matrix (where 𝑉and𝑛are the numberof views and samples, respectively), it is difficult for graph-based
multi-view clustering methods to deal with large-scale multi-view
data. By using 𝑚anchors to cover 𝑛sample point clouds, and con-
structing the relationship between 𝑛samples and 𝑚anchors, the
anchor graph is obtained. Because 𝑚≪𝑛, the multi-view clustering
method based on anchor graph can deal with large-scale multi-view
data effectively.
In general, anchor graph-based methods explore the geometry of
multi-view data by constructing anchor graphs, and then it requires
additional clustering techniques such as K-means to cluster the ob-
tained anchor graph. However, the additional clustering techniques
is time-consuming.
To avoid post-processing, it is common to use anchor graphs to
learn bipartite graphs with K connected components (where K is
the number of clusters). Therefore, post-processing can be avoided
and clustering results can be obtained directly from bipartite graphs
with K connected components. The representative methods are as
follows. MVGL [ 35] gains insights from various single view graphs
to construct a global graph. Instead of relying on post-processing
techniques, it utilizes K connected components to extract clustering
metrics. However, its scalability for handling large-scale data might
be limited. SFMC [ 10] introduces a parameter-free approach to fuse
multi-view cluster graphs, resulting in cohesive composite graphs
through the utilization of self-supervised weighting. Moreover, it
employs K connected components to symbolize clusters. LCBG [ 39]
takes the intra-view and inter-view spatial low-rank structures of
the learned bipartite graphs into account by minimizing tensor
Schatten𝑝-norm and nuclear norm. MSC-BG [ 31] leverages the
Schatten𝑝-norm to investigate the synergistic information across
diverse views, and deriving clusters through K connecting com-
ponents. TBGL [ 25] employs the Schatten 𝑝-norm to delve into
the resemblances among different views, while simultaneously in-
tegratingℓ1,2-norm minimization regularization and connectivity
constraints to investigate the similarities within each view.
But these methods of learning bipartite graphs have high param-
eter requirements and may not find 𝐾connected components in
some cases.
2.2 Multi-View Clustering Method Based on
Projection
In the process of multi-view clustering, in most cases, we directly
process the original data or the constructed similarity graph, but
there may be redundant information, noise or outlier information
in the original data or similarity graph. They will adversely affect
the final clustering performance. Multi-view clustering methods
based on projection are mostly studied to solve such problems.
The general practice of this kind of method is to construct an or-
thogonal projection matrix to projective the original data, and then
get a relatively clean representation matrix in the embedded space.
Gao et al.[ 2] propose a new multi-view clustering framework that
combines dimensionality reduction, manifold structure learning
and feature selection, which maps high-dimensional data to low-
dimensional spaces to reduce data complexity and reduce the effects
of data noise and redundancy. Wang et al.[ 17] proposed a robust
self-weighted multi-view projection clustering (RSwMPC) based
onℓ2,1-norm. It can simultaneously reduce dimension, suppress
 
1600Label Learning Method Based on Tensor Projection KDD ’24, August 25–29, 2024, Barcelona, Spain
noise and learn local structure graph. The resulting optimal graph
can be directly used for clustering without any other processing.
Sang et al.[ 15] proposed a consensus graph-based auto-weighted
multi-view projection clustering (CGAMPC). It can simultaneously
reduce dimension, save manifold structure and learn consensus
structure graph. The information similarity graph is constructed on
the projected data to ensure the removal of redundant and noisy in-
formation in the original similarity graph, and the ℓ2,1-norm is used
to select adaptive discriminant features. Wang et al.[ 20] proposed
consistency and diversity preserving with projection decomposi-
tion for multi-view clustering (CDP2D). It automatically learns the
shared projection matrix and analyzes multi-view data through
projection matrix decomposition. Li et al.[9] propose a projection-
based coupled tensor learning method (PCTL). It constructs an
orthogonal projection matrix to obtain the main feature informa-
tion of the raw data of each view, and learns the representation
matrix in a clean embedded space. Moreover, tensor learning is used
to coupling projection matrix and representation matrix, mining
higher-order information between views, and constructing more
suitable and better representation of embedded space.
Inspired by the above method, we consider whether the 𝑛×𝑚
anchor graph can be directly regarded as an feature matrix with 𝑛
samples and 𝑚dimensional features, according to [ 21]. Then the
feature matrix is directly projected into the label space through
projection changes, and the final clustering label is obtained directly.
3 NOTATIONS
We will cover t-product and the definition of the tensor Schatten
𝑝-norm in this section.
Definition 1 (t-product [ 7]).Suppose A∈R𝑛1×𝑚×𝑛3and
B∈R𝑚×𝑛2×𝑛3, the t-product A∗B∈R𝑛1×𝑛2×𝑛3is given by
A∗B=ifft(bdiag(AB),[],3),
where A=bdiag(A)and it denotes the block diagonal matrix. The
blocks of Aare frontal slices of A.
Definition 2. [3] Given H∈R𝑛1×𝑛2×𝑛3,ℎ=min(𝑛1,𝑛2), the
tensor Schatten 𝑝-norm of His defined as
∥H∥Sp○= 
𝑛3Í
𝑖=1H(𝑖)𝑝
Sp○!1
𝑝
= 
𝑛3Í
𝑖=1ℎÍ
𝑗=1𝜎𝑗
H(𝑖)𝑝!1
𝑝
, (1)
where, 0<𝑝⩽1,𝜎𝑗(H(𝑖))denotes the j-th singular value of H(𝑖).
It should be pointed out that for 0<𝑝⩽1when𝑝is appropri-
ately chosen, the Schatten 𝑝-norm provides quite effective improve-
ments for a tighter approximation of the rank function [27, 34].
Also we introduce the notations used throughout this paper. We
use bold calligraphy letters for 3rd-order tensors, H∈R𝑛1×𝑛2×𝑛3,
bold upper case letters for matrices, H, bold lower case letters for
vectors, h, and lower case letters such as ℎ𝑖𝑗𝑘for the entries of H.
Moreover, the 𝑖-th frontal slice of HisH(𝑖).His the discrete
Fourier transform (DFT) of Halong the third dimension, H=
fft(H,[],3). Thus, H=ifft(H,[],3). The trace and transpose
of matrix Hare expressed as tr(H)andHT. The F-norm of His
denoted by∥H∥𝐹.4 METHODOLOGY
4.1 Motivation and Objective Function
Multi-view clustering method based on anchor graph can deal
with large-scale multi-view data efficiently. By learning a bipartite
graph with K connected components using anchor graphs, the
cluster labels can be obtained directly without any post-processing.
However, this method has high requirements on parameters, and
in some cases it may not be able to obtain a clear bipartite graph
with K connected components.
Inspired by the excellent performance of the orthogonal projec-
tion matrix in processing redundant information in the raw data
matrix, and referring to [ 21], we consider the 𝑛×𝑚anchor graph as
an feature matrix composed of 𝑛𝑚-dimensional feature vectors and
the𝑛×𝑐cluster label matrix can be obtained directly by projecting
the feature matrix (i.e.anchor graph) into the label space (as shown
in Figure 1), where 𝑛,𝑚and𝑐are the number of samples, anchors
and clusters, respectively. In this way, the clustering results can
be obtained directly without post-processing. When dealing with
multi-view data, we have the following formula:
min𝑉∑︁
𝑣=1S(𝑣)G(𝑣)−H(𝑣)2
𝐹+𝜆𝑉∑︁
𝑣=1R(H(𝑣))
s.t. H(𝑣)⩾0,H(𝑣)TH(𝑣)=I,G(𝑣)TG(𝑣)=I,(2)
where, S(𝑣)is the anchor graph from the 𝑣-th view, the anchors
selection method and the anchor graph construction method are
the same as that of [ 25].G(𝑣)is the orthogonal projection matrix.
H(𝑣)is the cluster label matrix. It can be more interpretable by
constraining it to be non-negative and orthogonal, i.e., each row
ofH(𝑣)has only one non-zero value, and the position of the value
indicates the cluster to which the corresponding element of the
row belongs. The purpose of the regular term with coefficient of 𝜆
is to make the clustering label matrices of different views tend to
be consistent.
𝐇(𝟏)
𝐇(𝟐)
𝐇(𝒗)K
NNM
Anchor Graph Space Label SpaceProjection
Figure 1: Anchor graph space to label space. 𝑁,𝑀and𝐾are
the number of samples, anchors and clusters, respectively.
Considering that the projection transformation in Eq. (2) is car-
ried out separately in each view, the complementary information
and spatial structure information embedded in different views may
 
1601KDD ’24, August 25–29, 2024, Barcelona, Spain Jing Li, Quanxue Gao, Qianqian Wang, Cheng Deng, & Deyan Xie
Multi-view Data
Anchor Graph Construction
Anchor Tensor Construction
Anchor Tensor
ProjectionIndicator Tensor
Clustering
Figure 2: The flowchart of LLMTP
not be fully utilized. To end this, we consider extending the two-
dimensional matrix projection into a third-order tensor projection.
Eq. (2) is extended as follows:
min∥S∗G−H∥2
𝐹+𝜆𝑉∑︁
𝑣=1R(H(𝑣))
s.t.H⩾0,HT∗H=I,GT∗G=I(3)
In multi-view clustering, we should try our best to make the
H(𝑣)of different views in (2) tend to be the same. Inspired by the
excellent performance of the tensor Schatten 𝑝-norm [ 3,8,25,31],
we fully explore the complementary information in label matrices
of different views by introducing the regular term of the tensor
Schatten𝑝-norm.
The final objective function is as follows and the flowchart of
LLMTP is shown in Figure 2:
min∥S∗G−H∥2
𝐹+𝜆∥H∥𝑝
Sp○
s.t.H⩾0,HT∗H=I,GT∗G=I(4)
where 0<𝑝⩽1,𝜆is the hyper-parameter of the Schatten 𝑝-norm
term. The construction process of the tensor His shown in Figure
3. Remark 1 briefly describes the role of the tensor Schatten 𝑝-norm.
Remark 1 (Explanation of the tensor Schatten 𝑝-norm).
For the tensor H, as depicted in Fig 3, its 𝑘-th lateral slice Θ𝑘repre-
sents the relationship of 𝑛samples with the 𝑘-th cluster across different
views. Multi-view clustering aims to harmonize the sample-cluster
relationships in different views, making H(1)
:,𝑘,···,H(𝑣)
:,𝑘as congruent
as possible. However, the clustering structures often vary significantly
across views. Applying the tensor Schatten 𝑝-norm to Hensures
thatΦ𝑘maintains a spatially low-rank structure, leveraging comple-
mentary information across views and fostering consistency in the
clustering labels.
4.2 Optimization
Inspired by Augmented Lagrange Multiplier (ALM), we introduce
two auxiliary variables QandJand let H=Q,H=J, respec-
tively, where Q⩾0. Then, we rewrite the model as the following
KV
NTensor𝓗
𝐇(𝟏)𝐇(𝟐)𝐇(𝒗)𝐇(𝟏)
𝐇(𝟐)
𝐇(𝒗)K
N𝐓𝐞𝐧𝐬𝐨𝐫𝐂𝐨𝐧𝐬𝐭𝐫𝐮𝐜𝐭𝐢𝐨𝐧
𝚯(𝒌)Figure 3: Tensor construction
unconstrained problem:
min∥S∗G−H∥2
𝐹+𝜆∥J∥𝑝
Sp○
+𝜇
2H−Q+Y1
𝜇2
𝐹+𝜌
2H−J+Y2
𝜌2
𝐹
s.t.Q⩾0,HT∗H=I,GT∗G=I(5)
whereY1,Y2represent Lagrange multipliers and 𝜇,𝜌are the
penalty parameters. The optimization process can therefore be
separated into four steps:
•Solve Gwith fixed Q,H,J.(5) becomes:
min
GT∗G=I∥S∗G−H∥2
𝐹,(6)
(6) is equivalent to the following in the frequency domain:
min
(G(𝑣))TG(𝑣)=I𝑉∑︁
𝑣=1S(𝑣)G(𝑣)−H(𝑣)2
𝐹, (7)
whereG=fft(G,[],3), and the others in the same way.
(7) can be reduced to:
min
(G(𝑣))TG(𝑣)=Itr
(G(𝑣))T(S(𝑣))TS(𝑣)G(𝑣)
−2tr
(G(𝑣))T(S(𝑣))TH(𝑣)
,(8)
 
1602Label Learning Method Based on Tensor Projection KDD ’24, August 25–29, 2024, Barcelona, Spain
(8) is equivalent to:
max
(G(𝑣))TG(𝑣)=Itr
(G(𝑣))TW(𝑣)
1G(𝑣)
+2tr
(G(𝑣))TW(𝑣)
2
,
(9)
whereW(𝑣)
1=𝛽I−(S(𝑣))TS(𝑣)andW(𝑣)
2=(S(𝑣))TH(𝑣),
where𝛽is an arbitrary constant to ensure that W(𝑣)
1is a positive
definite matrix.
To solve (9), we introduce the following Theorem:
Theorem 1. [28] For the model:
max
GTG=Itr(GTBG)+ 2tr(GTK) (10)
Gis solved iteratively and G∗=UVT, where U,Vis from the SVD
decomposition: UXVT=BG+K.
According to Theorem 1, the G(𝑣)can be solved iteratively and
the solution is:
G∗(𝑣)=U(𝑣)(V(𝑣))T, (11)
whereU(𝑣)X(𝑣)(V(𝑣))T=W(𝑣)
1G(𝑣)+W(𝑣)
2.
•Solve Hwith fixed Q,G,J.(5) becomes:
min
HT∗H=I∥S∗G−H∥2
𝐹+𝜇
2H−Q+Y1
𝜇2
𝐹
+𝜌
2H−J+Y2
𝜌2
𝐹,(12)
(12) is equivalent to the following in the frequency domain:
min
(H(𝑣))TH(𝑣)=I𝑉∑︁
𝑣=1S(𝑣)G(𝑣)−H(𝑣)2
𝐹
+𝑉∑︁
𝑣=1𝜇
2H(𝑣)−Q(𝑣)+Y(𝑣)
1
𝜇2
𝐹
+𝑉∑︁
𝑣=1𝜌
2H(𝑣)−J(𝑣)+Y(𝑣)
2
𝜌2
𝐹,(13)
whereH=fft(H,[],3), and the others in the same way.
(13) can be reduced to:
min
(H(𝑣))TH(𝑣)=I−2tr
(H(𝑣))TS(𝑣)G(𝑣)
−𝜇tr
(H(𝑣))TW(𝑣)
3
−𝜌tr
(H(𝑣))TW(𝑣)
4
(14)
whereW(𝑣)
3=Q(𝑣)−Y(𝑣)
1
𝜇andW(𝑣)
4=J(𝑣)−Y(𝑣)
2
𝜌.
(14) can be reduced to:
max
(H(𝑣))TH(𝑣)=Itr
(H(𝑣))TA(𝑣)
(15)
whereA(𝑣)=2S(𝑣)G(𝑣)+𝜇W(𝑣)
3+𝜌W(𝑣)
4.
To solve (15), we introduce the following Theorem:Theorem 2. Given GandP, where G(G)T=IandPhas the
singular value decomposition P=ΛS(V)T, then the optimal solution
of
max
G(G)T=Itr(GP) (16)
isG∗=V[I,0](Λ)T.
Proof. From the SVD P=ΛS(V)Tand together with (10), it is
evident that
tr(GP)=tr(GΛS(V)T)
=tr(S(V)TGΛ)
=tr(SH)
=∑︁
𝑖𝑠𝑖𝑖ℎ𝑖𝑖,(17)
where H=(V)TGΛ,𝑠𝑖𝑖andℎ𝑖𝑖are the(𝑖,𝑖)elements of SandH,
respectively. It can be easily verified that H(H)T=I, where Iis an
identity matrix. Therefore −1⩽ℎ𝑖𝑖⩽1and𝑠𝑖𝑖⩾0, Thus we have:
tr(GP)=∑︁
𝑖𝑠𝑖𝑖ℎ𝑖𝑖⩽∑︁
𝑖𝑠𝑖𝑖. (18)
The equality holds when His an identity matrix. tr(GP)reaches
the maximum when H=[I,0]. □
According to Theorem 2 the solution of (15) is:
H(𝑣)=𝚲(𝑣)(𝑽(𝑣))T(19)
where 𝚲(𝑣)and𝑽(𝑣)can be obtained by SVD A(𝑣)=𝚲(𝑣)X(𝑽(𝑣))T
•Solve Qwith fixed H,G,J.(5) becomes:
min
Q⩾0=𝜇
2H−Q+Y1
𝜇2
𝐹, (20)
(20) is obviously equivalent to:
min
Q⩾0𝜇
2(H+Y1
𝜇)−Q2
𝐹(21)
According to [30], the solution of (21) is:
Q=
H+Y1
𝜇
+(22)
•Solve Jwith fixed H,G,Q.(5) becomes:
min=𝜆∥J∥𝑝
Sp○+𝜌
2H−J+Y2
𝜌2
𝐹, (23)
We can deduce
J∗=arg min1
2H+Y2
𝜌−J2
𝐹+𝜆
𝜌∥J∥𝑝
Sp○, (24)
which has a closed-form solution as Lemma 1 [3]:
Lemma 1. LetZ∈R𝑛1×𝑛2×𝑛3have a t-SVDZ=U∗S∗VT,
then the optimal solution for
min
X1
2∥X−Z∥2
𝐹+𝜏∥X∥𝑝
Sp○. (25)
isX∗=Γ𝜏(Z)=U∗ifft(𝑃𝜏(Z))∗VT, where𝑃𝜏(Z)is an f-diagonal
3rd-order tensor, whose diagonal elements can be found by using the
GST algorithm introduced in [3].
 
1603KDD ’24, August 25–29, 2024, Barcelona, Spain Jing Li, Quanxue Gao, Qianqian Wang, Cheng Deng, & Deyan Xie
Algorithm 1 Label Learning Method Based on Tensor Projection
(LLMTP)
Input: Data matrices{X(𝑣)}𝑉
𝑣=1∈R𝑁×𝑑𝑣; anchors numbers 𝑚;
cluster number 𝐾.
Output: Cluster labels Yof each data points.
1:Initialize:𝜇=10−5,𝜌=10−5,𝜂=1.5,Y1=0,Y2=0,Q(𝑣)
is identity matrix;
2:Compute graph matrix S(𝑣)of each views;
3:while not condition do
4: Update G(𝑣)by solving (11);
5: Update H(𝑣)by solving (19);
6: Update Q(𝑣)by solving (22);
7: Update Jby using (24);
8: Update Y1,Y2,𝜇and𝜌:Y1=Y1+𝜇(H−Q),Y2=
Y2+𝜇(H−J),𝜇=min(𝜂𝜇,1013),𝜌=min(𝜂𝜌,1013);
9:end while
10:Calculate the 𝐾clusters by using
H=Í𝑉
𝑣=1H(𝑣)/𝑉;
11:return Clustering result (The position of the largest element
in each row of the indicator matrix is the label of the corre-
sponding sample).
The solution of (24) is:
J∗=Γ𝜆
𝜌(H+Y2
𝜌). (26)
Finally, the optimization procedure for Label Learning Method
Based on Tensor Projection (LLMTP) is outlined in Algorithm 1.
4.3 Complexity of LLMTP
For the computational complexity, the process of constructing S
has a computational complexity of O(𝑉𝑛𝑚𝑑+𝑉𝑛𝑚𝑙𝑜𝑔(𝑚)). When
updating the four variables, G,H,QandJ, their respective com-
putational complexities are O(𝑉𝑚𝑘2+𝑉𝑛𝑘𝑙𝑜𝑔(𝑉𝑛)),O(𝑉𝑛𝑘2+
𝑉𝑚𝑘𝑙𝑜𝑔(𝑉𝑚)),O(𝑉𝑛𝑘)andO(2𝑉𝑛𝑘𝑙𝑜𝑔(𝑉𝑘)+𝑉2𝑘𝑛), where𝑉,𝑚,
𝑘,𝑛,𝑑are numbers of views, anchors, clusters, samples and sum of
all features.
5 EXPERIMENTS
In this section, we demonstrate the performance of our proposed
method through extensive experiments. We evaluate the clustering
performance by 3 metrics used widely, i.e., 1) ACC; 2) NMI; 3)
Purity. The higher the value the better the clustering results for
all metrics mentioned above. To ensure reliability, we conducted
10 independent trials for each method, recording the mean and
variance of the results. Experiments using the MSRC, HandWritten4,
Mnist4, and Scene15 datasets were conducted on a laptop equipped
with an Intel Core i5-8300H CPU and 16 GB RAM, utilizing Matlab
R2018b. In contrast, the Reuters and NoisyMnist were processed on
a standard Windows 10 server, featuring dual Intel(R) Xeon(R) Gold
6230 CPUs at 2.10 GHz and 128 GB RAM, with MATLAB R2020a.Table 1: Multi-view datasets used in our experiments
#Dataset
#Samples #View #Class #Feature
MSRC
210 5 7 24, 576, 512, 256, 254
HandWritten4 2000 4 10 76, 216, 47, 6
Mnist4 4000 3 4 30, 9, 30
Scene15 4485 3 15 1800, 1180, 1240
Reuters 18758 5 6 21531, 24892, 34251, 15506, 11547
The datasets employed in our experiments are detailed in Table
1. We compare our approach against the following state-of-the-
art methods: CSMSC [ 12], GMC [ 19], ETLMSC [ 24], LMVSC [ 6],
FMCNOF [30], SFMC [10], and FPMVS-CAG [22].
5.1 Clustering Performance
Table 2 and Table 3 show the clustering performance of the proposed
model on different datasets. The optimal performance is indicated
bybold, and the sub-optimal performance is indicated by underline .
It can be seen from the three tables that the method proposed in this
paper is superior to other comparison methods. Among compari-
son methods, ETLMSC’s performance is relatively suboptimal. It is
worth mentioning that this method is a tensor-based spectral clus-
tering method, while others are non-tensor methods. It may means
that tensor-based methods have a certain degree of performance
improvement compared with non-tensor methods.
5.2 Parameter Analysis
The hyper-parameters in the model are analyzed experimentally,
including the anchor rate (affecting the constructed anchor graph),
the value of 𝑝in the tensor Schatten 𝑝-norm, and the value of the
coefficient𝜆of the regular term of the tensor Schatten 𝑝-norm.
The effect of anchor rate on clustering performance is shown in
Figure 4. We conducted experiments on a small dataset, MSRC, and
a medium-sized dataset, Mnist4. They obtained the best indicators
at anchor rates of 0.7 and 0.4, respectively. The experimental re-
sults show that larger anchor rate is not always better. In addition,
according to common sense, the larger the anchor rate, the more
time and space it takes to construct the anchor graph. Figure 5
confirms this statement. It can be found that with the increase of
the anchor rate, the running time of the algorithm also increases
in an approximate linear relationship. It is more obvious on the
Mnist4. It also shows the importance of the choice of anchor rate
on the other hand. In general, for large data sets, we tend to use
smaller anchor rates.
The influence of the value 𝑝on the clustering performance is
shown in Figure 6. We start from 𝑝=0.1and conduct experiments
at intervals of 0.1 until 𝑝=1. It can be seen from the figure that
the best clustering performance is achieved on MSRC and Mnist4
when𝑝is 0.9 and 0.2 respectively. It can also be shown from the
experimental point of view that, compared with the nuclear norm
(where𝑝=1), Schatten 𝑝-norm minimization can ensure that the
rank of the tensor is closer to the target rank. Thus, the comple-
mentary information between different views can be better mined,
and better clustering performance can be obtained.
Figure 7 shows the effect of different values of 𝜆on clustering
performance. Among them, when 𝜆achieves 51 and 50, the best
 
1604Label Learning Method Based on Tensor Projection KDD ’24, August 25–29, 2024, Barcelona, Spain
Table 2: Clustering performance on MSRC, HandWritten4, Mnist4 and Scene15
Datasets MSRC HandWritten4
Metrices ACC NMI Purity ACC NMI Purity
CSMSC 0.758±0.007 0.735±0.010 0.793±0.008 0.806±0.001 0.793±0.001 0.867±0.001
GMC 0.895±0.000 0.809±0.000 0.895±0.000 0.861±0.000 0.859±0.000 0.861±0.000
ETLMSC 0.962±0.000 0.937±0.000 0.962±0.000 0.938±0.001 0.893±0.001 0.938±0.001
LMVSC 0.814±0.000 0.717±0.000 0.814±0.000 0.904±0.000 0.831±0.000 0.904±0.000
FMCNOF 0.440±0.039 0.345±0.046 0.449±0.042 0.385±0.092 0.370±0.092 0.386±0.090
SFMC 0.810±0.000 0.721±0.000 0.810±0.000 0.853±0.000 0.871±0.000 0.873±0.000
FPMVS-CAG 0.786±0.000 0.686±0.000 0.786±0.000 0.744±0.000 0.753±0.000 0.744±0.000
Ours 0.986±0.000 0.971±0.000 0.986±0.000 0.963±0.000 0.937±0.000 0.963±0.000
Datasets Mnist4 Scene15
Metrices ACC NMI Purity ACC NMI Purity
CSMSC 0.641±0.000 0.601±0.010 0.728±0.008 0.334±0.008 0.313±0.005 0.378±0.003
GMC 0.920±0.000 0.807±0.000 0.920±0.000 0.140±0.000 0.058±0.000 0.146±0.000
ETLMSC 0.934±0.000 0.847±0.000 0.934±0.000 0.709±0.000 0.774±0.000 0.887±0.000
LMVSC 0.892±0.000 0.726±0.000 0.892±0.000 0.355±0.000 0.331±0.000 0.399±0.000
FMCNOF 0.697±0.119 0.490±0.102 0.711±0.096 0.218±0.033 0.166±0.022 0.221±0.029
SFMC 0.916±0.000 0.797±0.000 0.916±0.000 0.344±0.000 0.522±0.000 0.347±0.000
FPMVS-CAG 0.885±0.000 0.715±0.000 0.885±0.000 0.619±0.000 0.567±0.000 0.651±0.000
Ours 0.982±0.000 0.933±0.000 0.982±0.000 0.800±0.000 0.835±0.000 0.808±0.000
Table 3: Clustering performance and running time (sec.) on
Reuters ("OM" means out of memory, and "-" means the algo-
rithm ran for more than three hours.)
Datasets Reuters
Metrices A
CC NMI Purity Time
CSMSC OM
OM OM OM
GMC -
- - -
ETLMSC OM
OM OM OM
LMVSC 0.589±0.000
0.335±0.000 0.615±0.000 150.51
FMCNOF 0.343±0.000
0.125±0.000 0.358±0.000 186.45
SFMC 0.602±0.000 0.354±0.000 0.604±0.000
494.68
FPMVS-CAG 0.526±0.000
0.323±0.000 0.603±0.000 2252.20
Ours 0.770±0.000
0.690±0.000 0.783±0.000 630.05
clustering results are obtained on MSRC and Mnist4, respectively.
Moreover, it can be found from the figure that MSRC is more sensi-
tive to the value of 𝜆than Mnist4. When conducting experiments on
other small and medium-sized datasets, the value of 𝜆is generally
adjusted to a small range around 50.
5.3 Experiments of Convergence
We tested the convergence of the model, as shown in Figure 8. Since
we introduced two auxiliary variables QandJwhen solving the
model, we judged whether the model could gradually converge after
enough iterations by calculating the difference between variables
HandQand the difference between HandJin Eq. (5). As shown
in Figure 8, both differences approach 0 approximately within 50
iterations, so it can be judged that the model proposed in this paperis convergent. At the same time, we also draw the change curve of
clustering index ACC with the number of iterations. It can be found
from the figure that ACC also converges with the convergence of
the model.
5.4 Visualization of Experimental Results
We conducted a visualization experiment on the label matrix H
after final fusion according to Algorithm 1, as shown in Figure
9. In the cluster label matrix Hafter fusion, the position where
the maximum value of each row is located can be regarded as the
cluster to which the sample of that row belongs. It can be found
that MSRC, Mnist4 and HandWritten4 are clearly divided into 7
clusters, 4 clusters and 10 clusters, respectively.
5.5 Ablation Experiments
In this section, we verify the effect of third-order tensor projection
and the Schatten 𝑝-norm on the indicator tensor on clustering
performance.
Table 4: The contribution of each component
Comp
onents Reuters
S.P
. T.P. A
CC NMI Purity
✘
✔ 0.395
0.145 0.473
✔ ✘ 0.766
0.676 0.777
✔ ✔ 0.770
0.690 0.783
 
1605KDD ’24, August 25–29, 2024, Barcelona, Spain Jing Li, Quanxue Gao, Qianqian Wang, Cheng Deng, & Deyan Xie
(a) MSRC
(b) Mnist4
Figure 4: Clustering performance with different anchor rate
on MSRC and Mnist4
(a) MSRC (b) Mnist4
Figure 5: Running time (sec.) with different anchor rate on
MSRC and Mnist4
In Table 4, S.P. means using tensor Schatten 𝑝-norm on the
indicator tensor. T.P. means using third-order tensor projection.
According to Table 4, it can be found that the tensor Schatten
𝑝-norm on indicator tensor is very important for the clustering
performance. In addition, extending the matrix projection to third-
order tensor projection also improves the clustering performance.
And the S.P. is more important than T.P. according to the table.
指标 ACC NMI Purity 指标 ACC NMI
0.1 0.98225 0.933267 0.98225 0.1 0.8 0.797155
0.2 0.98225 0.939078 0.98225 0.2 0.780952 0.803499
0.3 0.97025 0.907059 0.97025 0.3 0.847619 0.799247
0.4 0.9675 0.896753 0.9675 0.4 0.819048 0.781354
0.5 0.96525 0.901904 0.96525 0.5 0.904762 0.844011
0.6 0.96675 0.904645 0.96675 0.6 0.87619 0.829117
0.7 0.97 0.912215 0.97 0.7 0.961905 0.92943
0.8 0.9705 0.914459 0.9705 0.8 0.857143 0.762216
0.9 0.972 0.912557 0.972 0.9 0.985714 0.970882
1 0.956 0.882517 0.956 10.709524 0.655446
00.10.20.30.40.50.60.70.80.91
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1Clustering Performance
value of p
 ACC
 NMI
 Purity
(a) MSRC
(b) Mnist4
00.10.20.30.40.50.60.70.80.91
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1Clustering Performance
value of p
 ACC
 NMI
 PurityFigure 6: Clustering performance with different 𝑝on MSRC
and Mnist4
(a) MSRC
(b) Mnist4
Figure 7: Clustering performance with different 𝜆on MSRC
and Mnist4
6 CONCLUSIONS
In this paper, we propose a label learning method based on tensor
projection (LLMTP). LLMTP projects the anchor graph space into
the label space and thus we can get the clustering results from
the label tensor directly. Meanwhile, in order to make full use of
the complementary information and spatial structure information
 
1606Label Learning Method Based on Tensor Projection KDD ’24, August 25–29, 2024, Barcelona, Spain
(a) MSRC
(b) Mnist4
(c) HandWritten4
Figure 8: Convergence experiment on MSRC, Mnist4 and
HandWritten4
between different views, we extend the view-by-view matrix pro-
jection process to tensor projection processing multi-view data
directly, and use the tensor Schatten 𝑝-norm to make the clustering
label matrix of each view tend to be consistent. Extensive experi-
ments have proved the effectiveness of the proposed method.
ACKNOWLEDGMENTS
This work is supported by the National Natural Science Foundation
of China under Grants 62176203, the Natural Science Foundation of
Shandong Province under Grant ZR202102180986, the Fundamental
Research Funds for the Central Universities and the Innovation
Fund of Xidian University (YJSJ24017), the Guangxi Key Laboratory
(a) MSRC
(b) Mnist4
(c) HandWritten4Figure 9: Label visualization on MSRC, Mnist4 and Hand-
Written4
of Digital Infrastructure under Grant GXDIOP2023010, the Natural
Science Foundation of Guangdong Province, 2023A1515011845.
 
1607KDD ’24, August 25–29, 2024, Barcelona, Spain Jing Li, Quanxue Gao, Qianqian Wang, Cheng Deng, & Deyan Xie
REFERENCES
[1]Navneet Dalal and Bill Triggs. 2005. Histograms of oriented gradients for human
detection. In 2005 IEEE computer society conference on computer vision and pattern
recognition (CVPR’05), Vol. 1. Ieee, 886–893.
[2]Quanxue Gao, Zhizhen Wan, Ying Liang, Qianqian Wang, Yang Liu, and Ling
Shao. 2020. Multi-view projected clustering with graph learning. Neural Networks
126 (2020), 335–346. https://doi.org/10.1016/J.NEUNET.2020.03.020
[3]Quanxue Gao, Pu Zhang, Wei Xia, Deyan Xie, Xinbo Gao, and Dacheng Tao.
2021. Enhanced Tensor RPCA and its Application. IEEE Transactions on Pattern
Analysis and Machine Intelligence 43, 6 (2021), 2133–2140.
[4]Zhezheng Hao, Zhoumin Lu, Guoxu Li, Feiping Nie, Rong Wang, and Xuelong Li.
2024. Ensemble Clustering With Attentional Representation. IEEE Trans. Knowl.
Data Eng. 36, 2 (2024), 581–593. https://doi.org/10.1109/TKDE.2023.3292573
[5]Yanfang He and Umi Kalsom Yusof. 2023. Self-Weighted Graph-Based Framework
for Multi-View Clustering. IEEE Access 11 (2023), 30197–30207. https://doi.org/
10.1109/ACCESS.2023.3260971
[6]Zhao Kang, Wangtao Zhou, Zhitong Zhao, Junming Shao, Meng Han, and Zenglin
Xu. 2020. Large-scale multi-view subspace clustering in linear time. In Proceedings
of the AAAI conference on Artificial Intelligence. 4412–4419.
[7]Misha E Kilmer and Carla D Martin. 2011. Factorization strategies for third-order
tensors. Linear Algebra Appl. 435, 3 (2011), 641–658.
[8]Jing Li, Quanxue Gao, Qianqian Wang, Ming Yang, and Wei Xia. 2023. Orthogonal
Non-negative Tensor Factorization based Multi-view Clustering. In Thirty-seventh
Conference on Neural Information Processing Systems.
[9]Jinghao Li, Xiaoqian Zhang, Jing Wang, Xiao Wang, Zhen Tan, and Huaijiang Sun.
2023. Projection-based coupled tensor learning for robust multi-view clustering.
Inf. Sci. 632 (2023), 664–677. https://doi.org/10.1016/J.INS.2023.03.072
[10] Xuelong Li, Han Zhang, Rong Wang, and Feiping Nie. 2022. Multiview Clustering:
A Scalable and Parameter-Free Bipartite Graph Fusion Method. IEEE Transactions
on Pattern Analysis and Machine Intelligence 44, 1 (2022), 330–344.
[11] Han Lu, Huafu Xu, Qianqian Wang, Quanxue Gao, Ming Yang, and Xinbo Gao.
2024. Efficient Multi-View -Means for Image Clustering. IEEE Trans. Image
Process. 33 (2024), 273–284. https://doi.org/10.1109/TIP.2023.3340609
[12] Shirui Luo, Changqing Zhang, Wei Zhang, and Xiaochun Cao. 2018. Consistent
and specific multi-view subspace clustering. In Thirty-second AAAI conference on
artificial intelligence.
[13] Shikun Mei, Wenhui Zhao, Quanxue Gao, Ming Yang, and Xinbo Gao. 2023. Joint
feature selection and optimal bipartite graph learning for subspace clustering.
Neural Networks 164 (2023), 408–418. https://doi.org/10.1016/J.NEUNET.2023.04.
044
[14] Aude Oliva and Antonio Torralba. 2001. Modeling the shape of the scene: A
holistic representation of the spatial envelope. International journal of computer
vision 42 (2001), 145–175.
[15] Xiaoshuang Sang, Jianfeng Lu, and Hong Lu. 2022. Consensus graph learning
for auto-weighted multi-view projection clustering. Inf. Sci. 609 (2022), 816–837.
https://doi.org/10.1016/J.INS.2022.07.119
[16] Chuan Tang, Kun Sun, Chang Tang, Xiao Zheng, Xinwang Liu, Jun-Jie Huang,
and Wei Zhang. 2023. Multi-view subspace clustering via adaptive graph learning
and late fusion alignment. Neural Networks 165 (2023), 333–343. https://doi.org/
10.1016/J.NEUNET.2023.05.019
[17] Beilei Wang, Yun Xiao, Zhihui Li, Xuanhong Wang, Xiaojiang Chen, and Dingyi
Fang. 2020. Robust Self-Weighted Multi-View Projection Clustering. In The Thirty-
Fourth AAAI Conference on Artificial Intelligence, 2020. AAAI Press, 6110–6117.
https://doi.org/10.1609/AAAI.V34I04.6075
[18] Haiyue Wang, Quan Wang, Qiguang Miao, and Xiaoke Ma. 2024. Joint learning
of data recovering and graph contrastive denoising for incomplete multi-view
clustering. Inf. Fusion 104 (2024), 102155. https://doi.org/10.1016/J.INFFUS.2023.
102155
[19] Hao Wang, Yan Yang, and Bing Liu. 2019. GMC: Graph-based multi-view cluster-
ing.IEEE Transactions on Knowledge and Data Engineering 32, 6 (2019), 1116–1129.
[20] Haiyue Wang, Wensheng Zhang, and Xiaoke Ma. 2022. Clustering of noised and
heterogeneous multi-view data with graph learning and projection decomposi-
tion. Knowl. Based Syst. 255 (2022), 109736. https://doi.org/10.1016/J.KNOSYS.
2022.109736
[21] Siwei Wang, Xinwang Liu, Suyuan Liu, Jiaqi Jin, Wenxuan Tu, Xinzhong Zhu, and
En Zhu. 2022. Align then Fusion: Generalized Large-scale Multi-view Clusteringwith Anchor Matching Correspondences. In Advances in Neural Information
Processing Systems 35, Sanmi Koyejo, S. Mohamed, A. Agarwal, Danielle Belgrave,
K. Cho, and A. Oh (Eds.).
[22] Siwei Wang, Xinwang Liu, Xinzhong Zhu, Pei Zhang, Yi Zhang, Feng Gao, and En
Zhu. 2021. Fast parameter-free multi-view subspace clustering with consensus
anchor guidance. IEEE Transactions on Image Processing 31 (2021), 556–568.
[23] Ziyu Wang, Lusi Li, Xin Ning, Wenkai Tan, Yongxin Liu, and Houbing Song. 2024.
Incomplete multi-view clustering via structure exploration and missing-view
inference. Inf. Fusion 103 (2024), 102123. https://doi.org/10.1016/J.INFFUS.2023.
102123
[24] Jianlong Wu, Zhouchen Lin, and Hongbin Zha. 2019. Essential Tensor Learning
for Multi-View Spectral Clustering. IEEE Transactions on Image Processing 28, 12
(2019), 5910–5922.
[25] Wei Xia, Quanxue Gao, Qianqian Wang, Xinbo Gao, Chris Ding, and Dacheng
Tao. 2023. Tensorized Bipartite Graph Learning for Multi-View Clustering. IEEE
Trans. Pattern Anal. Mach. Intell. 45, 4 (2023), 5187–5202. https://doi.org/10.1109/
TPAMI.2022.3187976
[26] Qingjiang Xiao, Shiqiang Du, Kaiwu Zhang, Jinmei Song, and Yixuan Huang.
2023. Adaptive sparse graph learning for multi-view spectral clustering. Appl.
Intell. 53, 12 (2023), 14855–14875. https://doi.org/10.1007/S10489-022-04267-9
[27] Yuan Xie, Shuhang Gu, Yan Liu, Wangmeng Zuo, Wensheng Zhang, and Lei
Zhang. 2016. Weighted Schatten 𝑝-norm minimization for image denoising and
background subtraction. IEEE Trans. Image Process. 25, 10 (2016), 4842–4857.
[28] Huiling Xu, Xiangdong Zhang, Wei Xia, Quanxue Gao, and Xinbo Gao. 2020. Low-
rank tensor constrained co-regularized multi-view spectral clustering. Neural
Networks 132 (2020), 245–252.
[29] Ben Yang, Jinghan Wu, Xuetao Zhang, Xinhu Zheng, Feiping Nie, and Badong
Chen. 2024. Discrete correntropy-based multi-view anchor-graph clustering. Inf.
Fusion 103 (2024), 102097. https://doi.org/10.1016/J.INFFUS.2023.102097
[30] Ben Yang, Xuetao Zhang, Feiping Nie, Fei Wang, Weizhong Yu, and Rong Wang.
2021. Fast Multi-View Clustering via Nonnegative and Orthogonal Factorization.
IEEE Transactions on Image Processing 30 (2021), 2575–2586.
[31] Haizhou Yang, Quanxue Gao, Wei Xia, Ming Yang, and Xinbo Gao. 2022. Mul-
tiview Spectral Clustering With Bipartite Graph. IEEE Trans. Image Process. 31
(2022), 3591–3605. https://doi.org/10.1109/TIP.2022.3171411
[32] Hui Yu, Mingjing Li, Hong-Jiang Zhang, and Jufu Feng. 2002. Color texture mo-
ments for content-based image retrieval. In Proceedings. International Conference
on Image Processing, Vol. 3. IEEE, 929–932.
[33] Yu Yun, Jing Li, Quanxue Gao, Ming Yang, and Xinbo Gao. 2023. Low-rank
discrete multi-view spectral clustering. Neural Networks 166 (2023), 137–147.
https://doi.org/10.1016/J.NEUNET.2023.06.038
[34] Zhiyuan Zha, Xin Yuan, Bihan Wen, Jiantao Zhou, Jiachao Zhang, and Ce Zhu.
2020. A benchmark for sparse coding: When group sparsity meets rank mini-
mization. IEEE Transactions on Image Processing 29 (2020), 5094–5109.
[35] Kun Zhan, Changqing Zhang, Junpeng Guan, and Junsheng Wang. 2018. Graph
Learning for Multiview Clustering. IEEE Trans. Cybern. 48, 10 (2018), 2887–2895.
https://doi.org/10.1109/TCYB.2017.2751646
[36] Zihao Zhang, Qianqian Wang, Zhiqiang Tao, Quanxue Gao, and Wei Feng. 2023.
Dropping Pathways Towards Deep Multi-View Graph Subspace Clustering Net-
works. In Proceedings of the 31st ACM International Conference on Multimedia.
ACM, 3259–3267. https://doi.org/10.1145/3581783.3612332
[37] Mingyu Zhao, Weidong Yang, and Feiping Nie. 2023. Auto-weighted orthogonal
and nonnegative graph reconstruction for multi-view clustering. Inf. Sci. 632
(2023), 324–339. https://doi.org/10.1016/J.INS.2023.03.016
[38] Wenhui Zhao, Quanxue Gao, Shikun Mei, and Ming Yang. 2023. Contrastive
self-representation learning for data clustering. Neural Networks 167 (2023),
648–655. https://doi.org/10.1016/J.NEUNET.2023.08.050
[39] Qian Zhou, Haizhou Yang, and Quanxue Gao. 2022. Low-rank constraint bipartite
graph learning. Neurocomputing 511 (2022), 426–436. https://doi.org/10.1016/J.
NEUCOM.2022.09.002
A ADDITIONS TO THE EXPERIMENTS
We provide more detailed clustering metrics on four datasets on
Table 5, including MSRC, HandWritten4, Mnist4 and Scene15.
 
1608Label Learning Method Based on Tensor Projection KDD ’24, August 25–29, 2024, Barcelona, Spain
Table 5: Clustering performance on MSRC, HandWritten4, Mnist4 and Scene15. (The best result is in bold, and the second-best
result is underlined.)
Dataset MSRC
Metrics
ACC NMI Purity PER REC F-score ARI
CSMSC
0.758±0.007 0.735±0.010 0.793±0.008 0.736±0.014 0.673±0.008 0.703±0.010 0.653±0.012
GMC 0.895±0.000 0.809±0.000 0.895±0.000 0.788±0.000 0.814±0.000 0.801±0.000 0.768±0.000
ETLMSC 0.962±0.000 0.937±0.000 0.962±0.000 0.926±0.000 0.931±0.000 0.928±0.000 0.917±0.000
LMVSC
0.814±0.000 0.717±0.000 0.814±0.000 0.676±0.000 0.692±0.000 0.684±0.000 0.632±0.000
FMCNOF 0.440±0.039 0.345±0.046 0.449±0.042 0.290±0.036 0.606±0.074 0.395±0.036 0.249±0.051
SFMC 0.810±0.000 0.721±0.000 0.810±0.000 0.657±0.000 0.782±0.000 0.714±0.000 0.663±0.000
FPMVS-CAG 0.786±0.000 0.686±0.000 0.786±0.000 0.684±0.000 0.642±0.000 0.731±0.000 0.629±0.000
ours 0.986±0.000 0.971±0.000 0.986±0.000 0.970±0.000 0.972±0.000 0.971±0.000 0.967±0.000
Dataset HandW
ritten4
Metrics
ACC NMI Purity PER REC F-score ARI
CSMSC
0.806±0.001 0.793±0.001 0.867±0.001 0.778±0.001 0.743±0.001 0.760±0.001 0.733±0.001
GMC 0.861±0.000 0.859±0.000 0.861±0.000 0.799±0.000 0.855±0.000 0.826±0.000 0.806±0.000
ETLMSC 0.938±0.001 0.893±0.001 0.938±0.001 0.886±0.001 0.890±0.001
0.888±0.001 0.876±0.001
LMVSC
0.904±0.000 0.831±0.000 0.904±0.000 0.819±0.000 0.825±0.000 0.822±0.000 0.802±0.000
FMCNOF 0.385±0.092 0.370±0.092 0.386±0.093 0.254±0.077 0.688±0.101 0.360±0.070 0.250±0.097
SFMC 0.853±0.000 0.871±0.000 0.873±0.000 0.775±0.000 0.910±0.000 0.837±0.000
0.817±0.000
FPMVS-CAG 0.744±0.000 0.753±0.000 0.744±0.000 0.681±0.000 0.636±0.000 0.762±0.000 0.642±0.000
ours 0.963±0.000 0.937±0.000 0.963±0.000 0.924±0.000 0.930±0.000 0.927±0.000 0.919±0.000
Dataset Mnist4
Metrics
ACC NMI Purity PER REC F-score ARI
CSMSC
0.641±0.000 0.601±0.010 0.728±0.008 0.607±0.014 0.767±0.008 0.677±0.010 0.553±0.012
GMC 0.920±0.000 0.807±0.000 0.920±0.000 0.853±0.000 0.861±0.000 0.857±0.000 0.809±0.000
ETLMSC 0.934±0.000 0.847±0.000 0.934±0.000 0.878±0.000 0.885±0.000 0.881±0.000 0.842±0.000
LMVSC
0.892±0.000 0.726±0.000 0.892±0.000 0.808±0.000 0.812±0.000 0.810±0.000 0.747±0.000
FMCNOF 0.697±0.119 0.490±0.102 0.711±0.096 0.558±0.118 0.683±0.073 0.611±0.095 0.460±0.145
SFMC 0.916±0.000 0.797±0.000 0.916±0.000 0.846±0.000 0.855±0.000 0.850±0.000 0.800±0.000
FPMVS-CAG 0.885±0.000 0.715±0.000 0.885±0.000 0.800±0.000 0.795±0.000 0.815±0.000 0.733±0.000
ours 0.982±0.000 0.933±0.000 0.982±0.000 0.964±0.000 0.965±0.000 0.965±0.000 0.953±0.000
Dataset Scene15
Metrics
ACC NMI Purity PER REC F-score ARI
CSMSC
0.334±0.008 0.313±0.005 0.378±0.003 0.227±0.003 0.239±0.002 0.233±0.003 0.174±0.003
GMC 0.140±0.000 0.058±0.000 0.146±0.000 0.071±0.000 0.893±0.000 0.131±0.000 0.004±0.000
ETLMSC 0.709±0.000 0.774±0.000 0.887±0.000 0.665±0.000 0.688±0.000
0.676±0.000 0.652±0.000
LMVSC
0.355±0.000 0.331±0.000 0.399±0.000 0.238±0.000 0.244±0.000 0.241±0.000 0.184±0.000
FMCNOF 0.218±0.033 0.166±0.022 0.221±0.029 0.117±0.016 0.471±0.062 0.186±0.019 0.085±0.026
SFMC 0.344±0.000 0.522±0.000 0.347±0.000 0.284±0.000 0.171±0.000 0.855±0.000 0.191±0.000
FPMVS-CAG 0.619±0.000 0.567±0.000 0.651±0.000 0.479±0.000 0.481±0.000 0.477±0.000 0.441±0.000
ours 0.800±0.000 0.835±0.000 0.808±0.000 0.735±0.000 0.739±0.000 0.737±0.000 0.717±0.000
 
1609