FairMatch: Promoting Partial Label Learning by Unlabeled
Samples
Jiahao Jiang
College of Software Engineering, Southeast University
Nanjing, China
jhjiang@seu.edu.cnYuheng Jia‚àó
School of Computer Science and Engineering, Southeast
University
Nanjing, China
yhjia@seu.edu.cn
Hui Liu
School of Computing & InformationSciences, Saint Francis
University
HongKong, China
h2liu@sfu.edu.hkJunhui Hou
Department of Computer Science, City University of Hong
Kong
HongKong, China
jh.hou@cityu.edu.hk
ABSTRACT
This paper studies the semi-supervised partial label learning (SS-
PLL) problem, which aims to improve the partial label learning
(PLL) by leveraging unlabeled samples. Both the existing SSPLL
methods and the semi-supervised learning methods exploit the
information in unlabeled samples by selecting high-confidence
unlabeled samples as the pseudo labels based on the maximum
value of the model output. However, the scarcity of labeled sam-
ples and the ambiguity from partial labels skew this strategy to-
wards an unfair selection of high-confidence samples on each class,
most notably during the initial phases of training, resulting in
slower training and performance degradation. In this paper, we
propose a novel method FairMatch, which adopts a learning state
aware self-adaptive threshold for selecting the same number of
high-confidence samples on each class, and uses augmentation con-
sistency to incorporate the unlabeled samples to promote PLL. In
addition, we adopt the candidate label disambiguation to utilize
the partial labeled samples and mix up the partial labeled samples
and the selected high-confidence unlabeled samples to prevent
the model from overfitting on partial label samples. FairMatch
can achieve maximum accuracy improvements of 9.53%, 4.9%, and
16.45% on CIFAR-10, CIFAR-100, and CIFAR-100H, respectively. The
codes can be found at https://github.com/jhjiangSEU/FairMatch.
CCS CONCEPTS
‚Ä¢Computing methodologies ‚ÜíMachine learning algorithms ;
Learning paradigms .
‚àóCorresponding author
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
KDD ‚Äô24, August 25‚Äì29, 2024, Barcelona, Spain
¬©2024 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ACM ISBN 979-8-4007-0490-1/24/08
https://doi.org/10.1145/3637528.3671685KEYWORDS
Partial Label Learning, Semi-supervised Learning, Fair Selection
ACM Reference Format:
Jiahao Jiang, Yuheng Jia, Hui Liu, and Junhui Hou. 2024. FairMatch: Pro-
moting Partial Label Learning by Unlabeled Samples. In Proceedings of the
30th ACM SIGKDD Conference on Knowledge Discovery and Data Mining
(KDD ‚Äô24), August 25‚Äì29, 2024, Barcelona, Spain. ACM, New York, NY, USA,
10 pages. https://doi.org/10.1145/3637528.3671685
1 INTRODUCTION
The impressive performance of deep learning heavily relies on
supervised training with substantial labeled data [ 5,20]. However,
gathering sufficient high-quality annotated data for training is often
a challenging task. Partial label learning (PLL) is a paradigm to
alleviate this problem, which assumes that each training sample is
equipped with a candidate label (CL) set, among which only one is
the ground-truth label [6‚Äì10, 15, 21, 23].
Previous PLL researches typically assume that the CL sets are
given for all training examples. However, this assumption could
be unrealistic in many real-world scenarios. For example, in au-
tomatic face annotation [ 1], while it is possible to annotate faces
with ambiguous labels using the names appearing in the scripts and
dialogues, i.e., partial label (PL) samples. In contrast, many images
have no corresponding dialogues, leaving a large number of faces
without any label information, i.e., unlabeled samples. Similar situ-
ations occur in web mining [ 12], multimedia content analysis [ 24]
and ecoinformatics [ 27]. When there are not enough PL samples,
the performance of state-of-the-art (SOTA) PLL methods drops sig-
nificantly [ 17‚Äì19]. Moreover, these methods fail to make efficient
use of unlabeled data.
To solve this problem, one may consider using semi-supervised
learning (SSL) methods such as FixMatch [ 14] and FreeMatch [ 20],
which are mainly based on augmentation consistency. Generally,
they use a weakly-augmented unlabeled sample with high confi-
dence to generate a pseudo label based on fixed or dynamic thresh-
olds, and enforce consistency against strongly-augmented version
of the same sample. A detailed discussion of them is provided in
Section 2.2. However, the existence of PL samples has compromised
their performance. In Fig. 1, Ceiling (blue line) is the upper limit of
the performance, using FreeMatch in a standard semi-supervised
1269
KDD ‚Äô24, August 25‚Äì29, 2024, Barcelona, Spain Jiahao Jiang, Yuheng Jia, Hui Liu, and Junhui Hou
0 100 200 300 400 500
Epoch0.00.10.20.30.40.50.60.70.80.91.0T est AccuracyCeiling
FixMatch
FixMatch+
FreeMatch
FreeMatch+
ConCont
FairMatch (Ours)
Figure 1: Test accuracy of the first 500 epochs on CIFAR-10
withùúå=10%andùëû=0.7, whereùúårepresents the propor-
tion of partial label samples and ùëûrepresents the partial rate.
Ceiling (blue line) is the upper limit of performance, using
FreeMatch in a standard semi-supervised setting with accu-
rate label. FixMatch and FreeMatch are state-of-the-art semi-
supervised learning (SSL) methods, and ‚Äú+‚Äù represents an SSL
method combined with candidate label disambiguation. Con-
Cont is the only deep learning-based semi-supervised partial
label learning method. The results indicate, FairMatch (our
method) converges quickly and significantly surpasses the
comparison methods, approaching the performance limit.
setting, i.e., the CL set of all PL samples contains only ground-truth
labels without incorrect ones. Compared to it, the performance of
FixMatch (orange solid line) and FreeMatch (purple solid line) have
degraded significantly.
Consequently, semi-supervised partial label learning (SSPLL)
[17‚Äì19] has been proposed to effectively utilize unlabeled samples
and disambiguate the CL sets of PL samples. To the best of our
knowledge, ConCont [ 18] is the only deep learning-based SSPLL
method. ConCont uses augmentation consistency and confidence
thresholding strategy similar to FixMatch and FreeMatch for both
PL samples and unlabeled samples. Besides, the aforementioned SSL
methods could also be extended to solve the SSPLL by combining
label disambiguation operation (estimate the confidence of the la-
bels in candidate label set), denoted as FixMatch+ and FreeMatch+.
Fig. 1 clearly demonstrates that FixMatch+ (orange dashed line)
and FreeMatch+ (purple dashed line) significantly surpass the pre-
vious performance. ConCont and the improved SSL methods select
high-confidence samples from the unlabeled samples based on the
maximum output of the model, and use the class with the maximum
output as the hard pseudo label for these samples. We abbreviate this
strategy as the maximum selection strategy. However, the scarcity
of labeled samples with ambiguous labels and the varying learning
difficulties of classes lead to an unfair number of high-confidence
samples selected on each class, particularly in the early stages of
training. As shown in Figs. 2 (a1-a3, b1-b3), Ceiling selects uniform
high-confidence samples on each class at different training stages,
while FreeMatch+‚Äôs selection is severely unfair in the early stagesand even unable to select samples for the fourth category in the
later stages, indicating that the existence of PL samples will exacer-
bate selection unfairness. Furthermore, Figs. 2 (c1-c3) demonstrate
that ConCont has the same problem. The existing methods are all
plagued by unfair selection, which is also the reason for the slow
learning of these methods in Fig. 1.
In this paper, we propose a novel SSPLL method FairMatch,
which achieves fair selection on each class. For PL samples, Fair-
Match disambiguates the CL sets and uses the updated labeling
confidence to guide the learning of these samples. For unlabeled
samples, based on the learning state of the model on these sam-
ples, FairMatch determines a self-adaptive threshold for selecting
an equal number of high-confidence samples on each class, and
uses augmentation consistency to incorporate these samples into
training. As shown in Figs. 2(d1-d3), at different training stages, Fair-
Match ensures fairness in the selection of each class and achieves
excellent selection accuracy. In addition, we use the MixUp [ 26]
strategy based on high-confidence samples and PL samples to gener-
ate new samples for training, to prevent the model from overfitting
on the few PL samples. Under the same experimental setup, Fair-
Match can achieve maximum accuracy improvements of 9.48%,
4.96%, and 16.83% on CIFAR-10, CIFAR-100, and CIFAR-100H, re-
spectively. Our main contributions are summarized as follows:
‚Ä¢We propose a novel SSPLL method named FairMatch, which for
the first time achieves fair selection on each class and adaptively
determines the number of high-confidence samples to be selected
from the unlabeled samples based on the learning state.
‚Ä¢We adopt label disambiguation to explore the information in the
PL samples, train the high-confidence samples based on augmen-
tation consistency and mix them with PL samples to prevent the
model from overfitting on PL samples.
‚Ä¢Extensive experiments on benchmark datasets demonstrate that
FairMatch significantly outperforms SOTA comparison methods,
including PLL methods, the improved SSL methods and SSPLL
methods.
2 RELATED WORK
2.1 Partial Label Learning
With the prevalence of deep learning, deep learning-based PLL
methods have been extensively studied in recent works [ 13,16,21‚Äì
23]. PRODEN [ 13] proposes a progressive identification algorithm
to disambiguate the candidate label (CL) set. PiCO [ 16] adopts
contrastive representation learning to PLL for the first time and sig-
nificantly improves the performance on several image classification
benchmarks. ABLE [ 22] uses the output of the model on the CL set
as class-level weights to implement weighted contrastive learning.
DPLL [ 21] instantiates the regularization term by matching the
outputs of multiple augmentations of each instance to a conformal
label distribution, similar to the augmentation consistency in semi-
supervised learning methods. PaPi [ 23] guides the optimization
of a prototypical classifier through model output, thus explicitly
encouraging the representation to reflect visual similarity between
classes. However, most of the above methods demand massive par-
tial label (PL) samples for training, which is sometimes not practical.
In addition, they cannot effectively deal with unlabeled samples.
1270FairMatch: Promoting Partial Label Learning by Unlabeled Samples KDD ‚Äô24, August 25‚Äì29, 2024, Barcelona, Spain
0123456789
Classes020406080100120Number of SamplesT otal=359
Correct=325
Acc=0.91100-th Epoch Sample Distribution
Wrong Selection
Correct Selection
(a1) Ceiling (100th)
0123456789
Classes020406080100120Number of SamplesT otal=410
Correct=391
Acc=0.95300-th Epoch Sample Distribution
Wrong Selection
Correct Selection (a2) Ceiling (300th)
0123456789
Classes020406080100120Number of SamplesT otal=427
Correct=412
Acc=0.96500-th Epoch Sample Distribution
Wrong Selection
Correct Selection (a3) Ceiling (500th)
0123456789
Classes020406080100120Number of SamplesT otal=181
Correct=80
Acc=0.44100-th Epoch Sample Distribution (b1) FreeMatch+ (100th)
0123456789
Classes020406080100120Number of SamplesT otal=320
Correct=303
Acc=0.95300-th Epoch Sample Distribution (b2) FreeMatch+ (300th)
0123456789
Classes020406080100120Number of SamplesT otal=372
Correct=339
Acc=0.91500-th Epoch Sample Distribution (b3) FreeMatch+ (500th)
0123456789
Classes020406080100120Number of SamplesT otal=42
Correct=16
Acc=0.38100-th Epoch Sample Distribution
Wrong Selection
Correct Selection
(c1) ConCont (100th)
0123456789
Classes020406080100120Number of SamplesT otal=289
Correct=267
Acc=0.92300-th Epoch Sample Distribution
Wrong Selection
Correct Selection (c2) ConCont (300th)
0123456789
Classes020406080100120Number of SamplesT otal=348
Correct=317
Acc=0.91500-th Epoch Sample Distribution
Wrong Selection
Correct Selection (c3) ConCont (500th)
0123456789
Classes020406080100120Number of SamplesT otal=340
Correct=297
Acc=0.87100-th Epoch Sample Distribution
Wrong
Correct (d1) FairMatch (100th)
0123456789
Classes020406080100120Number of SamplesT otal=390
Correct=356
Acc=0.91300-th Epoch Sample Distribution
Wrong
Correct (d2) FairMatch (100th)
0123456789
Classes020406080100120Number of SamplesT otal=410
Correct=375
Acc=0.91500-th Epoch Sample Distribution
Wrong
Correct (d3) FairMatch (100th)
Figure 2: The distribution of selected high-confidence samples on each class in the first mini-batch of the 100th, 300th, and
500th epochs (CIFAR-10 with ùúå=10%andùëû=0.7). ‚ÄúTotal‚Äù and ‚ÄúCorrect‚Äù represent the number of selected and correctly assigned
high-confidence samples, respectively, while ‚ÄúAcc‚Äù represents the proportion of correctly assigned high-confidence samples.
The red dashed line represents the average number of unlabeled samples on each class. At different training stages, FairMatch
(our method) ensures fairness in the selection of each class and achieves excellent selection accuracy on each class.
2.2 Semi-Supervised Learning
In semi-supervised learning (SSL), the primary mechanism for lever-
aging unlabeled data is consistency regularization, which is typ-
ically achieved by perturbing the samples and encouraging the
model to maintain consistent predictions. FixMatch [ 14] proposes
a concise framework, applying a consistency regularization be-
tween the weakly-augmented and strongly-augmented versions for
high-confidence unlabeled samples. In FixMatch, high-confidence
unlabeled samples are selected by a fixed threshold throughout
the training phase, failing to consider different learning status and
learning difficulties of different classes. To solve this problem, Flex-
Match [ 25] propose a curriculum learning approach to flexibly
adjust thresholds for different classes according to the selected
number of each class. Previous study [ 20] points out that both fixed
threshold and ad-hoc threshold adjusting schemes can result in
inferior performance and slow convergence. FreeMatch [ 20] adjust
the local and global confidence thresholds in a self-adaptive manner
according to the model‚Äôs learning status, eliminating the difficulty
of pre-defining thresholds.
Although the above methods have achieved great success in the
SSL field, they still struggle to correctly select unlabeled samples
for training in the presence of PL samples.
2.3 Semi-Supervised Partial Label Learning
Semi-supervised partial label learning (SSPLL) is first proposed in
[17], which iteratively employs label propagation between PL sam-
ples and unlabeled samples to disambiguate the CL sets of partial
label samples as well as assign valid labels to unlabeled samples.
Despite its simplicity, it has to store all the training data during
testing phase, which makes it inefficient. PARM [ 19] introduces
maximum margin formulation to jointly optimize predictive model
and estimate latent labeling confidence, enforcing confidence-rated
margin maximization and confidence manifold preservation overPL samples and unlabeled samples. However, complex optimization
makes it inefficient for application to large-scale datasets.
In contrast, the only deep learning-based method ConCont [ 18]
performs a controller-guided consistency regularization based on
dynamic thresholds and utilizes contrastive learning [ 4,16] to fa-
cilitate learning more discriminative representations. Besides, SSL
methods could also be viewed as solutions of SSPLL by incorpo-
rating label disambiguation operation. However, ConCont and the
improved SSL methods all select the class corresponding to the
maximum output of a high-confidence sample as the pseudo label,
which is unfair for difficult classes. Although some methods have
considered the difficulty of different classes, under the influence
of PL samples, this maximum selection strategy still results in an
unfair number of high-confidence samples selected on each class,
thus affecting model training.
3 THE PROPOSED APPROACH
In this section, we first introduce the notations in Sec. 3.1. Then
we present FairMatch in detail in Secs. 3.2-3.5. Fig. 3 gives a brief
illustration of FairMatch, where the left side shows the overall
framework, and the right side shows an example of fair selection.
3.1 Notations
LetX=Rùëëdenote the input space, Y={1,2,...,ùê∂}denote the
label space with ùê∂class labels. The goal of semi-supervised partial
label learning (SSPLL) is to learn a multi-class classifier ùëì:X‚Ü¶‚ÜíY
from the partial label (PL) training set Dùëù={(ùíôùëñ,ùëÜùëñ)|1‚â§ùëñ‚â§ùëÅ}
and unlabeled setDùë¢={ùíñùëñ|1‚â§ùëñ‚â§ùëÄ}(ùëÅ‚â™ùëÄ). Here, ùíôùëñ,ùíñùëñ‚àà
X, andùëÜùëñ‚äÜ Y is the candidate label associated with PL sam-
pleùíôùëñ. The basic assumption in partial label learning is that the
ground-truth label ùíöùëñforùíôùëñresides in its candidate label set (i.e.,
ùíöùëñ‚ààùëÜùëñ) which is not accessible to the learning algorithm. The
mini-batches of PL samples and unlabeled samples are denoted
1271KDD ‚Äô24, August 25‚Äì29, 2024, Barcelona, Spain Jiahao Jiang, Yuheng Jia, Hui Liu, and Junhui Hou
Weakly-augmented
Strongly-augmentedUnlabeled SampleModel
ModelShar e
PredictionPrediction
 Hard Pseudo LabelFair selection
...... ...
Partial Label Sample Weakly-augmentedModel
Prediction... ...DisambiguatePartial Label Data
Classification Loss
MixUp Model
Prediction...
MixUp Confidence...
Shar eShar eMixUpDisambiguated Confidence
MixUp Data
Classification Loss
Unlabeled Data
Consistent LossFair Selection Example
Sample 1
Sample 2
Sample 3
.
.
.
Sample 8
Sample 90.76 0.22 0.02
0.550.36 0.09
0.70 0.14 0.160.99 0.05 0.05
0.950.10 0.05
0.84 0.15 0.01
0.80 0.12 0.08
0.650.10 0.25
0.830.01 0.16Prediction Hard Pseudo Label
   ‚úî
‚ùå
‚ùå
‚ùå   ‚úî
   ‚úî
0.70 0.14 0.161 0 0
0.84 0.15 0.01
0.80 0.12 0.08
0 1 0
0 0 1
Not selected‚ùå Selected ‚úî Ground-truth label0.950.10 0.05
0.83 0.01 0.160.76 0.22 0.02‚ùå
‚ùå
‚ùåK = 1
SelectClass 1 2 3 Class 1 2 3
ùúáùêµ = 9,  C = 3,  m = ‚åäùúáùêµ/ùê∂‚åã  = 3,  ùúè* = 9
ùúè = (0.99+0.95+0.84)+(0.15+0.22+0.36)+(0.25+0.16+0.16) = 4.08
K = ‚åäm¬∑ùúè/ùúè*‚åã = 1
Top ùëö  prediction values on each class
Hard pseudo label
Figure 3: Illustration of FairMatch. For partial label (PL) samples, FairMatch leverages the model outputs for label disambiguation
and uses the disambiguated confidence to guide the model learning. For unlabeled samples, based on the fair selection strategy,
FairMatch adaptively selects an equal number of high-confidence samples on each class and incorporates them into training
using augmentation consistency. To prevent overfitting of the model on PL samples, FairMatch mixes PL samples and selected
high-confidence samples to generate new samples for training. On the right is an example of fair selection, with 9 samples and
3 classes. The orange area represents the top ùëöprediction values on each class, while the green area represents the hard pseudo
labels of the selected high-confidence samples. In this example, the number of high-confidence samples selected ùêæfor each
class is 1, i.e., ùêæ=1. Detailed calculations and explanations is provided in Sec. 3.3.
asBùëù={(ùíôùëñ,ùëÜùëñ)|1‚â§ùëñ‚â§ùêµ}andBùë¢={ùíñùëñ|1‚â§ùëñ‚â§ùúáùêµ}, respec-
tively, where ùúáis the ratio of unlabeled data batch size to labeled
data batch size.
For each PL sample ùíôùëñand unlabeled sample ùíñùëñ, we generate
ùúî(ùíôùëñ),ùúî(ùíñùëñ), andŒ©(ùíñùëñ), respectively, where ùúî(¬∑)andŒ©(¬∑)repre-
sent weak and strong augmentation functions. Let ùëì(¬∑)and‚Ñé(¬∑)be
the encoder and the classifier with softmax function, respectively.
3.2 Candidate Label Disambiguation for Labeled
Samples
Unlike traditional semi-supervised learning (SSL) where supervised
samples are annotated with accurate labels, SSPLL need to deal
with ambiguous labeling information. Accordingly, it is essential to
disambiguate the candidate label sets of PL samples. In FairMatch,
we employ an alternating and iterative disambiguation strategy,
leveraging the model outputs for disambiguation and using the
disambiguated labeling confidence to guide the model learning.
Specifically, for a weakly-augmented PL sample ùúî(ùíôùëñ)1, its label-
ing confidence ùíëùëñ‚ààRùê∂is initialed as ùëùùëñùëó=1
|ùëÜùëñ|ifùëó‚ààùëÜùëñ, otherwise
ùëùùëñùëó=0, where|ùëÜùëñ|denotes the cardinality of ùëÜùëñ. The classifier ‚Ñé(¬∑)
receivesùëì(ùúî(ùíôùëñ))as input and outputs ùíìùëñ=‚Ñé(ùëì(ùúî(ùíôùëñ)))‚àà Rùê∂.
Then, we obtain the updated labeling confidence by eliminating
1To improve generalization performance, most partial label learning methods [ 16,
22,23] employ the model outputs on weakly-augmented samples for disambiguation,
rather than on the original samples. They also avoid using strongly-augmented samples,
as the model outputs on these are less reliable than on weakly-augmented samples.the model outputs on the non-candidate label set:
ùëùùëñùëó=(ùëüùëñùëó√ç
ùëô‚ààùëÜùëñùëüùëñùëô,ifùëó‚ààùëÜùëñ,
0, otherwise.(1)
Leveraging the disambiguated labeling confidence to guide the
model learning, the classification loss of each partial label mini-
batch is defined as:
Lùëùùëéùëüùë°ùëñùëéùëô =1
ùêµùêµ‚àëÔ∏Å
ùëñ=1H(ùíëùëñ,ùíìùëñ)=1
ùêµùêµ‚àëÔ∏Å
ùëñ=1¬©¬≠
¬´‚àíùê∂‚àëÔ∏Å
ùëó=1ùëùùëñùëó¬∑logùëüùëñùëó¬™¬Æ
¬¨,(2)
whereùêµis the batch size of Bùëù,ùê∂is the number of classes, and
H(¬∑,¬∑)refers to cross-entropy loss.
3.3 Self-Adaptive Fair Selection for Unlabeled
Samples
Under the setting of SSPLL, training only with PL data fails to
effectively purify ambiguous labels, resulting in poor model perfor-
mance [ 17‚Äì19]. Therefore, we aim to select unlabeled samples with
high confidence to assist in model training, similar to SSL methods.
However, the maximum selection strategy adopted by SSL methods
and ConCont leads to unfair selection under the setting of SSPLL.
To address this problem, a straightforward solution is to select an
equal number of high-confidence samples on each class. Conse-
quently, the primary challenge becomes the determination of an
appropriate quantity of samples to select, denoted as ùêæ.
For each unlabeled mini-batch Bùë¢={ùíñùëñ|1‚â§ùëñ‚â§ùúáùêµ}, there are
an average of ùëö=‚åäùúáùêµ
ùê∂‚åãsamples in each class, where ùúáùêµis the
1272FairMatch: Promoting Partial Label Learning by Unlabeled Samples KDD ‚Äô24, August 25‚Äì29, 2024, Barcelona, Spain
batch size ofBùë¢,ùê∂is the number of classes, and ‚åä¬∑‚åãrepresents
the integer down function. Let ùíìùúî
ùëñ=‚Ñé(ùëì(ùúî(ùíñùëñ)))be the model
prediction on the weakly-augmented version of ùíñùëñandMùëö
ùëóbe the
set ofùëösamples with the highest prediction on class ùëó. We define
thecurrent learning state ùúèas the sum of the top ùëöprediction
values across all classes:
ùúè=ùúáùêµ‚àëÔ∏Å
ùëñ=1ùê∂‚àëÔ∏Å
ùëó=1ùëüùúî
ùëñùëó¬∑I(ùíñùëñ‚ààMùëö
ùëó), (3)
where I(¬∑)is the indicator function. Ideally, we desire the model‚Äôs
prediction on these samples to be one-hot, with a value of 1 exclu-
sively on the ground-truth label, indicating the optimal learning
state of the model. Thus, the optimal learning state ùúè‚àócan be ap-
proximately defined as ùúè‚àó=ùúáùêµ. Intuitively, the closer the current
learning state ùúèis to the optimal learning state ùúè‚àó, the better the
model learns and the more samples should be selected. Therefore,
the number of samples to be selected ( ùêæ) on each class is set as
follows:
ùêæ=‚åäùëöùúè
ùúè‚àó‚åã. (4)
Theùêædetermined in this manner is dynamic, moderate, and in-
creases with training performance, meaning that fewer unlabeled
samples with high confidence are selected when the model perfor-
mance is poor, and vice versa, that is, a trade-off between selection
number and selection accuracy. Taking the example on the right
side of Fig. 3, with a total of 9 unlabeled samples across 3 classes,
the average number of samples per class is 3, that is, ùúáùêµ=9,ùê∂=3
andùëö=3. The current learning state ùúèis calculated as 3.99 ac-
cording to Eq. (3), and the optimal learning state ùúè‚àóis 9, then the
numberùêæof samples selected per class is calculated as 1 by Eq.
(4). In the early stages of model training, model predictions tend to
cluster around simpler classes (class 1), making it challenging for
previous methods to select high-confidence unlabeled samples for
other classes, while our method avoids this problem.
Afterùêæis determined, we get the unlabeled sample set Mùêæ
ùëó(1‚â§
ùëó‚â§ùê∂)of theùêæsamples with the highest prediction on class ùëó. For
each high-confidence sample in Mùêæ
ùëó, its hard pseudo label vector
is denoted as Àúùíöùëó, with itsùëó-th element set to 1 and all others to
0, indicating that its pseudo label is assigned to the ùëó-th class. By
encouraging the model predictions on strongly-augmented versions
of high-confidence samples to align with the pseudo labels assigned
to their weakly-augmented versions, the consistency regularization
loss of each unlabeled mini-batch can be computed as follows:
Lùë¢ùëõùëôùëéùëèùëíùëôùëíùëë =1
ùêæùê∂ùúáùêµ‚àëÔ∏Å
ùëñ=1ùê∂‚àëÔ∏Å
ùëó=1I(ùíñùëñ‚ààMùêæ
ùëó)¬∑H( Àúùíöùëó,ùíìŒ©
ùëñ). (5)
Here,ùêæùê∂represents the total number of high-confidence samples
selected, and ùíìŒ©
ùëñis the model prediction on the strongly-augmented
version of ùíñùëñ, i.e., ùíìŒ©
ùëñ=‚Ñé(ùëì(Œ©(ùíñùëñ))).
3.4 MixUp-Augmented for Both Labeled and
Unlabeled Samples
Considering that the number of PL samples is much smaller than
that of unlabeled samples, to prevent the model from memorizing
the PL data and overfitting, we employ the MixUp [ 26] strategy
as a mitigation measure based on the selected high-confidencesamples. Specifically, we compose B‚Ñéùëñùëî‚Ñé=n
(ùíñ‚Ñé
ùëñ,Àúùíö‚Ñé
ùëñ)|1‚â§ùëñ‚â§ùêæùê∂o
consisting of the all high-confidence samples selected from ùê∂class,
where Àúùíö‚Ñé
ùëñis the pseudo label vector of ùíñ‚Ñé
ùëñ. Then, we construct
new PL training samples Bùëõùëíùë§=
(ùíôùëõùëíùë§
ùëñ,ùíëùëõùëíùë§
ùëñ)|1‚â§ùëñ‚â§ùêµ	by
linearly interpolating a PL sample ùíôùëñfromBùëùwith a random high-
confidence sample ùíñ‚Ñé
ùëñfromB‚Ñéùëñùëî‚Ñé, as well as their corresponding
labeling confidence (or pseudo label vector):
ùíôùëõùëíùë§
ùëñ=ùúôùíôùëñ+(1‚àíùúô)ùíñ‚Ñé
ùëñ, (6)
ùíëùëõùëíùë§
ùëñ=ùúôùíëùëñ+(1‚àíùúô)Àúùíö‚Ñé
ùëñ, (7)
whereùúô‚àºùêµùëíùë°ùëé(ùõº,ùõº)andùõºis a hyperparameter. The classification
loss of MixUp samples Bùëõùëíùë§is defined as:
Lùëöùëñùë•ùë¢ùëù =1
ùêµùêµ‚àëÔ∏Å
ùëñ=1H(ùíëùëõùëíùë§
ùëñ,ùíìùëõùëíùë§
ùëñ), (8)
where ùíìùëõùëíùë§
ùëñis the model prediction on the weakly-augmented ver-
sion of ùíôùëõùëíùë§
ùëñ, i.e., ùíìùëõùëíùë§
ùëñ=‚Ñé(ùëì(ùúî(ùíôùëõùëíùë§
ùëñ))).
3.5 The Overall Formulation
Putting it all together, the overall training objective is:
L=Lùëùùëéùëüùë°ùëñùëéùëô+ùúÜLùë¢ùëõùëôùëéùëèùëíùëôùëíùëë+ùõΩLùëöùëñùë•ùë¢ùëù, (9)
whereùúÜandùõΩare trade-off parameters. To facilitate model train-
ing under the challenging SSPLL settings, for FairMatch and other
comparison methods, we initially employ only PL samples for a
warm-up period of ùëáùë§epochs. During the warm-up phase, the dis-
ambiguated confidence is used to guide the model learning, i.e., Eq.
(1), and we also use contrastive learning from [ 16], with the dis-
tinction that only the weakly-augmented and strongly-augmented
versions of the same sample are considered as positive pairs.
4 EXPERIMENTS
4.1 Experiment Setup
4.1.1 Datasets. We evaluate our method on widely used bench-
marks CIFAR-10 and CIFAR-100 [ 11], and further investigate FaiMatch
on fine-grained image classification dataset CIFAR-100H [ 16]. Fol-
lowing [ 13], we generate candidate label set ùë∫ùëñfor partial label (PL)
sample ùíôùëñby flipping negative labels ùíöùëñ‚â†ùíöùëñwith a probability
ùëû=ùëÉ(ùíöùëñ‚ààùëÜùëñ|ùíöùëñ‚â†ùíöùëñ), a.k.a., partial rate. On CIFAR-100H, the
candidate labels for a PL sample only appear within its correspond-
ing superclass, while on other datasets, the candidate labels are
entirely arbitrary. The proportion of PL samples to total samples in
the training set is denoted by ùúå, with the remainder samples in the
training set being unlabeled data.
4.1.2 Baselines. The comparing methods include SOTA PLL meth-
ods DPLL [ 21] and PiCO [ 16], which only utilize PL samples for
training, and their variants DPLL* and PiCO*, which treat all op-
tional labels as candidate labels for unlabeled samples to incor-
porate them into training. SOTA SSL methods FixMatch [ 14] and
FreeMatch [ 20], along with their variants FixMatch+ and FreeMatch+,
are included in the comparison, where ‚Äú+‚Äù indicates the addition
of candidate label disambiguation. Besides, the only deep learning-
based semi-supervised partial label learning (SSPLL) method Con-
Cont [ 18], is also included. The hyperparameters of the above meth-
ods are set based on their original papers. Besides, the candidate
1273KDD ‚Äô24, August 25‚Äì29, 2024, Barcelona, Spain Jiahao Jiang, Yuheng Jia, Hui Liu, and Junhui Hou
Table 1: Accuracy (mean ¬±std) comparisons on CIFAR-10 with proportion ùúå‚àà{10%,20%}and partial rate ùëû‚àà{0.1,0.3,0.5,0.7}.
Dataset Method ùëû=0.1ùëû=0.3ùëû=0.5ùëû=0.7
DPLL 88.74 ¬±0.06% 87.15 ¬±0.17% 86.66 ¬±0.16% 63.92 ¬±0.45%
DPLL* 84.37 ¬±0.34% 83.33 ¬±0.20% 80.67 ¬±0.51% 66.00 ¬±1.22%
PiCO 84.37 ¬±0.34% 83.33 ¬±0.20% 80.67 ¬±0.51% 66.00 ¬±1.22%
PiCO* 91.10 ¬±0.18% 90.74 ¬±0.50% 58.20 ¬±3.78% 29.21 ¬±2.47%
Fixmatch 67.81 ¬±1.82% 56.11 ¬±1.01% 46.69 ¬±0.71% 37.34 ¬±0.98%
Fixmatch+ 93.27 ¬±0.10% 91.42 ¬±0.42% 83.07 ¬±1.48% 40.90 ¬±2.84%
Freematch 84.18 ¬±0.60% 75.81 ¬±5.97% 21.66 ¬±0.65% 18.19 ¬±0.87%
Freematch+ 93.76 ¬±0.17% 93.31 ¬±0.19% 92.04 ¬±0.38% 86.71 ¬±3.17%
ConCont 92.59 ¬±0.07% 92.22 ¬±0.08% 91.94 ¬±0.10% 91.49 ¬±0.06%CIFAR-10 (ùúå=20%)
FairMatch 95.02 ¬±0.08% 94.61 ¬±0.12% 94.08 ¬±0.23% 93.46 ¬±0.06%
DPLL 81.55 ¬±0.12% 79.20 ¬±0.24% 74.09 ¬±0.37% 28.08 ¬±0.83%
DPLL* 85.24 ¬±0.13% 80.57 ¬±0.37% 71.24 ¬±0.36% 15.39 ¬±0.80%
PiCO 77.87 ¬±0.44% 76.15 ¬±0.30% 71.01 ¬±0.68% 51.61 ¬±1.69%
PiCO* 81.96 ¬±0.53% 57.19 ¬±2.88% 38.28 ¬±2.02% 20.02 ¬±1.36%
Fixmatch 60.11 ¬±0.48% 47.56 ¬±1.83% 39.64 ¬±0.20% 30.20 ¬±0.46%
Fixmatch+ 92.25 ¬±0.36% 90.14 ¬±0.69% 85.10 ¬±1.26% 35.45 ¬±0.95%
Freematch 78.01 ¬±0.56% 70.90 ¬±4.99% 21.62 ¬±1.43% 17.70 ¬±0.68%
Freematch+ 92.92 ¬±0.08% 92.48 ¬±0.16% 91.09 ¬±0.47% 80.61 ¬±0.90%
ConCont 91.23 ¬±0.02% 90.89 ¬±0.11% 90.46 ¬±0.16% 82.20 ¬±0.71%CIFAR-10 (ùúå=10%)
FairMatch 93.89 ¬±0.14% 93.73 ¬±0.11% 93.09 ¬±0.03% 91.73 ¬±0.04%
20 100 200 300 400 500 600 700 800
Epochs0.50.60.70.80.9Accuracy
100200300400500600
Number
(a) CIFAR-100 ( ùúå=20%,ùëû=0.3)
50100 200 300 400 500 600 700 800
Epochs0.20.30.40.50.60.70.80.9Accuracy
100200300400500600
NumberT est Accuracy Transductive Accuracy T otal Correct (b) CIFAR-100 ( ùúå=40%,ùëû=0.1)
50100 200 300 400 500 600 700 800
Epochs0.40.50.60.70.8Accuracy
100200300400500600
Number (c) CIFAR-100H ( ùúå=20%,ùëû=0.5)
Figure 4: The changes in FairMatch‚Äôs test accuracy (orange), transductive accuracy of partial label samples (yellow), the number
of selected high-confidence samples (blue), and the number of correctly assigned high-confidence samples (green). Transductive
accuracy reflects the disambiguation effect for partial label samples, the greater the value, the better the recovering the
ground-truth label from the candidate label set. The red dashed line represents the batch size of unlabeled samples mini-batch.
For CIFAR-10, the warm-up ends at the 20th epoch, while for CIFAR-100 and CIFAR-100H, the warm-up ends at the 50th epoch.
label disambiguation methods for PL samples of FixMatch+ and
FreeMatch+ are the same as FairMatch (our method).
4.1.3 Implementation. For all datasets, we use an 18-layer ResNet
following [ 5,16] as the encoder. The classifier ‚Ñé(¬∑)is a single lin-
ear layer, which is also used for inference. Following DPLL [ 21],
weak augmentation function ùúî(¬∑)consists of random crop and
flip, whereas strong augmentation function Œ©(¬∑)additionally incor-
porates Autoaugment [ 2] and Cutout [ 3]. We set mini-batch size
ùêµ=64, training epoch ùëáùëöùëéùë•=800,ùúá=7,ùõº=4,ùúÜ=1andùõΩ=1
for all datasets, mostly following the settings of the previous meth-
ods [ 14,18,20,23]. Warm-up epoch ùëáùë§=20for CIFAR-10, while
ùëáùë§=50for both CIFAR-100 and CIFAR-100H. For all methods, we
present the average classification accuracy with standard deviation
(std) based on three independent runs.4.2 Main Results
Tables 1-3 report the main experimental results on three datasets,
where the methods are mainly divided into three categories: PLL
methods and their variants, SSL methods and their variants, and
SSPLL methods. Fig. 4 shows the trend of changes in test accuracy
(orange), transductive accuracy of PL samples (yellow), the number
of selected high-confidence samples (blue)2, and the number of
correctly assigned high-confidence samples (green). Based on the
above results, it is impressive to observe that:
‚Ä¢Among all the 24 statistical comparisons (3 datasets √ó2 settings
ofùúå√ó4 settings of ùëû), FairMatch significantly outperforms the
comparison methods in 23 cases. On CIFAR-10 and CIFAR-100,
2On CIFAR-100 and CIFAR-100H with 100 classes, the number of selected high-
confidence samples increases by 100 when ùêæincreases by 1, which explains the
steep change and the distribution only on the hundred values of the blue line.
1274FairMatch: Promoting Partial Label Learning by Unlabeled Samples KDD ‚Äô24, August 25‚Äì29, 2024, Barcelona, Spain
Table 2: Accuracy (mean ¬±std) comparisons on CIFAR-100 with proportion ùúå‚àà{20%,40%}and partial rate ùëû‚àà{0.1,0.3,0.5,0.7}.
Dataset Method ùëû=0.05ùëû=0.1ùëû=0.15ùëû=0.2
DPLL 68.07 ¬±0.13% 66.51 ¬±0.10% 62.37 ¬±0.08% 55.54 ¬±0.37%
DPLL* 68.02 ¬±0.26% 64.92 ¬±0.27% 54.78 ¬±0.56% 45.60 ¬±2.25%
PiCO 57.62 ¬±0.15% 40.07 ¬±0.28% 26.04 ¬±0.69% 17.32 ¬±0.47%
PiCO* 64.01 ¬±0.35% 40.06 ¬±1.82% 21.52 ¬±1.22% 18.61 ¬±0.56%
Fixmatch 24.79 ¬±0.61% 18.92 ¬±0.29% 15.91 ¬±0.35% 13.77 ¬±0.49%
Fixmatch+ 60.30 ¬±1.42% 16.15 ¬±0.48% 11.60 ¬±0.42% 9.37 ¬±0.71%
Freematch 3.98¬±0.54% 3.08 ¬±0.03% 2.04 ¬±0.25% 1.87 ¬±0.52%
Freematch+ 67.38 ¬±0.11% 32.11 ¬±4.35% 11.14 ¬±0.54% 8.82 ¬±0.26%
ConCont 69.17 ¬±0.29% 68.46 ¬±0.16% 65.70 ¬±0.21% 60.59 ¬±0.18%CIFAR-100 ( ùúå=40%)
FairMatch 70.04 ¬±0.10% 68.91 ¬±0.12% 67.77 ¬±0.23% 64.78 ¬±0.98%
DPLL 58.59 ¬±0.27% 51.61 ¬±0.17% 39.56 ¬±0.44% 28.21 ¬±0.23%
DPLL* 57.25 ¬±0.28% 41.03 ¬±0.49% 29.36 ¬±0.72% 24.71 ¬±0.45%
PiCO 49.05 ¬±0.64% 27.67 ¬±0.95% 14.85 ¬±0.40% 9.59 ¬±0.83%
PiCO* 47.17 ¬±0.73% 27.10 ¬±1.51% 17.70 ¬±1.44% 9.65 ¬±1.69%
Fixmatch 16.73 ¬±0.75% 13.19 ¬±0.73% 11.11 ¬±0.74% 9.61 ¬±0.22%
Fixmatch+ 58.90 ¬±0.88% 33.51 ¬±1.45% 15.67 ¬±0.32% 12.34 ¬±0.65%
Freematch 5.71¬±2.68% 2.36 ¬±0.50% 2.13 ¬±0.13% 1.83 ¬±0.27%
Freematch+ 57.00 ¬±1.02% 55.01 ¬±0.88% 28.73 ¬±3.56% 12.02 ¬±0.37%
ConCont 63.55 ¬±0.10% 62.85 ¬±0.26% 58.62 ¬±0.02% 49.42 ¬±0.31%CIFAR-100 ( ùúå=20%)
FairMatch 64.08 ¬±0.33% 62.61 ¬±0.14% 59.75 ¬±0.77% 54.32 ¬±0.22%
0 20 50 100 200
Tw0.600.650.700.750.800.850.900.951.00T est Accuracy
CIFAR-10 (=20%,q=0.5)
CIFAR-100 (=40%,q=0.15)
CIFAR-100H (=20%,q=0.7)
(a) Varying ùëáùë§
0.1 0.5 1 5 10
0.20.30.40.50.60.70.80.91.0T est Accuracy
CIFAR-10 (=20%,q=0.5)
CIFAR-100 (=40%,q=0.15)
CIFAR-100H (=20%,q=0.7)
 (b) Varying ùúÜ
0.1 0.5 1 5 10
0.600.650.700.750.800.850.900.951.00T est Accuracy
CIFAR-10 (=20%,q=0.5)
CIFAR-100 (=40%,q=0.15)
CIFAR-100H (=20%,q=0.7)
 (c) Varying ùõΩ
0 100 200 300 400 500 600 700 800
Epoch0.50.60.70.80.91.0Transductive Accuracy
FairMatch
w/o mixup
 (d) CIFAR-10
0 100 200 300 400 500 600 700 800
Epoch0.50.60.70.80.91.0Transductive AccuracyFairMatch
w/o mixup
 (e) CIFAR-100
Figure 5: Trend of test accuracy of FairMatch by varying ùëáùë§‚àà{0,20,50,100,200}in (a), varying ùúÜ,ùõΩ‚àà{0.1,0.5,1,5,10}in (b) and (c),
respectively. (d) and (e) show the the transductive accuracy of FairMatch and w/o Lùëöùëñùë•ùë¢ùëù on CIFAR-10(ùúå=10%,ùëû=0.5)and
CIFAR-100(ùúå=20%,ùëû=0.15), respectively, where w/o Lùëöùëñùë•ùë¢ùëù represents FairMatch without Lùëöùëñùë•ùë¢ùëù .
FairMatch attains the largest accuracy improvements of 9.53% and
4.9%, respectively, and on the fine-grained classification dataset
CIFAR-100H, it achieves 16.45%, showing the superiority of our
method.
‚Ä¢As the partial rate ùëûof PL samples increases, the performance
of FairMatch slightly decreases, while the comparison methods
deteriorate significantly. For example, on CIFAR-10 ( ùúå=10%),
FairMatch decreases from 92.97% ( ùëû=0.5) to 91.68% ( ùëû=0.7),
while ConCont and FreeMatch+ plunge by over 8%. As the setting
becomes more challenging, with smaller ùúåand largerùëû, FairMatch
shows more remarkable improvement, revealing its potential and
effectiveness.
‚Ä¢As shown in Fig. 4, the transductive accuracy steadily increases
with the training process, demonstrating the effectiveness of our
label disambiguation method. Moreover, the number of selected
and correctly assigned high-confidence samples increases along
with the test accuracy, indicating that the ùêædetermined by Eq.
(4) indeed perceives the learning state of the model.‚Ä¢For most cases of PLL methods, DPLL and PiCO outperform
DPLL* and PiCO*, respectively, implying that PLL methods can-
not effectively utilize unlabeled data and instead harm the model
performance. In a few cases where ùúåis large and ùëûis small,
PiCO* surpasses PiCO. This is because PiCO* can identify more
reliable positive pairs with sufficient samples that have few am-
biguous labels, which facilitates its contrastive learning and the
disambiguation for unlabeled samples. However, our method still
outperforms PiCO* significantly in these cases.
‚Ä¢For SSL methods, in most cases, the performance of FixMatch+
and FreeMatch+ using the label disambiguation method in Fair-
Match (our method) is significantly better than their original
versions, which also demonstrates the effectiveness of our label
disambiguation method and the importance of label disambigua-
tion for SSPLL. Moreover, on CIFAR-100 ( ùëû‚àà{0.1,0.15,0.2}),
the performance of FixMatch+ and FreeMatch+ decreases as ùúå
increases, which is counter-intuitive. After statistical analysis, we
find that as ùúåincreases, the transductive accuracy of these two
methods does not increase. This means that more PL samples are
1275KDD ‚Äô24, August 25‚Äì29, 2024, Barcelona, Spain Jiahao Jiang, Yuheng Jia, Hui Liu, and Junhui Hou
Table 3: Accuracy (mean ¬±std) comparisons on CIFAR-100H with proportion ùúå‚àà{10%,20%}and partial rate ùëû‚àà{0.3,0.5,0.7,0.9}.
Dataset Method ùëû=0.3ùëû=0.5ùëû=0.7ùëû=0.9
DPLL 58.76 ¬±0.17% 56.67 ¬±0.28% 50.21 ¬±0.63% 30.28 ¬±1.39%
DPLL* 56.88 ¬±0.25% 53.81 ¬±0.52% 44.07 ¬±0.32% 23.01 ¬±1.26%
PiCO 49.50 ¬±0.13% 47.59 ¬±0.43% 43.66 ¬±0.47% 28.87 ¬±0.53%
PiCO* 54.38 ¬±0.30% 46.87 ¬±0.33% 33.05 ¬±1.05% 20.55 ¬±1.16%
Fixmatch 43.93 ¬±3.14% 35.06 ¬±1.11% 28.88 ¬±0.63% 23.61 ¬±0.44%
Fixmatch+ 62.94 ¬±0.77% 60.92 ¬±0.63% 56.93 ¬±0.21% 24.77 ¬±1.12%
Freematch 53.52 ¬±0.43% 49.53 ¬±1.77% 20.69 ¬±0.24% 17.28 ¬±0.19%
Freematch+ 62.44 ¬±0.58% 60.80 ¬±0.56% 56.95 ¬±0.14% 34.72 ¬±1.16%
ConCont 64.08 ¬±0.27% 62.66 ¬±0.23% 59.83 ¬±0.16% 34.68 ¬±1.03%CIFAR-100H ( ùúå=20%)
FairMatch 66.25 ¬±0.50% 65.12 ¬±0.68% 62.68 ¬±0.42% 51.13 ¬±2.03%
DPLL 48.66 ¬±0.26% 45.28 ¬±0.30% 36.44 ¬±0.24% 21.85 ¬±0.46%
DPLL* 42.67 ¬±0.24% 36.23 ¬±1.08% 27.45 ¬±0.71% 15.09 ¬±0.69%
PiCO 38.90 ¬±0.28% 37.35 ¬±0.68% 31.43 ¬±0.57% 16.96 ¬±0.98%
PiCO* 32.85 ¬±1.05% 24.78 ¬±0.66% 20.10 ¬±0.92% 15.55 ¬±0.79%
Fixmatch 39.34 ¬±1.10% 25.88 ¬±0.77% 17.96 ¬±0.40% 14.50 ¬±0.20%
Fixmatch+ 51.56 ¬±0.69% 47.73 ¬±0.69% 39.97 ¬±2.06% 19.84 ¬±1.88%
Freematch 47.18 ¬±1.21% 39.98 ¬±0.32% 24.44 ¬±1.12% 16.51 ¬±0.23%
Freematch+ 51.14 ¬±0.64% 48.45 ¬±1.02% 41.51 ¬±1.14% 25.87 ¬±0.65%
ConCont 56.99 ¬±0.23% 54.51 ¬±0.33% 48.32 ¬±1.67% 24.65 ¬±0.48%CIFAR-100H ( ùúå=10%)
FairMatch 58.95 ¬±0.35% 56.62 ¬±0.55% 52.81 ¬±0.43% 39.03 ¬±0.17%
Table 4: Classification accuracy (mean ¬±std) of different vari-
ants of FairMatch.
MehtodCIFAR-10
(ùúå=10%,
ùëû=0.5)CIFAR-100
(ùúå=20%,
ùëû=0.15)CIFAR-100H
(ùúå=10%,
ùëû=0.7)
FairMatch 93.09 ¬±0.03% 59.75 ¬±0.77% 52.81 ¬±0.43%
w/o CLD 77.62 ¬±0.73% 14.56 ¬±0.65% 30.36 ¬±0.53%
w/oLùëùùëéùëüùë°ùëñùëéùëô 91.07 ¬±1.85% 36.07 ¬±1.84% 38.00 ¬±0.79%
w/oLùëöùëñùë•ùë¢ùëù 90.91 ¬±0.22% 52.85 ¬±0.97% 48.04 ¬±0.26%
w/oLùë¢ùëõùëôùëéùëèùëíùëôùëíùëë 81.93 ¬±0.90% 48.39 ¬±0.58% 40.66 ¬±0.31%
incorrectly disambiguated, leading to performance degradation.
Based on the same label disambiguation method, FairMatch (our
method) does not encounter this issue, indicating the effective-
ness of fair selection and MixUp strategies.
4.3 Further Analysis
4.3.1 Sensitivity Analysis. For FairMatch, warm-up epoch ùëáwand
loss weights ùúÜ,ùõΩare relatively important. As shown in Figs. 5a-5c,
we report the results of FairMatch with ùëáùë§‚àà{0,20,50,100,200}
andùúÜ,ùõΩ‚àà{0.1,0.5,1,5,10}. We can find that the results is stable
with the change of ùëáùë§. AsùúÜincreases, the results show a decline
on CIFAR-100 and CIFAR-100H, while the results are relatively
stable with different ùõΩ. These results indicate that the weight ùúÜof
Lùë¢ùëõùëôùëéùëèùëíùëôùëíùëë should not be too large, as the high-confidence samples
selected in the early stages of training are not accurate enough.
4.3.2 Ablation and Analysis. As shown in Eq. (9), the total loss of
FairMatch consists three parts, i.e., Lùëùùëéùëüùë°ùëñùëéùëô for PL data,Lùë¢ùëõùëôùëéùëèùëíùëôùëíùëë
for unlabeled data and Lùëöùëñùë•ùë¢ùëù for MixUp data. Furthermore, the
candidate label disambiguation in Eq. (1) is also crucial for SSPLL. Inorder to verify the effectiveness of these parts, we conduct ablation
experiments in this subsection. Specifically, w/o CLD means Fair-
Match without candidate label disambiguation, and the remaining
three items in Table 4 indicate that FairMatch without the corre-
sponding loss terms. The results in Table 4 clearly validate that all
of the modules mentioned above provide significant improvements
to our method. In addition, Figs. 5d and 5e show that the trans-
ductive accuracy of FairMatch is significantly higher than that of
w/oLùëöùëñùë•ùë¢ùëù , and on CIFAR-10, the transductive accuracy of w/o
Lùëöùëñùë•ùë¢ùëù shows a decrease in the later stages of training. These re-
sults further demonstrate that the MixUp strategy can prevent the
model from overfitting on the few PL samples.
5 CONCLUSION
In this paper, we have presented a novel semi-supervised partial
learning method named FairMatch, which for the first time achieves
fair selection on each class and adaptively determines the number of
high-confidence samples to be selected from the unlabeled samples.
We also adopt label disambiguation to explore the information in
the PL samples, and apply the MixUp strategy to generate new
training samples from high-confidence samples and PL samples to
prevent the model from overfitting on PL samples, which proved to
be effective. Extensive experiments on benchmark datasets clearly
validate the superiority and effectiveness of our method, especially
when facing fewer PL samples with higher partial rate.
6 ACKNOWLEDGMENTS
This work was supported by the National Natural Science Founda-
tion of China under Grant 62106044, Natural Science Foundation of
Jiangsu Province under Grant BK20210221, and Hong Kong UGC
under grant UGC/FDS11/E02/22.
1276FairMatch: Promoting Partial Label Learning by Unlabeled Samples KDD ‚Äô24, August 25‚Äì29, 2024, Barcelona, Spain
REFERENCES
[1]Ching-Hui Chen, Vishal M. Patel, and Rama Chellappa. 2018. Learning from
ambiguously labeled face images. IEEE Transactions on Pattern Analysis and
Machine Intelligence 40, 7 (2018), 1653‚Äì1667.
[2]Ekin D. Cubuk, Barret Zoph, Dandelion Man√©, Vijay Vasudevan, and Quoc V. Le.
2019. AutoAugment: Learning Augmentation Strategies From Data. In Proceedings
of IEEE/CVF Conference on Computer Vision and Pattern Recognition. 113‚Äì123.
[3]Terrance DeVries and Graham W. Taylor. 2017. Improved Regularization of
Convolutional Neural Networks with Cutout. arXiv:1708.04552
[4]Kaiming He, Haoqi Fan, Yuxin Wu, Saining Xie, and Ross B. Girshick. 2020.
Momentum Contrast for Unsupervised Visual Representation Learning. In Pro-
ceedings of IEEE/CVF Conference on Computer Vision and Pattern Recognition.
9726‚Äì9735.
[5]Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. 2016. Deep residual
learning for image recognition. In Proceedings of IEEE/CVF conference on computer
vision and pattern recognition. 770‚Äì778.
[6]Eyke H√ºllermeier and J√ºrgen Beringer. 2006. Learning from ambiguously labeled
examples. Intelligent Data Analysis 10, 5 (2006), 419‚Äì439.
[7]Yuheng Jia, Jiahao Jiang, and Yongheng Wang. 2023. Semantic Dissimilarity
Guided Locality Preserving Projections for Partial Label Dimensionality Re-
duction. In Proceedings of the 29th ACM SIGKDD International Conference on
Knowledge Discovery and Data Mining. 964‚Äì973.
[8]Yuheng Jia, Xiaorui Peng, Ran Wang, and Min-Ling Zhang. 2024. Long-Tailed
Partial Label Learning by Head Classifier and Tail Classifier Cooperation. In
Proceedings of Thirty-Eighth AAAI Conference on Artificial Intelligence. 12857‚Äì
12865.
[9]Yuheng Jia, Chongjie Si, and Min-Ling Zhang. 2023. Complementary Classi-
fier Induced Partial Label Learning. In Proceedings of the 29th ACM SIGKDD
International Conference on Knowledge Discovery and Data Mining. 974‚Äì983.
[10] Yuheng Jia, Fuchao Yang, and Yongqiang Dong. 2023. Partial Label Learning
with Dissimilarity Propagation guided Candidate Label Shrinkage. In Advances
in Neural Information Processing Systems.
[11] Alex Krizhevsky, Geoffrey Hinton, et al .2009. Learning multiple layers of features
from tiny images. (2009).
[12] Jie Luo and Francesco Orabona. 2010. Learning from candidate labeling sets. In
Advances in Neural Information Processing Systems. 1504‚Äì1512.
[13] Jiaqi Lv, Miao Xu, Lei Feng, Gang Niu, Xin Geng, and Masashi Sugiyama. [n. d.].
Progressive Identification of True Labels for Partial-Label Learning. In Proceedings
of the 37th International Conference on Machine Learning, Vol. 119. 6500‚Äì6510.
[14] Kihyuk Sohn, David Berthelot, Nicholas Carlini, Zizhao Zhang, Han Zhang, Colin
Raffel, Ekin Dogus Cubuk, Alexey Kurakin, and Chunliang Li. 2020. FixMatch:
Simplifying Semi-Supervised Learning with Consistency and Confidence. In
Advances in Neural Information Processing Systems.[15] Deng-Bao Wang, Li Li, and Min-Ling Zhang. 2019. Adaptive Graph Guided
Disambiguation for Partial Label Learning. In Proceedings of the 25th ACM SIGKDD
International Conference on Knowledge Discovery and Data Mining. 83‚Äì91.
[16] Haobo Wang, Ruixuan Xiao, Yixuan Li, Lei Feng, Gang Niu, Gang Chen, and Junbo
Zhao. 2022. PiCO: Contrastive Label Disambiguation for Partial Label Learning.
InProceedings of the Tenth International Conference on Learning Representations.
[17] Qian-Wei Wang, Yu-Feng Li, and Zhi-Hua Zhou. 2019. Partial label learning with
unlabeled data. In Proceedings of the Twenty-Eighth International Joint Conference
on Artificial Intelligence. 3755‚Äì3761.
[18] Qian-Wei Wang, Bowen Zhao, Mingyan Zhu, Tianxiang Li, Zimo Liu, and Shu-
Tao Xia. 2023. Controller-Guided Partial Label Consistency Regularization with
Unlabeled Data. arXiv:2210.11194
[19] Wei Wang and Min-Ling Zhang. 2020. Semi-supervised partial label learning via
confidence-rated margin maximization. In Proceedings of the 34th International
Conference on Neural Information Processing Systems. 6982‚Äì6993.
[20] Yidong Wang, Hao Chen, Qiang Heng, Wenxin Hou, Yue Fan, Zhen Wu, Jindong
Wang, Marios Savvides, Takahiro Shinozaki, Bhiksha Raj, Bernt Schiele, and
Xing Xie. 2023. FreeMatch: Self-adaptive Thresholding for Semi-supervised
Learning. In Proceedings of the Eleventh International Conference on Learning
Representations.
[21] Dong-Dong Wu, Deng-Bao Wang, and Min-Ling Zhang. 2022. Revisiting Con-
sistency Regularization for Deep Partial Label Learning. In Proceedings of 39th
International Conference on Machine Learning. 24212‚Äì24225.
[22] Shiyu Xia, Jiaqi Lv, Ning Xu, and Xin Geng. 2022. Ambiguity-Induced Contrastive
Learning for Instance-Dependent Partial Label Learning. In Proceedings of the
Thirty-First International Joint Conference on Artificial Intelligence, Luc De Raedt
(Ed.). 3615‚Äì3621.
[23] Shiyu Xia, Jiaqi Lv, Ning Xu, Gang Niu, and Xin Geng. 2023. Towards Effective
Visual Representations for Partial-Label Learning. In Proceedings of IEEE/CVF
Conference on Computer Vision and Pattern Recognition. 15589‚Äì15598.
[24] Zinan Zeng, Shijie Xiao, Kui Jia, Tsung-Han Chan, Shenghua Gao, Dong Xu,
and Yi Ma. 2013. Learning by Associating Ambiguously Labeled Images. In
Proceedings of IEEE/CVF Conference on Computer Vision and Pattern Recognition.
708‚Äì715.
[25] Bowen Zhang, Yidong Wang, Wenxin Hou, Hao Wu, Jindong Wang, Manabu
Okumura, and Takahiro Shinozaki. 2021. FlexMatch: Boosting Semi-Supervised
Learning with Curriculum Pseudo Labeling. In Advances in Neural Information
Processing Systems. 18408‚Äì18419.
[26] Hongyi Zhang, Moustapha Ciss√©, Yann N. Dauphin, and David Lopez-Paz. 2018.
mixup: Beyond Empirical Risk Minimization. In Proceedings of the sixth Interna-
tional Conference on Learning Representations.
[27] Min-Ling Zhang, Bin-Bin Zhou, and Xu-Ying Liu. 2016. Partial label learning via
feature-aware disambiguation. In Proceedings of the 22nd ACM SIGKDD interna-
tional conference on knowledge discovery and data mining. 1335‚Äì1344.
1277KDD ‚Äô24, August 25‚Äì29, 2024, Barcelona, Spain Jiahao Jiang, Yuheng Jia, Hui Liu, and Junhui Hou
A ALGORITHM
We present the complete algorithm for FairMatch in Algorithm 1
and demonstrate the detailed training process.
Algorithm 1: Pseudo Code of FairMatch
Input: Training setsDùëùandDùë¢, mini-batch size ùêµ,
training epoch ùëámax, warm-up epoch ùëáw,
hyperparameters ùúá,ùõº,ùúÜ,ùõΩ .
1forùë°=1,2,...,ùëáùëöùëéùë•do
2 ifùë°‚â§ùëáwthen
3 Warm-up;
4 else
5 ShuffleDùë¢into|Dùë¢|
ùúáùêµmini-batches;
6 forùëè=1,2,...,|Dùë¢|
ùúáùêµdo
7 Sample partial label mini-batch BùëùfromDùëù;
8 Upadate the labeling confidence by Eq. (1);
9 CalculateLùëùùëéùëüùë°ùëñùëéùëô ofBùëùby Eq. (2);
10 Calculate the number of samples ùêæto be
selected on each class by Eq. (4);
11 CalculateLùë¢ùëõùëôùëéùëèùëíùëôùëíùëë ofBùë¢by Eq. (5);
12 Generate the MixUp samples Bùëõùëíùë§by Eqs. (6-7);
13 CalculateLùëöùëñùë•ùë¢ùëù ofBùëõùëíùë§by Eq. (8);
14 Minimize the total loss Lin Eq. (9);
15 end
16 end
17end
Output: Model parameters.B RESULTS ON STL-10
STL-10 contains 5,000 labeled images of size 96 √ó96 from 10 classes
and 100,000 unlabeled images including out-of-distribution unla-
beled images. On STL-10, 5,000 labeled samples will be converted
into partial label samples. As shown in 5, FairMatch outperforms the
comparison methods, indicating that our method is also effective
on large datasets of both size and quantity.
Table 5: Accuracy (mean ¬±std) comparisons on STL-10 with
partial rate ùëû‚àà{0.1,0.3,0.5,0.7}.
Metho
dùëû=0.1ùëû=0.3ùëû=0.5ùëû=0.7
Fixmatch+
90.70 ¬±0.34% 89.53 ¬±0.43% 87.27 ¬±0.52% 81.99 ¬±1.28%
Freematch+ 90.77 ¬±0.12% 89.65 ¬±0.39% 87.44 ¬±0.16% 83.15 ¬±0.09%
ConCont 89.37 ¬±0.16% 87.91 ¬±0.24% 85.72 ¬±0.29% 79.15 ¬±2.17%
Method 91.84 ¬±0.16% 90.94 ¬±0.16% 88.24 ¬±0.50% 85.56 ¬±0.57%
1278