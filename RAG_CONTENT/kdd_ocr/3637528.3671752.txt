Bi-Objective Contract Allocation for Guaranteed Delivery
Advertising
Yan Li
liyan@ios.ac.cn
Key Laboratory of System Software
(Chinese Academy of Sciences) and
State Key Laboratory of Computer
Science, Institute of Software, Chinese
Academy of Sciences
Beijing, China
School of Computer Science and
Technology, University of Chinese
Academy of Sciences
Beijing, ChinaYundu Huang
Wuyang Mao
yundu.hyd@alibaba-inc.com
wuyang.mwy@alibaba-inc.com
Alibaba Group
Beijing, ChinaFurong Ye
f.ye@ios.ac.cn
Key Laboratory of System Software
(Chinese Academy of Sciences) and
State Key Laboratory of Computer
Science, Institute of Software, Chinese
Academy of Sciences
Beijing, China
Xiang He
hexiang@ios.ac.cn
Key Laboratory of System Software
(Chinese Academy of Sciences) and
State Key Laboratory of Computer
Science, Institute of Software, Chinese
Academy of Sciences
Beijing, China
School of Computer Science and
Technology, University of Chinese
Academy of Sciences
Beijing, ChinaZhonglin Zu
zhonglin.zuzl@alibaba-inc.com
Alibaba Group
Hangzhou, ChinaShaowei Cai‚àó
caisw@ios.ac.cn
Key Laboratory of System Software
(Chinese Academy of Sciences) and
State Key Laboratory of Computer
Science, Institute of Software, Chinese
Academy of Sciences
Beijing, China
School of Computer Science and
Technology, University of Chinese
Academy of Sciences
Beijing, China
ABSTRACT
Contemporary systems of Guaranteed Delivery (GD) advertising
work with two different stages, namely, the offline selling stage and
the online serving stage. The former deals with contract allocation,
and the latter fulfills the impression allocation of signed contracts.
Existing work usually handles these two stages separately. For
example, contracts are formulated offline without concerning prac-
tical situations in the online serving stage. Therefore, we address
in this paper a bi-objective contract allocation for GD advertising,
which maximizes the impressions, i.e., Ad resource assignments,
allocated for the new incoming advertising orders, and at the same
time, controls the balance in the inventories. Since the proposed
problem is high dimensional and heavily constrained, we design an
efficient local search that focuses on the two objectives alternatively.
The experimental results indicate that our algorithm outperforms
multi-objective evolutionary algorithms and Gurobi, the former of
‚àóCorresponding Author
This work is licensed under a Creative Commons Attribution-
NonCommercial International 4.0 License.
KDD ‚Äô24, August 25‚Äì29, 2024, Barcelona, Spain
¬©2024 Copyright held by the owner/author(s).
ACM ISBN 979-8-4007-0490-1/24/08
https://doi.org/10.1145/3637528.3671752which is commonly applied for multi-objective optimization and
the latter of which is a well-known competitive commercial tool.
CCS CONCEPTS
‚Ä¢Information systems ‚ÜíComputational advertising .
KEYWORDS
Guaranteed delivery, Contract allocation, Bi-objective discrete opti-
mization, Constrained optimization, Local search
ACM Reference Format:
Yan Li, Yundu Huang, Wuyang Mao, Furong Ye, Xiang He, Zhonglin Zu,
and Shaowei Cai. 2024. Bi-Objective Contract Allocation for Guaranteed
Delivery Advertising. In Proceedings of the 30th ACM SIGKDD Conference
on Knowledge Discovery and Data Mining (KDD ‚Äô24), August 25‚Äì29, 2024,
Barcelona, Spain. ACM, New York, NY, USA, 10 pages. https://doi.org/10.
1145/3637528.3671752
1 INTRODUCTION
Guaranteed delivery (GD) advertising, which is essential for precise
targeting in e-commerce marketing, aims to deliver advertisements
(ads) to the target users who satisfy specific and possibly complex
requirements. These requirements are about the characters of users,
such as age, gender, device that users are using, their geographic
locations, and so on. As presented in Figure 1, GD advertising can
 
1691
KDD ‚Äô24, August 25‚Äì29, 2024, Barcelona, Spain Yan Li et al.
Figure 1: The system architecture for Guaranteed Delivery
(GD) advertising. Our model supports the selling system.
be divided into two stages: the offline selling stage and the on-
line serving stage. The advertiser obtains a set of signed contracts
determining the demands of ad impressions, and based on a forecast-
ing system, the publisher can provide the information of available
supply resource. According to this information, the offline selling
system estimates the available impressions for signing contracts of
demand orders. Meanwhile, the online serving stage implements
practical assignments of ad impressions based on the signed con-
tracts. The unique interactive information between the two stages
is the number of impressions for signed contracts. For example,
even though the selling stage may simulate an impressions alloca-
tion to estimate the maximal number of available impressions for
new contracts, this allocation plan will not be implemented by the
online serving system because the online serving process can be
affected by price, users‚Äô activities, and other potential components.
In practice, the selling stage focuses on the number of selling im-
pressions based on historical information, and the online serving
works on the execution of signed contracts. Note that this work
addresses the offline selling stage.
Traditional work in GD usually focuses on estimating the maxi-
mal amount of impressions for a new contract while considering the
information of signed contracts [ 26,35]. In practice, common ap-
proaches, based on only the capacity of supply and demand nodes,
search for the optimal impression allocation that can maximize the
available number of impressions for a new contract. However, as
discussed previously, the real-world online serving stage may not
satisfy the signed contracts due to various potential issues, e.g.,
inaccurate forecasting in supply. The unsatisfied impressions in
the online serving stage will result in a default penalty. Traditional
approaches, which prepare contracts considering only the maximal
number of impressions for new contracts, may result in a high
penalty because of ignoring potential conflicts in online serving.
Therefore, we propose in this paper a novel bi-objective Guaranteed
Delivery advertising inventory allocation problem, which considers
both the maximal number of available impressions for a new con-
tract and the variance in the distributions of impressions allocated
from supply nodes. For ease of reading, we denote the problem by
a bi-objective GD problem in the following.The second objective, concerning the balance in the distribution
of allocated impressions, is introduced to address a common sit-
uation in existing approaches: The selling system maximizes the
number of available impressions for a new order ùê∑0based on an
assumption assigning all impressions of supply node ùëÜ1to demand
orderùê∑0. However, supposing that the forecast of ùëÜ1is accurate,
part of impressions in ùëÜ1may be assigned to another order ùê∑1in
the online serving stage, resulting in failures in fulfilling order ùê∑0.
To avoid the mentioned situation, we therefore prefer the selling
system to determine the number of impressions for new contracts
without overselling inventory in supply nodes.
While two objectives are considered for GD, our research prob-
lem is addressed in the Multi-objective optimization domain. An
intuitive strategy to solve multi-objective optimization problems
(MOPs) is to form a single-objective problem by assigning weights
to each objective so that the single-objective algorithms can be ap-
plied. This strategy has been suggested by Gurobi if users plan to use
this famous commercial tool for MOPs [ 15]. However, proper set-
tings of weights require expert knowledge of the problems and are
usually unknown for most practical scenarios. Meanwhile, Multi-
objective evolutionary algorithms (MOEAs) are famous for their
ability to solve black-box optimization problems without prior in-
formation about the characters of problems. In addition, while con-
cerning two or more objectives, there exist many so-called Pareto
solutions [ 12] that are not worse than any of the other solutions
regarding at least one objective. Therefore, the population-based
Evolutionary Computation (EC) methods, such as genetic algorithm
(GA), are natural candidates for searching a set of Pareto solutions.
However, our bi-objective GD problem instances are usually high
dimensional and with heavy constraints. General EC methods for
MOPs may require significant time consumption to converge a set
of competitive solutions. As another alternative technique, Local
search (LS) is an efficient tool for constrained mixed-integer pro-
gramming [ 16,34]. LS has been applied for dealing with large-scale
MOPs in real-world scenarios, and the corresponding results in-
dicate that LS obtains advantages in convergence speed[ 20,30].
Therefore, we propose in this paper a bi-objective LS embedding
with constraints handling operators and focusing on each objec-
tive alternatively. Experimental results indicate that our algorithm
outperforms Gurobi and general MOEAs.
Overall, this work contributes to (1) solving the contract alloca-
tion for GD advertising concerning both the offline selling stage
and the online serving stage, in practice, forming a bi-objective
GD advertising problem, (2) proposing a bi-objective local search
embedding with operators handling constraints and focusing on
each objective alternatively. Experimental results demonstrate that
the proposed algorithm outperforms well-known MOEAs and the
commercial tool Gurobi in practical business scenarios.
2 RELATED WORKS
Guaranteed Delivery Advertising. Many classic works on GD
advertising focus on the serving phase, which deals with real-time
user requests. When a user request comes in, it determines which
impression to choose and display for the user in time. Following
the fundamental methods for this topic [ 14,21,27], variants of
techniques have been proposed for practical scenarios meeting
 
1692Bi-Objective Contract Allocation for Guaranteed Delivery Advertising KDD ‚Äô24, August 25‚Äì29, 2024, Barcelona, Spain
specific requirements [ 2,6,7,13,17,18]. The selling stage, which
is the topic of our work, has been addressed in a request-level
GD advertising planning system [ 35]. This system can deal with
large-scale inventory allocation problems and presents competitive
performance in the industry. In addition, an end-to-end prediction
and optimization approach was also proposed for industrial GD
selling problems, considering predicting impression allocation and
optimizing the allocation in the selling stage [ 26]. In this paper, we
work on the contract allocation in the selling stage and consider its
potential effect on online serving simultaneously.
Multi-objective Optimization. Our proposed bi-objective GD prob-
lem refers to multi-objective optimization. EC has been widely used
for general MOPs without interfacing with their specific defini-
tions [ 9,19,23]. Among numerous MOEAs, NSGA-II has served as
the baseline in various algorithm comparisons due to its robust per-
formance [ 5,8,32]. Since controlling the diversity of non-dominated
solutions is essential for population-base algorithms, NSGA-II com-
bines a non-dominated sorting approach and a mating pool selec-
tion operator while using a crowd distance to measure the diver-
sity [ 11]. In contrast, NSGA-III uses the concept of the reference
point to measure the diversity of non-dominated solutions [ 10]. U-
NSGA-III is a generalization version of NSGA-III, which has shown
its efficiency for single and bi-objective optimization problems [ 31].
These three MOEAs are general approaches for multi-objective op-
timization problems, and they have been proposed concerning the
convergence of objectives and diversity of non-dominated solutions.
To address constraint handling in MOPs, a constraint two-archive
evolutionary algorithm (C-TAEA) has been proposed embedding
with sophisticated constraint handling [ 24]. In addition, local search
has also been applied to handle multi-objective optimization prob-
lems [ 4,20]. Meanwhile, although commercial tools such as Gurobi
do not specifically address multi-objective optimization, alternative
techniques have also been suggested [15].
3 PROBLEM MODELING
3.1 GD Advertising Inventory Allocation
The GD advertising inventory allocation problem can be illustrated
by the bipartite graph shown in Figure 2. On the left side, each
supply node denotes a set of inventory ùëÜ‚ààS. A supply node can be
labeled by a combination of various properties such as city, gender,
user, etc., and each node can serve as a set of impressions of adver-
tising orders.|ùëÜ|is the number of impressions that ùëÜcan supply. On
the right side, each node denotes one of the demands ùê∑‚ààD from
the contracts of advertisers. |ùê∑|is the number of impressions that ùê∑
demands for. We denote the connections between the supply nodes
and demand nodes by an adjacency matrix ùëÄ=[ùëÄùëñùëó‚àà{0,1}],
whereùëÄùëñùëó=1denotes that the inventory of supply ùëÜùëñcan provide
impressions for the demand ùê∑ùëó,ùëÜùëñ‚ààS, andùê∑ùëó‚ààD; otherwise,
ùëÄùëñùëó=0. We useSùê∑ùëóto represent the set of supplies available for
demandùê∑ùëó, namely, the set of supplies, ùëÜùê∑ùëó={ùëÜùëñ|ùëÄùëñùëó=1}, that
are connected with ùê∑ùëó. Similarly, we denote DùëÜùëñthe demand orders
thatùëÜùëñcan provide impressions.
Traditional work of GD usually works on maximizing the num-
ber of impressions that can be allocated for the demand of a new
order. For example, given a set of demands {ùê∑1,...,ùê∑ùëö}of existing
orders and a new incoming order with demand ùê∑0, the commonlyconsidered objective is to maximize the amount of available sup-
plies that can be allocated for ùê∑0while ensuring the demand from
existing demand orders (as shown in Eq. 1). We denote Dthe set of
existing demand orders in the following. The GD systems, which
are usually with numerous supplies and demands, require solu-
tions, i.e., assignments of impressions, in a short time. Therefore,
heuristics has been commonly applied to search for high-quality
solutions within a limited time. However, only maximizing the
inventory allocation for the incoming order may lead to an imbal-
ance in inventory among different supplies, resulting in potential
failures in the online serving stage. To address this issue, we intro-
duce the other objective formed in Eq. 2, which aims to allocate
the impressions from different supplies in balance. Referring to
the suggestion in previous work of [ 2], we aim for an assignment
that minimizes the deviation between the proportion of |ùê∑ùëó|in
total eligible supply√ç
ùëÜ‚ààùëÜùê∑ùëó|ùëÜ|and the proportion of impression
allocationùë•ùëñùëóin the corresponding supplies ùëÜùëñ, which is helpful
in guarantee the balance among supplies. For a demand ùê∑ùëó, we
expect that the impressions allocated for ùê∑ùëóare provided by various
supplier nodes in ùëÜùê∑ùëórather than by one or a few particular nodes.
In addition, the number of impressions provided by each supply
nodeùëÜùëñshall be related to its capacity |ùëÜùëñ|.
Overall, given a set S={ùëÜ1,...,ùëÜùëõ}of supplies, a setD=
{ùê∑1,...,ùê∑ùëö}of existing demand orders, and a new order ùê∑0, our
bi-objective GD advertising inventory allocation problem is to find
an allocation{ùë•ùëñùëó|ùëñ‚àà[ùëõ],ùëó‚àà[0..ùëö]}aiming to optimize two
objectives as follow (we denote [ùëò]the set{1,...,ùëò}and[0..ùëò]as
the set{0,...,ùëò}) :
ùëì1: min‚àí‚àëÔ∏Å
ùëÜùëñ‚ààSùëÄùëñ0ùë•ùëñ0 (1)
ùëì2: min‚àëÔ∏Å
ùê∑ùëó‚ààD‚à™ùê∑0‚àëÔ∏Å
ùëÜùëñ‚ààùëÜùê∑ùëó|ùê∑ùëó|√ç
ùëÜ‚ààùëÜùê∑ùëó|ùëÜ|‚àíùëÄùëñùëóùë•ùëñùëó
|ùëÜùëñ|(2)
subject to
‚àëÔ∏Å
ùê∑ùëó‚ààùê∑ùëÄùëñùëóùë•ùëñùëó‚â§|ùëÜùëñ|,‚àÄùëÜùëñ‚ààS (3)
‚àëÔ∏Å
ùëÜùëñ‚ààùëÜùëÄùëñùëóùë•ùëñùëó‚â•|ùê∑ùëó|,‚àÄùê∑ùëó‚ààD (4)
ùë•ùëñùëó‚ààN,‚àÄùëñ‚àà[ùëõ],‚àÄùëó‚àà[0..ùëö]. (5)
where Eq. 1 presents the objective of maximizing the number
of impressions for a new contract demand ùê∑0(we form it as mini-
mization by subtraction), Eq. 2 aiming for maintaining the balance
in the inventory of different supplies, Eq. 3 denotes the constraint
that the number of allocated impressions will not exceed inventory
for each supply node, Eq. 4 constraints that the demand of existing
orders must be met, and ùë•ùëñùëó>0in Eq. 5 represents the number of
allocations that supply ùëÜùëñprovides for the demand ùê∑ùëó. Note that,
in practice,Dare predefined with the existing demand orders, and
our problem aims to achieve a proper ùê∑0for the new demand order.
 
1693KDD ‚Äô24, August 25‚Äì29, 2024, Barcelona, Spain Yan Li et al.
Figure 2: The bipartite graph of contract allocation prob-
lem. The supply nodes are impression inventory units. The
demand nodes are GD contracts specifying the amount of
impressions from different supply nodes.
3.2 Pareto Domination
The multi-objective integer programming problem can be formu-
lated as follows: [12]
ùëì:ùëã‚ÜíRùëò,min
ùë•‚ààùëã(ùëì1(ùë•),...,ùëìùëò(ùë•)) (6)
where the number of objectives ùëò=2for our proposed problem
andùëãdenotes the search space. Note that we work on minimization.
We denote that, given two solutions ùë•1andùë•2,ùë•1dominates
ùë•2, denoted by ùêπ(ùë•1) ‚â∫ùêπ(ùë•2), if‚àÄùëñ‚àà [ùëò],ùëìùëñ(ùë•1) ‚â§ùëìùëñ(ùë•2), and
‚àÉùëñ‚àà[ùëò],ùëìùëñ(ùë•1)‚â§ùëìùëñ(ùë•2). Given two solutions ùë•1andùë•2,ùë•1andùë•2
arenon-dominated, denoted by ùêπ(ùë•1)‚™ØÃ∏ùêπ(ùë•2), if‚àÉùëñ‚àà[ùëò],ùëìùëñ(ùë•1)<
ùëìùëñ(ùë•2)and‚àÉùëñ‚àà[ùëò],ùëìùëñ(ùë•2)<ùëìùëñ(ùë•1). A solution ùë•‚àóisPareto optimal
ifùêπ(ùë•)‚™ØÃ∏ùêπ(ùë•‚àó),‚àÄùë•‚ààùëã. The set of all feasible non-dominated so-
lutions inùëãis referred to as the Pareto optimal set ùê¥‚àó={ùë•‚àó‚ààùëã|
ùêπ(ùë•)‚™ØÃ∏ùêπ(ùë•‚àó),‚àÄùë•‚ààùëã}.Pareto front is formed by the objective val-
ues of the Pareto optimal set {ùë¶‚ààRùëò|ùë¶=(ùëì1(ùë•),...,ùëìùëò(ùë•)),ùë•‚àà
ùê¥‚àó}. The objective of a MOP is to identify solutions in the Pareto op-
timal set. However, because the search space is usually complex for
real-world problems, the problems can get more complex within an
increasing number of objectives, and the number of Pareto solutions
is usually known, identifying the entire Pareto optimal set is prac-
tically difficult. Therefore, a practical approach to multi-objective
optimization is to search for a set of non-dominated solutions rep-
resenting the Pareto optimal set.
4 A BI-OBJECTIVE LOCAL SEARCH
ALGORITHM
This section introduces the bi-objective local search (BOLS) al-
gorithm for the proposed bi-objective GD advertising inventory
allocation problem. We first present the framework of our algorithm
in Section 4.1, followed by the detailed introductions of operators.
4.1 The Framework of BOLS
The proposed algorithm BOLS is presented in Algorithm 1. Since the
addressed GD problem is high dimensional andhighly constrained,
the search space of feasible solutions is sparse. In addition, practicalAlgorithm 1: The Framework of BOLS
Input: A given bi-objective GD problem instance
ùëÉ(S,D,ùëÄ):ùë•‚Ü¶‚Üí(ùëì1(ùë•),ùëì2(ùë•)), cutoff_time, ùë°ùë†
Output: A Pareto solution set ùê¥
1ùëÜ‚Üê‚àÖ;
2Initialization stage: ùë•‚ÜêInitialization() ;
3Infeasible stage: while cutoff_time is not used out do
4 whileùëíùë•ùëñùë†ùë°ùë†ùë£ùëñùëúùëôùëéùë°ùëíùëëùëêùëúùëõùë†ùë°ùëüùëéùëñùëõùë°ùë† do
5ùë•‚ÜêSatisfyingMove(ùë•);
6Improvement stage: ùëÄ‚Üê0,ùë°‚Üê0,ùê¥‚Üê{ùë•};
7while cutoff_time is not used out do
8 choose an objective improvement move ImproveMove;
9ùë•‚ÜêImproveMove(ùë•,ùëÄ);
10 x‚ÜêAssignmentValidation (ùëÉ,ùë•);
11ùê¥‚Ä≤‚ÜêUpdatePareto(ùê¥,x);
12 ifùê¥‚Ä≤‚â†ùê¥then
13ùë°‚Üê0,ùê¥‚Üêùê¥‚Ä≤;
14 else
15ùë°‚Üêùë°+1;
16 ifùë°>ùë°ùë†thenùëÄ‚Üê1‚àíùëÄ;
17returnùê¥;
scenarios require solutions in time. Namely, the time budget is
relatively small. Therefore, we perform greedy strategies in the
initialization stage (line 2, details in Section 4.2). Moreover, during
the optimization loop, the algorithm works in two stages: searching
for a feasible solution (lines 3-5) and improving feasible solutions
separately (lines 7-16). The first stage ensures a feasible solution for
the improvement stage. SatisfyingMove operators (see Section 4.3)
are iteratively applied until there exist no violated constraints in ùë•.
Afterward, in the improvement stage, ImproveMove operators (see
Section 4.4) are applied to search for better solutions. While solving
a bi-objective GD problem, BOLS focuses on optimizing for one
of the objectives alternatively. In practice, it switches to optimize
the other objective when no improvement is obtained after ùë°ùë†steps
(line 16). Within the previously mentioned steps, BOLS work on
a solutionùë•={ùë•ùëñùëó,ùëñ‚àà [ùëõ],ùëó‚àà [ùëö]}, addressing the bipartite
graph excluding ùê∑0. When obtaining a feasible (and better) ùë•, BOLS
will create a complete assignment {ùë•ùëñùëó},ùëñ‚àà [ùëõ],ùëó‚àà [0..ùëö]by
assigning impressions for ùê∑0, as shown in Algorithm 3. In addition,
we maintain a set ùê¥of Pareto solutions by comparing new complete
assignments (line 11). When reaching the termination condition,
i.e., the cutoff_time is used out, BOLS returns the Pareto set ùê¥.
4.2 Initialization
Proper initialization can enhance the performance and accelerate
the convergence of algorithms as shown in previous work [ 22,25].
To obtain a promising initial solution, which is unnecessary to
be feasible, we generate it by minimizing the objective as pre-
sented in Eq. 2. In practice, for each ùëñ‚àà [ùëõ]andùëó‚àà [ùëö], we
compute initialized values of ùë•ùëñùëóby assigning each component
|ùê∑ùëó|√ç
ùëÜ‚ààùëÜùê∑ùëó|ùëÜ|‚àíùëÄùëñùëóùë•ùëñùëó
|ùëÜùëñ|=0while ensuring ùë•ùëñùëó‚ààN. With simple linear
 
1694Bi-Objective Contract Allocation for Guaranteed Delivery Advertising KDD ‚Äô24, August 25‚Äì29, 2024, Barcelona, Spain
transformation, the generated initial solution can be proved to sat-
isfy the constraint presented in Eq. 4. Note that we exclude ùê∑0in
this step, and the assignment of ùë•ùëñ0,ùëñ‚àà[ùëõ]will be conducted after
validating the assignment of existing orders (see Algorithm 3) .
4.3 Satisfying Stage
Since feasibility is not guaranteed for the initial solutions, the BOLS
first searches for a feasible solution using SatisfyingMove. Satis-
fyingMove creates new solutions by updating the value(s) of one
or two variables of a solution ùë•. As discussed in Section 4.2, the con-
straints of Eq. 4 and Eq. 5 are not conflicted in our initial solutions.
Therefore, SatisfyingMove is required to tune for the constraints
of Eq. 3, namely, ensuring that the total number of impressions
provided by each supply node does not exceed its available inven-
tory. Note that constraints in Eq. 4 have been satisfied and the new
demand order ùê∑0is not considered here yet.
In practice, SatisfyingMove, as presented in Algorithm 4.3,
aims to reduce the number of impressions provided by the supply
nodesSùë£, in which each supply provides the number of impres-
sions exceeding its inventory capacity. The function first detects
if the violated constraint Eq. 3 regarding a randomly chosen ùëÜùëñ
can be satisfied by tuning the number of impressions allocated for
onedemand order (line 4-7). If the violated constraint can not be
satisfied, the function tunes the corresponding allocations for two
randomly chosen demand orders with the Best from Multiple Se-
lections (BMS) strategy [ 3], which selects the best move from ùë°ùëöùëéùë•
independent trials (line 9-14). In this paper, we set ùë°ùëöùëéùë•=100for
BMS following the suggestions in previous work [ 3]. When tuning
allocations for twodemand orders, we accept the move obtaining
the best score (line 13), which indicates the balance in the numbers
of impressions provided by two supply nodes. The scoring function
is calculated based on the difference in usage rate between the two
nodes before and after the operation. ùõΩùë°is the total impressions
have been allocated to demand andùõΩùëñ
|ùëÜùëñ|could be seen as the usage
rate ofùëÜùëñ.
4.4 Improvement Stage
With a validated assignment ùë•ùëñùëó,ùëñ‚àà[ùëõ],ùëó‚àà[ùëö]of the existing
demand orders, we assign impressions for the new demand order
ùê∑0following the heuristics in Algorithm 3. In practice, we consider
one hundred equally spaced values in [0,B], whereBis the total
remaining numbers of available supply for ùê∑0(line 1), for the re-
quiring amount|ùê∑0|. With a determined |ùê∑0|, we can calculate the
number of impressions allocated for each ùëÜùëñ‚ààS (line 4). There-
fore, with an assignment of impression for the existing orders, we
consider one hundred different complete assignments for ùê∑0.
To obtain efficient solutions addressing the two objectives in
Eq. 1 and Eq. 2, we apply the ImproveMove in Algorithm 4 to
improve the assignment ùë•={ùë•ùëñùëó},ùëñ‚àà[ùëõ]andùëó‚àà[ùëö]for the
existing orders and test the new complete assignments for ùê∑0itera-
tively. We denote ùëÇ1(ùë•)=√ç
ùëÜùëñ‚ààSùê∑0(|ùëÜùëñ|‚àí√ç
ùê∑ùëó‚ààDùëÄùëñùëóùë•ùëñùëó)the total
remaining inventory that is available for the new demand order
ùê∑0andùëÇ2(ùë•)=√ç
ùê∑ùëó‚ààD√ç
ùëÜùëñ‚ààùëÜùê∑ùëó|ùê∑ùëó|√ç
ùëÜ‚ààùëÜùê∑ùëó|ùëÜ|‚àíùëÄùëñùëóùë•ùëñùëó
|ùëÜùëñ|the balance
level of the number of impressions that each supply node providesAlgorithm 2: SatisfyingMove
Input: A given problem ùëÉ(S,D,ùëÄ), a solutionùë•, in which
there exist a subset
Sùë£={ùëÜùëñ‚ààS|√ç
ùê∑ùëó‚ààDùëÄùëñùëóùë•ùëñùëó>|ùëÜùëñ|},ùëñ‚àà[ùëõ], and
the maximal number of trials ùë°ùëöùëéùë•.
Output: A solutionùë•={ùë•ùëñùëó|ùëñ‚àà[ùëõ],ùëó‚àà[ùëö]}
1SampleùëÜùëñ‚ààSùë£uniformly at random (u.a.r);
2ùõΩùëñ‚Üê√ç
ùê∑‚Ñé‚ààDùëÄùëñ‚Ñéùë•ùëñ‚Ñé,ùõΩ‚ÜêùõΩùëñ‚àí|ùëÜùëñ|;
3forùê∑ùëó‚ààDùëÜùëñdo
4ùõæ‚Üêmin(√ç
ùëÜ‚Ñé‚ààSùëÄ‚Ñéùëóùë•‚Ñéùëó‚àí|ùê∑ùëó|,ùë•ùëñùëó,ùõΩ);
5 ifùõæ>0then
6ùë•ùëñùëó‚Üêùë•ùëñùëó‚àíùõæ;
7 returnùë•;
8ùëü‚Üê‚àí‚àû,ùë°‚Üê0;
9whileùë°‚â§ùë°ùëöùëéùë•do
10 Sample a pair of(ùëÜùë°,ùê∑ùë°,ùëü)u.a.r, where
ùê∑ùë°‚ààDS‚ü©,ùëÜùë°‚ààSùê∑ùë°,ùëü‚àà[ùõΩ]andùëü‚â§ùë•ùëñùë°;
11ùõΩùë°‚Üê√ç
ùê∑‚Ñé‚ààDùëÄùë°‚Ñéùë•ùë°‚Ñé‚â§|ùëÜùë°|;
12ùëÜùëêùëúùëüùëí(ùëÜùë°,ùê∑ùë°,ùëü)‚ÜêùõΩùëñ
|ùëÜùëñ|‚àíùõΩùë°
|ùëÜùëñ|‚àíùõΩùëñ‚àíùëü
|ùëÜùëñ|‚àíùõΩùë°+ùëü
|ùëÜùëñ|;
13 ifùëÜùëêùëúùëüùëí(ùëÜùë°,ùê∑ùë°,ùëü)>ùëÜùëêùëúùëüùëí(ùëÜ‚àó,ùê∑‚àó,ùëü‚àó)then
(ùëÜ‚àó,ùê∑‚àó,ùëü‚àó)‚Üê(ùëÜùë°,ùê∑ùë°,ùëü);
14ùë°‚Üêùë°+1;
15ùëñ1‚Üê‚Ñé‚àà[ùëõ]|ùëÜ‚Ñé=ùëÜ‚àó,ùëó1‚Üê‚Ñé‚àà[ùëö]|ùê∑‚Ñé=ùê∑‚àó;
16ùë•ùëñùëó1‚Üêùë•ùëñùëó1‚àíùëü‚àó,ùë•ùëñùëñùëó1‚Üêùë•ùëñùëñùëó1+ùëü‚àó;
17returnùë•;
for the existing orders. The ImproveMove addresses the two objec-
tives by optimizing for ùëÇ1andùëÇ2, alternatively. When comparing
an assignment ùë•‚Ä≤toùë•for the existing demand orders, we denote
the deviations regarding ùëÇ1andùëÇ2byŒîùëÇ1=ùëÇ1(ùë•‚Ä≤)‚àíùëÇ1(ùë•)
andŒîùëÇ2=ùëÇ2(ùë•‚Ä≤)‚àíùëÇ2(ùë•), respectively. We denote ùë•1‚â∫ùë•2if
‚àÄùëñ‚àà{1,2},ùëÇùëñ(ùë•1)‚â§ùëÇùëñ(ùë•2)‚àß‚àÉùëñ‚àà{1,2},ùëÇùëñ(ùë•1)<ùëÇùëñ(ùë•2).
With a given solution ùë•and the current non-dominated solution
setùê¥,ImproveMove first aims to find a new ùë•‚Ä≤‚â∫ùë•,‚àÄùõº‚ààùê¥by
tuning onerandomly chosen ùë•ùëñùëóbyùë•‚Ä≤
ùëñùëó‚Üêùë•ùëñùëó+ùëü, whereùëü‚àà[ùëé,ùëè].
[ùëé,ùëè]is a feasible domain determined by the constraints Eq. 3 and
Eq. 4 (line 1-7). According to the optimizing ùëÄùëúùëëùëí , we choose ùëü
that minimizes ŒîùëÇ1orŒîùëÇ2(line 5). ImproveMove terminates if
it obtains a ùë•‚Ä≤‚â∫ùë•(line 7). If ImproveMove fails in obtaining a
ùë•‚Ä≤‚â∫ùë•afterùë°ùëöùëéùë•=100trails of tuning oneùë•ùëñùëó, it will conduct
ùë°ùëöùëéùë• trials of tuning twoùë•ùëñùëóuntil obtaining a ùë•‚Ä≤‚â∫ùë•(line 8-12). In
practice, it randomly selects two ùë•ùëñ1ùëóandùë•ùëñ2ùëó(line 9) and update
the values by ùë•‚Ä≤
ùëñ1ùëó‚Üêùë•ùëñ1ùëó+ùëüandùë•‚Ä≤
ùëñ2ùëó‚Üêùë•ùëñ2ùëó‚àíùëü(line 11), where
ùëü‚àà[ùëé1,ùëè1]‚à©[ùëé2,ùëè2]is computed based on the corresponding ùëÄùëúùëëùëí
(line 10). If[ùëé1,ùëè1]‚à©[ùëé2,ùëè2]=‚àÖ, this trail fails. When both tuning
oneand twovariables fails, ImproveMove will conduct another
ùë°ùëöùëéùë• trails of tuning oneùë•ùëñùëóbyùë•‚Ä≤
ùëñùëó‚Üêùë•ùëñùëó+ùëü, whereùëü‚àà[ùëé,ùëè]is
computed based on the corresponding ùëÄùëúùëëùëí that minimize ŒîùëÇ1
orŒîùëÇ2(line 13-20). The function terminates when obtaining a
ùë•‚Ä≤‚â∫ùë•and returns it (line 19). Otherwise, it estimates each ùë•‚Ä≤by
ùëÜùëêùëúùëüùëí =|ŒîùëÇùëÄùëúùëëùëí
ŒîùëÇ¬¨ùëÄùëúùëëùëí|and select the one with the highest score, in
 
1695KDD ‚Äô24, August 25‚Äì29, 2024, Barcelona, Spain Yan Li et al.
Algorithm 3: AssignmentValidation
Input: A given problem ùëÉ(S,D,ùëÄ), an assignment matrix
ùë•={ùë•ùëñùëó|ùëñ‚àà[ùëõ],ùëó‚àà[ùëö]}
Output: A set of complete assignment
ùë•‚Ä≤={ùë•ùëñùëó|ùëñ‚àà[0..ùëõ],ùëó‚àà[ùëö]}
1Compute the total remaining inventory of supply nodes
B=√ç
ùëÜùëñ‚ààSùê∑0(|ùëÜùëñ|‚àí√ç
ùê∑ùëó‚ààDùëÄùëñùëóùë•ùëñùëó);
2for‚Ñé‚àà[100] do
3B‚Ä≤‚Üê‚åäB/‚Ñé‚åã;
4 Computeùë•ùëñ0for eachùëñ‚àà[ùëõ]based on Eq. 2, by
assigningùê∑0‚ÜêB‚Ä≤andùë•.;
5 Formùë•‚Ä≤
‚Ñéby combining ùë•andùë•ùëñ0;
6 return{ùë•‚Ä≤
1,...,ùë•‚Ä≤
100}
whichùëÇùëÄùëúùëëùëí denotes the progress regarding the current focusing
objective and ùëÇ¬¨ùëÄùëúùëëùëí for the other objective (line 20).
4.5 Update Pareto Set
As Algorithm 1 described, after getting a set of feasible solutions
x,UpdatePareto will update the Pareto set ùê¥with x(line 11). We
examineùë•‚ààxin order. Ifùëì(ùë•)‚â∫ùêπ(ùë•‚àó),ùë•‚àó‚ààùê¥,ùë•‚àówill be deleted
fromùê¥. If‚àÄùë•‚àó‚ààùê¥,ùêπ(ùë•)‚™ØÃ∏ùêπ(ùë•‚àó),ùë•will be added into ùê¥. In practice,
ùê¥‚Ä≤={ùë•1|ùë•1‚ààùê¥√ê{x},‚àÄùë•2‚ààùê¥√ê{x},ùêπ(ùë•1)‚™ØÃ∏ùêπ(ùë•2)}.
5 EXPERIMENT
We present in this section the experimental results of our proposed
BOLS on real-world GD inventory allocation data, compared to
MOEAs and Gurobi.
5.1 Experimental Setup
Experimental Environment BOLS is implemented in C++ and
compiled by g++ 9.4.0 with ‚Äò-O3‚Äô option. All experiments are con-
ducted on a server with AMD EPYC 7763 64-Core 2.45GHz and
1024G RAM under the system Ubuntu 20.04.4. The maximal avail-
able memory for each method is 20GB. The source code is publicly
available in the anonymous repository1.
Datasets The applied DataSets in this paper are generated from
real-world advertising inventory selling data of Alibaba. In prac-
tice, five datasets are generated by sampling the real-world dataset
at user granularity, and the sampling ensures the diversity of the
datasets by covering the allocation data from various recording
dates, e.g., weekdays and holidays. To test the robustness of algo-
rithms, we generate the datasets with different sizes of supply nodes.
The details of the datasets are presented in Table 1, in which ‚Äú#ins‚Äù
is the number of instances for the corresponding dataset, ‚Äú#Supply‚Äù
indicates the range of the size of supply nodes, and #Demand indi-
cates the range of the size of demand orders.
5.2 Evaluation Metrics
We introduce here the four evaluation metrics that are considered
for the algorithm comparisons: (1) #Win is the number of instances
1https://github.com/ListenYes/BOLSAlgorithm 4: ImproveMove
Input: A given bi-objective GD problem instance
ùëÉ(S,D,ùëÄ), a feasible solution ùë•, Improvement
modeùëÄùëúùëëùëí‚àà{0,1}, and the maximal number of
trialsùë°ùëöùëéùë•.
Output: A solutionùë•‚Ä≤
1whileùë°ùëöùëéùë• is not used out do
2 Sample a connected pair (ùëÜùëñ,ùê∑ùëó)u.a.r;
3ùëé‚Üêmax{‚àíùë•ùëñùëó,|ùê∑ùëó|‚àí√ç
ùëÜ‚Ñé‚ààSùëÄ‚Ñéùëóùë•‚Ñéùëó};
4ùëè‚Üê|ùëÜùëñ|‚àí√ç
ùê∑‚Ñé‚ààDùëÄùëñ‚Ñéùë•ùëñ‚Ñé;
5ùëü‚Üêarg max[ùëé,ùëè]ŒîùëÇùëÄùëúùëëùëí ;
6ùë•‚Ä≤‚Üêùë•,ùë•‚Ä≤
ùëñùëó‚Üêùë•ùëñùëó+ùëü;
7 ifùë•‚Ä≤‚â∫ùë•then return ùë•‚Ä≤;
8whileùë°ùëöùëéùë• is not used out do
9 Sample a connected pair (ùëÜùëñ1,ùëÜùëñ2,ùê∑ùëó)u.a.r;
10[ùëé,ùëè]‚Üê[ùëé1,ùëè1]‚à©[ùëé2,ùëè2]
ùëé1‚Üêmax{‚àíùë•ùëñ1ùëó,|ùê∑ùëó|‚àí√ç
ùëÜ‚Ñé‚ààSùëÄ‚Ñéùëóùë•‚Ñéùëó},
ùëè1‚Üê|ùëÜùëñ1|‚àí√ç
ùê∑‚Ñé‚ààDùëÄùëñ1‚Ñéùë•ùëñ1‚Ñé
ùëé2‚Üê√ç
ùê∑‚Ñé‚ààDùëÄùëñ1‚Ñéùë•ùëñ1‚Ñé‚àí|ùëÜùëñ1|,
ùëè2‚Üê‚àí max{‚àíùë•ùëñ1ùëó,|ùê∑ùëó|‚àí√ç
ùëÜ‚Ñé‚ààSùëÄ‚Ñéùëóùë•‚Ñéùëó},
ùëü‚Üêarg max[ùëé,ùëè]ŒîùëÇùëÄùëúùëëùëí ;
11ùë•‚Ä≤‚Üêùë•,ùë•‚Ä≤
ùëñ1ùëó‚Üêùë•ùëñ1ùëó+ùëü,ùë•‚Ä≤
ùëñ2ùëó‚Üêùë•ùëñ2ùëó‚àíùëü;
12 ifùë•‚Ä≤‚â∫ùë•then return ùë•‚Ä≤;
13whileùë°ùëöùëéùë• is not used out do
14 Sample a connected pair (ùëÜùëñ1,ùëÜùëñ2,ùê∑ùëó)u.a.r;
15ùëé‚Üêmax{‚àíùë•ùëñùëó,|ùê∑ùëó|‚àí√ç
ùëÜ‚Ñé‚ààSùëÄ‚Ñéùëóùë•‚Ñéùëó};
16ùëè‚Üê|ùëÜùëñ|‚àí√ç
ùê∑‚Ñé‚ààDùëÄùëñ‚Ñéùë•ùëñ‚Ñé;
17ùëü‚Üêarg max[ùëé,ùëè]ŒîùëÇùëÄùëúùëëùëí ;
18ùë•‚Ä≤‚Üêùë•,ùë•‚Ä≤
ùëñ1ùëó‚Üêùë•ùëñ1ùëó+ùëü,ùë•‚Ä≤
ùëñ2ùëó‚Üêùë•ùëñ2ùëó‚àíùëü;
19 ifùë•‚Ä≤‚â∫ùë•then return ùë•‚Ä≤;
20 ifùëÜùëêùëúùëüùëí(ùëÜ‚àó
1,ùëÜ‚àó
2,ùê∑‚àó,ùëü‚àó)<ùëÜùëêùëúùëüùëí(ùëÜùëñ1,ùëÜùëñ2,ùê∑ùëó,ùëü)thenùë•‚àó‚Üêùë•‚Ä≤,
(ùëÜ‚àó
1,ùëÜ‚àó
2,ùê∑‚àó,ùëü‚àó)‚Üê(ùëÜùëñ1,ùëÜùëñ2,ùê∑ùëó,ùëü);
21returnùë•‚àó;
DataSet #ins #Supply #Demand
ùê∑ùëéùë°ùëéùëÜùëíùë° 1200 <30000 20 ‚àí750
ùê∑ùëéùë°ùëéùëÜùëíùë° 2200 30000‚àí100000 20‚àí750
ùê∑ùëéùë°ùëéùëÜùëíùë° 3200 10000‚àí200000 20‚àí750
ùê∑ùëéùë°ùëéùëÜùëíùë° 4200 200000‚àí350000 20‚àí750
ùê∑ùëéùë°ùëéùëÜùëíùë° 5200 >350000 20 ‚àí750
Table 1: The size of datasets
where an algorithm obtains the results in the context of the per-
formance metric compared to the other tested algorithms; (2) #Sol
denotes the number of solved instances in which an algorithm ob-
tains a feasible solution within the given time limit. Solving an
instance indicates obtaining at least a solution satisfying all the re-
quired impressions for existing demand orders; (3) HyperVolume
(HV) is the volume of the objective space that is dominated by a
solution set. Given a solution set ùê¥with objective values ùëì‚ààùëÖùëë,
where d is the dimensionality of search space, and a reference point
 
1696Bi-Objective Contract Allocation for Guaranteed Delivery Advertising KDD ‚Äô24, August 25‚Äì29, 2024, Barcelona, Spain
BOLSùëéùëôùë° BOLSùëüùëéùëõùëë BOLS 1
HV (ùë§ùëñùëõùëÖ ) HV (ùë§ùëñùëõùëÖ ) HV (ùë§ùëñùëõùëÖ )
ùê∑ùëéùë°ùëéùëÜùëíùë° 146.98 (0.22) 43.57 (0.225) 46.22 (0.135)
ùê∑ùëéùë°ùëéùëÜùëíùë° 247.38 (0.185) 47.08 (0.2) 72.21 (0.15)
ùê∑ùëéùë°ùëéùëÜùëíùë° 335.29 (0.13) 43.52 (0.17) 65.84 (0.145)
ùê∑ùëéùë°ùëéùëÜùëíùë° 443.75 (0.185) 57.70 (0.275) 72.41 (0.25)
ùê∑ùëéùë°ùëéùëÜùëíùë° 536.20 (0.16) 43.30 (0.2) 54.49 (0.205)
BOLS 10 BOLS 100 BOLS 1000
HV (ùë§ùëñùëõùëÖ ) HV (ùë§ùëñùëõùëÖ ) HV (ùë§ùëñùëõùëÖ )
ùê∑ùëéùë°ùëéùëÜùëíùë° 1 42.61 (-) 43.85 (0.075) 41.83 (0.055)
ùê∑ùëéùë°ùëéùëÜùëíùë° 2 74.77 (-) 70.76 (0.12) 68.59 (0.09)
ùê∑ùëéùë°ùëéùëÜùëíùë° 3 73.83 (-) 70.02 (0.14) 74.42 (0.17)
ùê∑ùëéùë°ùëéùëÜùëíùë° 4 73.69 (-) 72.12 (0.25) 71.30 (0.23)
ùê∑ùëéùë°ùëéùëÜùëíùë° 5 55.83 (-) 53.42 (0.22) 52.38 (0.205)
Table 2: HV obtained by BOLS with different settings of ùë°ùë†.
ùëé‚ààùëÖùëë, HV(ùê¥)=Œõ(√ê
ùë•‚ààùê¥[ùëì1(ùë•),ùëé1]√ó...√ó[ùëìùëë(ùë•),ùëéùëë])where Œõ(¬∑)
denotes the Lebesgue measure, and [ùëì1(ùë•),ùëé1]√ó...√ó[ùëìùëë(ùë•),ùëéùëë]
denotes the orthotope with {ùëì(ùë•)}andùëéin opposite corners; and
(4)Sales Revenue Assessment (SR) is a practical metric for eval-
uating real-world advertising revenue. This metric is suggested by
theanonymous company.
SR=ùëò1ùëì1+‚àëÔ∏Å
ùê∑ùëó‚ààD‚à™ùê∑0‚àëÔ∏Å
ùëÜùëñ‚ààùëÜùê∑ùëóùëò2log
1+|ùê∑ùëó|√ç
ùëÜ‚ààùëÜùê∑ùëó|ùëÜ|‚àíùëÄùëñùëóùë•ùëñùëó
|ùëÜùëñ|
(7)
whereùëò1=‚àí5,ùëò2=‚àí1. The definition of SR is fitted using
real-world allocation data.
5.3 Parameters Analysis
Referring to Section 4.1, ùë°ùëöùëéùë• andùë°ùë†are the two essential parame-
ters of our proposed BOLS. The former is used in BMS to determine
the maximal number of trails, and ùë°ùë†is introduced in BOLS, con-
trolling the frequency of alternating which objective to focus on.
We setùë°ùëöùëéùë•=100following the suggestion in the previous work
of Cai et. al. [3], and in this section, we explore the impact of ùë°ùë†on
the performance of BOLS.
Recall that we have designed BOLS with two modes, and each
mode focus on optimize one of the objectives. Apart from using the
strategy presented in Algorithm 1 alternating the other objective
after no new non-dominated solutions are obtained in ùë°ùë†iterations,
we consider another two settings for comparison. In practice, the
tested settings are as follows.
‚Ä¢BOLSùëéùëôùë°alternates between two modes in each iteration.
‚Ä¢BOLSùëüùëéùëõùëë randomly choose a mode in each iteration.
‚Ä¢BOLSùë°ùë†alternates after no new non-dominated solutions are
obtained in ùë°ùë†iterations
We run each algorithm with a time limit 60ùë†, which follows
the setting of real-world scenarios suggested by Alibaba, and we
consider HV, the common indicator of multi-objective optimization,
for the comparison.
Table 2 presents the sum of normalized HV across the tested
instances. In practice, the distance between a solution‚Äôs objectivepoint and the reference point is normalized by the distance between
the farthest solution and the reference point regarding the corre-
sponding objective. Note that the normalized HV equals to 0if no
feasible solution is obtained, and it equals to 1if an algorithm is
the only one obtaining feasible solutions. We observe that BOLS 10
achieves the largest sum of HV across five tested datasets. In addi-
tion, we presented the win rate ( ùë§ùëñùëõùëÖ ), which is the percentage of
instances in which each setting obtains better HV than BOLS 10, in
brackets. All the values are below 0.5, indicating that BOLS 10does
not perform worse than the other settings on the tested instances.
Therefore, we choose ùë°ùë†=10for the following experiments.
In addition, the competitive results of BOLS ùë°ùë†empirically prove
that optimizing for one particular objective until no progress can
be achieved in a fixed term is an efficient strategy. As we observe
that BOLSùë°ùë†generally outperforms alternating in each iteration
BOLSùëéùëôùë°and the random strategy BOLS ùëüùëéùëõùëë.
5.4 Comparison with MOEA
Since EC has been widely applied for multi-objective optimization
problems, we include four MOEAs, namely NSGA-II, NSGA-III, U-
NSGA-III, and C-TAEA, for the comparisons in this section. Related
discussions about the algorithms can be found in Section 2.
Table 3 presents #Sol, #Win, and the sum of normalized HV of
the tested algorithms for five datasets. To investigate the impact of
cutoff time on the algorithms‚Äô performance, we show the results
of given budgets 10ùë†,60ùë†, and 300ùë†. We observe that our BOLS
obtains better #Win than MOEAs across all instances. MOEAs solve
more instances of small-size datasets such as ùê∑ùëéùë°ùëéùëÜùëíùë° 1,ùê∑ùëéùë°ùëéùëÜùëíùë° 2,
andùê∑ùëéùë°ùëéùëÜùëíùë° 3. However, BOLS outperforms MOEAs regarding #Sol
for large-size datasets ùê∑ùëéùë°ùëéùëÜùëíùë° 4andùê∑ùëéùë°ùëéùëÜùëíùë° 5. In addition, BOLS
presents competitive results regarding HV, compared to MOEAs.
The observations indicate that MOEAs have advantages in obtain-
ing feasible solutions for relatively small search space. Meanwhile,
BOLS shows its superiority in solving large-scale problems. More-
over, with the strategy of focusing on each objective alternatively,
the results show that BOLS can achieve better solutions for all
datasets compared to MOEAs.
In addition, we plot in Figure 3 the distributions of the Pareto
front obtained by each algorithm. We present the results of five
randomly chosen instances of datasets ùê∑ùëéùë°ùëéùëÜùëíùë° 1andùê∑ùëéùë°ùëéùëÜùëíùë° 2. Plot-
ted values are the normalized values for each objective, namely
ùë¶=(ùë¶‚àíùë¶ùëöùëñùëõ)/(ùë¶ùëöùëéùë•‚àíùë¶ùëöùëñùëõ), whereùë¶ùëöùëéùë• andùë¶ùëöùëñùëõare the maxi-
mal and minimal values obtained by the plotted solutions. We can
observe that the Pareto solutions obtained by BOLS are significantly
better than the ones obtained by MOEAs.
5.5 Comparison with Gurobi
We now compare our proposed BOLS with the famous commercial
optimization tool Gurobi [ 15]. Gurobi has been successfully applied
in various real-world scenarios, and it has presented significant
advantages in many mixed-integer programming problems [28].
Although Gurobi does not provide the functionality of searching
for a set of non-dominated solutions, it suggests converting multi-
objective optimization problems into single-objective problems by
assigning weights to each objective value so that the tool can be
applied. Therefore, we test Gurobi for our proposed bi-objective GD
 
1697KDD ‚Äô24, August 25‚Äì29, 2024, Barcelona, Spain Yan Li et al.
time BOLS NSGA-II NSGA-III U-NSGA-III C-TAEA
#Win #Sol HV #Win #Sol HV #Win #Sol HV #Win #Sol HV #Win #Sol HV
10sùê∑ùëéùë°ùëéùëÜùëíùë° 1183 183 183.00 1 194 10.21 0 194 5.32 0 194 4.96 11 194 14.72
ùê∑ùëéùë°ùëéùëÜùëíùë° 2163 163 163.00 5 183 13.81 6 184 14.57 4 184 15.86 7 179 15.47
ùê∑ùëéùë°ùëéùëÜùëíùë° 3185 185 185.00 2 192 8.19 4 192 9.80 6 195 10.28 0 179 4.80
ùê∑ùëéùë°ùëéùëÜùëíùë° 4200 200 200.00 0 191 0.14 0 197 0.18 0 200 0.19 0 180 0.03
ùê∑ùëéùë°ùëéùëÜùëíùë° 5175 175 175.00 3 180 10.95 8 182 10.80 3 181 6.42 0 170 7.12
60sùê∑ùëéùë°ùëéùëÜùëíùë° 1183 183 183.00 9 197 18.73 0 195 4.38 0 194 3.02 5 194 13.74
ùê∑ùëéùë°ùëéùëÜùëíùë° 2163 163 163.00 1 184 13.82 0 184 6.83 0 184 6.03 21 183 22.46
ùê∑ùëéùë°ùëéùëÜùëíùë° 3185 185 185.00 1 192 8.39 0 192 4.50 0 195 5.65 11 191 11.40
ùê∑ùëéùë°ùëéùëÜùëíùë° 4200 200 200.00 0 191 0.09 0 197 0.12 0 200 0.13 0 187 0.10
ùê∑ùëéùë°ùëéùëÜùëíùë° 5191 191 191.00 3 180 3.83 0 181 1.11 1 181 1.12 0 169 1.84
300sùê∑ùëéùë°ùëéùëÜùëíùë° 1182 183 182.00 2 197 18.23 2 198 8.97 0 198 3.48 8 197 18.64
ùê∑ùëéùë°ùëéùëÜùëíùë° 2163 163 163.00 0 192 30.85 1 191 7.53 1 191 6.03 8 192 31.55
ùê∑ùëéùë°ùëéùëÜùëíùë° 3185 185 185.00 0 195 12.50 0 195 2.72 0 195 1.68 3 195 12.82
ùê∑ùëéùë°ùëéùëÜùëíùë° 4200 200 200.00 0 200 0.27 0 200 0.06 0 200 0.06 0 200 0.27
ùê∑ùëéùë°ùëéùëÜùëíùë° 5200 200 200.00 0 182 0.13 0 184 0.09 0 182 0.04 0 182 0.13
Table 3: The sum of HV and #Win regarding HV of BOLS and four MOEAs.
Figure 3: Pareto sets obtained by BOLS and MOEAs for
ùê∑ùëéùë°ùëéùëÜùëíùë° 1(Top) andùê∑ùëéùë°ùëéùëÜùëíùë° 2(Bottom).
problem by assigning weights ùë§1andùë§2forùëì1andùëì2, respectively.
In practice, we use Gurobi to solve a problem ùëìùëúùëõùëí=ùë§1¬∑ùëì1+ùë§2¬∑ùëì2
while the constraints Eq. 3, Eq. 4, and Eq. 5 remain the same.
To consider proper settings for ùë§1andùë§2, we plot in Figure 4 the
distribution of the average ratios ùëì1/ùëì2, which are computed from
the Pareto solutions obtained by BOLS for each problem instance
(excluding the ones in which no feasible solutions are obtained).
According to the figure, we test Gurobi with the following nine
settings of(ùë§1,ùë§2):(1 : 1),(1 : 2),(1 : 5),(1 : 10),(2 : 1),(5 :
1),(10 : 1),(100 : 1),(1000 : 1). We compare Guribo and BOLS
concerning ùëìùëúùëõùëíobtained by each method. The ùëìùëúùëõùëíof Gurobi and
BOLS are the best obtained by nine settings and the best of the
obtained Pareto Set, respectively.
Figure 4: The distribution of the average ratio of the objective
valuesùëì1/ùëì2.
We test both the exact method (Gurobi-E) and heuristics (Gurobi-
H) approaches of Gurobi for comparisons. Table 4 presents #Win
and#Sol of the methods. We can observe that, with the least given
time 10ùë†, BOLS outperforms both Gurobi approaches across five
datasets. With more running time, Gurobi outperforms BOLS for
datasetùê∑ùëéùë°ùëéùëÜùëíùë° 1, in which the sizes of supply nodes are relatively
small. Still, BOLS still outperforms Gurobi significantly for the rest
datasets.
5.6 Real-world Assessment
As presented in previous sections, we address two objectives of GD
systems in this work, and our proposed BOLS shows competitive
performance over the other tested methods. In this section, we use
a Sales Revenue (SR) assessment, which has been applied in real-
world scenarios and suggested by Alibaba, to examine the realistic
benefit contribution of this work.
We compare BOLS with only Gurobi in this section because
Gurobi has been commonly applied in commercial scenarios, and
BOLS have shown significant advantages over MOEAs in Figure 3.
In practice, we compute the SR of Gurobi approaches using the best
results obtained by the nine settings of (ùë§1,ùë§2)and compute the
SR of BOLS using the best results of the obtained Pareto solutions.
 
1698Bi-Objective Contract Allocation for Guaranteed Delivery Advertising KDD ‚Äô24, August 25‚Äì29, 2024, Barcelona, Spain
time BOLS Gurobi-E Gurobi-H
#Win #Sol #Win #Sol #Win #Sol
10sùê∑ùëéùë°ùëéùëÜùëíùë° 1 88 183 51 178 45 178
ùê∑ùëéùë°ùëéùëÜùëíùë° 2136 163 13 76 14 76
ùê∑ùëéùë°ùëéùëÜùëíùë° 3185 185 0 0 0 0
ùê∑ùëéùë°ùëéùëÜùëíùë° 4200 200 0 0 0 0
ùê∑ùëéùë°ùëéùëÜùëíùë° 5175 175 0 0 0 0
60sùê∑ùëéùë°ùëéùëÜùëíùë° 1 34 183 74 184 76 184
ùê∑ùëéùë°ùëéùëÜùëíùë° 2108 163 32 84 23 84
ùê∑ùëéùë°ùëéùëÜùëíùë° 3182 185 1 8 2 8
ùê∑ùëéùë°ùëéùëÜùëíùë° 4200 200 0 0 0 0
ùê∑ùëéùë°ùëéùëÜùëíùë° 5191 191 0 0 0 0
300sùê∑ùëéùë°ùëéùëÜùëíùë° 1 4 183 184 63 184 117
ùê∑ùëéùë°ùëéùëÜùëíùë° 2 85 163 40 85 38 85
ùê∑ùëéùë°ùëéùëÜùëíùë° 3179 185 1 14 5 14
ùê∑ùëéùë°ùëéùëÜùëíùë° 4200 200 0 0 0 0
ùê∑ùëéùë°ùëéùëÜùëíùë° 5200 200 0 0 0 0
Table 4: #Win and #Sol of BOLS and Gurobi.
ùê∑
ùëéùë°ùëéùëÜùëíùë° 1ùê∑ùëéùë°ùëéùëÜùëíùë° 2ùê∑ùëéùë°ùëéùëÜùëíùë° 3ùê∑ùëéùë°ùëéùëÜùëíùë° 4ùê∑ùëéùë°ùëéùëÜùëíùë° 5
Gur
obi-E 1 046 947 539 436 32 940 - -
Gurobi-H 1 021 938 568 230 192 298 - -
BOLS 1 062 047 705 891 832 807 461 972 446 509
Table 5: SR of BOLS and Gurobi.
Table 5 presents the result of 60ùë†(a commonly applied setting in
commercial scenarios), which is the sum of SR across the tested
instances. The results indicate 1.4%and3.7%progress sales revenue
forùê∑ùëéùë°ùëéùëÜùëíùë° 1, compared to the exact and heuristic approaches of
Gurobi, respectively. These values are 23.5%and19.5%forùê∑ùëéùë°ùëéùëÜùëíùë° 2,
and 96.0% and 76.9% for ùê∑ùëéùë°ùëéùëÜùëíùë° 3. The values of Gurobi are miss-
ing forùê∑ùëéùë°ùëéùëÜùëíùë° 4andùê∑ùëéùë°ùëéùëÜùëíùë° 5because no feasible solutions are
obtained, as shown in Table 4.
6 CONCLUSIONS
This work has introduced a novel bi-objective contract allocation
for the offline selling stage of GD advertising, and the problem
for the first time considers the distribution of the number of im-
pressions allocated from supplies. It can benefit in better contract
allocations, avoiding failures in the practical online serving stage.
We propose a bi-objective local search algorithm to solve the prob-
lem, and experimental results show its significant advantages over
multi-objective evolutionary algorithms and Gurobi, proving the
superiority of our method for such a high dimensional and heavily
constrained bi-objective mixed-integer programming problem.
We have tested our algorithm on the datasets with supply nodes
on the scale of hundreds of thousands and hundreds of demand
orders. In the future, we plan to investigate the parallel version of
our method for larger size datasets, so that the proposed problem
and methods can be generalized for more practical application sce-
narios. In addition, we can apply our bi-objective local search to
other bipartite allocation problems, such as resources allocation incommunication [ 29], supply chain inventory allocation[ 1], inven-
tory allocation[ 33], especially for those with high-dimensionality
and many constraints.
ACKNOWLEDGMENTS
This work is supported by NSFC Grant 62122078.
REFERENCES
[1]Nader Al Theeb, Hazem J Smadi, Tarek H Al-Hawari, and Manar H Aljarrah.
2020. Optimization of vehicle routing with inventory allocation problems in Cold
Supply Chain Logistics. Computers & Industrial Engineering 142 (2020), 106341.
[2]Vijay Bharadwaj, Peiji Chen, Wenjing Ma, Chandrashekhar Nagarajan, John
Tomlin, Sergei Vassilvitskii, Erik Vee, and Jian Yang. 2012. Shale: an efficient
algorithm for allocation of guaranteed display advertising. In Proceedings of the
18th ACM SIGKDD International Conference on Knowledge Discovery and Data
mining. 1195‚Äì1203.
[3]Shaowei Cai. 2015. Balance between complexity and quality: Local search for
minimum vertex cover in massive graphs. In Proceedings of the 24th International
Joint Conference on Artificial Intelligence.
[4]Bili Chen, Wenhua Zeng, Yangbin Lin, and Defu Zhang. 2014. A new local search-
based multiobjective optimization algorithm. IEEE Transactions on Evolutionary
Computation 19, 1 (2014), 50‚Äì73.
[5]Lingen Chen, Shuangshuang Shi, Yanlin Ge, and Huijun Feng. 2023. Ecological
function performance analysis and multi-objective optimization for an endore-
versible four-reservoir chemical pump. Energy 282 (2023), 128717.
[6]Peiji Chen, Wenjing Ma, Srinath Mandalapu, Chandrashekhar Nagarjan, Jayavel
Shanmugasundaram, Sergei Vassilvitskii, Erik Vee, Manfai Yu, and Jason Zien.
2012. Ad serving using a compact allocation plan. In Proceedings of the 13th ACM
Conference on Electronic Commerce. 319‚Äì336.
[7]Xiao Cheng, Chuanren Liu, Liang Dai, Peng Zhang, Zhen Fang, and Zhonglin
Zu. 2022. An Adaptive Unified Allocation Framework for Guaranteed Display
Advertising. In Proceedings of the 15th ACM International Conference on Web
Search and Data Mining. 132‚Äì140.
[8]Sam Daulton, Maximilian Balandat, and Eytan Bakshy. 2023. Hypervolume knowl-
edge gradient: a lookahead approach for multi-objective bayesian optimization
with partial information. In International Conference on Machine Learning. PMLR,
7167‚Äì7204.
[9]Kalyanmoy Deb. 2011. Multi-objective optimisation using evolutionary algo-
rithms: an introduction. In Multi-objective Evolutionary Optimisation for Product
Design and Manufacturing. Springer, 3‚Äì34.
[10] Kalyanmoy Deb and Himanshu Jain. 2013. An evolutionary many-objective opti-
mization algorithm using reference-point-based nondominated sorting approach,
part I: solving problems with box constraints. IEEE Transactions on Evolutionary
Computation 18, 4 (2013), 577‚Äì601.
[11] Kalyanmoy Deb, Amrit Pratap, Sameer Agarwal, and TAMT Meyarivan. 2002. A
fast and elitist multiobjective genetic algorithm: NSGA-II. IEEE Transactions on
Evolutionary Computation 6, 2 (2002), 182‚Äì197.
[12] Matthias Ehrgott. 2005. Multicriteria optimization. Vol. 491. Springer Science &
Business Media.
[13] Zhen Fang, Yang Li, Chuanren Liu, Wenxiang Zhu, Yu Zheng, and Wenjun Zhou.
2019. Large-scale personalized delivery for guaranteed display advertising with
real-time pacing. In IEEE International Conference on Data Mining. IEEE, 190‚Äì199.
[14] Jon Feldman, Aranyak Mehta, Vahab Mirrokni, and Shan Muthukrishnan. 2009.
Online stochastic matching: Beating 1-1/e. In 50th Annual IEEE Symposium on
Foundations of Computer Science. IEEE, 117‚Äì126.
[15] LLC Gurobi Optimization. 2022. Gurobi Optimizer Reference Manual (Gurobi
Optimization, LLC). (2022).
[16] Gregor Hendel. 2022. Adaptive large neighborhood search for mixed integer
programming. Mathematical Programming Computation (2022), 1‚Äì37.
[17] Ali Hojjat, John Turner, Suleyman Cetintas, and Jian Yang. 2014. Delivering
guaranteed display ads under reach and frequency requirements. In Proceedings
of the 28th AAAI Conference on Artificial Intelligence, Vol. 28.
[18] Ali Hojjat, John Turner, Suleyman Cetintas, and Jian Yang. 2017. A unified
framework for the scheduling of guaranteed targeted display advertising under
reach and frequency requirements. Operations Research 65, 2 (2017), 289‚Äì313.
[19] Yicun Hua, Qiqi Liu, Kuangrong Hao, and Yaochu Jin. 2021. A survey of evo-
lutionary algorithms for multi-objective optimization problems with irregular
Pareto fronts. IEEE/CAA Journal of Automatica Sinica 8, 2 (2021), 303‚Äì318.
[20] Andrzej Jaszkiewicz. 2002. Genetic local search for multi-objective combinatorial
optimization. European Journal of Operational Research 137, 1 (2002), 50‚Äì71.
[21] Chinmay Karande, Aranyak Mehta, and Pushkar Tripathi. 2011. Online bipartite
matching with unknown distributions. In Proceedings of the 43rd annual ACM
Symposium on Theory of Computing. 587‚Äì596.
 
1699KDD ‚Äô24, August 25‚Äì29, 2024, Barcelona, Spain Yan Li et al.
[22] Borhan Kazimipour, Xiaodong Li, and A Kai Qin. 2014. A review of popula-
tion initialization techniques for evolutionary algorithms. In IEEE Congress on
Evolutionary Computation. IEEE, 2585‚Äì2592.
[23] Abdullah Konak, David W Coit, and Alice E Smith. 2006. Multi-objective opti-
mization using genetic algorithms: A tutorial. Reliability engineering & system
safety 91, 9 (2006), 992‚Äì1007.
[24] Ke Li, Renzhi Chen, Guangtao Fu, and Xin Yao. 2018. Two-archive evolutionary
algorithm for constrained multiobjective optimization. IEEE Transactions on
Evolutionary Computation 23, 2 (2018), 303‚Äì315.
[25] Sedigheh Mahdavi, Mohammad Ebrahim Shiri, and Shahryar Rahnamayan. 2015.
Metaheuristics in large-scale global continues optimization: A survey. Information
Sciences 295 (2015), 407‚Äì428.
[26] Wuyang Mao, Chuanren Liu, Yundu Huang, Zhonglin Zu, M Harshvardhan,
Liang Wang, and Bo Zheng. 2023. End-to-End Inventory Prediction and Contract
Allocation for Guaranteed Delivery Advertising. In Proceedings of the 29th ACM
SIGKDD Conference on Knowledge Discovery and Data Mining. 1677‚Äì1686.
[27] Vahab S Mirrokni, Shayan Oveis Gharan, and Morteza Zadimoghaddam. 2012.
Simultaneous approximations for adversarial and stochastic online budgeted
allocation. In Proceedings of the 23rd annual ACM-SIAM Symposium on Discrete
Algorithms. SIAM, 1690‚Äì1701.
[28] Hans Mittelmann. [n. d.]. Visualizations of mittelmann benchmarks. https:
//mattmilten.github.io/mittelmann-plots/.[29] Indranil Mondal, Anushree Neogi, Prasanna Chaporkar, and Abhay Karandikar.
2017. Bipartite graph based proportional fair resource allocation for D2D com-
munication. In IEEE Wireless Communications and Networking Conference. IEEE,
1‚Äì6.
[30] Luis Paquete and Thomas St√ºtzle. 2018. Stochastic local search algorithms for
multiobjective combinatorial optimization: A review. Handbook of Approximation
Algorithms and Metaheuristics (2018), 411‚Äì425.
[31] Haitham Seada and Kalyanmoy Deb. 2015. A unified evolutionary optimiza-
tion procedure for single, multiple, and many objectives. IEEE Transactions on
Evolutionary Computation 20, 3 (2015), 358‚Äì369.
[32] Ye Tian, Tao Zhang, Jianhua Xiao, Xingyi Zhang, and Yaochu Jin. 2020. A
coevolutionary framework for constrained multiobjective optimization problems.
IEEE Transactions on Evolutionary Computation 25, 1 (2020), 102‚Äì116.
[33] Yulia Tseytlin and H Sebastian Heese. 2023. Inventory allocation with full down-
ward substitution and monotone cost differences. European Journal of Operational
Research 307, 1 (2023), 130‚Äì139.
[34] Laurence A Wolsey. 2020. Integer programming. John Wiley & Sons.
[35] Hong Zhang, Lan Zhang, Lan Xu, Xiaoyang Ma, Zhengtao Wu, Cong Tang,
Wei Xu, and Yiguo Yang. 2020. A request-level guaranteed delivery advertising
planning: Forecasting and allocation. In Proceedings of the 26th ACM SIGKDD
International Conference on Knowledge Discovery & Data Mining. 2980‚Äì2988.
 
1700