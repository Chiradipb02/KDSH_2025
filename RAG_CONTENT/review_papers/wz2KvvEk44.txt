Focus On What Matters: Separated Models For
Visual-Based RL Generalization
Di Zhang Bowen Lv Hai Zhang Feifan Yang Junqiao Zhao∗
Hang Yu Chang Huang Hongtu Zhou Chen Ye Changjun Jiang
Department of Computer Science, Tongji University, Shanghai, China
MOE Key Lab of Embedded System and Service Computing, Tongji University, Shanghai, China
{2331922, 2151769, zhanghai12138, 2153299, zhaojunqiao}@tongji.edu.cn
{2053881, 2130790, zhouhongtu, yechen, cjjiang}@tongji.edu.cn
Abstract
A primary challenge for visual-based Reinforcement Learning (RL) is to generalize
effectively across unseen environments. Although previous studies have explored
different auxiliary tasks to enhance generalization, few adopt image reconstruction
due to concerns about exacerbating overfitting to task-irrelevant features during
training. Perceiving the pre-eminence of image reconstruction in representation
learning, we propose SMG (Separated Models for Generalization), a novel ap-
proach that exploits image reconstruction for generalization. SMG introduces
two model branches to extract task-relevant and task-irrelevant representations
separately from visual observations via cooperatively reconstruction. Built upon
this architecture, we further emphasize the importance of task-relevant features for
generalization. Specifically, SMG incorporates two additional consistency losses
to guide the agent’s focus toward task-relevant areas across different scenarios,
thereby achieving free from overfitting. Extensive experiments in DMC demon-
strate the SOTA performance of SMG in generalization, particularly excelling
in video-background settings. Evaluations on robotic manipulation tasks further
confirm the robustness of SMG in real-world applications. Source code is available
athttps://anonymous.4open.science/r/SMG/ .
1 Introduction
Visual-based Reinforcement Learning (RL) has demonstrated remarkable success across various
tasks, including Atari games [ 27,11,18], robotic manipulation [ 23,9], and autonomous navigation
[26,46]. However, deploying visual-based RL algorithms in real-world applications requires a
high generalization ability due to numerous factors that can induce distribution shifts between
training and deployment scenarios, such as variations in lighting conditions, camera viewpoints, and
backgrounds. Many visual-based RL algorithms are prone to overfitting to the training observations
[5,34,44], limiting their applicability in scenarios where fine-tuning with deployment observations
is not allowed.
To address the generalization gap in visual-based RL, current studies primarily focus on utilizing data
augmentation techniques [ 19,20,33] and exploring various auxiliary tasks [ 12,3,13]. However, few
of the previous works successfully incorporate reconstruction loss to this field, which is commonly
adopted in standard visual-based RL settings and has been demonstrated to improve the sample
efficiency of RL agents [ 41,10,7]. This is because reconstructing the entire input observation can
exacerbate the overfitting problem to task-irrelevant features and thus weaken the generalization ability.
Although several works also explored extracting task-relevant features from visual observations
∗Corresponding author
38th Conference on Neural Information Processing Systems (NeurIPS 2024).[6,39,45], little attention has been paid to the potential of leveraging these features in improving
generalization.
In this paper, we propose SMG (Separated Models for Generalization), a method that utilizes a
reconstruction-based auxiliary task to extract task-relevant representations from visual observations
and further strengthens the generalization ability of RL agents with the help of two consistency
losses. The core mechanisms behind SMG can be summarized in two parts: First, we introduce two
model branches to disentangle foreground and background representations underlying in the visual
observations. This separated model framework circumvents the risk of overfitting task-irrelevant
features inherent in a single model structure by prudently designing the reconstruction paths, allowing
our model to benefit from reconstruction loss without sacrificing generalization ability. Second, we
introduce two consistency losses to align the agent’s focus on the task-relevant features between raw
and augmented observations. This approach enables the foreground model to extract more robust
task-relevant representations, which substantially boost the generalization capability of RL agents
across diverse deployment scenarios.
We evaluate SMG’s effectiveness across a range of challenging visual-based RL tasks, including
five tasks from DMControl [ 36] and two more realistic robotic manipulation tasks [ 17]. We also
adapt different evaluation settings with random-color and video-background modifications. Through
comparisons with strong baseline methods, SMG demonstrates state-of-the-art performance in terms
of generalization, particularly showcasing superiority in video-background settings and robotic
manipulation tasks.
In summary, the main contributions of this paper are as follows:
•We present SMG, a novel approach that aims to enhance the zero-shot generalization ability of
RL agents. SMG is designed as a plug-and-play method that seamlessly integrates with existing
standard off-policy RL algorithms.
•SMG emphasizes the significance of task-relevant features in visual-based RL generalization and
successfully incorporates a reconstruction loss into this setting.
•Extensive experimental results demonstrate that SMG achieves state-of-the-art performance across
various visual-based RL tasks, particularly excelling in video-background settings and robotic
manipulation tasks.
2 Background
A Markov Decision Process (MDP) can be defined as a tuple (S,A, p, r, γ ), where Sis the state
space, Ais the action space, p:S × A × S → [0,1]is the state transition probability function,
r:S × A × S → Ris the reward function, and γ∈[0,1]is the discount factor. At each time
stept, the agent receives a state st∈ S, selects an action at∈ A , and then receives a reward
rt∈R. The agent’s goal is to learn a optimal policy π(at|st)that maximizes the expected return
E(st,at)∼ρπ[P∞
t=0γtrt], where ρπdefines the discounted state-action visitation of π.
Learning an optimal policy from visual observations poses a substantial challenge for RL agents
due to the inherent partial observability of the environment, a characteristic of POMDPs (Partially
Observed MDP). For one thing, at each timestep t, the visual observation otcan only capture partial
information about the true state st, as certain elements may be obscured in the image. For another,
the dimension of otis much higher than that of st, which makes it difficult to utilize otdirectly for
policy learning.
To infer the true underlying state from visual observations, existing methods usually employ a
parameterized encoder fto map a stacked frame sequence xt= (ot′, ot′+1, ..., o t)to a compact
low-dimensional latent vector zt, which is then used as input by policy and value function. However,
training the encoder solely to rely on the reward signal is demonstrated to sample inefficiency and
may lead to suboptimal performance [ 41]. To tackle this issue, various auxiliary tasks have been
proposed to enhance encoder training, with one common choice being to extract features from pixels
via image reconstruction loss [ 7,21,2]. By adding another parameterized image decoder g, the
reconstruction loss is defined by maximizing the likelihood function:
Lrecon=−Eot∼D[Ezt∼f(ot)[logg(ot|zt)]] (1)
2Fore Fore
Back BackRaw
ObservationForeground
Mask
BackgroundReinfor cement
Learning
Attribution
AugmentationReconstruction
Predicted
Background
GroundT ruth
BackgroundReconstruction Lossz+
z-
Background Loss(a) Learning Task-Relevant Representations With SMG
Augmented
ObservationFore
Raw
ObservationAttribution
Foreground Consistency Loss
Q-value Consistency LossForeQ
Strop Gradientq
q a
xz+
z+Fore (b) Improving GeneralizationWith SMG
Figure 1: Architecture of SMG. One-way arrows represent different types of data flows with the same
input. Two-way arrows represent different types of loss.
3 Approach
3.1 What Matters in a Reinforcement Learning Task?
Control
RelevantReward
Relevant
Figure 2: A robotic manipulation task explanation
for task-relevant parts in the environment.Learning to generalize is hard for RL agents,
particularly when utilizing an image reconstruc-
tion loss. While images are rich in information,
requiring the agent to reconstruct the entire input
observation can lead the autoencoder network
to overfit to features that are unrelated to the
task (e.g. colors, textures, and backgrounds). In
contrast, humans can accurately figure out what
matters visually when learning a new task. Even
when colors or backgrounds are changed, hu-
mans can still leverage the prior knowledge to
complete the task by focusing on task-relevant
features. Considering a robotic manipulation task where the agent must move the arm to the red
target (Figure 2), despite variations in background colors and textures across four test scenarios on
the left, only the arm’s orientation and the target position should be focused on this task. We aim
for our RL agent to learn an optimal policy that solely relies on these task-relevant features while
disregarding irrelevant regions.
Formally, we decompose the latent representation ztinto task-relevant part z+
tand task-irrelevant part
z−
t. These two representations are independent, as p(zt|ot) =p(z+
t|ot)p(z−
t|ot). The task-relevant
representation can be further subdivided into the "control-relevant" part, which is directly affected
by the agent’s actions (the arm); and the "reward-relevant" part, which is associated with the reward
signal (the arm and the target), both are crucial for policy learning.
3.2 Learning Task-Relevant Representations with Separated Models
3.2.1 Separated Models and Reconstruction
The representation learning objective of SMG is to maximize the mutual information I(ot;zt)be-
tween the observation otand the latent representation zt, and we further derive an image reconstruc-
tion objective incorporating the combination of task-relevant representation z+
tand task-irrelevant
representation z−
tas follows:
Lrecon=−I(ot;zt)≤ −Eot∼D[Ez+
t∼f+(ot),z−
t∼f−(ot)[logq(ot|z+
t, z−
t)]] (2)
Inspired by previous works [ 6,30] that explore how to mitigate background distractions, we im-
plement the reconstruction process by introducing the foreground encoder f+and the background
3encoder f−to extract different types of representations simultaneously, which forms a separated
models architecture. We also incorporate two decoders. The foreground decoder g+is employed
to reconstruct the foreground image o+
tand predict a mask Mtwith values between (0,1). The
background decoder g−is employed to reconstruct the background image o−
t. The full image otis
then reconstructed by o+
t,o−
tand the mask Mtviao′
t=o+
t⊙Mt+o−
t⊙(1−Mt)(⊙denotes
the Hadamard product), the reconstruction process is illustrated by the black arrows in Figure 1a.
Notably, the area where the agent is focusing can be visualized as o+
t⊙Mt, which we term the
"attribution" of the agent, formally defined as Attrib (ot).
3.2.2 Additional Loss Terms
Based on the separated models architecture, we define four additional loss terms to enhance the
model’s ability to distinguish between two types of representations. These include the mask ratio
loss and background reconstruction loss, which supervise the model’s pixel outputs; along with
the Q-value loss and empowerment loss, designed to consider the two properties of task-relevant
representation.
Mask ratio loss. To further refine the accuracy of mask prediction, we introduce a hyperparameter
ρ, termed the mask ratio, to constrain the proportion of the foreground part in the mask. As shown
in Equation 3, we regard Lmaskas an explicit form of an information bottleneck, as the percentage
ρdetermines the number of pixels of o+
tretained in the final reconstruction. This constraint forces
f+to prioritize the task-relevant parts of the observation during encoding. Empirical results in
Section 4.4 demonstrate that Lmaskfacilitates learning a more precise mask.
Lmask = (P
i,jMt(i, j)
image_size2−ρ)2(3)
Background reconstruction loss. Improving the precision of background prediction can conse-
quently enhance the foreground as well. Since the foreground and background are complementary,
providing supervision for the background prevents the foreground from learning all parts of the
observation. Therefore, we add additional supervision to the task-irrelevant representation z−
t. To
achieve this, we propose a new type of data augmentation called attribution augmentation tailored for
SMG, as illustrated in Figure 3b. This augmentation involves augmenting the raw observation otwith
its corresponding predicted mask Mtviaτattrib(ot) =ot⊙Mt+ϵ⊙(1−Mt), where ϵrepresents a
randomly sampled image. This simulates the video-background setting in deployment scenarios. We
define the background reconstruction loss Lbackas follows:
Lback=−Eot∼D[Ez−
t∼f−(τattrib(ot))[logg−(ϵ|z−
t)]] (4)
Q-value loss. Recall that the task-relevant representation z+
thas two key properties: reward-relevant
and control-relevant. Satisfying the former is relatively straightforward, as the representation z+
tis
used for policy learning. Through the Bellman residual update objective [ 35] outlined in Equation 5,
z+
twill progressively enhance its correlation with the reward signal.
Lq=Eτ∼D[(Q(z+
t, at)−(rt+γV(z+
t+1)))2] (5)
Empowerment loss. For the control-relevant property, we integrate an empowerment term
I(at, z+
t+1|z+
t)[28] based on conditional mutual information, which quantifies the relevance be-
tween the action and latent representation. Maximizing the empowerment term further leads to
maximizing a variational lower bound q(at|z+
t+1, z+
t)as shown in Equation 6. This objective neces-
sitates that atis predictable when two neighboring representations are known. We implement this
objective by incorporating an inverse dynamic model.
Laction=−I(at, z+
t+1|z+
t)≤ −Ep(at,z+
t+1,z+
t)[logq(at|z+
t+1, z+
t)] (6)
The whole separated models architecture is shown in figure 1a.
3.3 Generalize Task-Relevant Representations with Separated Models
Utilizing the separated models architecture, SMG can successfully extract task-relevant representa-
tions from raw observations. Nevertheless, the agent still lacks the ability to generalize effectively
4and may struggle to extract meaningful features from scenarios with transformed styles. To address
this issue, we treat the task-relevant representation under raw observations as the ground truth and
train SMG on more diversely augmented samples. Instead of directly optimizing the distance between
the representations under raw and augmented observations, we introduce two types of consistency
losses, considering both attribution and Q-values for more explainable supervision. By doing so,
the foreground model can learn to extract task-relevant representations across different deployment
scenarios.
Foreground consistency loss. To force the agent to focus on the same task-relevant area in trans-
formed scenarios, we train the foreground models to predict the attribution under augmented obser-
vation Attrib (τ(ot))with the supervision of the ground truth attribution Attrib (ot)(asAttrib (ot)
is relatively easier to converge to an accurate value, and we discuss it in detail in Appendix F). The
foreground consistency loss Lfore_consist is defined as Equation 7 (where sgmeans the stop-gradient
operation).
Lfore_consist =Eot∼D[|Attrib (τ(ot))−sg(Attrib (ot))|] (7)
Q-value consistency loss. In addition to the attributions, the Q-values obtained from transformed
observations also exhibit high variance [ 14], indicating instability in both the extracted representations
and the Q function. To address this, we regularize the Q-values under augmented observations to
be consistent with those under raw observations, as shown in Equation 8. This approach also
regularizes the agent to learn an accurate task-relevant representation, as the gradient of Lq_consist is
back-propagated to the latent space.
Lq_consist =Eot,at∼D[[Q(f+(τ(ot)), at)−sg(Q(f+(ot), at))]2] (8)
The above two consistency losses are illustrated in Figure 1b.
3.4 Overall Objective
Our proposed separated models architecture can seamlessly integrate as a plug-and-play module
into any existing off-policy RL algorithms. In this work, we leverage SAC [ 8] as the base algorithm.
Throughout the training phase, SMG iteratively performs exploration, critic update, policy update,
and auxiliary task update. We define the critic loss Lcriticas the sum of the Q-value loss Lqand the
Q-value consistency loss Lq_consist :
Lcritic=Lq+λq_consist Lq_consist (9)
Additionally, the auxiliary loss Lauxcomprises five previously mentioned loss terms:
Laux=λreconLrecon+λmaskLmask+λbackLback+λactionLaction+λfore_consist Lfore_consist (10)
Although Lauxcontains five loss terms, experimental results show that using average weights for the
first four terms and a smaller weight for the last term can achieve satisfactory performance. Detailed
information about hyperparameters tuning is provided in Appendix C.3. The detailed derivation of
Equation 2 and Equation 6 are provided in Appendix A.
4 Experimental Results
4.1 Setup
(a) Overlay
 (b) Attribution
Figure 3: Two types of data augmen-
tations using in SMG.We benchmark SMG against the following baselines: (1) SAC
[8], serving as the foundational algorithm for all other base-
lines; (2) DrQ [ 19], utilizing random shift augmentation; (3)
SODA [ 12], incorporating a consistency loss on latent repre-
sentations; (4) SVEA [ 14], focusing on stabilizing Q-values;
(5) SRM [ 15], proposing a novel data augmentation technique;
(6) SGQN [ 3], the previous SOTA method integrating saliency
maps into RL tasks. We reproduce the results using the same
settings reported in the original papers, with the exception of
setting the batch size to 64 for all methods. Additionally, all results are calculated by four random
seeds.
5Mask Backgr ound Attribution Reconstruction
Color -
Hard
Video-
Hard
Color -
Jitter
Training
ObservationEvaluation
Observation
Figure 4: Visualizing the reconstruction process of SMG in different tasks (from top to bottom:
walker-walk ,cheetah-run ,peg in box ).
To achieve stable performance across various evaluation settings, we train SMG using a hybrid data
augmentation approach for τ(ot), involving random overlay [ 14] and attribution augmentation for all
tasks (each time we randomly select a type of data augmentation, as shown in Figure 3). The network
design for SMG and more detailed experiment settings are reported in Appendix C.
4.2 DMControl Results
We first conduct experiments on five selected tasks from DMControl [ 36] and adopt the same
evaluation setting as DMControl Generalization Benchmark [ 12] (DMC-GB) used, which contains
random-colors and video-background modifications across four different levels: color-easy ,color-
hard,video-easy andvideo-hard . Figure 5 shows an example in walker-walk task. We train all
methods for 500k steps (except walker-stand for 250k, as it converges faster) on the training setting
and evaluate the zero-shot generalization performance on the four evaluation settings.
(a)Training
 (b)Color-easy
 (c)Color-hard
 (d)Video-easy
 (e)Video-hard
Figure 5: Example of training and testing observation for DMC-GB ( walker-walk ). (a) is the training
observation. (b-c) indicates different degrees of color change; (d-e) replaces the background with
random videos, with (e) additionally removing the floor and the walker’s shadow.
To provide a clear explanation of how SMG reconstructs images, we present the image outputs of
walker-walk andcheetah-run after 500k training steps of training in the first two rows of Figure 4. The
last four columns illustrate the model outputs necessary for reconstructing the evaluation observations.
The predicted attribution (the fifth column) highlights the extracted task-relevant area, which shows
SMG accurately depicts the attribution of the input observation while omitting the task-irrelevant
elements such as the skybox, the floor, and even the random color variation. This indicates that the
task-relevant representation z+
tcontains only the information required to accomplish the task, which
is crucial for generalization. Note that we aim to maintain the similarity between Attrib (τ(ot))and
Attrib (ot), even in random-color settings. As shown by the first row of color-hard setting, SMG
predicts a yellow attribution despite the input evaluation observation being orange.
6Table 1: DMControl results in video-background settings. We evaluate each seed five times and
calculate the mean value. Then, we calculate the mean and standard deviation with four random
seeds. Red indicates the best and blue indicates the second-best. ∆ = improvement of SMG over the
second best.
DMControl SAC DrQ SODA SVEA SRM SGQN SMG ∆
(video-easy ) (overlay) (ours)
cartpole, 175 606 617 718 645 717 839 +121swingup ±23 ±31 ±76 ±101 ±108 ±77 ±16 17%
finger, 171 511 615 817 642 860 952 +92spin ±37 ±192 ±56 ±94 ±101 ±82 ±48 11%
walker, 484 908 924 928 947 949 961 +12stand ±185 ±38 ±28 ±50 ±14 ±10 ±19 1%
walker, 325 720 518 691 662 830 904 +74walk ±26 ±69 ±92 ±120 ±75 ±58 ±34 9%
cheetah, 179 241 215 278 253 308 348 +40run ±65 ±25 ±15 ±51 ±27 ±34 ±28 13%
DMControl SAC DrQ SODA SVEA SRM SGQN SMG ∆
(video-hard ) (overlay) (ours)
cartpole, 156 168 346 510 254 599 764 +165swingup ±16 ±35 ±59 ±177 ±69 ±112 ±32 28%
finger, 22 54 310 353 131 710 910 +200spin ±10 ±44 ±72 ±71 ±89 ±159 ±61 28%
walker, 212 278 406 814 558 870 955 +85stand ±41 ±79 ±68 ±57 ±139 ±78 ±9 10%
walker, 132 110 175 348 165 634 814 +180walk ±26 ±33 ±31 ±80 ±99 ±136 ±51 28%
cheetah, 56 38 118 105 87 135 303 +168run ±30 ±26 ±40 ±13 ±24 ±44 ±46 124%
Table 1 reports the generalization performance of SMG and all baseline methods with the video-
background modification, which is the most challenging evaluation setting. The table shows that SMG
outperforms all baselines in all ten tasks. Particularly impressive is SMG’s superiority in video-hard ;
when removing the floor and the walker’s shadow, the performance of all baseline methods drops
significantly. However, SMG is less affected by this substantial distribution shift and maintains a
stable performance across all tasks, with episode returns boosted more than 160 over the second-best
in four out of five tasks (as walker-stand is a much easier task to train), showcasing its exceptional
generalization capability.
4.3 Robotic Manipulation Results
To further validate SMG’s applicability to more realistic tasks, we conduct experiments on two
goal-reaching robotic manipulation tasks [ 17], including peg-in-box andreach , and following similar
generalization settings used in [ 3]. As illustrated in Figure 6, there are five different testing settings
with different colors and textures for the background and the table. We train all methods for 250k
steps and use random convolutions [ 22] as the data augmentation for baseline methods, as it aligns
better with the testing scenarios. SMG continued to use hybrid augmentation as previously mentioned.
(a) Training
 (b) Test 1
 (c) Test 2
 (d) Test 3
 (e) Test 4
 (f) Test 5
Figure 6: Examples of training and testing observation for the robotic environment ( Peg-in-box ). (b-f)
indicates five different evaluation settings varying in background colors and table textures.
7Table 2 presents the evaluation results for peg-in-box , a task where a robot must insert a peg tied to
its arm into a box. SMG achieves dominant performance across all evaluation settings, boosting an
average improvement of 102% over the second-best method. Impressively, SMG exhibits remarkable
stability across the six evaluation settings, with a standard deviation of only 7, while baseline methods
all fail in some evaluation settings. This underscores SMG’s generalization capability. These results
also highlight SMG’s superiority in realistic tasks, as its reconstruction-based auxiliary loss can
capture more detailed features in the image, which is hard for methods that mainly rely on data
augmentation techniques.
Table 2: Robotic manipulation results in peg-in-box . Red indicates the best and blue indicates the
second-best. ∆ = improvement of SMG over the second best. The last row reports the average
performance over all six evaluation settings.
Robtic-Manipulation SAC DrQ SODA SVEA SRM SGQN SMG ∆
(peg-in-box ) (overlay) (ours)
train 31 233 232 212 227 232 237 +4
±73 ±14 ±20 ±39 ±15 ±19 ±16 2%
test1 −33 63 34 −18 55 −67 237 +174
±25 ±99 ±143 ±59 ±98 ±28 ±18 276%
test2 −42−40 76 85 11 194 219 +25
±31 ±77 ±119 ±68 ±54 ±51 ±37 13%
test3 −8 15 66 67 147 198 237 +39
±46 ±107 ±147 ±73 ±114 ±34 ±15 20%
test4 −42 72 80 109 112 −51 237 +125
±51 ±28 ±122 ±98 ±123 ±46 ±17 112%
test5 −52−54−104 −26 143 −108 237 +94
±31 ±30 ±51 ±102 ±122 ±24 ±15 66%
Average −24 48 64 72 116 66 234 +118
±28 ±95 ±98 ±80 ±69 ±143 ±7 102%
4.4 Ablation Study
In order to explore the role played by different loss terms in SMG, we conduct an ablation study
in DMControl tasks. Table 3 presents the performance drop without each loss term compared
to the full model in the video-hard setting. The results indicate that every loss term contributes
significantly to the final performance. Notably, Lq_consist exhibits the most substantial impact on
performance, highlighting the importance of maintaining stable Q-value estimation in generalization
tasks. Moreover, the performance drop without LbackorLmaskis around 20% to30%, underlining
the importance of attribution augmentation in enhancing SMG’s generalization in video-background
settings, as the two loss terms directly affect the quality of the attribution augmentation. Additionally,
Laction aids in learning a better task-relevant representation. As for Lfore_consist , it also contributes to
improving generalization ability, particularly in relatively challenging tasks where the performance
improvement ranges from 15% to25%.
Table 3: Ablation study in DMControl ( video-hard ). Red indicates the performance drop of the
ablated model compared to the full model.
DMControl SMG w/o Lfore_consis w/oLaction w/oLback w/oLmask w/oLq_consis
(video hard) (full)
cartpole, 764±32 720 ±100 631 ±92 763 ±44 590 ±84 302 ±30swingup −44 (6%) −133 (17%) −1 (0%) −174 (23%) −462 (60%)
finger, 910±61 695 ±103 609 ±352 412 ±170 731 ±130 509 ±83spin −215 (24%) −301 (33%) −498 (55%) −179 (20%) −401 (44%)
walker, 955±9 885 ±45 855 ±96 775 ±144 836 ±127 432 ±210stand −70 (7%) −100 (10%) −180 (19%) −119 (12%) −523 (55%)
walker, 814±51 642 ±63 670 ±22 657 ±103 416 ±98 282 ±34walk −172 (21%) −144 (18%) −157 (19%) −398 (49%) −532 (65%)
cheetah, 303±46 247 ±40 212 ±52 233 ±110 162 ±100 130 ±37run −56 (18%) −91 (30%) −70 (23%) −141 (47%) −173 (57%)
Average −15% −22% −23% −30% −56%
8To better grasp the significance of LmaskandLbackin SMG, we showcase the predicted masks and their
corresponding attribution augmentations in Figure 7. When Lmaskis removed, the model generates an
almost white mask, indicating that the foreground model overly captures irrelevant features without
the constraint of mask ratio loss. Consequently, only a few parts are replaced by a random image in
the attribution augmentation. In contrast, removing Lbackcauses the background model to learn all
features excessively, resulting in attribution augmentation images devoid of task-relevant information.
The ablation results underscore that both LmaskandLbackare vital in crafting meaningful attribution
augmentations, which in turn are utilized by the two consistency losses and impact the representation
learning process. We conduct more experiments in Appendix E to reveal that Lmaskserves as a guiding
factor in mask learning and SMG is not significantly influenced by variations in the hyperparameter
mask ratio ρ.
(a) SMG
 (b) without Lmask
 (c) without Lback
Figure 7: Predicted masks and corresponding attribution augmentations. (a) is the full model, (b) and
(c) are the models without LmaskandLmaskrespectively.
5 Related Work
Improving generalization ability of RL agents has drawn increasing attention in recent years.
Researchers primarily explore two aspects: using data augmentation techniques to inject useful priors
when training [ 20,15,16,22,14,32,38] and employing various auxiliary tasks to guide the learning
process [ 13,3,1,42,40,12]. For example, Hansen and Wang [12] regularize the representations
between observations with its augmented view through an auxiliary prediction task; Hansen et al. [14]
stabilize Q-values via delicately design the data augmentation process; Bertoin et al. [3]introduce
saliency maps to visualize the focus of Q-functions; Wang et al. [40] extract the foreground objects
by employing a segment anything model. Orthogonal to existing works, we argue that focusing the
RL agent on task-relevant features across diverse deployment scenarios can substantially boost the
generalization capability. We propose a novel reconstruction-based auxiliary task to achieve this goal.
Decision-making based on task-relevant features can substantially enhance the performance
and robustness of RL agents [ 4,45,43,29]. Bharadhwaj et al. [4]use an empowerment term to
distill control-relevant features from the task; Zhu et al. [45] bolster the resilience of RL agents
by regularizing the posterior predictability; Zhang et al. [43] learns compact representations by
bisimulation metrics. Additionally, methods utilizing separated model architectures to extract different
types of features simultaneously have been proposed [ 6,39,30,25,37]. For instance, Wang et al.
[39] decompose the latent state into four parts based on their interaction with actions and rewards;
Pan et al. [30] leverage both controllable and non-controllable states in policy learning; Wan et al.
[37] apply task-relevant features to imitation learning. Our work also employs separated models.
However, we prudently design this architecture in a model-free setting and propose novel loss terms
to enhance the accuracy of image predictions.
A detailed comparison between SMG and other methods is provided in Appendix F.2.
6 Conclusion and Future Work
In this paper, we propose SMG for visual-based RL generalization and show its superiority in sample
efficiency, stability, and generalization through extensive experiments. The success of SMG can
be attributed to two key factors: (i) a delicately designed reconstruction-based auxiliary task with
separated models architecture, which enables the RL agent to extract task-relevant and task-irrelevant
representations from visual observations simultaneously; (ii) two consistency losses to further guide
the RL agent’s focus under deployment scenarios. We believe that the proposed method can be
applied to a wide range of tasks.
9SMG is particularly well-suited for robotic manipulation tasks in realistic scenarios. However, when
the observation contains too many task-relevant objects, the complexity of accurately learning a
mask increases. This can lead to a decline in SMG’s performance. For instance, in an autonomous
navigation task, the presence of numerous pedestrians in the view makes it challenging to accurately
mask all of them.
The future work includes exploring more advanced backbones for task-relevant feature extraction,
taking into account the generalization on non-static camera viewpoints and the test of SMG on
realistic tasks to verify its generalization ability in real applications.
Acknowledgments and Disclosure of Funding
This work is supported by the National Key Research and Development Program of China (No.
2020YFA0711402).
References
[1]Rishabh Agarwal, Marlos C Machado, Pablo Samuel Castro, and Marc G Bellemare. Contrastive
behavioral similarity embeddings for generalization in reinforcement learning. arXiv preprint
arXiv:2101.05265 , 2021.
[2]Brandon Amos, Samuel Stanton, Denis Yarats, and Andrew Gordon Wilson. On the model-based
stochastic value gradient for continuous reinforcement learning. In Learning for Dynamics and
Control , pages 6–20. PMLR, 2021.
[3]David Bertoin, Adil Zouitine, Mehdi Zouitine, and Emmanuel Rachelson. Look where you
look! saliency-guided q-networks for generalization in visual reinforcement learning. Advances
in Neural Information Processing Systems , 35:30693–30706, 2022.
[4]Homanga Bharadhwaj, Mohammad Babaeizadeh, Dumitru Erhan, and Sergey Levine. In-
formation prioritization through empowerment in visual model-based rl. arXiv preprint
arXiv:2204.08585 , 2022.
[5]Karl Cobbe, Oleg Klimov, Chris Hesse, Taehoon Kim, and John Schulman. Quantifying
generalization in reinforcement learning. In International conference on machine learning ,
pages 1282–1289. PMLR, 2019.
[6]Xiang Fu, Ge Yang, Pulkit Agrawal, and Tommi Jaakkola. Learning task informed abstractions.
InInternational Conference on Machine Learning , pages 3480–3491. PMLR, 2021.
[7] David Ha and Jürgen Schmidhuber. World models. arXiv preprint arXiv:1803.10122 , 2018.
[8]Tuomas Haarnoja, Aurick Zhou, Pieter Abbeel, and Sergey Levine. Soft actor-critic: Off-
policy maximum entropy deep reinforcement learning with a stochastic actor. In International
conference on machine learning , pages 1861–1870. PMLR, 2018.
[9]Tuomas Haarnoja, Ben Moran, Guy Lever, Sandy H Huang, Dhruva Tirumala, Markus
Wulfmeier, Jan Humplik, Saran Tunyasuvunakool, Noah Y Siegel, Roland Hafner, et al. Learn-
ing agile soccer skills for a bipedal robot with deep reinforcement learning. arXiv preprint
arXiv:2304.13653 , 2023.
[10] Danijar Hafner, Timothy Lillicrap, Jimmy Ba, and Mohammad Norouzi. Dream to control:
Learning behaviors by latent imagination. arXiv preprint arXiv:1912.01603 , 2019.
[11] Danijar Hafner, Timothy Lillicrap, Mohammad Norouzi, and Jimmy Ba. Mastering atari with
discrete world models. arXiv preprint arXiv:2010.02193 , 2020.
[12] Nicklas Hansen and Xiaolong Wang. Generalization in reinforcement learning by soft data
augmentation. In 2021 IEEE International Conference on Robotics and Automation (ICRA) ,
pages 13611–13617. IEEE, 2021.
10[13] Nicklas Hansen, Rishabh Jangir, Yu Sun, Guillem Alenyà, Pieter Abbeel, Alexei A Efros, Lerrel
Pinto, and Xiaolong Wang. Self-supervised policy adaptation during deployment. arXiv preprint
arXiv:2007.04309 , 2020.
[14] Nicklas Hansen, Hao Su, and Xiaolong Wang. Stabilizing deep q-learning with convnets
and vision transformers under data augmentation. Advances in neural information processing
systems , 34:3680–3693, 2021.
[15] Yangru Huang, Peixi Peng, Yifan Zhao, Guangyao Chen, and Yonghong Tian. Spectrum
random masking for generalization in image-based reinforcement learning. Advances in Neural
Information Processing Systems , 35:20393–20406, 2022.
[16] Stephen James, Paul Wohlhart, Mrinal Kalakrishnan, Dmitry Kalashnikov, Alex Irpan, Julian
Ibarz, Sergey Levine, Raia Hadsell, and Konstantinos Bousmalis. Sim-to-real via sim-to-
sim: Data-efficient robotic grasping via randomized-to-canonical adaptation networks. In
Proceedings of the IEEE/CVF conference on computer vision and pattern recognition , pages
12627–12637, 2019.
[17] Rishabh Jangir, Nicklas Hansen, Sambaran Ghosal, Mohit Jain, and Xiaolong Wang. Look
closer: Bridging egocentric and third-person views with transformers for robotic manipulation.
IEEE Robotics and Automation Letters , 7(2):3046–3053, 2022.
[18] Lukasz Kaiser, Mohammad Babaeizadeh, Piotr Milos, Blazej Osinski, Roy H Campbell, Konrad
Czechowski, Dumitru Erhan, Chelsea Finn, Piotr Kozakowski, Sergey Levine, et al. Model-
based reinforcement learning for atari. arXiv preprint arXiv:1903.00374 , 2019.
[19] Ilya Kostrikov, Denis Yarats, and Rob Fergus. Image augmentation is all you need: Regularizing
deep reinforcement learning from pixels. arXiv preprint arXiv:2004.13649 , 2020.
[20] Misha Laskin, Kimin Lee, Adam Stooke, Lerrel Pinto, Pieter Abbeel, and Aravind Srinivas.
Reinforcement learning with augmented data. Advances in neural information processing
systems , 33:19884–19895, 2020.
[21] Alex X Lee, Anusha Nagabandi, Pieter Abbeel, and Sergey Levine. Stochastic latent actor-critic:
Deep reinforcement learning with a latent variable model. Advances in Neural Information
Processing Systems , 33:741–752, 2020.
[22] Kimin Lee, Kibok Lee, Jinwoo Shin, and Honglak Lee. Network randomization: A simple
technique for generalization in deep reinforcement learning. arXiv preprint arXiv:1910.05396 ,
2019.
[23] Sergey Levine, Chelsea Finn, Trevor Darrell, and Pieter Abbeel. End-to-end training of deep
visuomotor policies. Journal of Machine Learning Research , 17(39):1–40, 2016.
[24] Lanqing Li, Hai Zhang, Xinyu Zhang, Shatong Zhu, Junqiao Zhao, and Pheng-Ann Heng.
Towards an information theoretic framework of context-based offline meta-reinforcement
learning. arXiv preprint arXiv:2402.02429 , 2024.
[25] Yuren Liu, Biwei Huang, Zhengmao Zhu, Honglong Tian, Mingming Gong, Yang Yu, and Kun
Zhang. Learning world models with identifiable factorization. Advances in Neural Information
Processing Systems , 36, 2024.
[26] Piotr Mirowski, Razvan Pascanu, Fabio Viola, Hubert Soyer, Andrew J Ballard, Andrea Banino,
Misha Denil, Ross Goroshin, Laurent Sifre, Koray Kavukcuoglu, et al. Learning to navigate in
complex environments. arXiv preprint arXiv:1611.03673 , 2016.
[27] V olodymyr Mnih, Koray Kavukcuoglu, David Silver, Alex Graves, Ioannis Antonoglou, Daan
Wierstra, and Martin Riedmiller. Playing atari with deep reinforcement learning. arXiv preprint
arXiv:1312.5602 , 2013.
[28] Shakir Mohamed and Danilo Jimenez Rezende. Variational information maximisation for
intrinsically motivated reinforcement learning. Advances in neural information processing
systems , 28, 2015.
11[29] Tung D Nguyen, Rui Shu, Tuan Pham, Hung Bui, and Stefano Ermon. Temporal predictive
coding for model-based planning in latent space. In International Conference on Machine
Learning , pages 8130–8139. PMLR, 2021.
[30] Minting Pan, Xiangming Zhu, Yunbo Wang, and Xiaokang Yang. Iso-dream: Isolating and
leveraging noncontrollable visual dynamics in world models. Advances in neural information
processing systems , 35:23178–23191, 2022.
[31] Ben Poole, Sherjil Ozair, Aaron Van Den Oord, Alex Alemi, and George Tucker. On variational
bounds of mutual information. In International Conference on Machine Learning , pages
5171–5180. PMLR, 2019.
[32] Roberta Raileanu, Maxwell Goldstein, Denis Yarats, Ilya Kostrikov, and Rob Fergus. Automatic
data augmentation for generalization in reinforcement learning. Advances in Neural Information
Processing Systems , 34:5402–5415, 2021.
[33] Connor Shorten and Taghi M Khoshgoftaar. A survey on image data augmentation for deep
learning. Journal of big data , 6(1):1–48, 2019.
[34] Xingyou Song, Yiding Jiang, Stephen Tu, Yilun Du, and Behnam Neyshabur. Observational
overfitting in reinforcement learning. arXiv preprint arXiv:1912.02975 , 2019.
[35] Richard S Sutton. Learning to predict by the methods of temporal differences. Machine learning ,
3:9–44, 1988.
[36] Yuval Tassa, Yotam Doron, Alistair Muldal, Tom Erez, Yazhe Li, Diego de Las Casas, David
Budden, Abbas Abdolmaleki, Josh Merel, Andrew Lefrancq, et al. Deepmind control suite.
arXiv preprint arXiv:1801.00690 , 2018.
[37] Shenghua Wan, Yucen Wang, Minghao Shao, Ruying Chen, and De-Chuan Zhan. Semail:
eliminating distractors in visual imitation via separated models. In International Conference on
Machine Learning , pages 35426–35443. PMLR, 2023.
[38] Kaixin Wang, Bingyi Kang, Jie Shao, and Jiashi Feng. Improving generalization in reinforce-
ment learning with mixture regularization. Advances in Neural Information Processing Systems ,
33:7968–7978, 2020.
[39] Tongzhou Wang, Simon S Du, Antonio Torralba, Phillip Isola, Amy Zhang, and Yuandong
Tian. Denoised mdps: Learning world models better than the world itself. arXiv preprint
arXiv:2206.15477 , 2022.
[40] Ziyu Wang, Yanjie Ze, Yifei Sun, Zhecheng Yuan, and Huazhe Xu. Generalizable visual
reinforcement learning with segment anything model. arXiv preprint arXiv:2312.17116 , 2023.
[41] Denis Yarats, Amy Zhang, Ilya Kostrikov, Brandon Amos, Joelle Pineau, and Rob Fergus.
Improving sample efficiency in model-free reinforcement learning from images. In Proceedings
of the AAAI Conference on Artificial Intelligence , volume 35, pages 10674–10681, 2021.
[42] Zhecheng Yuan, Guozheng Ma, Yao Mu, Bo Xia, Bo Yuan, Xueqian Wang, Ping Luo, and
Huazhe Xu. Don’t touch what matters: Task-aware lipschitz data augmentation for visual
reinforcement learning. arXiv preprint arXiv:2202.09982 , 2022.
[43] Amy Zhang, Rowan McAllister, Roberto Calandra, Yarin Gal, and Sergey Levine. Learning
invariant representations for reinforcement learning without reconstruction. arXiv preprint
arXiv:2006.10742 , 2020.
[44] Chiyuan Zhang, Oriol Vinyals, Remi Munos, and Samy Bengio. A study on overfitting in deep
reinforcement learning. arXiv preprint arXiv:1804.06893 , 2018.
[45] Chuning Zhu, Max Simchowitz, Siri Gadipudi, and Abhishek Gupta. Repo: Resilient model-
based reinforcement learning by regularizing posterior predictability. Advances in Neural
Information Processing Systems , 36, 2024.
[46] Yuke Zhu, Roozbeh Mottaghi, Eric Kolve, Joseph J Lim, Abhinav Gupta, Li Fei-Fei, and Ali
Farhadi. Target-driven visual navigation in indoor scenes using deep reinforcement learning.
In2017 IEEE international conference on robotics and automation (ICRA) , pages 3357–3364.
IEEE, 2017.
12A Derivations
We formulate the representation learning objective as a variational lower bound of the mutual
information [ 31,24] between the observation otand the representation zt. By considering the
independence between the task-relevant and task-irrelevant representations, we can decompose the
mutual information as:
I(ot;zt) =Ep(ot,zt)[logp(ot|zt)−logp(ot)]
≥Ep(ot,zt)[logp(ot|zt)]
≥Ep(ot,zt)[logp(ot|zt)]−Ep(zt)[DKL(p(ot|zt)||q(ot|zt))]
=Ep(zt,ot)[logq(ot|zt)]
=Eq(zt|ot)p(ot)[logq(ot|zt)]
=Eq(z+
t|ot)q(z−
t|ot)p(ot)[logq(ot|z+
t, z−
t)]
=Eot∼D[Ez+
t∼f+(ot),z−
t∼f−(ot)[logq(ot|z+
t, z−
t)]](11)
We use the empowerment term I(at, z+
t+1|z+
t)introduced in [ 28] to quantify the information con-
tained in the representation z+
t+1about the selected action at, in goal of enhance the control-relevant
property of the task-relevant representation z+
t. We derive the variational lower bound of the empow-
erment term as:
I(at, z+
t+1|z+
t) =Ep(at,z+
t+1,z+
t)[logp(at|z+
t+1, z+
t)
p(at|z+
t)]
=Ep(at,z+
t+1,z+
t)[logq(at|z+
t+1, z+
t)
p(at|z+
t)+ logp(at|z+
t+1, z+
t)
q(at|z+
t+1, z+
t)]
≥Ep(at,z+
t+1,z+
t)[logq(at|z+
t+1, z+
t)
p(at|z+
t)]
=Ep(at,z+
t+1,z+
t)[logq(at|z+
t+1, z+
t)]−Z
p(z+
t)p(at|z+
t)p(z+
t+1|z+
t, at) logp(at|z+
t)
=Ep(at,z+
t+1,z+
t)[logq(at|z+
t+1, z+
t)] +Ep(z+
t)p(z+
t+1|z+
t,at)[H(p(at|z+
t))]
≥Ep(at,z+
t+1,z+
t)[logq(at|z+
t+1, z+
t)]
(12)
In practice, we integrate a parameterized inverse dynamic model to predict the action atbased on
the two continuous representations z+
tandz+
t+1. We employ the Mean Squared Error (MSE) loss to
guide the training of the inverse dynamic model.
13B Pseudocode
Algorithm 1 SAC with Separated Models
Denote network parameters θ, mask ratio ρ, batch size N, replay buffer B
Denote policy network πθ, foreground encoder f+
θ, background encoder f−
θforeach iteration time step do
a, o′, r∼πθ(f+
θ(o)),P(o, a),R(o, a)
B ← B ∪ (o, a, r, o′)
foreach update time step do
{oi, ai, ri, o′
i}i∈[1,N]∼ B
o+
i, mask i∼f+
θ(oi)
o−
i∼f−
θ(oi)
oaug
i←o+
i∗mask i+ϵ∗(1−mask i)//ϵis sampled from image dataset
Lrecon←L(oi, o+
i∗mask i+o−
i∗(1−mask i))// Equation 2
Lfore _consist ←L(o+
i, f+
θ(oaug
i))// Equation 7
Lback←L(ϵ, f−
θ(oaug
i))// Equation 4
Laction←L(oi, o′
i, a)// Equation 6
Lmask←L(mask i, ρ)// Equation 3
Lq_consist ←L(Qθ(f+
θ(oi), a), Qθ(f+
θ(oaug
i), a))// Equation 8
Laux←Lrecon +Lfore _consist +Lback+Laction +Lmask // auxiliary loss
Lcritic←Lq+Lq_consist // critic loss
update θwithLactor, Lcritic, Laux
end for
end for
Lq, Lactorare defined by SAC
C More Experiment Details
C.1 Computing Hardware
We conduct all experiments on a single machine equipped with an AMD EPYC 7B12 CPU (64 cores),
512GB RAM, and eight NVIDIA GeForce RTX 3090 GPUs (24 GB memory). We report the training
wall time of different methods on DMControl tasks in Table 4.
Table 4: Wall time comparison of different methods on DMControl tasks.
Algorithm Wall Time (DMControl, 500k)
SAC ∼10 hours
DrQ ∼13 hours
SODA ∼12 hours
SVEA ∼12 hours
SRM ∼8 hours
SGQN ∼12 hours
SMG (ours) ∼22 hours
C.2 Network Architecture
We reproduce all baseline methods with the official code of DMC-GB ( https://github.com/
nicklashansen/dmcontrol-generalization-benchmark ) published by Nicklas Hansen, and
we build our model on top of the SAC implementation. We use the same encoder and decoder
architecture as the baseline methods to ensure a fair comparison.
14Figure 8 provides a detailed view of the encoder and decoder architecture. The input observation
shape is 9×84×84, achieved by stacking three continuous frames. The encoder network contains 12
stacked convolutional layers, each with 32 filters of size 3×3. The stride is set to 1 for the first layer
and 2 for the subsequent ones, facilitating down-sampling of the visual input. Then, after a flatten
operation and a fully connected layer, an embedding of size embedding_size ×1is obtained. Before
decoding, SMG first expands the embedding into triples of the same size, aiming to decode three
stacked input images separately. These three embeddings are then individually fed into the same
decoder network, which consists of two groups of convolutional and upsampling layers to reconstruct
the observation. The foreground decoder outputs the reconstructed foreground and a mask, while the
background decoder outputs only the reconstructed background. For the inverse dynamic model, we
adopt the architecture from [13], which utilizes multi-layer perceptions to project the concatenation
of two embeddings into the action space.
The number of parameters in SMG is approximately double that of the baseline methods due to the
use of two model branches. However, the performance improvement is primarily due to the novel
model architecture rather than the increase in the number of parameters, as we use encoder and
decoder networks similar to those in the baseline methods.
Conv2D 3x3
Conv2D 3x3 stride 1ReLU
Flatten+Linear
x11
Embedding
Embedding Embedding EmbeddingLinear+ReLU
Linear+Reshape
Conv2D 3x3 padding 1
Upsample x2+ReLU
Conv2D 3x3 padding 1 + Sigmoid
x2
Figure 8: SMG network architecture (foreground encoder + foreground decoder).
C.3 Hyperparameters
We report the hyperparameters used in our experiments in Table 5. We use the same hyperparameters
for all seven tasks, except the action repeat and the mask ratio ρ. The Lauxin SMG comprises five loss
terms, which seems challenging to balance the weights. However, through experiments, we found
that setting average weights for Lrecon, Lmask, Laction, Lbackis sufficient to achieve good performance
(except the λbackis set to 2 since the background model should train to fit more complex images).
Regarding the Lfore, a too-large weight would lead to the model overfitting the inaccurate attribution
predictions in the early stage (as we use the model output under raw observation as ground truth), so
we set it to 0.1.
D More Experiment Results
D.1 Training Curves
We present the training curves for all seven tasks in Figure 11, including four evaluation settings of
DMControl and Robotic Manipulation tasks. As depicted in the figure, SMG demonstrates notably
faster convergence and higher asymptotic performance across nearly all training and evaluation
settings, showcasing the effectiveness of the reconstruction-based auxiliary task in enhancing sample
efficiency. SMG exhibits superiority, particularly in the video-hard setting of DMControl tasks, where
the performance of other methods drops evidently when random videos replace the background.
Additionally, the figure underscores the considerable challenge posed by Robotic Manipulation tasks,
with only SMG and SGQN successfully achieving zero-shot generalization in evaluation settings.
15Table 5: Hyperparameters.
Hyperparameter Value
Observation size 84×84
Frame stack 3
Discount factor γ 0.99
Batch size 64
Embedding size 256
Action repeat 8 (cartpole-swingup ), 4 ( walker-walk ,walker-stand ,cheetah-run )
2 (finger-spin ), 1 ( reach ,peg-in-box )
Train steps 250k ( walker-stand ,reach ,peg-in-box ), 500k (others)
Replay buffer size 500k
Actor optimizer Adam ( lr= 1e−3, β1= 0.9, β2= 0.999)
Critic optimizer Adam ( lr= 1e−3, β1= 0.9, β2= 0.999)
Auxiliary task optimizer Adam ( lr= 1e−3, β1= 0.9, β2= 0.999)
Auxiliary task update frequency 2
Reconstruction loss weight λrecon 1
Background reconstruction loss weight λback 2
Mask ratio loss weight λmask 1
Empowerment loss weight λaction 1
Q-value consistency loss weight λq_consist 0.5
Foreground consistency loss weight λfore_consist 0.1
Mask ratio ρ 0.12 ( reach ,peg-in-box ), 0.06 ( walker-walk ,walker-stand ,cheetah-run )
0.04 ( cartpole-swingup ,finger-spin )
Moreover, SMG shows more stable performance across different evaluation settings, which is crucial
for real-world applications.
D.2 More Table Results
Table 6: DMControl results in random-color settings.
DMControl-GB SAC DrQ SODA SVEA SRM SGQN SMG ∆
(color-easy ) (overlay) (SAC) (ours)
cartpole, 178 845 720 809 856 764 854 −2swingup ±24 ±29 ±109 ±40 ±14 ±84 ±13 0%
finger, 296 827 761 919 916 852 957 +38spin ±22 ±174 ±87 ±43 ±34 ±126 ±52 4%
walker, 592 827 929 957 953 906 965 +8stand ±274 ±97 ±23 ±4 ±5 ±50 ±13 1%
walker, 430 669 539 705 632 805 915 +110walk ±33 ±68 ±51 ±124 ±93 ±47 ±36 14%
cheetah, 253 237 219 289 272 312 346 +34run ±27 ±74 ±46 ±43 ±24 ±34 ±27 11%
DMControl-GB SAC DrQ SODA SVEA SRM SGQN SMG ∆
(color-hard ) (overlay) (SAC) (ours)
cartpole, 184 717 585 752 752 636 726 −26swingup ±26 ±133 ±66 ±86 ±103 ±110 ±62 3%
finger, 271 655 663 868 834 700 841 −27spin ±23 ±214 ±106 ±74 ±90 ±219 ±113 3%
walker, 526 769 719 799 807 788 878 +71stand ±259 ±182 ±138 ±118 ±128 ±114 ±70 9%
walker, 379 456 396 571 483 632 739 +107walk ±37 ±192 ±78 ±134 ±123 ±176 ±31 17%
cheetah, 208 147 199 238 203 210 299 +61run ±54 ±80 ±38 ±69 ±30 ±18 ±22 26%
Table 6 shows the generalization performance of SMG and all baseline methods with the random-
color modification in DMControl tasks. SMG outperforms all baselines in 7 out of 10 tasks, with the
performance gap within 5% in the other three tasks. The results indicate that SMG not only performs
well in video-background settings but also exhibits superior generalization capability in random-color
settings. This is achieved because overlaying the observation with random images can also introduce
color shift.
16Table 7: Training and average performance in DMControl.
DMControl-GB SAC DrQ SODA SVEA SRM SGQN SMG ∆
(training) (overlay) (SAC) (ours)
cartpole, 186 872 687 809 871 805 858 −14swingup ±6 ±10 ±175 ±42 ±10 ±58 ±9 2%
finger, 306 884 801 923 925 922 961 +36spin ±12 ±115 ±65 ±36 ±35 ±61 ±44 4%
walker, 630 955 881 959 959 952 964 +5stand ±224 ±18 ±51 ±5 ±6 ±17 ±18 1%
walker, 422 827 581 753 715 876 924 +48walk ±42 ±61 ±129 ±143 ±74 ±45 ±31 5%
cheetah, 311 333 225 300 298 343 357 +14run ±36 ±43 ±39 ±37 ±30 ±37 ±25 4%
DMControl-GB SAC DrQ SODA SVEA SRM SGQN SMG ∆
(average) (overlay) (SAC) (ours)
cartpole, 176 642 591 720 676 704 808 +88swingup ±11 ±255 ±132 ±110 ±226 ±77 ±53 12%
finger, 213 586 630 776 690 809 924 +115spin ±107 ±297 ±173 ±215 ±297 ±88 ±45 14%
walker, 489 747 772 891 845 893 945 +52stand ±147 ±243 ±198 ±70 ±154 ±61 ±33 6%
walker, 338 556 442 614 531 755 859 +104walk ±109 ±254 ±147 ±146 ±199 ±103 ±72 14%
cheetah, 201 199 195 242 223 262 331 +69run ±85 ±100 ±40 ±72 ±75 ±77 ±24 26%
For a more direct measurement of the generalization ability in DMControl, we further calculate the
average performance across five evaluation settings (including performance under training observa-
tion) and report the results in Table 7. As shown in the table, SMG achieves state-of-the-art zero-shot
generalization capability in all five DMControl tasks, surpassing all baseline methods by a margin of
up to 26%. The results also demonstrate SMG’s stability across different evaluation settings, with
standard deviations less than 80 in all tasks. In contrast, the standard deviations of other methods
range from 100 to 250.
Table 8: Robotic manipulation results in reach .
Robtic-Manipulation SAC DrQ SODA SVEA SRM SGQN SMG ∆
(Reach ) (overlay) (SAC) (ours)
train 4 32 11 33 30 33 30 −3
±18 ±3 ±14 ±2 ±2 ±2 ±2 9%
test1 −16−1−26 −22 −3 19 30 +11
±33 ±23 ±9 ±16 ±25 ±13 ±1 58%
test2 −10−9−17 −21 −8 33 24 −9
±22 ±11 ±16 ±22 ±22 ±2 ±6 27%
test3 −32−38−20 −13 24 33 30 −3
±14 ±29 ±34 ±10 ±9 ±2 ±2 9%
test4 −19 10 −21 0 −1 24 29 +5
±50 ±26 ±16 ±21 ±30 ±6 ±1 21%
test5 −54−33−50 −37 -8 −16 29 +37
±11 ±19 ±7 ±27 ±29 ±22 ±2 462%
Average −21−6−20 −10 6 21 29 +8
±18 ±24 ±18 ±22 ±15 ±17 ±2 38%
The experiment results of robotic manipulation reach are reported in Table 8. SMG also shows a stable
and superior performance in this task, with an average improvement of 38% over the second-best
method.
17E More Ablation Study
We report the effect of removing each loss term to the average performance across five evaluation
settings in DMControl tasks in Table 9. Compared with Table 3, Lq_consist still exhibits the most
substantial impact on performance, though the performance drop is slightly smaller. This may be
because the random-color settings do not shift the observations heavily compared to the video-
background settings, so the Q-value estimation is less affected. A similar phenomenon is observed
inLbackandLmask, indicating that attribution augmentation is more crucial in video-background
settings.
The mask ratio ρis a hyperparameter that controls the expected proportion of the foreground area.
However, this parameter is an empirical choice and may not precisely match the actual proportion of
a given task. To investigate the sensitivity of SMG to the mask ratio, we conduct experiments with
different ρvalues in the walker-walk task of the video-hard setting. We select ρvalues ranging from
0.02 to 0.1 with an interval of 0.02 and report the average performance across five evaluation settings
in Figure 9. The results indicate that variations do not significantly influence SMG in the mask ratio,
asρvalues between 0.04 and 0.08 achieve similar performance. Moreover, when ρis too small (0.02)
or too large (0.1), the performance drops around 6% compared to the optimal ρvalue (0.06). We also
report the predicted masks of different ρvalues in the figure. As ρincreases, the predicted masks
start to include background areas, so a too high value leads to decreased performance. Conversely,
when ρis too small, the mask depicts an inaccurate foreground area (e.g. the legs of the walker with
ρ= 0.02), resulting in a performance drop as well.
Table 9: Ablation study in DMControl (average performance).
DMControl SMG w/o Lfore_consis w/oLaction w/oLback w/oLmask w/oLq_consis
(average) (full)
cartpole, 808±53 763 ±28 762 ±71 795 ±32 758 ±97 646 ±191swingup −45 (6%) −46 (6%) −13 (2%) −50 (6%) −162 (20%)
finger, 924±45 815 ±66 791 ±112 640 ±115 866 ±73 773 ±151spin −109 (12%) −133 (14%) −284 (31%) −58 (6%) −151 (16%)
walker, 945±33 918 ±26 874 ±17 915 ±70 930 ±47 598 ±114stand −27 (3%) −71 (8%) −30 (3%) −15 (2%) −347 (37%)
walker, 859±72 727 ±54 757 ±61 756 ±103 693 ±145 613 ±227walk −132 (15%) −102 (12%) −103 (12%) −166 (19%) −246 (29%)
cheetah, 331±24 304 ±29 325 ±58 270 ±25 319 ±82 269 ±110run −27 (8%) −6 (2%) −61 (18%) −12 (4%) −62 (19%)
Average −9% −8% −13% −7% −24%
(a)ρ= 0.02(800)
 (b)ρ= 0.04(857)
 (c)ρ= 0.06(859)
 (d)ρ= 0.08(823)
 (e)ρ= 0.1(793)
Figure 9: Ablation study of mask ratio ρinwalker-walk of average performance across five evaluation
settings. The images and numbers in parentheses indicate the predicted masks and the corresponding
performance, respectively.
F More Discussion
F.1 Bootstrapping Process in SMG
The attribution augmentation utilized in SMG requires the model to predict an accurate mask, and the
foreground consistency loss also requires a precise attribution prediction of the model. This might
seem contradictory, as the model struggles to make meaningful predictions in the early stages, which
means it cannot satisfy the two requirements immediately. We dig into the training process of SMG
18by experiments and provide the model outputs in different training stages in Figure 10. In the very
early stage ( ≤1000 steps), the model has difficulty predicting accurate masks, leading the attribution
augmentation more likes an overlay augmentation. However, the model rapidly learns to predict
relatively accurate masks and generate meaningful attribution augmentation images that can help
optimize LbackandLfore_consist (after 2000 steps), aided by the constraint of Lq. Subsequently, with
the inclusion of LbackandLfore_consist , the network begins to focus more on task-relevant areas in
the observation, thereby in turn comes back to enhance the accuracy of Q-values and foreground
predictions. Consequently, we view the training of SMG as a bootstrapping process.
F.2 Comparison with Related Work
TIA [ 6] also designs two model branches to capture task and distractor features, similar to our
separated models architecture. However, SMG differs from TIA in several essential aspects: (i) TIA
is a model-based method focusing on eliminating task-irrelevant distractors in training observations,
while SMG aims to utilize task-relevant features across diverse deployment scenarios to enhance
the generalization capability of RL agents; (ii) SMG operates in a model-free setting, which can
be more efficient to train and more flexible for applying data augmentation techniques; (iii) TIA
uses a background-only reconstruction loss and requires the background model to reconstruct the
full observation, which may cause the background branch to overly fit task-relevant features. In
contrast, SMG addresses this issue by introducing attribution augmentation images to supervise the
background model; (iv) SMG utilizes mask ratio loss to learn a more precise mask, while the masks
in TIA are prone to containing distractors, as reported in its original paper.
SODA [ 12] also improves the generalization ability of RL agents by regularizing the representations
between observations and their augmented views, similar to the consistency losses in SMG. However,
SODA implements this by simply minimizing the L2 distance between the two representations, which
imposes a too rigid constraint and lacks interpretability. We achieve this by introducing Q-value
consistency loss and foreground consistency loss, which provide more explainable supervision and
additionally improve the stability of Q-values and predicted attributions.
Note that the core idea underlying the Q-value loss in Equation 8 differs significantly from the
consistency regulation objective proposed by SGQN [ 3]. SGQN focuses on prioritizing pixels that
belong to the saliency map during encoding, primarily to enhance the accuracy of Q-value estimation
under raw observations. In contrast, SMG treats the Q-values under raw observations as the ground
truth and aims to achieve consistency between these Q-values and those obtained under augmented
observations. Thus, we additionally use a stop-gradient operation.
(a) Training Steps: 1000
 (b) Training Steps: 2000
(c) Training Steps: 6000
 (d) Training Steps: 30000
Figure 10: Masks, attributions, and corresponding attribution augmentation images in different
training stages.
19Training Color -Easy Color -Hard Video-Easy Video-Hard
Training Test1 Test2 Test3 Test4ReachEpisode ReturnPeg-in-boxEpisode Return Episode ReturnWalker -walkEpisode ReturnCheetah-run
Number of frames Number of frames Number of frames Number of frames Number of frames 
Cartpole-swingup
Episode Return Episode Return Episode ReturnFinger -spin Walker -stand
     SRM      SVEA       SGQN               SMG (ours)         SODA     DrQFigure 11: Training curves in all seven tasks. We evaluate each seed three times and then calculate
the mean episode return for every 10k training steps, and the variance is shown as the shaded area by
calculating four random seeds.
20NeurIPS Paper Checklist
1.Claims
Question: Do the main claims made in the abstract and introduction accurately reflect the
paper’s contributions and scope?
Answer: [Yes]
Justification: The abstract and introduction clearly state the contributions of the paper.
Guidelines:
•The answer NA means that the abstract and introduction do not include the claims
made in the paper.
•The abstract and/or introduction should clearly state the claims made, including the
contributions made in the paper and important assumptions and limitations. A No or
NA answer to this question will not be perceived well by the reviewers.
•The claims made should match theoretical and experimental results, and reflect how
much the results can be expected to generalize to other settings.
•It is fine to include aspirational goals as motivation as long as it is clear that these goals
are not attained by the paper.
2.Limitations
Question: Does the paper discuss the limitations of the work performed by the authors?
Answer: [Yes]
Justification: The limitations and future work are discussed in the Section 6.
Guidelines:
•The answer NA means that the paper has no limitation while the answer No means that
the paper has limitations, but those are not discussed in the paper.
• The authors are encouraged to create a separate "Limitations" section in their paper.
•The paper should point out any strong assumptions and how robust the results are to
violations of these assumptions (e.g., independence assumptions, noiseless settings,
model well-specification, asymptotic approximations only holding locally). The authors
should reflect on how these assumptions might be violated in practice and what the
implications would be.
•The authors should reflect on the scope of the claims made, e.g., if the approach was
only tested on a few datasets or with a few runs. In general, empirical results often
depend on implicit assumptions, which should be articulated.
•The authors should reflect on the factors that influence the performance of the approach.
For example, a facial recognition algorithm may perform poorly when image resolution
is low or images are taken in low lighting. Or a speech-to-text system might not be
used reliably to provide closed captions for online lectures because it fails to handle
technical jargon.
•The authors should discuss the computational efficiency of the proposed algorithms
and how they scale with dataset size.
•If applicable, the authors should discuss possible limitations of their approach to
address problems of privacy and fairness.
•While the authors might fear that complete honesty about limitations might be used by
reviewers as grounds for rejection, a worse outcome might be that reviewers discover
limitations that aren’t acknowledged in the paper. The authors should use their best
judgment and recognize that individual actions in favor of transparency play an impor-
tant role in developing norms that preserve the integrity of the community. Reviewers
will be specifically instructed to not penalize honesty concerning limitations.
3.Theory Assumptions and Proofs
Question: For each theoretical result, does the paper provide the full set of assumptions and
a complete (and correct) proof?
Answer: [Yes]
21Justification: The derivations of the representation learning objective and the empowerment
term are provided in the Appendix A.
Guidelines:
• The answer NA means that the paper does not include theoretical results.
•All the theorems, formulas, and proofs in the paper should be numbered and cross-
referenced.
•All assumptions should be clearly stated or referenced in the statement of any theorems.
•The proofs can either appear in the main paper or the supplemental material, but if
they appear in the supplemental material, the authors are encouraged to provide a short
proof sketch to provide intuition.
•Inversely, any informal proof provided in the core of the paper should be complemented
by formal proofs provided in appendix or supplemental material.
• Theorems and Lemmas that the proof relies upon should be properly referenced.
4.Experimental Result Reproducibility
Question: Does the paper fully disclose all the information needed to reproduce the main ex-
perimental results of the paper to the extent that it affects the main claims and/or conclusions
of the paper (regardless of whether the code and data are provided or not)?
Answer: [Yes]
Justification: Source code is available at https://anonymous.4open.science/r/SMG/ ,
and the experimental setting and details are described in the Appendix C.
Guidelines:
• The answer NA means that the paper does not include experiments.
•If the paper includes experiments, a No answer to this question will not be perceived
well by the reviewers: Making the paper reproducible is important, regardless of
whether the code and data are provided or not.
•If the contribution is a dataset and/or model, the authors should describe the steps taken
to make their results reproducible or verifiable.
•Depending on the contribution, reproducibility can be accomplished in various ways.
For example, if the contribution is a novel architecture, describing the architecture fully
might suffice, or if the contribution is a specific model and empirical evaluation, it may
be necessary to either make it possible for others to replicate the model with the same
dataset, or provide access to the model. In general. releasing code and data is often
one good way to accomplish this, but reproducibility can also be provided via detailed
instructions for how to replicate the results, access to a hosted model (e.g., in the case
of a large language model), releasing of a model checkpoint, or other means that are
appropriate to the research performed.
•While NeurIPS does not require releasing code, the conference does require all submis-
sions to provide some reasonable avenue for reproducibility, which may depend on the
nature of the contribution. For example
(a)If the contribution is primarily a new algorithm, the paper should make it clear how
to reproduce that algorithm.
(b)If the contribution is primarily a new model architecture, the paper should describe
the architecture clearly and fully.
(c)If the contribution is a new model (e.g., a large language model), then there should
either be a way to access this model for reproducing the results or a way to reproduce
the model (e.g., with an open-source dataset or instructions for how to construct
the dataset).
(d)We recognize that reproducibility may be tricky in some cases, in which case
authors are welcome to describe the particular way they provide for reproducibility.
In the case of closed-source models, it may be that access to the model is limited in
some way (e.g., to registered users), but it should be possible for other researchers
to have some path to reproducing or verifying the results.
5.Open Access to Data and Code
22Question: Does the paper provide open access to the data and code, with sufficient instruc-
tions to faithfully reproduce the main experimental results, as described in supplemental
material?
Answer: [Yes]
Justification: Source code is available at https://anonymous.4open.science/r/SMG/ .
Guidelines:
• The answer NA means that paper does not include experiments requiring code.
•Please see the NeurIPS code and data submission guidelines ( https://nips.cc/
public/guides/CodeSubmissionPolicy ) for more details.
•While we encourage the release of code and data, we understand that this might not be
possible, so “No” is an acceptable answer. Papers cannot be rejected simply for not
including code, unless this is central to the contribution (e.g., for a new open-source
benchmark).
•The instructions should contain the exact command and environment needed to run to
reproduce the results. See the NeurIPS code and data submission guidelines ( https:
//nips.cc/public/guides/CodeSubmissionPolicy ) for more details.
•The authors should provide instructions on data access and preparation, including how
to access the raw data, preprocessed data, intermediate data, and generated data, etc.
•The authors should provide scripts to reproduce all experimental results for the new
proposed method and baselines. If only a subset of experiments are reproducible, they
should state which ones are omitted from the script and why.
•At submission time, to preserve anonymity, the authors should release anonymized
versions (if applicable).
•Providing as much information as possible in supplemental material (appended to the
paper) is recommended, but including URLs to data and code is permitted.
6.Experimental Setting/Details
Question: Does the paper specify all the training and test details (e.g., data splits, hyper-
parameters, how they were chosen, type of optimizer, etc.) necessary to understand the
results?
Answer: [Yes]
Justification: The experimental setting and details are described in the Appendix C.
Guidelines:
• The answer NA means that the paper does not include experiments.
•The experimental setting should be presented in the core of the paper to a level of detail
that is necessary to appreciate the results and make sense of them.
•The full details can be provided either with the code, in appendix, or as supplemental
material.
7.Experiment Statistical Significance
Question: Does the paper report error bars suitably and correctly defined or other appropriate
information about the statistical significance of the experiments?
Answer: [Yes]
Justification: The paper reports the mean and standard deviation of the results in the tables
and figures.
Guidelines:
• The answer NA means that the paper does not include experiments.
•The authors should answer "Yes" if the results are accompanied by error bars, confi-
dence intervals, or statistical significance tests, at least for the experiments that support
the main claims of the paper.
•The factors of variability that the error bars are capturing should be clearly stated (for
example, train/test split, initialization, random drawing of some parameter, or overall
run with given experimental conditions).
23•The method for calculating the error bars should be explained (closed form formula,
call to a library function, bootstrap, etc.)
• The assumptions made should be given (e.g., Normally distributed errors).
•It should be clear whether the error bar is the standard deviation or the standard error
of the mean.
•It is OK to report 1-sigma error bars, but one should state it. The authors should
preferably report a 2-sigma error bar than state that they have a 96% CI, if the hypothesis
of Normality of errors is not verified.
•For asymmetric distributions, the authors should be careful not to show in tables or
figures symmetric error bars that would yield results that are out of range (e.g. negative
error rates).
•If error bars are reported in tables or plots, The authors should explain in the text how
they were calculated and reference the corresponding figures or tables in the text.
8.Experiments Compute Resources
Question: For each experiment, does the paper provide sufficient information on the com-
puter resources (type of compute workers, memory, time of execution) needed to reproduce
the experiments?
Answer: [Yes]
Justification: The paper provides the details of the compute resources in the Appendix C.
Guidelines:
• The answer NA means that the paper does not include experiments.
•The paper should indicate the type of compute workers CPU or GPU, internal cluster,
or cloud provider, including relevant memory and storage.
•The paper should provide the amount of compute required for each of the individual
experimental runs as well as estimate the total compute.
•The paper should disclose whether the full research project required more compute
than the experiments reported in the paper (e.g., preliminary or failed experiments that
didn’t make it into the paper).
9.Code of Ethics
Question: Does the research conducted in the paper conform, in every respect, with the
NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines ?
Answer: [Yes]
Justification: We have reviewed the NeurIPS Code of Ethics and ensured that our research
conforms to it.
Guidelines:
•The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.
•If the authors answer No, they should explain the special circumstances that require a
deviation from the Code of Ethics.
•The authors should make sure to preserve anonymity (e.g., if there is a special consid-
eration due to laws or regulations in their jurisdiction).
10.Broader Impacts
Question: Does the paper discuss both potential positive societal impacts and negative
societal impacts of the work performed?
Answer: [NA]
Justification: There is no societal impact of the work performed.
Guidelines:
• The answer NA means that there is no societal impact of the work performed.
•If the authors answer NA or No, they should explain why their work has no societal
impact or why the paper does not address societal impact.
24•Examples of negative societal impacts include potential malicious or unintended uses
(e.g., disinformation, generating fake profiles, surveillance), fairness considerations
(e.g., deployment of technologies that could make decisions that unfairly impact specific
groups), privacy considerations, and security considerations.
•The conference expects that many papers will be foundational research and not tied
to particular applications, let alone deployments. However, if there is a direct path to
any negative applications, the authors should point it out. For example, it is legitimate
to point out that an improvement in the quality of generative models could be used to
generate deepfakes for disinformation. On the other hand, it is not needed to point out
that a generic algorithm for optimizing neural networks could enable people to train
models that generate Deepfakes faster.
•The authors should consider possible harms that could arise when the technology is
being used as intended and functioning correctly, harms that could arise when the
technology is being used as intended but gives incorrect results, and harms following
from (intentional or unintentional) misuse of the technology.
•If there are negative societal impacts, the authors could also discuss possible mitigation
strategies (e.g., gated release of models, providing defenses in addition to attacks,
mechanisms for monitoring misuse, mechanisms to monitor how a system learns from
feedback over time, improving the efficiency and accessibility of ML).
11.Safeguards
Question: Does the paper describe safeguards that have been put in place for responsible
release of data or models that have a high risk for misuse (e.g., pretrained language models,
image generators, or scraped datasets)?
Answer: [NA]
Justification: The paper does not release data or models that have a high risk for misuse.
Guidelines:
• The answer NA means that the paper poses no such risks.
•Released models that have a high risk for misuse or dual-use should be released with
necessary safeguards to allow for controlled use of the model, for example by requiring
that users adhere to usage guidelines or restrictions to access the model or implementing
safety filters.
•Datasets that have been scraped from the Internet could pose safety risks. The authors
should describe how they avoided releasing unsafe images.
•We recognize that providing effective safeguards is challenging, and many papers do
not require this, but we encourage authors to take this into account and make a best
faith effort.
12.Licenses for Existing Assets
Question: Are the creators or original owners of assets (e.g., code, data, models), used in
the paper, properly credited and are the license and terms of use explicitly mentioned and
properly respected?
Answer: [Yes]
Justification: The paper properly credits the original owners of the assets and mentions
the license and terms of use. The official code of DMC-GB ( https://github.com/
nicklashansen/dmcontrol-generalization-benchmark ) uses the MIT license.
Guidelines:
• The answer NA means that the paper does not use existing assets.
• The authors should cite the original paper that produced the code package or dataset.
•The authors should state which version of the asset is used and, if possible, include a
URL.
• The name of the license (e.g., CC-BY 4.0) should be included for each asset.
•For scraped data from a particular source (e.g., website), the copyright and terms of
service of that source should be provided.
25•If assets are released, the license, copyright information, and terms of use in the
package should be provided. For popular datasets, paperswithcode.com/datasets
has curated licenses for some datasets. Their licensing guide can help determine the
license of a dataset.
•For existing datasets that are re-packaged, both the original license and the license of
the derived asset (if it has changed) should be provided.
•If this information is not available online, the authors are encouraged to reach out to
the asset’s creators.
13.New Assets
Question: Are new assets introduced in the paper well documented and is the documentation
provided alongside the assets?
Answer: [Yes]
Justification: We publish our source code, and the new assets are well documented in this
paper.
Guidelines:
• The answer NA means that the paper does not release new assets.
•Researchers should communicate the details of the dataset/code/model as part of their
submissions via structured templates. This includes details about training, license,
limitations, etc.
•The paper should discuss whether and how consent was obtained from people whose
asset is used.
•At submission time, remember to anonymize your assets (if applicable). You can either
create an anonymized URL or include an anonymized zip file.
14.Crowdsourcing and Research with Human Subjects
Question: For crowdsourcing experiments and research with human subjects, does the paper
include the full text of instructions given to participants and screenshots, if applicable, as
well as details about compensation (if any)?
Answer: [NA]
Justification: The paper does not involve crowdsourcing nor research with human subjects.
Guidelines:
•The answer NA means that the paper does not involve crowdsourcing nor research with
human subjects.
•Including this information in the supplemental material is fine, but if the main contribu-
tion of the paper involves human subjects, then as much detail as possible should be
included in the main paper.
•According to the NeurIPS Code of Ethics, workers involved in data collection, curation,
or other labor should be paid at least the minimum wage in the country of the data
collector.
15.Institutional Review Board (IRB) Approvals or Equivalent for Research with Human
Subjects
Question: Does the paper describe potential risks incurred by study participants, whether
such risks were disclosed to the subjects, and whether Institutional Review Board (IRB)
approvals (or an equivalent approval/review based on the requirements of your country or
institution) were obtained?
Answer: [NA]
Justification: The paper does not involve crowdsourcing nor research with human subjects.
Guidelines:
•The answer NA means that the paper does not involve crowdsourcing nor research with
human subjects.
•Depending on the country in which research is conducted, IRB approval (or equivalent)
may be required for any human subjects research. If you obtained IRB approval, you
should clearly state this in the paper.
26•We recognize that the procedures for this may vary significantly between institutions
and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the
guidelines for their institution.
•For initial submissions, do not include any information that would break anonymity (if
applicable), such as the institution conducting the review.
27