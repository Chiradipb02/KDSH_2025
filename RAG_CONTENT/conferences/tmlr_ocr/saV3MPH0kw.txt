Published in Transactions on Machine Learning Research (09/2024)
Unsupervised Domain Adaptation
by Learning Using Privileged Information
Adam Breitholtz∗adambre@chalmers.se
Department of Computer Science
Chalmers University of Technology
Anton Matsson∗antmats@chalmers.se
Department of Computer Science
Chalmers University of Technology
Fredrik D. Johansson fredrik.johansson@chalmers.se
Department of Computer Science
Chalmers University of Technology
Reviewed on OpenReview: https: // openreview. net/ forum? id= saV3MPH0kw
Abstract
Successful unsupervised domain adaptation is guaranteed only under strong assumptions
such as covariate shift and overlap between input domains. The latter is often violated in
high-dimensional applications like image classification which, despite this limitation, con-
tinues to serve as inspiration and benchmark for algorithm development. In this work, we
show that training-time access to side information in the form of auxiliary variables can
help relax restrictions on input variables and increase the sample efficiency of learning at
the cost of collecting a richer variable set. As this information is assumed available only
during training, not in deployment, we call this problem unsupervised domain adaptation
by learning using privileged information (DALUPI). To solve this problem, we propose a
simple two-stage learning algorithm, inspired by our analysis of the expected error in the
target domain, and a practical end-to-end variant for image classification. We propose three
evaluation tasks based on classification of entities in photos and anomalies in medical im-
ages with different types of available privileged information (binary attributes and single or
multiple regions of interest). We demonstrate across these tasks that using privileged infor-
mation in learning can reduce errors in domain transfer compared to baselines, be robust to
spurious correlations in the source domain, and increase sample efficiency.
1 Introduction
Deploymentofmachinelearning(ML)systemsreliesongeneralizationfromtrainingsamplestonewinstances
in a target domain. When these new instances differ in distribution from the source of training data,
performance tends to degrade and guarantees are often weak. For example, a supervised ML model trained
to identify medical conditions in X-ray images from one hospital may work poorly in another hospital if
the two sites have different equipment or examination protocols (Zech et al., 2018). In the unsupervised
domain adaptation (UDA) problem (Ben-David et al., 2006), nolabeled examples are available from the
target domain and strong assumptions are needed for success. In this work, we ask: How can access to
auxiliary variables during training help solve the UDA problem and weaken the assumptions necessary to
guarantee domain transfer?
In standard UDA, a common assumption is that the object of the learning task is identical in source and
target domains but that input distributions differ (Shimodaira, 2000). This “covariate shift” assumption is
∗Equal contribution.
1Published in Transactions on Machine Learning Research (09/2024)
plausible in our X-ray example above: Doctors are likely to give the same diagnosis based on X-rays of the
same patient from similar but different equipment. However, guarantees for consistent domain adaptation
alsorequireeitherdistributionaloverlapbetweeninputsfromsourceandtargetdomainsorknownparametric
forms of the labeling function (Ben-David & Urner, 2012; Wu et al., 2019; Johansson et al., 2019). Without
these, adaptation cannot be verified or guaranteed by statistical means.
Input domain overlap is implausible for the high-dimensional tasks that have become standard benchmarks
in the UDA community, including image classification (Long et al., 2013; Ganin et al., 2016) and sentence
labeling (Orihashi et al., 2020). If hospitals have different X-ray equipment, the probability of observing
(near-)identical images from source and target domains is zero (Zech et al., 2018). Even when covariate shift
andoverlaparesatisfied, largedomaindifferencescanhaveadramaticeffectonsamplecomplexity(Breitholtz
& Johansson, 2022). Despite promising developments (Shen et al., 2022), realistic guarantees for practical
domain transfer remain elusive.
In supervised ML without domain shift, incorporating auxiliary variables in the training of models has
been proposed to improve out-of-sample generalization. For example, learning using privileged informa-
tion(Vapnik & Vashist, 2009; Lopez-Paz et al., 2016), variables available during training but unavailable in
deployment, has been proven to require fewer examples compared to learning without these variables (Karls-
son et al., 2021). In X-ray classification, privileged information (PI) can come from graphical annotations
or clinical notes made by radiologists that are unavailable when the system is used. While PI has begun to
see use in domain adaptation, see e.g., Sarafianos et al. (2017) or Vu et al. (2019), and a theoretical analysis
exists for linear classifiers (Xie et al., 2020), the literature has yet to fully characterize the benefits of this
practice.
We introduce unsupervised domain adaptation by learning using privileged information (DALUPI), in which
auxiliary variables, related to the outcome of interest, are leveraged during training to improve test-time
adaptation when the variables are unavailable. We summarize our contributions below:
•We formalize the DALUPI problem and give conditions under which it is possible to solve it con-
sistently, i.e., to learn a model using privileged information that predicts optimally in the target
domain. Importantly, these conditions do not rely on distributional overlap between source and
target domains in the input variable (Section 2.1), making consistent learning without privileged
information (PI) generally infeasible.
•We propose practical learning algorithms for image classification in the DALUPI setting (Section 3),
designed to handle problems with three different types of PI, see Figure 1 for examples. As common
UDA benchmarks lack auxiliary variables related to the learning problem, we propose three new
evaluation tasks spanning the three types of PI using data sets with real-world images and auxiliary
variables.
•Onthesetasks,wecompareourmethodstosupervisedlearningbaselinesandwell-knownmethodsfor
unsupervised domain adaptation (Section 4). We find that our proposed models perform favorably
to the alternatives for all types of PI, particularly when input overlap is violated and when training
sets are small.
2 Privileged Information in Domain Adaptation
In unsupervised domain adaptation (UDA), the goal is to learn a hypothesis hto predict outcomes (or
labels)Y∈Yfor problem instances represented by input covariates X∈X, drawn from a target domain
with densityT(X,Y ). During training, we have access to labeled samples (x,y)only from a source domain
S(X,Y )and unlabeled samples ˜xfromT(X). As a running example, we think of SandTas radiology
departments at two different hospitals, of Xas the X-ray image of a patient, and of Yas the diagnosis made
by a radiologist after analyzing the image.
2Published in Transactions on Machine Learning Research (09/2024)
Digit	classification	with	single	region	of	interest	as	PI
Image	fromCIFAR-10’slast	fiveclassesImages	from	CIFAR-10’s	first	fiveand	last	fiveclasses
Bounding	box	indicating	the	location	of	the	MNIST	digit
3MNISTdigit
Entity	classification	with	multiple	regionofinterestsas	PIIndoorand	outdoorimages
Bounding	boxes	indicating	the	location	of	the	entities
OutdoorimagedogpersonEntitiesInput	samples𝑋~𝒮,	𝑋~𝒯Privileged		information	𝑊~𝒮,	𝑊~𝒯Label𝑌~𝒮Test	sample𝑋~𝒯
Celebrity	photo	classification	with	binary	attributesas	PI
Image	of	personwithhatImages	of	personswithand	withouthats
3Reportedgender
Binary	attributesmustachemakeup−1−1−1−1
Figure 1: Examples of domain adaptation tasks with different types of privileged information (PI). During
training, input samples Xand PIWare drawn from both source and target domains. Labels Yare only
available from the source domain. At test time, a target sample Xis observed. We consider three types of
PI: binary attribute vectors, a single region of interest, and multiple regions of interest.
We aim to learn a hypothesis h∈Hfrom a hypothesis set Hthat minimizes the expected target-domain
prediction error (risk) RT, with respect to a loss function L:Y×Y→ R+, i.e., to solve
min
h∈HRT(h),RT(h):=ET(X,Y )[L(h(X),Y)], (1)
where we use the subscript convention Ep(X)[f(X)] =/integraltext
x∈Xp(x)f(x)dxto denote an expectation of some
functionfover a density pon the domainX. A consistent solution to the UDA problem returns a minimizer
of Equation 1 without ever observing labeled samples from T. However, ifSandTare allowed to differ
arbitrarily, finding such a solution cannot be guaranteed (Ben-David & Urner, 2012). To make the problem
feasible, we assume that covariate shift (Shimodaira, 2000) holds—that the labeling function is the same in
both domains, but the covariate distributions differ.
Assumption 1 (Covariate shift) .For domainsS,TonX×Y,covariate shift holds with respect to Xif
∃x∈X:T(X=x)̸=S(X=x)and∀x∈X:T(Y|x) =S(Y|x).
In our example, covariate shift means that radiologists at either hospital would diagnose two patients with
the same X-ray in the same way, but that the radiologists may encounter different distributions of patients
and images. To guarantee consistent learning without further assumptions, these distributions cannot be too
different—the source input domain S(x)must sufficiently overlapthe target input domain T(x).
Assumption 2 (Domain overlap) .A domainSoverlaps another domain Twith respect to XonXif
∀x∈X:T(X=x)>0 =⇒ S (X=x)>0.
3Published in Transactions on Machine Learning Research (09/2024)
Table 1: A summary of the different settings we consider in this work, what data is assumed to be available
during training and if guarantees for identification are known for the setting under the assumptions of
Proposition 1. The parentheses around source samples for DALUPI indicate that we need not necessarily
observe these for the setting. Note that at test time only xfromTis observed.∗Under the more generous
assumption of overlapping support in the input space X, guarantees exist for all these settings.
Setting Observed SObservedTGuarantee
x w y ˜x ˜w ˜yforRT
SL-T ✓ ✓ ✓
SL-S ✓ ✓∗
UDA ✓ ✓ ✓∗
LUPI ✓ ✓ ✓∗
DALUPI ( ✓)✓ ✓ ✓ ✓ ✓
Covariate shift and domain overlap with respect to Xguarantee that the target risk RTcan be identified
by the sampling distribution described above, and thus, that a solution to Equation 1 may be found. Hence,
they have become standard assumptions, used by most informative guarantees (Zhao et al., 2019).
Overlap is often violated in high-dimensional problems such as image classification, partly due to irrelevant
information that has a spurious association with the label Y(Beery et al., 2018; D’Amour et al., 2021).
In X-ray classification, it may be possible to perfectly distinguish hospitals (domains) based on protocol or
equipment differences manifesting in the images (Zech et al., 2018). There are no guarantees for optimal
UDA in this case. Some guarantees based on distributional distances do not rely on overlap (Ben-David
et al., 2006; Long et al., 2013), but do not guarantee optimal learning either (Johansson et al., 2019).
Still, an image Xmaycontaininformation Wwhich is both sufficient for prediction andsupported in
both domains . For X-rays, this could be a region of pixels indicating a medical condition, ignoring parts
that merely indicate differences in protocol (Zech et al., 2018). The learner does not know how to find this
information a priori, but it can be supplied during training as added supervision. A radiologist could indicate
regions of interest Wusing bounding boxes during training (Irvin et al., 2019), but would not be available
to annotate images at test time. As such, Wisprivileged information (Vapnik & Vashist, 2009).
2.1 Unsupervised Domain Adaptation With Privileged Information
Learning using privileged information, variables that are available only during training but not at test
time, has been shown to improve sample efficiency in diverse settings (Vapnik & Izmailov, 2015; Pechyony &
Vapnik, 2010; Jung & Johansson, 2022). Next, we show that privileged information can also improve UDA by
providing identifiability of the target risk—allowing it to be computed from the sampling distribution—even
when overlap is not satisfied in X.
We define domain adaptation by learning using privileged information (DALUPI) as follows. During train-
ing, learners observe samples of covariates X, labelsYand privileged information W∈ WfromSin
a datasetDS={(xi,wi,yi)}m
i=1, as well as samples of covariates and privileged information from T,
DT={(˜xi,˜wi)}n
i=1.At test time, trained models only observe covariates ˜x∼ T (X)and our learning
goal remains to minimize the target risk, see Equation 1 . We justify access to privileged information from T,
but not labels, by pointing out that it is often easier to annotate observations with privileged information W
than with labels Y. For example, a non-expert may be able to reliably recognize the outline of an animal in
an image, indicating the pixels Wcorresponding to it, but not identify its species ( Y); see Figure 2, where
it would likely be easier to identify the location of the cat in the image than to identify its breed.
To identify RT(Equation 1) without overlap in X, we make the assumption that Wis sufficient to predict
Yin the following sense.
Assumption 3 (Sufficiency of privileged information) .Privileged information Wis sufficient for the out-
comeYgiven covariates XifY⊥X|Win bothSandT.
4Published in Transactions on Machine Learning Research (09/2024)
𝑋
𝒳
𝑤!
𝒲𝑡!𝑥!
Figure 2: An illustration of domain overlap being more plausible when we consider appropriate forms of
privileged information W, such as a region of interest of an image. Source and target domains S,Tare here
indoor and outdoor images Xand the task is to identify the animal Yin the image.
Assumption 3 is satisfied when Xprovides no more information about Yin the presence of W. If we
considerWto be a subset of image pixels corresponding to an area of interest, the other pixels in Xmay be
unnecessary to predict Y. This is illustrated in Figure 2 where the privileged information wiis the region of
interest indicated by the bounding box ti. Here, overlap is more probable in Wthan inX, as the extracted
pixels mostly show cats. Moreover, when Wretains more information, sufficiency becomes more plausible
but domain overlap in Wis reduced. The sufficiency assumption is used to replace T(y|x)withT(y|w)in
Proposition 1. If sufficiency is violated but it is plausible that the degree of insufficiency is comparable across
domains, we can still obtain a bound on the target risk which may be estimated from observed quantities.
We give such a result in Appendix F.
We expect that some PI can be selected to be sufficient for a given task. However, if this sufficiency cannot
be ensured, the overall performance may decrease, assuming covariate shift with respect to Wis not violated.
Even so, we still anticipate the generalization error to remain of a comparable magnitude. If covariate shift
is violated in W, further performance declines are expected, as the problem becomes more complex and we
are not guaranteed to identify the optimal hypothesis (Johansson et al., 2019).
Assumptions 1–2 holding with respect to privileged information Winstead ofX, along with Assumption 3,
allow us to identify the target risk even for models h∈Hthat do not use Was input:
Proposition 1. Let Assumptions 1 and 2 be satisfied with respect to W(not necessarily with respect to X)
and let Assumption 3 hold as stated. Then, the target risk RTis identified for hypotheses h:X→Y,
RT(h) =ET(X)/bracketleftbig
ET(W|X)/bracketleftbig
ES(Y|W)[L(h(X),Y)|X,W ]|X/bracketrightbig/bracketrightbig
=/integraldisplay
xT(x)/integraldisplay
wT(w|x)/integraldisplay
yS(y|w)L(h(x),y)dydwdx ,
and forLthe squared loss, a minimizer of RTis the function
h∗
T(x) =ET(W|x)[ES(Y|W)[Y|W]|x] =/integraldisplay
wT(w|x)/integraldisplay
yS(y|w)ydydw .
Proof sketch. RT(h) =/integraltext
x,yT(x,y)L(h(x),y)dxdy. We can then marginalize over Wto getT(x,y) =
T(x)ET(W|x)[T(y|W)|x] =T(x)/integraltext
w:S(w)>0T(w|x)S(y|w)dw, where the first equality follows by
sufficiency and the second by covariate shift and overlap in W.T(x),T(w|x)andS(y|w)are observable
throughtrainingsamples. That h∗
Tisaminimizerfollowsfromthefirst-ordercondition. SeeAppendixC.
Proposition 1 shows that there are conditions where privileged information allows for identification of target-
optimal hypotheses where identification is not possible without it, i.e., when overlap is violated in X.W
5Published in Transactions on Machine Learning Research (09/2024)
guides the learner toward the information in Xthat is relevant for the label Y. WhenWis deterministic
inX, overlap in Ximplies overlap in W, but not vice versa. In the same case, under Assumption 3, if
covariate shift holds for X, it holds also for W. Hence, if sufficiency can be justified, the requirements on X
are weaker than in standard UDA, at the cost of collecting W. Surprisingly, Proposition 1 does not require
thatXis observed in the source domain as the result does not depend on S(x).
Figure 1 gives examples of problems with the DALUPI structure which we consider in this work. For
comparison, we list related learning paradigms in Table 1. Supervised learning (SL-S) refers to learning from
labeled samples from Swithout privileged information. SL-T refers to supervised learning with (infeasible)
access to labeled samples from T. UDA refers to the setting at the start of Section 2 and LUPI to learning
using privileged information without data from T(Vapnik & Vashist, 2009). We compare DALUPI to these
alternative settings in our experiments in Section 4.
2.2 A Two-stage Algorithm and Its Risk
In light of Proposition 1, a natural learning strategy is to model privileged information as a function of the
input,T(W|x), and the outcome as a function of privileged information, ˆg(w)≈ES[Y|w], and combining
these. In the case where Wis a deterministic function of X,T(W|x)is a mapf:X→W, which may be
estimated as a regression ˆfand combined with the outcome regression to form ˆh= ˆg(ˆf(X)). We may find
such functions ˆf,ˆgby separately minimizing the empirical risks
ˆRW
T(f) =1
nn/summationdisplay
i=1LW(f(˜xi),˜wi)and ˆRY
S(g) =1
mm/summationdisplay
i=1LY(g(wi),yi). (2)
Hypothesis classes F,Gmay be chosen so that H={h=g◦f; (f,g)∈F×G} has a desired form. Note
thatLWandLYmay in general be different loss functions.
We can bound the generalization error of estimators ˆh= ˆg◦ˆfwhenW∈RdWand the loss is the squared
loss. We do this by placing an assumption of Lipschitz smoothness on the space of prediction functions:
∀g∈G,w,w′∈W :∥g(w)−g(w′)∥2≤M∥w−w′∥2. To arrive at a bound, we first define the ρ-weighted
empirical risk of the outcome model gin the source domain, ˆRY,ρ
S(g) =1
m/summationtextm
i=1ρ(wi)L_W(g(wi),yi)where
ρis the density ratio of TandS,ρ(w) =T(w)
S(w). When the density ratio ρis unknown, we may use density
estimation (Sugiyama et al., 2012) or probabilistic classifiers to estimate it. We arrive at the following result,
proven for univariate Ybut generalizable to multivariate outcomes.
Proposition2. Suppose that WandYare deterministic in XandW, respectively, and that Assumptions 1–
3 hold with respect to W. LetGcompriseM-Lipschitz mappings g:W→YwithW⊆RdW, and let the loss
be the squared Euclidean distance, assumed to be uniformly bounded over W. Letρ(w) =T(w)/S(w)andd
andd′be the pseudo-dimensions of GandF, respectively. Assume that there are mlabeled samples from S
andnunlabeled samples from T. Then, for any h=g◦f∈G×F, with probability at least 1−δ,
RT(h)
2≤ˆRY,ρ
S(g) +M2ˆRW
T(f) +O
3/8/radicaligg
dlogm
d+ log4
δ
m+/radicaligg
d′logn
d′+ logdW
δ
n
.
Proof sketch. Decomposing the risk of h◦ϕ, we get
RT(h) =ET[(g(f(X))−Y)2]
≤2ET[(g(W)−Y)2+ (g(f(X))−g(W))2]
≤2ET[(g(W)−Y)2+M2∥f(X))−g(W)∥2]
≤2ET[(g(W)−Y)2] + 2M2ET[∥(f(X)−W)∥2]
= 2RY
T(g) + 2M2RW
T(f) = 2RY,ρ
S(g) + 2M2RW
T(f).
The first inequality follows the relaxed triangle inequality, the second from the Lipschitz property, and
the third equality from Overlap and Covariate shift. Treating each component of ˆwas independent, using
6Published in Transactions on Machine Learning Research (09/2024)
standard PAC learning results, and application of Theorem 3 from Cortes et al. (2010) allows us to reweight
the risk with the density ratio ρby also adding an additional term which contains the Rényi divergence.
Then with a union bound argument, we get the stated result. See Appendix D for a more detailed proof.
WhenFandGcontain the ground-truth mappings between XandWand between WandY, in the infinite-
sample limit, minimizers of Equation 2 minimize RTas well. Our approach is not limited to classical PAC
analysis but could, under suitable assumptions, be carried out under another framework, e.g. using PAC-
Bayes analysis to obtain a bound that contains different sample complexity terms. However, such a bound
would then hold in expectation over a posterior distribution on Hinstead of uniformly over H. We sketch a
proof of such a bound in Appendix E.
Furthermore, if sufficiency is violated but it is plausible that the degree of insufficiency is comparable across
domains, we can still obtain a bound on the target risk which may be estimated from observed quantities.
We give such a result in Appendix F.
3 Image Classification With Privileged Information
Weuseimageclassification, where Xisanimageand Yisadiscretelabel, asproofofconceptforDALUPI.To
show the versatility of our approach, we consider three different instantiations of privileged information W:
a binary attribute vector, a single region of interest, or multiple regions of interest. The two-stage estimator,
see Figure 3a, is used in the first two cases. With multiple regions of interest as privileged information, we
use an end-to-end model based on Faster-R-CNN (Ren et al., 2016), see Figure 3b. We detail each setting
below and illustrate them in Figure 1.
3.1 Binary Attributes as PI
First, we consider the case where each image xiis accompanied by privileged information in the form of
a binary vector wi∈{0,1}dindicating the presence of dattributes in the image. In this setting, we can
directly apply our two-stage estimator (Equation 2). For the first estimator ˆf, we use a convolutional neural
network (CNN) trained on observations from T(and possiblyS) to output a vector of attributes ˆwifrom the
inputxi. For the second estimator ˆg, we use a multi-layer perceptron classifier, trained on source domain
observations, that predicts the image label ˆyigiven the vector of attributes wi. We use the categorical
cross-entropy loss to train both ˆfandˆg. The resulting classifier, ˆh(x) = ˆg(ˆf(x)), is subsequently evaluated
on target domain images.
3.2 Single Region of Interest as PI
Next, we consider privileged information as a subset of pixels wi, taken from the image xiand associated
with an object or feature that determines the label yi∈{1,...,K}. In our experiments, this PI is provided
as asinglebounding box with coordinates ti∈R4enclosing the region of interest wi. Here, we use two
CNNs, ˆdandˆg, and a deterministic function ϕto approximate the two-stage estimator (Equation 2). The
network ˆdis trained to output bounding box coordinates ˆtias a function of the input xi, and the pixels
ˆwiwithin the bounding box are extracted from xiand resized to pre-specified dimensions through ϕ. The
composition of these two functions, ˆf(xi) =ϕ(xi,ˆd(xi)), returns ˆwi. The second network ˆgis trained to
predictyigiven the pixels wicontained in a bounding box tibased on observations from S. We use the mean
squared error loss for ˆdand the categorical cross-entropy loss for ˆg. Finally, ˆh(x) = ˆg(ˆf(x))is evaluated on
target domain images where the output of ˆfis used for prediction with ˆg. See Appendix A.1 for further
details.
3.3 Multiple Regions of Interest as PI
Finally, we consider a setting where privileged information indicates multiple regions of interest in an image.
We use this PI in multi-label classification problems where the image xiis associated with one or more
categorieskfrom a set{1,...,K}, encoded in a multi-category label yi∈{0,1}K(e.g., indicating findings
7Published in Transactions on Machine Learning Research (09/2024)
𝑓":𝒳→𝒲𝑊(
𝑔*:𝒲→𝒴𝑊,𝑌~𝒮𝑌/𝑊(
𝑌/Trainstage	I𝐿!𝑊(,𝑊𝑋~𝒯
𝐿"𝑌/,𝑌𝑋,𝑊~𝒯𝑋,𝑊~𝒮Trainstage	IITest
(a) Two-stage estimator.
𝑋~𝒯𝐿!"#$%&𝑃#,𝑃𝐿'()$%&𝑇#,𝑇𝐿!"#*(+𝑃#,𝐿'()*(+𝑇#,,𝑇𝑔%:𝒲→𝒴𝑊+
𝑌-𝑊+
𝑌-𝑓/:𝒳→𝒲Train	E2E𝑋,𝑊,𝑌~𝒮𝑋,𝑊~𝒯Test (b) End-to-end estimator.
Figure 3: A schematic representation of the train and test flow for DALUPI using (a) the two-stage estimator
presented in Section 2.2 and (b) an end-to-end architecture based on Faster R-CNN (Ren et al., 2016). In
the two-stage procedure, the networks ˆfand ˆgare learned through empirical risk minimization of LW
andLY, respectively. At test time, ˆfandˆgare combined into ˆh= ˆg(ˆf(X)). The end-to-end estimator
uses a region proposal network (RPN) to produce regions of interest in the input image X. The RPN,
which serves as the network ˆf, is followed by a detection network ˆgthat predicts the class of any object
within a region proposal. Training is guided by regression losses LPRN
reg(ˆT,T)andLdet
reg(ˆTU,T), as well as by
classification losses LPRN
cls(ˆP,P)andLdet
cls(ˆPU). Here,Tand ˆTdenote ground-truth and predicted bounding
box coordinates, respectively, and ˆTUare the predicted coordinates for a region proposal with ground-truth
labelU. Further, ˆPis the RPN’s predicted probability that a region proposal contains an object, Pis a
binary label assigned to the proposal based on its overlap with ground-truth bounding boxes, and ˆPuis the
probability of the ground-truth class Uwithin the proposal, as predicted by the detection network.
of one or more diseases). The partial label yi(k) = 1indicates the presence of features or objects in the
image from category k. In our entity classification experiment, an object jof classk∈[K]in the image, say
“Bird”, will be annotated by a bounding box tij∈R4surrounding the pixels of the bird, and an object label
uij=k. In X-ray classification, tijcan indicate an abnormality jin the X-ray image, and uij∈{1,...,K}
the label of the finding (e.g., “Pneumonia”).
To make full use of privileged information, we train a deep neural network ˆh(x) = ˆg(ˆf(x)), where ˆfproduces
a setof bounding box coordinates ˆtijand extracts the pixels ˆwijassociated with each ˆtij, and where ˆg
predicts a label ˆuijfor each ˆwij. To this end, we adapt the Faster R-CNN architecture (Ren et al., 2016)
which uses a region proposal network (RPN) to generate regions that are fed to a detection network for
classification and refined bounding box regression. A CNN backbone in combination with the RPN region
of interest pooling serves as the subnetwork ˆf, producing estimates ˆwiof the privileged information for an
imagexi. For the detection network, which corresponds to the subnetwork ˆg, we use Fast-RCNN (Girshick,
2015).
Privileged information adds supervision through regression losses LRPN
reg(ˆt,t)andLdet
reg(ˆtu,t)for region propos-
alsˆtand class-specific bounding box coordinates ˆtu. We use the smooth L1 loss defined by Girshick (2015) for
8Published in Transactions on Machine Learning Research (09/2024)
bothLRPN
regandLdet
reg. Training is further guided by classification losses LRPN
cls(ˆp,p) =−(plog ˆp+(1−p) log ˆp)
andLdet
cls(ˆpu) =−log ˆpu, where ˆpis the RPN’s predicted probability that a region proposal contains an
object,pis a binary label assigned to the proposal based on its overlap with ground-truth bounding boxes,
and ˆpuis the probability of the ground-truth class uwithin the proposal, as predicted by the detection
network.
In Appendix A.2, we provide details of the learning objective and architecture and describe small modifica-
tions to the training procedure of Faster R-CNN to accommodate the DALUPI setting. Unlike the two-stage
estimator, we train Faster R-CNN (both ˆfandˆg) end-to-end, minimizing both losses at once. In entity
classification experiments (see Table 3 and Figure 5), we also train this model in a LUPI setting, where no
information from the target domain is used, but privileged information from the source domain is used.
4 Experiments
We evaluate the empirical benefits of learning using privileged information, compared to the other data
availability settings in Table 1, across four UDA image classification tasks where PI is available in the forms
described in Section 3. Widely used datasets for UDA evaluation like OfficeHome (Venkateswara et al.,
2017) and large-scale benchmark suites like DomainBed (Gulrajani & Lopez-Paz, 2021), VisDA (Peng et al.,
2017) and WILDS (Koh et al., 2021) do notinclude privileged information and cannot be used for evaluation
here. Thus, we first compare our method to baselines on the recent CelebA task (Xie et al., 2020) which
includes PI in the form of binary attributes (Section 4.1). Additionally, we propose three new tasks based on
well-known image classification data sets with regions of interest as PI (Section 4.2–4.4). In Section 4.1 and
4.2, we use the two-stage estimator with the subnetwork ˆfbased on the ResNet-18 architecture (He et al.,
2016a). In Section 4.3 and 4.4, we use our variant of Faster R-CNN with a ResNet-50 backbone.
Our goal is to collect evidence that DALUPI improves adaptation bias and sample efficiency compared to
methods that do not make use of PI. We choose baselines to illustrate these two disparate settings. First,
we compare DALUPI to supervised learning baselines, SL-S and SL-T, trained on labeled examples from
the source and target domain, respectively. SL-S is a simple but strong baseline: On benchmark suites like
DomainBed and WILDS, there is still no UDA method that consistently outperforms SL-S (ERM) without
transfer learning (Gulrajani & Lopez-Paz, 2021; Koh et al., 2021). SL-T serves as an oracle comparison since
it uses labels from the target domain which are normally unavailable in UDA. Second, we compare DALUPI
to two UDA methods—domain adversarial neural networks (DANN) (Ganin et al., 2016) and the margin
disparity discrepancy (MDD) (Zhang et al., 2019)—which have theoretical guarantees but do not make use
of PI. These baselines are all based on the ResNet architecture. In Section 4.1, we compare DALUPI also to
In-N-Out (Xie et al., 2020), which was designed to make use of auxiliary (privileged) attributes for training
domain adaptation models. We do not include this model in other experiments as it was not designed to
use regions of interest as privileged information. The exact architectures of all models and baselines are
described in Appendix A, along with details on experimental setup and hyperparameters.
Foreachtaskandtask-specificsetting(labelskew, amountofprivilegedinformation, etc.), wetrain10models
from each relevant class using hyperparameters randomly selected from given ranges (see Appendix A). For
DANN and MDD, the trade-off parameter, which regularizes domain discrepancy in representation space,
increases from 0 to 0.1 during training; for MDD, the margin parameter is set to 3. All models are evaluated
on a held-out validation set from the source domain and the best-performing model in each class is then
evaluated on held-out test sets from both domains. For SL-T, we use a held-out validation set from the target
domain. We repeat this procedure over 5 or 10 seeds, controlling the data splits and the random number
generation. We report accuracy and area under the ROC curve (AUC) with 95 %confidence intervals
computed by bootstrapping over the seeds.
4.1 Celebrity Photo Classification With Binary Attributes as PI
In the case where privileged information is available as binary attributes, we follow Xie et al. (2020) who
introduced a binary classification task based on the CelebA dataset (Liu et al., 2015), where the goal is
to predict whether the person in an image has been identified as male or female ( Y) in one of the binary
9Published in Transactions on Machine Learning Research (09/2024)
Table 2: Celebrity photo classification. DALUPI per-
forms comparably to the In-N-Out models in Xie et al.
(2020). Note: In-N-Out results are reported as the av-
erage of 5 trials with 90 %confidence intervals.
Target accuracy
SL-T 86.6 (86.3, 86.9)
SL-S 78.4 (77.1, 80.0)
DANN 78.2 (76.2, 80.3)
MDD 78.3 (77.5, 79.1)
In-N-Out (w/o pretraining) 78.5 (77.2, 79.9)
In-N-Out (w. pretraining) 79.4 (78.7, 80.1)
In-N-Out (rep. self-training) 80.4 (79.7, 81.1)
DALUPI (W∼T) 76.4 (73.8, 78.6)
DALUPI (W∼S,T) 80.3 (77.9, 82.7)
0.25 0.50 0.75 1.00
Skew/epsilon10.20.40.60.81.0AccuracySL-T
SL-S
DALUPI
DANN
MDDFigure 4: Digit classification. Target domain accu-
racy as a function of association ϵbetween back-
ground and label in S. As the skew increases,
thetarget-domainperformanceofthenon-privileged
models deteriorates.
attributes that accompanies the data set’s photos of celebrities ( X). Like Xie et al. (2020), we use 7 of the
40 other attributes ( Bald,Bangs,Mustache ,Smiling,5_o_Clock Shadow ,Oval_Face , and Heavy_Makeup )
as a vector of privileged information W∈{0,1}7. The target and source domains are defined by people
wearing (T) and not wearing ( S) a hat. The respective datasets contain 3,000 and 2,000 images. An extra
30,000 unlabeled source samples are available to train estimators (DALUPI and In-N-Out) that can utilize
privileged information from both source and target. More details can be found in (Xie et al., 2020) and in
Appendix A.3.
Table 2 shows the target accuracy for each model. We observe that when DALUPI is provided with PI from
both source and target, it performs comparably to the best-performing In-N-Out model proposed by Xie
et al. (2020), while outperforming other feasible baselines on average. Confidence intervals overlap for all
feasible models. Notably, the best-performing In-N-Out models require four or more rounds of training to
achieve their results (baseline, auxiliary input, auxiliary output pre-training, tuning and self-training) (Xie
et al., 2020). Both DALUPI and In-N-Out benefit from access to privileged information from both the source
and target domain (pre/self-training for In-N-Out).
Finally, it is worth noting that neither covariate shift, nor sufficiency are likely to hold with respect to W
in this task. Specifically, photos with none of the 7 attributes active, w=0, have different label rates and
majority label in SandT(the rates of labels are ¯YS= 0.64and ¯YT= 0.46, respectively) and therefore
P(Y|W)is not constant, i.e. covariate shift is violated. In addition, the best model we have found trained
onWalone achieves only 65 %accuracy, compared to the results in Table 2—sufficiency is unlikely to hold.
Thus, DALUPI is robust to violations of these assumptions.
4.2 Digit Classification With Single Region of Interest as PI
We construct a synthetic image dataset, based on the assumptions of Proposition 1, to verify that there
are problems where DALUPI is guaranteed successful transfer but standard UDA is not. Starting from
CIFAR-10 (Krizhevsky, 2009) images upscaled to 128×128, we insert a random 28×28digit image from
the MNIST dataset (Lecun, 1998), with a label in the range 0–4, into a random location of each CIFAR-10
image, forming the input image X(see Figure 1 (top) for examples). The label Y∈{0,..., 4}is determined
by the MNIST digit. We store the bounding box around the inserted digit image and use the pixels contained
within it as privileged information Wduring training. The domains are constructed using CIFAR-10’s first
five and last five classes as source and target backgrounds, respectively. Both source and target datasets
contain 15,298 images each. To increase the difficulty of the task, we make the digit be the mean color of the
10Published in Transactions on Machine Learning Research (09/2024)
Table 3: Entity classification. UDA models have
accesstoallunlabeledtargetsamples, LUPItoallPI
(source), and DALUPI to all PI (source and target).
Source AUC Target AUC
SL-T 60.1 (58.7, 61.5) 69.0 (68.1, 69.9)
SL-S 69.5 (68.6, 70.4) 63.0 (61.6, 64.2)
DANN 68.1 (67.5, 68.7) 62.5 (61.9, 63.1)
MDD 62.4 (61.1, 63.9) 57.7 (56.3, 59.2)
LUPI 69.3 (68.5, 70.1) 65.9 (65.0, 66.8)
DALUPI 71.4 (70.3, 72.4) 68.2 (66.3, 70.1)
0.0 0.5 1.0
nPI(S)
nPI(T) = 00.50.60.70.8AUCSL-T
SL-S
DALUPI
LUPI
DANN
MDD
0.0 0.5 1.0
nPI(T)
nPI(S) = 1Figure 5: Entity classification. Target domain AUC.
The performance of SL-S and SL-T is extended across
the x-axes for visual purposes. DANN and MDD use
an increasing fraction of target samples ˜xbut no PI.
dataset and make the digit background transparent so that the border of the image is less distinct. This may
slightly violate Assumption 2 with respect to the region of interest Wsince the backgrounds differ between
domains.
To understand how successful transfer depends on domain overlap and access to sufficient privileged infor-
mation, we include a skew parameter ϵ∈[1
c,1], wherec= 5is the number of digit classes, which determines
the correlation between digits and backgrounds. For a source image iwith digit label Yi∈ {0,..., 4},
we select a random CIFAR-10 image with class Bi∈{0,..., 4}with probability P(Bi=b|Yi=y) =
{ϵ,ifb=y; (1−ϵ)/(c−1),otherwise}. For target images, digits and backgrounds are matched uniformly
at random. The choice ϵ=1
cyields a uniform distribution and ϵ= 1is equivalent to the background carrying
as much signal as the privileged information. We hypothesize that ϵ= 1is the worst possible case where
confusion of the model is likely, which would lead to poor adaptation under domain shift.
In Figure 4, we observe the conjectured behavior. As the skew ϵand the association between background
and label increases, the performance of SL-S decreases rapidly on the target domain. At ϵ= 1, it performs
no better than random guessing, likely because the model has learned to associate spurious features in the
background with the label of the digit. We also observe that DANN and MDD deteriorate in performance
with increased correlation between the label and the background. In contrast, DALUPI is unaffected by the
skew as the subset of pixels extracted by ˆfonly carries some of the background with it, while containing
sufficient information to make good predictions. Interestingly, DALUPI also seems to be as good or slightly
better than the oracle SL-T in this setting. This may be due to improved sample efficiency from using PI.
4.3 Entitity Classification With Multiple Regions of Interest as PI
Next, we consider multi-label classification of the presence of four types of entities (persons, cats, dogs, and
birds) indicated by a binary vector Y∈{0,1}4for imagesXfrom the MS-COCO dataset (Lin et al., 2014).
PI is used to localize regions of interest Wrelated to the entities, provided as bounding box annotations. We
define source and target domains SandTas indoor and outdoor images, respectively. Indoor images are
extracted by filtering out images from the MS-COCO super categories “indoor” and “appliance” that also
contain at least one of the four main label classes. Outdoor images are extracted using the super categories
“vehicle” and “outdoor”. In total, there are 5,231 images in the source and 5,719 images in the target domain;
the distribution of labels is provided in Appendix A.5.
Sufficiency is likely to hold in this task because the pixels contained in a bounding box should be sufficient
for an annotator to classify the entity according to the four categories above, irrespective of the pixels outside
11Published in Transactions on Machine Learning Research (09/2024)
Table 4: X-ray task. Test AUC for the three pathologies in the
target domain for all considered models. Boldface indicates the
best-performing feasible model; SL-T uses target labels.
ATL CM PE
SL-T 57 (56, 58) 59 (55, 63) 79 (78, 80)
SL-S 55 (55, 56) 61 (58, 64) 73 (70, 75)
DANN 53 (51, 55) 55 (53, 58) 55 (51, 61)
MDD 49 (48, 50) 51 (51, 52) 51 (48, 54)
DALUPI 55 (55, 56) 72 (71, 73) 74 (72, 76)
Figure 6: Left: Example from the X-ray
target test set with label CM. The red rect-
angle indicates the bounding box predicted
by DALUPI. Right: saliency map for CM
for SL-S.
of the box. Similarly, covariate shift is likely to hold since the label attributed to the pixels in a bounding
box should be the same, whether the entity is indoor or outdoor.
We study the effect of adding privileged information by first training the end-to-end model in a LUPI setting,
using all (x,y)samples from the source domain and increasing the fraction of inputs for which PI is available,
nPI(S), from 0 to 1. We then train the model in a DALUPI setting, increasing the fraction of (˜x,˜w)samples
from the target domain, nPI(T), from 0 to 1, while keeping nPI(S) = 1. We train SL-S and SL-T using all
available data and increase the fraction of unlabeled target samples used by DANN and MDD from 0.2 to 1
while using all data from the source domain.
Table 3 shows the models’ source and target domain AUC, averaged over the four entity classes, when
the UDA models have access to all unlabeled target samples, LUPI to all PI from the source domain, and
DALUPI to all PI from both domains. Clearly, DALUPI yields a substantial gain in adaptation. As we see
in Figure 5, the performance of LUPI increases as nPI(S)increases. When additional (˜x,˜w)samples from
the target domain are added, DALUPI outperforms SL-S and approaches the performance of SL-T. We note
that DANN and MDD do not benefit as much from added unlabeled target samples as DALUPI does. Their
weak performance could be explained by difficulties in adversarial training. The gap between LUPI and
SL-S fornPI(S) = 0is anticipated; we do not expect the detection network to work well without bounding
box supervision.
4.4 X-ray Classification With Multiple Regions of Interest as PI
As a real-world application, we study detection of pathologies in chest X-ray images. We use the ChestX-
ray8 dataset (Wang et al., 2017) as source domain and the CheXpert dataset (Irvin et al., 2019) as target
domain.1As PI, we use the regions of pixels associated with each found pathology, as annotated by domain
experts using bounding boxes. For the CheXpert dataset, only pixel-level segmentations are available, and
we create bounding boxes that tightly enclose the segmentations. It is not obvious that the pixels within
such a bounding box are sufficient for classifying the pathology. For this reason, we suspect that some of
the assumptions of Proposition 1 may be violated. However, as we find below, DALUPI improves empirical
performance compared to baselines for small training sets, thereby demonstrating increased sample efficiency.
We consider the three pathologies that exist in both datasets and for which there are annotated findings:
atelectasis(ATL:collapsedlung), cardiomegaly(CM:enlargedheart), andpleuraleffusion(PE:wateraround
the lung). There are 457 and 118 annotated images in the source and target domain, respectively. We train
DALUPI, DANN and MDD using all these images. SL-S is trained with the 457 source images and SL-T with
the 118 target images as well as 339 labeled but non-annotated target images. Neither SL-S, SL-T, DANN,
nor MDD support using privileged information. The distributions of labels and bounding box annotations
are given in Appendix A.6.
1This study was granted IRB approval.
12Published in Transactions on Machine Learning Research (09/2024)
In Table 4, we present the per-class AUCs in the target domain. DALUPI outperforms all baseline models,
including the target oracle, in detecting CM. For ATL and PE, it performs similarly to or better than the
other feasible models. That SL-T is better at predicting PE is not surprising because this pathology is most
prevalent in the target domain. In Figure 6, we show a single-finding image from the target test set with
ground-truth label CM. The predicted bounding box of DALUPI with the highest probability is added to
the image. DALUPI identifies the region of interest (the heart) and makes a correct classification. The
rightmost panel shows the saliency map for the ground truth class for SL-S. We see that the gradients are
mostly constant, indicating that the model is uncertain. In Appendix B, we show AUC for CM for the
models trained with additional examples withoutbounding box annotations. We find that SL-S reaches
the performance of DALUPI when a large amount of labeled examples are provided. This indicates that
identifiability is not the main obstacle for adaptation and that PI improves sample efficiency.
5 Related Work
Learning using privileged information was first introduced by Vapnik & Vashist (2009) for support vector
machines (SVMs), and was later extended to empirical risk minimization (Pechyony & Vapnik, 2010). Meth-
ods using PI, which is sometimes called hidden information or side information, has since been applied in
many diverse settings such as healthcare (Shaikh et al., 2020), finance (Silva et al., 2010), clustering (Fey-
ereisl & Aickelin, 2012) and image recognition (Vu et al., 2019; Hoffman et al., 2016). Related concepts
include knowledge distillation (Hinton et al., 2015; Lopez-Paz et al., 2016), where a teacher model trained
on additional variables adds supervision to a student model, and weak supervision (Robinson et al., 2020)
where so-called weak labels are used to learn embeddings, subsequently used for the task of interest. Further-
more, in the realm of NLP, there is the related concept of learning using feature feedback, where additional
annotations that are related to the associated task label are provided (Katakkar et al., 2022; Kaushik et al.,
2021). These works are mostly of an empirical nature, and theoretical work on the subject either considers
linear models/SVMs (Poulis & Dasgupta, 2017) or a teacher/student-type setup where additional supervi-
sion is given when the model predicts incorrectly (Dasgupta et al., 2018). The use of PI for deep image
classification has been investigated by Chen et al. (2017) and Han et al. (2023) but these works only cover
regular supervised learning where source and target domains coincide. Further, Sharmanska et al. (2014)
used regions of interest in images as privileged information to improve the accuracy of image classifiers, but
did not consider domain shift either.
Domain adaptation using PI has been considered before with SVMs (Li et al., 2022; Sarafianos et al., 2017),
but not with more complex classifiers such as neural networks. Vu et al. (2019) used scene depth as PI in
semantic segmentation using deep neural networks. However, they only used PI from the source domain
and they did not provide any theoretical analysis. Xie et al. (2020) provide some theoretical results for a
similar setup to ours. However, these are specifically for linear classifiers while our approach holds for any
type of classifier. Motiian (2019) investigated PI and domain adaptation using the information bottleneck
method for visual recognition. However, their setting differs from ours in that each observation comprises
source-domain and target-domain features, a label and PI. Another related approach is that of subsidiary
tasks (Kundu et al., 2022; Ye et al., 2022). However, in these settings the additional tasks performed are
used to build a representation that helps with the main task through domain alignment. Our approach
instead seeks to use information which directly relates to the main task.
6 Discussion
We have presented DALUPI: unsupervised domain adaptation by learning using privileged information (PI).
The framework provides provable guarantees for adaptation under relaxed assumptions on the input features,
at the cost of collecting a larger variable set, such as attribute or bounding box annotations, during training.
Our analysis inspired practical algorithms for image classification which we evaluated using three kinds of
privileged information. In our experiments, we demonstrated tasks where our approach is successful while
existingadaptationmethodsfail. Weobservedempiricallyalsothatmethodsusingprivilegedinformationare
more sample-efficient than comparable non-privileged learners, in line with the literature. In fact, DALUPI
13Published in Transactions on Machine Learning Research (09/2024)
models occasionally even outperform oracle models trained using target labels due to their sample efficiency.
Thus, we recommend considering these methods in small-sample settings.
The main contribution of the paper is the proposed learning paradigm for domain adaptation with privileged
information. Since common benchmark datasets in UDA lack privileged information related to the learning
problem, we created three new tasks for evaluating our framework, see Section 4.2–4.4, which itself is a
notable contribution. We hope that this work inspires the community to develop additional datasets for
UDA using privileged information.
Toavoidassumingthatdomainoverlapissatisfiedwithrespecttoinputcovariates, werequirethatthelabelis
conditionally independent of the input features given the PI—that the PI is “sufficient”. This is a limitation
whenever sufficiency is difficult to verify. However, in our motivating example of image classification, a
domain expert could choosePI so that sufficiency is reasonably justified. Moreover, in experiments on
CelebA, we see empirical gains from our approach even when sufficiency is known to be violated. Another
limitation is that we still rely on overlap in the privileged information, W, which may also be violated in some
circumstances. It is more likely that overlap holds for Wwhen, for example, it is a subset of X, as argued
in Figure 2. Designing experiments to test how sensitive DALUPI is to violations of these assumptions is an
interesting direction for future work.
The use of regions of interest as privileged information brings up an interesting point concerning the rela-
tionship between the label and the privileged information. In object detection tasks, it is natural to treat the
bounding box coordinates as label information. In this work, however, the learning tasks were multi-class
and multi-label image classification, not object detection. Producing a perfect box Wwas not the goal of the
learning task, and the bounding boxes were therefore neither critical for the task nor for the labels. Instead,
the bounding boxes were privileged information and our experiments in Section 4.2–4.4 sought to quantify
the value of this added information, compared to not having it. Therefore, we compared our method to
image classification baselines. It is not obvious a priori that learning from object locations improves the
adaptation of image classifiers.
If there is a lack of PI available to the models one might mitigate this by either 1) using the limited amount
of PI that is available to learn ˆgand assume that it is good enough to achieve reasonable overall performance;
or 2) using the learned ˆfto create “weak” PI labels for the inputs that are missing PI, similar to the work
of e.g. Robinson et al. (2020). However, one should note that the latter approach might bias the model in
unintended ways and, as such, should be undertaken with some caution.
In future work, our framework could be applied to a more diverse set of tasks, with different modalities
of inputs and privileged information to investigate if the findings here can be replicated and extended.
Moreover, such work could consider different types and degrees of shifts to further corroborate the stability
and resistance to noise which we observe here. More broadly, using PI may be viewed as “building in”
domain knowledge in the structure of the adaptation problem and we see this as a promising direction for
further research.
Acknowledgments
This work was partially supported by the Wallenberg AI, Autonomous Systems and Software Program
(WASP) funded by the Knut and Alice Wallenberg Foundation
The computations and data handling were enabled by resources provided by the National Academic Infras-
tructure for Supercomputing in Sweden (NAISS), partially funded by the Swedish Research Council through
grant agreement no. 2022-06725.
References
Sara Beery, Grant Van Horn, and Pietro Perona. Recognition in terra incognita. In Proceedings of the
European conference on computer vision (ECCV) , pp. 456–473, 2018.
Shai Ben-David and Ruth Urner. On the hardness of domain adaptation and the utility of unlabeled target
samples. In International Conference on Algorithmic Learning Theory , pp. 139–153. Springer, 2012.
14Published in Transactions on Machine Learning Research (09/2024)
Shai Ben-David, John Blitzer, Koby Crammer, and Fernando Pereira. Analysis of representations for domain
adaptation. Advances in neural information processing systems , 19, 2006.
Adam Breitholtz and Fredrik Daniel Johansson. Practicality of generalization guarantees for unsupervised
domain adaptation with neural networks. Transactions on Machine Learning Research , 2022.
YunpengChen, XiaojieJin, JiashiFeng, andShuichengYan. Traininggrouporthogonalneuralnetworkswith
privileged information. In Proceedings of the Twenty-Sixth International Joint Conference on Artificial
Intelligence, IJCAI-17 , pp. 1532–1538, 2017.
Corinna Cortes, Yishay Mansour, and Mehryar Mohri. Learning bounds for importance weighting. In
Advances in Neural Information Processing Systems , volume 23, 2010.
Sanjoy Dasgupta, Akansha Dey, Nicholas Roberts, and Sivan Sabato. Learning from discriminative feature
feedback. In Advances in Neural Information Processing Systems 31 (NeurIPS 2018) , 2018.
Antoine de Mathelin, François Deheeger, Guillaume Richard, Mathilde Mougeot, and Nicolas Vayatis.
ADAPT: Awesome Domain Adaptation Python Toolbox. arXiv preprint arXiv:2107.03049 , 2021.
Alexander D’Amour, Peng Ding, Avi Feller, Lihua Lei, and Jasjeet Sekhon. Overlap in observational studies
with high-dimensional covariates. Journal of Econometrics , 221(2):644–654, 2021.
Jan Feyereisl and Uwe Aickelin. Privileged information for data clustering. Information Sciences , 194:4–23,
2012.
Yaroslav Ganin, Evgeniya Ustinova, Hana Ajakan, Pascal Germain, Hugo Larochelle, François Lavi-
olette, Mario Marchand, and Victor Lempitsky. Domain-Adversarial Training of Neural Networks.
arXiv:1505.07818 [cs, stat] , May 2016. arXiv: 1505.07818.
Pascal Germain, Amaury Habrard, François Laviolette, and Emilie Morvant. PAC-Bayes and Domain Adap-
tation.Neurocomputing , 379:379–397, February 2020. arXiv: 1707.05712.
Ross Girshick. Fast R-CNN. In Proceedings of the IEEE international conference on computer vision , pp.
1440–1448, 2015.
Ishaan Gulrajani and David Lopez-Paz. In search of lost domain generalization. In International Conference
on Learning Representations , 2021.
Dongyoon Han, Junsuk Choe, Seonghyeok Chun, John Joon Young Chung, Minsuk Chang, Sangdoo Yun,
Jean Y. Song, and Seong Joon Oh. Neglected free lunch - learning image classifiers using annotation
byproducts. In Proceedings of the IEEE/CVF International Conference on Computer Vision (ICCV) , pp.
20200–20212, October 2023.
Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Deep residual learning for image recognition. In
Proceedings of the IEEE conference on computer vision and pattern recognition , pp. 770–778, 2016a.
Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Deep residual learning for image recognition. In
2016 IEEE Conference on Computer Vision and Pattern Recognition (CVPR) , pp. 770–778, 2016b.
Geoffrey Hinton, Oriol Vinyals, and Jeff Dean. Distilling the knowledge in a neural network. arXiv preprint
arXiv:1503.02531 , 2015.
Judy Hoffman, Saurabh Gupta, and Trevor Darrell. Learning with Side Information through Modality
Hallucination. In 2016 IEEE Conference on Computer Vision and Pattern Recognition (CVPR) , pp.
826–834. IEEE, 2016.
Jeremy Irvin, Pranav Rajpurkar, Michael Ko, Yifan Yu, Silviana Ciurea-Ilcus, Chris Chute, Henrik Mark-
lund, Behzad Haghgoo, Robyn Ball, Katie Shpanskaya, et al. Chexpert: A large chest radiograph dataset
with uncertainty labels and expert comparison. In Proceedings of the AAAI conference on artificial intel-
ligence, volume 33, pp. 590–597, 2019.
15Published in Transactions on Machine Learning Research (09/2024)
Fredrik D Johansson, David Sontag, and Rajesh Ranganath. Support and invertibility in domain-invariant
representations. In The 22nd International Conference on Artificial Intelligence and Statistics , pp. 527–
536. PMLR, 2019.
BastianJungandFredrikDanielJohansson. Efficientlearningofnonlinearpredictionmodelswithtime-series
privileged information. In Advances in Neural Information Processing Systems , 2022.
Rickard Karlsson, Martin Willbo, Zeshan Hussain, Rahul G. Krishnan, David A. Sontag, and Fredrik D.
Johansson. Using time-series privileged information for provably efficient learning of prediction models.
InProceedings of The 25th International Conference on Artificial Intelligence and Statistics 2022 , 2021.
Anurag Katakkar, Clay H. Yoo, Weiqin Wang, Zachary Lipton, and Divyansh Kaushik. Practical benefits of
feature feedback under distribution shift. In Proceedings of the Fifth BlackboxNLP Workshop on Analyzing
and Interpreting Neural Networks for NLP , pp. 346–355, 2022.
D. Kaushik, A. Setlur, E. H. Hovy, and Z. C. Lipton. Explaining the efficacy of counterfactually augmented
data. In International Conference on Learning Representations , 2021.
Pang Wei Koh, Shiori Sagawa, Henrik Marklund, Sang Michael Xie, Marvin Zhang, Akshay Balsubramani,
Weihua Hu, Michihiro Yasunaga, Richard Lanas Phillips, Irena Gao, et al. Wilds: A benchmark of in-
the-wild distribution shifts. In International Conference on Machine Learning , pp. 5637–5664. PMLR,
2021.
Alex Krizhevsky. Learning multiple layers of features from tiny images. Technical report, University of
Toronto, 2009.
Jogendra Nath Kundu, Suvaansh Bhambri, Akshay Kulkarni, Hiran Sarkar, Varun Jampani, and
R. Venkatesh Babu. Concurrent subsidiary supervision for unsupervised source-free domain adaptation.
InProceedings of the 17th European Conference on Computer Vision (ECCV) , pp. 177–194, 2022.
Yann Lecun. Gradient-Based Learning Applied to Document Recognition. proceedings of the IEEE , 86(11):
47, 1998.
Yanmeng Li, Huaijiang Sun, and Wenzhu Yan. Domain adaptive twin support vector machine learning using
privileged information. Neurocomputing , 469:13–27, 2022.
Tsung-Yi Lin, Michael Maire, Serge Belongie, James Hays, Pietro Perona, Deva Ramanan, Piotr Dollar,
and Larry Zitnick. Microsoft COCO: Common Objects in Context. In ECCV. European Conference on
Computer Vision, September 2014.
Tsung-Yi Lin, Piotr Dollár, Ross Girshick, Kaiming He, Bharath Hariharan, and Serge Belongie. Feature
pyramid networks for object detection. In Proceedings of the IEEE conference on computer vision and
pattern recognition , pp. 2117–2125, 2017.
Ziwei Liu, Ping Luo, Xiaogang Wang, and Xiaoou Tang. Deep learning face attributes in the wild. In 2015
IEEE International Conference on Computer Vision (ICCV) , pp. 3730–3738, 2015.
Mingsheng Long, Jianmin Wang, Guiguang Ding, Jiaguang Sun, and Philip S. Yu. Transfer feature learning
withjointdistributionadaptation. In Proceedings of the 2013 IEEE International Conference on Computer
Vision, ICCV ’13, pp. 2200–2207, USA, 2013. IEEE Computer Society.
David Lopez-Paz, Leon Bottou, Bernhard Schölkopf, and Vladimir Vapnik. Unifying distillation and privi-
leged information. In International Conference on Learning Representations (ICLR 2016) , 2016.
Mehryar Mohri, Afshin Rostamizadeh, and Ameet Talwalkar. Foundations of Machine Learning . MIT Press,
second edition, 2018.
Saeid Motiian. Domain Adaptation and Privileged Information for Visual Recognition . PhD thesis, West
Virginia University, 2019. Graduate Theses, Dissertations, and Problem Reports. 6271.
16Published in Transactions on Machine Learning Research (09/2024)
Shota Orihashi, Mana Ihori, Tomohiro Tanaka, and Ryo Masumura. Unsupervised Domain Adaptation
for Dialogue Sequence Labeling Based on Hierarchical Adversarial Training. In Interspeech 2020 , pp.
1575–1579. ISCA, October 2020.
Dmitry Pechyony and Vladimir Vapnik. On the theory of learnining with privileged information. In Advances
in Neural Information Processing Systems , volume 23. Curran Associates, Inc., 2010.
Xingchao Peng, Ben Usman, Neela Kaushik, Judy Hoffman, Dequan Wang, and Kate Saenko. Visda: The
visual domain adaptation challenge. arXiv preprint arXiv:1710.06924 , 2017.
Stefanos Poulis and Sanjoy Dasgupta. Learning with feature feedback: from theory to practice. In Interna-
tional Conference on Artificial Intelligence and Statistics (AISTATS) , 2017.
S Ren, K He, R Girshick, and J Sun. Faster R-CNN: Towards real-time object detection with region proposal
networks. IEEE Transactions on Pattern Analysis and Machine Intelligence , 39(6):1137–1149, 2016.
Joshua Robinson, Stefanie Jegelka, and Suvrit Sra. Strength from Weakness: Fast Learning Using Weak
Supervision. In Proceedings of the 37th International Conference on Machine Learning , pp. 8127–8136.
PMLR, November 2020.
Nikolaos Sarafianos, Michalis Vrigkas, and Ioannis A. Kakadiaris. Adaptive SVM+: Learning with privileged
information for domain adaptation. In Proceedings of the IEEE International Conference on Computer
Vision (ICCV) Workshops , Oct 2017.
Tawseef Ayoub Shaikh, Rashid Ali, and M. M. Sufyan Beg. Transfer learning privileged information fuels
CAD diagnosis of breast cancer. Machine Vision and Applications , 31(1):9, February 2020.
Viktoriia Sharmanska, Novi Quadrianto, and Christoph H. Lampert. Learning to Transfer Privileged Infor-
mation.arXiv:1410.0389 [cs, stat] , October 2014. arXiv: 1410.0389.
Kendrick Shen, Robbie M Jones, Ananya Kumar, Sang Michael Xie, Jeff Z. Haochen, Tengyu Ma, and Percy
Liang. Connect, not collapse: Explaining contrastive learning for unsupervised domain adaptation. In
Kamalika Chaudhuri, Stefanie Jegelka, Le Song, Csaba Szepesvari, Gang Niu, and Sivan Sabato (eds.),
Proceedings of the 39th International Conference on Machine Learning , volume 162 of Proceedings of
Machine Learning Research , pp. 19847–19878. PMLR, 17–23 Jul 2022.
Hidetoshi Shimodaira. Improving predictive inference under covariate shift by weighting the log-likelihood
function. Journal of statistical planning and inference , 90(2):227–244, 2000.
Catarina Silva, Armando Vieira, Antonio Gaspar-Cunha, and Joao Carvalho das Neves. Financial distress
model prediction using SVM+. In Proceedings of the International Joint Conference on Neural Networks ,
pp. 1–7, July 2010.
M. Sugiyama, T. Suzuki, and T. Kanamori. Density Ratio Estimation in Machine Learning . Cambridge
books online. Cambridge University Press, 2012.
Marian Tietz, Thomas J. Fan, Daniel Nouri, Benjamin Bossan, and skorch Developers. skorch: A scikit-learn
compatible neural network library that wraps PyTorch , July 2017.
Vladimir Vapnik and Rauf Izmailov. Learning Using Privileged Information: Similarity Control and Knowl-
edge Transfer. Journal of Machine Learning Research , 16:2023–2049, 2015.
Vladimir Vapnik and Akshay Vashist. A new learning paradigm: Learning using privileged information.
Neural Networks , 22(5):544–557, July 2009.
Hemanth Venkateswara, Jose Eusebio, Shayok Chakraborty, and Sethuraman Panchanathan. Deep hashing
network for unsupervised domain adaptation. In Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition , pp. 5018–5027, 2017.
17Published in Transactions on Machine Learning Research (09/2024)
Tuan-Hung Vu, Himalaya Jain, Maxime Bucher, Matthieu Cord, and Patrick Pérez Pérez. Dada: Depth-
aware domain adaptation in semantic segmentation. In 2019 IEEE/CVF International Conference on
Computer Vision (ICCV) , pp. 7363–7372, 2019.
Xiaosong Wang, Yifan Peng, Le Lu, Zhiyong Lu, Mohammadhadi Bagheri, and Ronald M Summers. Chestx-
ray8: Hospital-scale chest X-ray database and benchmarks on weakly-supervised classification and local-
ization of common thorax diseases. In Proceedings of the IEEE conference on computer vision and pattern
recognition , pp. 2097–2106, 2017.
Yifan Wu, Ezra Winston, Divyansh Kaushik, and Zachary Lipton. Domain adaptation with asymmetrically-
relaxed distribution alignment. In International conference on machine learning , pp. 6872–6881. PMLR,
2019.
Sang Michael Xie, Ananya Kumar, Robbie Jones, Fereshte Khani, Tengyu Ma, and Percy Liang. In-n-out:
Pre-training and self-training using auxiliary information for out-of-distribution robustness. arXiv preprint
arXiv:2012.04550 , 2020.
Yalan Ye, Ziqi Liu, Yangwuyong Zhang, Jingjing Li, and Hengtao Shen. Alleviating style sensitivity then
adapting: Source-free domain adaptation for medical image segmentation. In Proceedings of the 30th ACM
International Conference on Multimedia , MM ’22, pp. 1935–1944, New York, NY, USA, 2022. Association
for Computing Machinery.
John R Zech, Marcus A Badgeley, Manway Liu, Anthony B Costa, Joseph J Titano, and Eric Karl Oermann.
Variable generalization performance of a deep learning model to detect pneumonia in chest radiographs:
a cross-sectional study. PLoS medicine , 15(11):e1002683, 2018.
Yuchen Zhang, Tianle Liu, Mingsheng Long, and Michael Jordan. Bridging theory and algorithm for domain
adaptation. In International conference on machine learning , pp. 7404–7413. PMLR, 2019.
Han Zhao, Remi Tachet Des Combes, Kun Zhang, and Geoffrey Gordon. On learning invariant representa-
tions for domain adaptation. In International Conference on Machine Learning , pp. 7523–7532. PMLR,
2019.
A Experimental Details
In this section, we give further details of the experiments. All code is written in Python and we
mainly use PyTorch in combination with skorch (Tietz et al., 2017) for our implementations of the net-
works. For Faster R-CNN, we adapt the implementation provided by torchvision through the func-
tion fasterrcnn_resnet50_fpn . For DANN and MDD, we use the ADAPT TensorFlow implementation
(de Mathelin et al., 2021) with a ResNet-50-based encoder. We initially set the trade-off parameter λ, which
controls the amount of domain adaption regularization, to 0 and then increase it to 0.1 in 10,000 gradient
steps according to the formula λ=β(2/(1 +e−p)−1)/C, wherepincreases linearly from 0 to 1, βis a
parameter specified for each experiment, and C= 2/(1 +e−1)−1. For MDD, we fix the margin parameter
γto 3. The source and target baselines are based on the ResNet-50 architecture when PI is provided as
multiple regions of interest; otherwise, the ResNet-18 architecture is used. The architecture of DALUPI in
each experiment is specified in the respective subsection below.
We use the Adam optimizer in all experiments. Learning rate decay is treated as a hyperparameter. For
ADAPT models (DANN and MDD), the learning rate is either constant or decayed according to µ0/(1 +
αp)3/4, whereµ0is the initial learning rate, pincreases linearly from 0 to 1, and αis a parameter specified
in each experiment (see below). For non-ADAPT models, the learning rate is either constant or decayed by
a factor 0.1everynth epoch, where nis another hyperparameter.
For all models except LUPI and DALUPI, the classifier network following the encoder is a simple MLP with
two possible settings: Either it is a single linear layer from inputs to outputs or a three-layer network with
ReLU activations between the layers. This choice is treated as a hyperparameter in our experiments. The
nonlinear case has the following structure where nis the number of input features:
18Published in Transactions on Machine Learning Research (09/2024)
•fully connected layer with nneurons
•ReLU activation layer
•fully connected layer with n//2neurons
•ReLU activation layer
•fully connected layer with n//4neurons.
All models were trained using NVIDIA Tesla A40 GPUs and the development and evaluation of this study
required approximately 30,000 hours of GPU training. The code is available on GitHub: https://github.
com/Healthy-AI/dalupi .
A.1 DALUPI With Two-stage Classifier
Here, we describe in more detail how we construct our two-stage classifier for image classification when
privileged information is provided as a single region of interest as in the digit classification task (Section
4.2). When privileged information is provided as binary attributes, we can directly learn the two-stage
estimator according to Equation 2. In this task, it was found that using the cross entropy loss and using
continuous outputs from fprovided superior performance compared to other losses. In the digit classification
task, each image xihas a single label yi∈{0,..., 4}determined by the MNIST digit. Privileged information
is given by a single bounding box with coordinates ti∈R4enclosing a subset of pixels wicorresponding to
the digit. The training procedure is summarized in Algorithm 1 and further described below.
We first learn ˆdwhich is a function that takes target image data, ˜xi, and bounding box coordinates, ti, and
learns to output bounding box coordinates, ˆti, which should contain the privileged information wi. Note
that we do not exactly follow the setup in Equation 2 since we do not need to actually predict the pixel
values within the bounding box. If we find a good enough estimator of tiwe should minimize the loss of fin
Equation 2. To obtain the privileged information we apply a deterministic function ϕwhich crops and scales
an image using the associated bounding box, ti. We can now write the composition of these two functions as
ˆf(xi) =ϕ(xi,ˆd(xi))which outputs the privileged information. The function ϕis hard-coded and therefore
not learned.
In the second step, we learn ˆgto predict the label from the privileged information wi, which is a cropped
version ofxiwhere the cropping is defined by the bounding box tiaround the digit. This cropping and
resizing is performed by ϕ. When we evaluate the performance of this classifier we combine the two models
into one, ˆh(x) = ˆg(ϕ(x,ˆd(x))). We use the mean squared error loss for learning ˆdand categorical cross-
entropy (CCE) loss for ˆg.
Algorithm 1 Training of the two-stage model.
1:procedure Two_stage (˜xi,wi,ti,yi)
2:Empirically minimize1
m/summationtextm
i=1∥d(˜xi)−ti∥2and obtain ˆd.
3:Empirically minimize1
n/summationtextn
i=1CCE (g(wi),yi)and obtain ˆg.
4:Compose ˆd,ˆgandϕintoˆh(x) = ˆg(ϕ(x,ˆd(x))).
5:end procedure
A.2 DALUPI With Faster R-CNN
For multi-label classification, we adapt Faster R-CNN (Ren et al., 2016) outlined in Figure 7 and described
below. Faster R-CNN uses a region proposal network (RPN) to generate region proposals which are fed to a
detection network for classification and bounding box regression. This way of solving the task in subsequent
steps has similarities with our two-stage algorithm although Faster R-CNN can be trained end-to-end. We
make small modifications to the training procedure of the original model in the end of this section.
19Published in Transactions on Machine Learning Research (09/2024)
⋯RPNResNetFeature	MapsRoIPooling𝐿clsRPN𝐿regRPN𝐿clsdet𝐿regdetObject	proposals
Reference	boxes
Figure 7: Faster R-CNN (Ren et al., 2016) architecture. The RoI pooling layer and the classification and
regression layers are part of the Fast R-CNN detection network (Girshick, 2015).
The RPN generates region proposals relative to a fixed number of reference boxes—anchors—centered at
the locations of a sliding window moving over convolutional feature maps. Each anchor is assigned a binary
labelp∈{0,1}based on its overlap with ground-truth bounding boxes; positive anchors are also associated
with a ground-truth box with location t. The RPN loss for a single anchor is
LRPN(ˆp,p,ˆt,t) :=LRPN
cls(ˆp,p) +pLRPN
reg(ˆt,t), (3)
where ˆtrepresents the refined location of the anchor and ˆpis the estimated probability that the anchor
contains an object. The binary cross-entropy loss and a smooth L1loss are used for the classification loss
LRPN
clsand the regression loss LRPN
reg, respectively. For a mini-batch of images, the total RPN loss is computed
based on a subset of all anchors, sampled to have a ratio of up to 1:1 between positive and negative ditto.
A filtered set of region proposals are projected onto the convolutional feature maps. For each proposal, the
detection network—Fast R-CNN (Girshick, 2015)—outputs a probability ˆp(k)and a predicted bounding box
location ˆt(k)for each class k. Let ˆp= (ˆp(0),..., ˆp(K)), where/summationtext
kˆp(k) = 1,Kis the number of classes
and0represents a catch-all background class. For a single proposal with ground-truth coordinates tand
multi-class label u∈{0,...,K}, the detection loss is
Ldet(ˆp,u,ˆtu,t) =Ldet
cls(ˆp,u) +Iu≥1Ldet
reg(ˆtu,t), (4)
whereLdet
cls(ˆp,u) =−log ˆp(u)andLdet
regis a smooth L1loss. To obtain a probability vector for the entire
image, we maximize, for each class k, over the probabilities of all proposals.
During training, Faster R-CNN requires that all input images xcome with at least one ground-truth anno-
tation (bounding box) wand its corresponding label u. To increase sample-efficiency, we enable training the
model using non-annotated but labeled samples (x,y)from the source domain and annotated but unlabeled
samples (˜x,˜w)from the target domain. In the RPN, no labels are needed, and we simply ignore anchors from
non-annotated images when sampling anchors for the loss computation. For the computation of Equation
4, we handle the two cases separately. We assign the label u=−1to all ground-truth annotations from the
target domain and multiply Ldet
clsby the indicator Iu≥0. For non-annotated samples (x,y)from the source
domain, there are no box-specific coordinates tor labelsubut only the labels yfor the entire image. In this
case, 4 is undefined and we instead compute the binary cross-entropy loss between the per-image label and
the probability vector for the entire image.
We train the RPN and the detection network jointly as described in Ren et al. (2016). To extract feature
maps, we use a Feature Pyramid Network (Lin et al., 2017) on top of a ResNet-50 architecture He et al.
(2016b). We use the modified model in the experiments in Section 4.3 and 4.4. In Section 4.3, we also train
this model in a LUPI setting, where no information from the target domain is used.
20Published in Transactions on Machine Learning Research (09/2024)
A.3 Celebrity Photo Classification With Binary Attribute Vector
In our experiment based on CelebA (Liu et al., 2015), the input xis an RGB image which has been resized
to 64×64 pixels, the target yis a binary label for gender of the subject of the image, and the privileged
information ware 7 binary-valued attributes. The attributes used in this experiment are: Bald,Bangs,
Mustache ,Smiling,5_o_Clock_Shadow ,Oval_Face and Heavy_Makeup . We use a subset of the CelebA
dataset with 2,000 labeled source examples and 3,000 unlabeled target examples. We use 1,000 samples
each for the source validation set, source test set, and target test set, respectively. The target oracle, SL-T,
is trained using labels provided for the 3,000 target examples, with 20 %of these examples set aside for
validation. The same unlabeled validation set is used to validate the first DALUPI network, ˆf. When using
privileged information from the source domain to train ˆf, we use 30,000 extra samples (x,w)with PI.
For DALUPI, we use the two-stage estimator with the network ˆfbased on ResNet-18 followed by a non-linear
MLP. The network ˆgis an MLP with two hidden layers of with 256 neurons each. We train the models for
100 epochs. If the validation accuracy (or validation AUC for ˆf) does not improve for 10 subsequent epochs,
we stop the training earlier. For DALUPI, the early stopping patience is 15 for each network. We treat
the problem as multi-class classification with two classes and use the categorical cross entropy loss for SL-S,
SL-T, DANN, and MDD.
A.3.1 Hyperparameters
We randomly choose hyperparameters from the following predefined sets of values:
•SL-S and SL-T:
–batch size: (16,32,64)
–initial learning rate: ( 1.0×10−4,1.0×10−3)
–step sizenfor learning rate decay: (15, 30, 100)
–weight decay: ( 1.0×10−4,1.0×10−3)
–dropout (encoder): (0, 0.1, 0.2, 0.5)
–nonlinear classifier: ( True,False).
•DALUPI:
–batch size: (16,32,64)
–initial learning rate: ( 1.0×10−5,1.0×10−4,1.0×10−3)
–step sizenfor learning rate decay: (15, 30, 100)
–weight decay: ( 1.0×10−4,1.0×10−3).
•DANN:
–batch size: (16,32,64)
–initial learning rate: ( 1.0×10−4,1.0×10−3)
–parameterαfor learning rate decay: (0, 1.0)
–weight decay: ( 1.0×10−4,1.0×10−3)
–dropout (encoder): (0,0.1,0.2,0.5)
–width of discriminator network: (64,128,256)
–depth of discriminator network: (2,3)
–nonlinear classifier: ( True,False)
–parameterβfor adaption regularization decay: (0.1, 1.0, 10.0).
•MDD:
–batch size: (16,32,64)
–initial learning rate: ( 1.0×10−4,1.0×10−3)
21Published in Transactions on Machine Learning Research (09/2024)
–parameterαfor learning rate decay: (0, 1.0)
–weight decay: ( 1.0×10−4,1.0×10−3)
–dropout (encoder): (0,0.1,0.2,0.5)
–nonlinear classifier: ( True,False)
–maximum norm value for classifier weights: (0.5, 1.0, 2.0)
–parameterβfor adaption regularization decay: (0.1, 1.0, 10.0).
A.4 Digit Classification With Single Bounding Box as PI
In the digit classification task, we separate 20 %of the available source and target data into a test set. We
likewise use 20 %of the training data for validation purposes. For DALUPI we use ResNet-18 for the function
ˆf. We replace the default fully connected layer with a fully connected layer with 4 neurons to predict the
coordinates of the bounding box. The predicted bounding box is resized to a 28×28square no matter the
initial size. We use a simple convolutional neural network for the function ˆgwith the following structure:
•convolutional layer with 16 output channels, kernel size of 5, stride of 1, and padding of 2
•max pooling layer with kernel size 2, followed by a ReLU activation
•convolutional layer with 32 output channels, kernel size of 5, stride of 1, and padding of 2
•max pooling layer with kernel size 2, followed by a ReLU activation
•dropout layer with p= 0.4
•fully connected layer with 50 out features, followed by ReLU activation
•dropout layer with p= 0.2
•fully connected layer with 5 out features.
The model training is stopped when the best validation accuracy (or validation loss for ˆf) does not improve
over 10 epochs or when the model has been trained for 100 epochs, whichever occurs first. All models are
trained from scratch, without pretrained weights. We use the categorical cross entropy loss for SL-S, SL-T,
DANN, and MDD.
A.4.1 Hyperparameters
We randomly choose hyperparameters from the following predefined sets of values:
•SL-S and SL-T:
–batch size: (16,32,64)
–initial learning rate: ( 1.0×10−4,1.0×10−3)
–step sizenfor learning rate decay: (15, 30, 100)
–weight decay: ( 1.0×10−4,1.0×10−3)
–dropout (encoder): (0, 0.1, 0.2, 0.5)
–nonlinear classifier: ( True,False).
•DALUPI:
–batch size: (16,32,64)
–initial learning rate: ( 1.0×10−4,1.0×10−3)
–step sizenfor learning rate decay: (15, 30, 100)
–weight decay: ( 1.0×10−4,1.0×10−3).
22Published in Transactions on Machine Learning Research (09/2024)
Table 5: Marginal label distribution in source and target domains for the entity classification task based on
the MS-COCO dataset. The background class contains images where none of the four entities are present.
Domain Person Dog Cat Bird Background
Source 2,963 569 1,008 213 1,000
Target 3,631 1,121 423 712 1,000
•DANN:
–batch size: (16,32,64)
–initial learning rate: ( 1.0×10−4,1.0×10−3)
–parameterαfor learning rate decay: (0, 1.0)
–weight decay: ( 1.0×10−4,1.0×10−3)
–dropout (encoder): (0,0.1,0.2,0.5)
–width of discriminator network: (64,128,256)
–depth of discriminator network: (2,3)
–nonlinear classifier: ( True,False)
–parameterβfor adaption regularization decay: (0.1, 1.0, 10.0).
•MDD:
–batch size: (16,32,64)
–initial learning rate: ( 1.0×10−4,1.0×10−3)
–parameterαfor learning rate decay: (0, 1.0)
–weight decay: ( 1.0×10−4,1.0×10−3)
–dropout (encoder): (0,0.1,0.2,0.5)
–nonlinear classifier: ( True,False)
–maximum norm value for classifier weights: (0.5, 1.0, 2.0)
–parameterβfor adaption regularization decay: (0.1, 1.0, 10.0).
A.5 Entitity Classification With Multiple Regions of Interest as PI
In the entity classification experiment, we train all models for at most 50 epochs. If the validation AUC
does not improve for 10 subsequent epochs, we stop the training earlier. No pretrained weights are used in
this experiment since we find that the task is too easy to solve with pretrained weights. For DALUPI and
LUPI, we use the end-to-end solution based on Faster R-CNN (see Section A.2). We use the default anchor
sizes for each of the feature maps (32, 64, 128, 256, 512), and for each anchor size we use the default aspect
ratios (0.5, 1.0, 2.0). We use the binary cross entropy loss for SL-S, SL-T, DANN, and MDD.
We use the 2017 version of the MS-COCO dataset (Lin et al., 2014). As decribed in Section 4.3, we extract
indoor images by sorting out images from the super categories “indoor” and “appliance” that also contain
at least one of the entity classes. Outdoor images are extracted in the same way using the super categories
“vehicle” and “outdoor”. Images that match both domains (for example an indoor image with a toy car)
are removed, as are any gray-scale images. We also include 1,000 negative examples, i.e., images with none
of the entities present, in both domains. In total, there are 5,231 images in the source domain and 5,719
images in the target domain. From these pools, we randomly sample 3,000, 1,000, and 1,000 images for
training, validation, and testing, respectively. In Table 5 we describe the label distribution in both domains.
All images are resized to 320×320.
A.5.1 Hyperparameters
We randomly choose hyperparameters from the following predefined sets of values. For information about
the specific parameters in LUPI and DALUPI, we refer to the paper by Ren et al. (2016). Here, RoI and
NMS refer to region of interest and non-maximum suppression, respectively.
23Published in Transactions on Machine Learning Research (09/2024)
•SL-S and SL-T:
–batch size: (16,32,64)
–initial learning rate: ( 1.0×10−4,1.0×10−3)
–step sizenfor learning rate decay: (15, 30, 100)
–weight decay: ( 1.0×10−4,1.0×10−3)
–dropout (encoder): (0, 0.1, 0.2, 0.5)
–nonlinear classifier: ( True,False).
•DANN:
–batch size: (16,32,64)
–initial learning rate: ( 1.0×10−4,1.0×10−3)
–parameterαfor learning rate decay: (0, 1.0)
–weight decay: ( 1.0×10−4,1.0×10−3)
–dropout (encoder): (0,0.1,0.2,0.5)
–width of discriminator network: (64,128,256)
–depth of discriminator network: (2,3)
–nonlinear classifier: ( True,False)
–parameterβfor adaption regularization decay: (0.1, 1.0, 10.0).
•MDD:
–batch size: (16,32,64)
–initial learning rate: ( 1.0×10−4,1.0×10−3)
–parameterαfor learning rate decay: (0, 1.0)
–weight decay: ( 1.0×10−4,1.0×10−3)
–dropout (encoder): (0,0.1,0.2,0.5)
–nonlinear classifier: ( True,False)
–maximum norm value for classifier weights: (0.5, 1.0, 2.0)
–parameterβfor adaption regularization decay: (0.1, 1.0, 10.0).
•LUPI and DALUPI:
–batch size: (16,32,64)
–learning rate: ( 1.0×10−4,1.0×10−3)
–step sizenfor learning rate decay: (15, 30, 100)
–weight decay: ( 1.0×10−4,1.0×10−3)
–IoU foreground threshold (RPN): (0.6, 0.7, 0.8, 0.9)
–IoU background threshold (RPN): (0.2, 0.3, 0.4)
–batchsize per image (RPN): (32, 64, 128, 256)
–fraction of positive samples (RPN): (0.4, 0.5, 0.6, 0.7)
–NMS threshold (RPN): (0.6, 0.7, 0.8)
–RoI pooling output size (Fast R-CNN): (5, 7, 9)
–IoU foreground threshold (Fast R-CNN): (0.5, 0.6)
–IoU background threshold (Fast R-CNN): (0.4, 0.5)
–batchsize per image (Fast R-CNN): (16, 32, 64, 128)
–fraction of positive samples (Fast R-CNN): (0.2, 0.25, 0.3)
–NMS threshold (Fast R-CNN): (0.4, 0.5, 0.6)
–detections per image (Fast R-CNN): (25, 50, 75, 100).
24Published in Transactions on Machine Learning Research (09/2024)
Table 6: Marginal distribution of labels of images and bounding boxes in the source and target do-
main, respectively, for the chest X-ray classification experiment. ATL=Atelectasis; CM=Cardiomegaly;
PE=Effusion; NF=No Finding.
Data ATL CM PE NF
x∼S11,559 2,776 13,317 60,361
w∼S180 146 153 -
˜x∼T14,278 20,466 74,195 16,996
˜w∼T75 66 64 -
A.6 X-ray Classification With Multiple Regions of Interest as PI
In the X-ray classification experiment, we train all models for at most 50 epochs, using pre-trained weights
in the ResNet architecture of each model. If the validation AUC does not improve for 10 subsequent epochs,
we stop the training earlier. We then fine-tune all models, except DANN and MDD, for up to 20 additional
epochs. The number of encoder layers that are fine-tuned is a hyperparameter for which we consider different
values. We start the training with weights pretrained on ImageNet. For DALUPI, we use the end-to-end
solution based on Faster R-CNN (see Section A.2). We use the default anchor sizes for each of the feature
maps (32, 64, 128, 256, 512), and for each anchor size we use the default aspect ratios (0.5, 1.0, 2.0). We
use the binary cross entropy loss for SL-S, SL-T, DANN, and MDD.
In total, there are 83,519 (457) and 120,435 (118) images (annotated images) in the source and target
domain, respectively. The distributions of labels and bounding box annotations are provided in Table 6.
Here, “NF” refers to images with no confirmed findings. In the annotated images, there are 180/146/153
and 75/66/64 examples of ATL/CM/PE in each domain respectively. Validation and test sets are sam-
pled from non-annotated images and contain 10,000 samples each. All annotated images are reserved for
training. We merge the default training and validation datasets before splitting the data and resize all
images to 320×320. For the source dataset (ChestX-ray8), the bounding boxes can be found together with
the dataset. The target segmentations can be found here: https://stanfordaimi.azurewebsites.net/
datasets/23c56a0d-15de-405b-87c8-99c30138950c .
A.6.1 Hyperparameters
We choose hyperparameters randomly from the following predefined sets of values. For information about
the specific parameters in DALUPI, we refer to the paper by Ren et al. (2016). RoI and NMS refer to region
of interest and non-maximum suppression, respectively.
•SL-S and SL-T:
–batch size: (16, 32, 64)
–learning rate: ( 1.0×10−4,1.0×10−3)
–weight decay: ( 1.0×10−4,1.0×10−3)
–dropout (encoder): (0, 0.1, 0.2, 0.5)
–nonlinear classifier: ( True,False)
–number of layers to fine-tune: (3, 4, 5)
–learning rate (fine-tuning): ( 1.0×10−5,1.0×10−4).
•DANN:
–batch size: (16,32,64)
–initial learning rate: ( 1.0×10−4,1.0×10−3)
–parameterαfor learning rate decay: (0, 1.0)
–weight decay: ( 1.0×10−4,1.0×10−3)
25Published in Transactions on Machine Learning Research (09/2024)
–number of trainable layers (encoder): (1, 2, 3, 4, 5)
–dropout (encoder): (0,0.1,0.2,0.5)
–width of discriminator network: (64,128,256)
–depth of discriminator network: (2,3)
–nonlinear classifier: ( True,False)
–parameterβfor adaption regularization decay: (0.1, 1.0, 10.0).
•MDD:
–batch size: (16,32,64)
–initial learning rate: ( 1.0×10−4,1.0×10−3)
–parameterαfor learning rate decay: (0, 1.0)
–weight decay: ( 1.0×10−4,1.0×10−3)
–number of trainable layers (encoder): (1, 2, 3, 4, 5)
–dropout (encoder): (0,0.1,0.2,0.5)
–nonlinear classifier: ( True,False)
–maximum norm value for classifier weights: (0.5, 1.0, 2.0)
–parameterβfor adaption regularization decay: (0.1, 1.0, 10.0).
•DALUPI:
–batch size: (16,32,64)
–learning rate: ( 1.0×10−4)
–weight decay: ( 1.0×10−4,1.0×10−3)
–IoU foreground threshold (RPN): (0.6, 0.7, 0.8, 0.9)
–IoU background threshold (RPN): (0.2, 0.3, 0.4)
–batchsize per image (RPN): (32, 64, 128, 256)
–fraction of positive samples (RPN): (0.4, 0.5, 0.6, 0.7)
–NMS threshold (RPN): (0.6, 0.7, 0.8)
–RoI pooling output size (Fast R-CNN): (5, 7, 9)
–IoU foreground threshold (Fast R-CNN): (0.5, 0.6)
–IoU background threshold (Fast R-CNN): (0.4, 0.5)
–batchsize per image (Fast R-CNN): (16, 32, 64, 128)
–fraction of positive samples (Fast R-CNN): (0.2, 0.25, 0.3)
–NMS threshold (Fast R-CNN): (0.4, 0.5, 0.6)
–detections per image (Fast R-CNN): (25, 50, 75, 100)
–learning rate (fine-tuning): ( 1.0×10−5,1.0×10−4)
–number of layers to fine-tune: (3, 4, 5).
B Additional Results
In Figure 8a and 8b, we show some example images from the digit classification task with associated saliency
maps from the source-only model for different values of the skew parameter ϵ. We can see that for a lower
value of epsilon the SL-S model activations seem concentrated on the area with the digit, while when the
correlation with the background is large the model activations are more spread out.
In Figure 9, we show the averageAUC when additional training data of up to 30,000 samples are added in
the chest X-ray experiment. We see that, once given access to a much larger amount of labeled samples,
SL-S and DALUPI perform comparably in the target domain.
In Figure 10, we show AUC for the pathology CM when additional training data withoutbounding box
annotations are added. We see that SL-S catches up to the performance of DALUPI when a large amount
of labeled examples are provided. These results indicate that identifiability is not the primary obstacle for
adaptation, and that PI improves sample efficiency.
26Published in Transactions on Machine Learning Research (09/2024)
(a) SL-S,ϵ= 0.2
 (b) SL-S,ϵ= 1.0
Figure 8: Example images (top) and saliency maps (bottom) from SL-S when trained with source skew
ϵ= 0.2(a) andϵ= 1(b).
0 10000 20000 30000
Extra (x,y) samples0.20.40.60.81.0AUCSL-T
SL-S
DALUPI
DANN
MDD
(a) Source test AUC.
0 10000 20000 30000
Extra (x,y) samples0.20.40.60.81.0AUCSL-T
SL-S
DALUPI
DANN
MDD (b) Target test AUC.
Figure 9: Classification of chest X-ray images. Model performance on source (a) and target (b) domains. The
AUC is averaged over the three pathologies: ATL, CM and PE. The 95 %confidence intervals are computed
using bootstrapping the results over five seeds.
C Proof of Proposition 1
Proposition. LetAssumptions1and2besatisfiedw.r.t. W(notnecessarilyw.r.t. X)andletAssumption3
hold as stated. Then, the target risk RTis identified for hypotheses h:X→Y,
RT(h) =/integraldisplay
xT(x)/integraldisplay
wT(w|x)/integraldisplay
yS(y|w)L(h(x),y)dydwdx .
and, forLthe squared loss, a minimizer of RTish∗
T(x) =/integraltext
wT(w|x)ES[Y|w]dw .
Proof.By definition, RT(h) =/integraltext
x,yT(x,y)L(h(x),y)dydx. We marginalize over Wto get
T(x,y) =T(x)ET(W|x)[T(y|W,x)|x]]
=T(x)ET(W|x)[T(y|W)|x]
=T(x)/integraldisplay
w:T(w)>0T(w|x)S(y|w)dw
=T(x)/integraldisplay
w:S(w)>0T(w|x)S(y|w)dw .
wherethesecondequalityfollowsbysufficiencyandthethirdbycovariateshiftandoverlapin W.T(x),T(w|
x)andS(y|w)are observable through training samples. That h∗
Tis a minimizer follows from the first-order
27Published in Transactions on Machine Learning Research (09/2024)
0 5000 10000
Extra (x,y) samples0.20.40.60.81.0AUC (CM)SL-T
SL-S
DALUPI
DANN
MDD
Figure 10: Test AUC for CM in T. DALUPI outperforms the other models when no extra (x,y)samples
are provided. Adding examples without bounding box annotations improves the performance of SL-S and
SL-T, eventually causing the latter to surpass DALUPI.
condition of setting the derivative of the risk with respect to hto 0. This strategy yields the well-known
result that
h∗
T= arg min
hET[(h(X)−Y2)] =ET[Y|X].
By definition and the previous result, we have that
ET[Y|X=x] =/integraldisplay
yyT(x,y)
T(x)dy
=/integraldisplay
y/integraldisplay
w:S(w)>0T(w|x)S(y|w)ydwdy
=/integraldisplay
wT(w|x)ES[Y|x]dw
and we have the result.
D Proof of Proposition 2
Proposition 2. Assume thatGcomprises M-Lipschitz mappings from the privileged information space
W ⊆ RdWtoY. Further, assume that both the ground truth privileged information Wand labelYare
deterministic in XandWrespectively. Let ρbe the domain density ratio of Wand let Assumptions 1–3
(Covariate shift, Overlap and Sufficiency) hold w.r.t. W. Further, let the loss Lbe uniformly bounded by
some constant Band letdandd′be the pseudo-dimensions of GandFrespectively. Assume that there are
nobservations from the source (labeled) domain and mfrom the target (unlabeled) domain. Then, with L
the squared Euclidean distance, for any h=h◦f∈G×F, w.p. at least 1−δ,
RT(h)
2≤ˆRY,ρ
S(g) +M2ˆRW
T(f)
+ 25/4/radicalbig
d2(T∥S)3
8/radicaligg
dlog2me
d+ log4
δ
m
+dWBM2
/radicalbigg
2d′logen
d′
n+/radicaligg
logdW
δ
2n
.
28Published in Transactions on Machine Learning Research (09/2024)
Proof.Decomposing the risk of h◦ϕ, we get
RT(h) =ET[(g(f(X))−Y)2]
≤2ET[(g(W)−Y)2+ (g(f(X))−g(W))2]
≤2ET[(g(W)−Y)2+M2∥f(X))−g(W)∥2]
≤2ET[(g(W)−Y)2] + 2M2ET[∥(f(X)−W)∥2]
= 2RY
T(g) + 2M2RW
T(f) = 2RY,ρ
S(g)/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright
(I)+2M2RW
T(f)/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright
(II).
The first inequality follows from the relaxed triangle inequality, the second inequality from the Lipschitz
property and the third equality from Overlap and Covariate shift. We will bound these quantities separately
starting with (I).
We assume that the pseudo-dimension of G,dis bounded. Further, we assume that the second moment
of the density ratios, equal to the Rényi divergence d2(T∥S) = Σw∈cGT(w)T(w)
S(w)are bounded and that the
density ratios are non-zero for all w∈G. LetD1={wi,yi}m
i=0be a dataset drawn i.i.d from the source
domain. Then by application of Theorem 3 from Cortes et al. (2010) we obtain with probability 1−δover
the choice of D1,
(I) =RY,ρ
S(g)≤ˆRY,ρ
S(g) + 25/4/radicalbig
d2(T∥S)3/8/radicaligg
dlog2me
d+ log4
δ
m
Now for (II)we treat each component of w∈Was a regression problem independent from all the others.
So we can therefore write the risk as the sum of the individual component risks
RW
T(f) = ΣdW
i=1RW
T,i(f)
Let the pseudo-dimension of Fbe denoted d,D2={xi,wi}n
i=0be a dataset drawn i.i.d from the target
domain. Then, using theorem 11.8 from Mohri et al. (2018) we have that for any δ>0, with probability at
least 1−δover the choice of D2, the following inequality holds for all hypotheses f∈Ffor each component
risk
RW
T,i(f)≤ˆRW
T,i(f) +B
/radicalbigg
2d′logen
d′
n+/radicaligg
log1
δ
2n

We then simply make all the bounds hold simultaneously by applying the union bound and having it so that
each bound must hold with probability 1−δ
dWwhich results in
RW
T(f) = ΣdW
i=1RW
T,i(f)≤ΣdW
i=1ˆRW
T,i(f) + ΣdW
i=1B
/radicalbigg
2d′logen
d′
n+/radicaligg
logdW
δ
2n

=ˆRW
T(f) +dWB
/radicalbigg
2d′logen
d′
n+/radicaligg
logdW
δ
2n

Combination of these two results then yield the proposition statement.
Consistency follows as Yis a deterministic function of WandWis a deterministic fundtion of Xand both
HandFare well-specified. Thus both empirical risks and sample complexity terms will converge to 0 in
the limit of infinite samples.
The parts of the bound shown above can be described as falling into three main categories: Empirical risk(s),
domain shift and sample complexity components. A central term that figures both in the weighted empirical
29Published in Transactions on Machine Learning Research (09/2024)
risk and the Rényi divergence is the density ratioT(w)
S(w). Therefore, the size of the bound is governed at
least in part based on the proximity in W-space the source and target domains are. This is similar to other
importance weighting bounds, however, since the experiment designer may choose the form of PI this can
be more well-behaved than the density ratio in the input space.
E Proof Sketch for PAC-Bayes Bound
We will here detail a proof sketch for a PAC-Bayes version of the bound we propose in the main text. For
the purposes of this bound we will consider the quantity Eh∼ψRT(h), whereψis a posterior distribution
over classifiers h∼ψ. As we are basing the bound on the two-step methodology where we train two different
classifiers on separate datasets we assume that we can obtain the posteriors over the component functions
separately and independently i.e. h=f◦g∼ψ=ψf×ψg, wheref∼ψfandg∼ψg. Let the assumptions
from proposition 2 hold here. Similar to the previous section we decompose the risk into two parts
Eh∼ψRT(h) =Eh∼ψET[(g(f(X))−Y)2]
=Eh∼ψ[2RY
T(g) + 2M2RW
T(f)] = 2Eh∼ψRY
T(g)/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright
(I)+2M2Eh∼ψRW
T(f)/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright
(II).
We note that since we now have expectations over the composite function hon expressions which depend
on only one of the components we can, for example, write the following:
Eh∼ψRY
T(g) =Eg∼ψgRY
T(g)
This holds as we assume that f and g are not dependent on each other. Therefore, we can just marginalize
out the part which is not in use. From this point we can use some of the available bounds from the literature
to estimate the resulting part e.g. Corollary 1 from Breitholtz & Johansson (2022). Application of this result
yields the following bound on the first term
E
g∼ψgRY
T(g)≤1
γE
g∼ψgˆRY,ρ
S(g) +β∞KL(ψg∥πg) + ln(1
δ)
2γ(1−γ)m.
Thereafter we can use another bound from the literature to estimate the second term, e.g. Theorem 6 from
Germain et al. (2020). Using this we obtain the following:
E
f∼ψfRW
T(f)≤α
1−e−α/parenleftbigg
E
f∼ψfˆRW
T(f) +KL(ψf∥πf) + ln(1
δ)
nα/parenrightbigg
.
Then a bound can be constructed by combining these two results using a union bound argument.
Eh∼ψRT(h)≤2
γE
g∼ψgˆRY,ρ
S(g) +β∞KL(ψg∥πg) + ln(2
δ)
2γ(1−γ)m
+2M2α
1−e−α/parenleftbigg
E
f∼ψfˆRW
T(f) +KL(ψf∥πf) + ln(2
δ)
nα/parenrightbigg
F A Bound on the Target Risk Without Suffiency
The sufficiency assumption is used to replace T(y|x)withT(y|w)in the proof of Proposition 1. If
sufficiency is violated but it is plausible that the degree of insufficiency is comparable across domains, we
can still obtain a bound on the target risk which may be estimated from observed quantities. One way to
formalize such an assumption is that there is some γ≥1, for which
sup
x∈T(x|w)T(y|w,x)/T(y|w)≤γsup
x∈S(x|w)S(y|w,x)/S(y|w) (5)
30Published in Transactions on Machine Learning Research (09/2024)
This may be viewed as a relaxation of suffiency. If Assumption 3 holds, both left-hand and right-hand sides
of the inequality are 1. Under Equation 5, with ∆γ(w,y)equal to the right-hand side the inequality,
RT(h)≤/integraldisplay
xT(x)/integraldisplay
wT(w|x)/integraldisplay
y∆γ(w,y)S(y|w)L(h(x),y)dydwdx .
However, the added assumption is not verifiable statistically.
31