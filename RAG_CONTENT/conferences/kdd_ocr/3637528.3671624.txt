Source Localization for Cross Network Information Diffusion
Chen Ling∗
Emory University
Atlanta, United States
chen.ling@emory.eduTanmoy Chowdhury∗
Emory University
Atlanta, United States
tchowdh6@gmu.eduJie Ji
Emory University
Atlanta, United States
jason.ji@emory.edu
Sirui Li
Emory University
Atlanta, United States
sirui.li@emory.eduAndreas Züfle
Emory University
Atlanta, United States
azufle@emory.eduLiang Zhao†
Emory University
Atlanta, United States
liang.zhao@emory.edu
Abstract
Source localization aims to locate information diffusion sources
only given the diffusion observation, which has attracted extensive
attention in the past few years. Existing methods are mostly tailored
for single networks and may not be generalized to handle more
complex networks like cross-networks. Cross-network is defined
as two interconnected networks, where one network’s function-
ality depends on the other. Source localization on cross-networks
entails locating diffusion sources on the source network by only
giving the diffused observation in the target network. The task is
challenging due to challenges including: 1) diffusion sources dis-
tribution modeling; 2) jointly considering both static and dynamic
node features; and 3) heterogeneous diffusion patterns learning.
In this work, we propose a novel method, namely CNSL, to han-
dle the three primary challenges. Specifically, we propose to learn
the distribution of diffusion sources through Bayesian inference
and leverage disentangled encoders to learn static and dynamic
node features separately. The learning objective is coupled with
the cross-network information propagation estimation model to
make the inference of diffusion sources considering the overall
diffusion process. Additionally, we also provide two novel cross-
network datasets collected by ourselves. Extensive experiments
are conducted on both datasets to demonstrate the effectiveness of
CNSL in handling the source localization on cross-networks. The
code are available at: https://github.com/tanmoysr/CNSL/
CCS Concepts
•Mathematics of computing →Probabilistic inference prob-
lems; •Information systems →Collaborative and social com-
puting systems and tools.
∗Both authors contributed equally to this research.
†Corresponding Author
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
KDD ’24, August 25–29, 2024, Barcelona, Spain
©2024 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ACM ISBN 979-8-4007-0490-1/24/08
https://doi.org/10.1145/3637528.3671624Keywords
Graph Source Localization, Cross Network, Information Diffusion
ACM Reference Format:
Chen Ling, Tanmoy Chowdhury, Jie Ji, Sirui Li, Andreas Züfle, and Liang
Zhao. 2024. Source Localization for Cross Network Information Diffusion.
InProceedings of the 30th ACM SIGKDD Conference on Knowledge Discovery
and Data Mining (KDD ’24), August 25–29, 2024, Barcelona, Spain. ACM, New
York, NY, USA, 11 pages. https://doi.org/10.1145/3637528.3671624
1 Introduction
Source localization aims to locate the origins of information dif-
fusion within networks, which stands as a famous inverse problem
to estimating information propagation. Source localization not only
holds practical significance but also helps us grasp the intricate
characteristics of network dynamics. By accurately identifying the
sources of information propagation, we can significantly mitigate
potential damages by cutting off critical pathways through which
information, and potentially misinformation, spreads. Over the
past years, existing works have made considerable efforts toward
addressing this critical challenge. Earlier works [ 20,27,31,32] lever-
agerule-based methods to locate diffusion sources under prescribed
and known diffusion patterns. Furthermore, Learning-based meth-
ods [ 8,16,25,26] were proposed to employ deep neural networks
to encode neighborhood and graph topology information, which
achieve state-of-the-art performance. These efforts underscore the
importance of source localization in maintaining the integrity and
reliability of information across the digital landscape.
Existing works for source localization have primarily been de-
signed for single networks. However, much of today’s infrastructure
is organized as cross-networks. Communications between different
communities, cross-country financial transactions, and systems
of water and food supply can all be cross-networks, where the
functionality or performance of one network depends on other net-
works. The presence of cross-networks has also made us vulnerable
to various network risks that belong exclusively to cross-networks,
such as the spreading of misinformation from one social media
to another and safety alerts found in downstream stages of the
food supply chain. The complexity of cross-network interactions
is further illustrated by an incident involving a malicious GitHub
repository, as detailed in the upper part of Figure 1 and identified in
[11], which was linked to over 40discussion threads on Stack Over-
flow. Questioners and less experienced users may be directed into
using the alleged solution without maintaining a healthy skepticism.
5419
KDD ’24, August 25–29, 2024, Barcelona, Spain Chen Ling et al.
Figure 1: Example of misinformation propagation on cross-
network between GitHub and Stack Overflow, where each
node in the GitHub network denotes a repository, and each
node in the Stack Overflow represents a discussion thread.
Once using the code from the malicious GitHub repository, the vic-
tims’ devices might be compromised (e.g., system operations being
disrupted). The challenge of tracing the origins and pathways of
such misinformation is exacerbated in cross-network environments,
where the initial propagation occurs in a network different from
where the observations are made, as in the transition from GitHub
to Stack Overflow. Furthermore, this complexity is compounded by
multiple rounds of propagation and the possibility that contributors
to Stack Overflow discussions may not intentionally disseminate
misinformation, highlighting the need for more powerful source
localization methodologies that account for cross-networks.
Cross-network source localization is defined as locating diffusion
sources from the source network by only giving the diffused ob-
servation of the target network, which is still under-explored. The
challenge primarily lies in the separation between the networks
where the diffusion originates and where it is observed, making
traditional source localization techniques less effective due to the
following critical obstacles. 1) The difficulty of characterizing the
distribution of diffusion sources only given the diffused observation of
another network. Understanding the distribution of potential sources
is crucial for understanding the nature of diffusion processes and
for quantifying the inherent uncertainties associated with identi-
fying these sources [ 4,16,17]. However, accurately learning the
distribution of diffusion sources in a cross-network context requires
the formulation of a conditional probability model that accounts for
the observed diffusion within one network, given the structural and
dynamical properties of another. This task requires fully consider-
ing different Network topologies, diverse node features, and varied
propagation patterns, which makes the learning objective hard to
model and optimize. 2) The difficulty of jointly capturing dynamicand static features of the nodes in the cross-network. Characterizing
the distribution of diffusion sources is often conditioned on the
intrinsic nature of the nodes and their connections. Existing works
hardly leverage node features (e.g., text description and statistical
node features) since entangling both types of features would lead to
a high-dimensional and often intractable distribution of diffusion
sources. Moreover, the nodes from different networks may have
different intrinsic characteristics that help profile their diffusion
dynamics and can predominantly help locate the sources. 3) The
difficulty of jointly capturing the heterogeneous diffusion patterns of
the cross-network. Besides the difficulty of learning the distribution
of diffusion sources, the diffusion patterns in both networks are
also unknown to us. By correctly modeling the overall diffusion
process, it is also essential to jointly consider the different propaga-
tion patterns of both networks. Additionally, the communication
between different networks (i.e., cross-network propagation paths
as noted in Figure 1) also cannot be ignored.
In this work, we propose the Cross-Network Source Localization
(CNSL) method for locating the diffusion sources from a source
network given its diffused observation from another target network
under arbitrary diffusion patterns. Specifically, for the first chal-
lenge, we design a novel framework to approximate the distribution
of diffusion sources by mean-field variational inference. For the
second challenge, we propose a disentangled generative prior to
encoding both static and dynamic features of nodes. For the last
challenge, we model the unique diffusion dynamics of each network
separately and integrate the learning process of these information
diffusion models with the approximation of diffusion source distri-
bution. This ensures accurate reconstruction of diffusion sources
considering the specific propagation mechanisms of each network.
We summarize the major contributions of this work as follows:
•Problem. We design a novel formulation of the cross-network
source localization and propose to leverage deep generative mod-
els to characterize the prior and approximate the distribution of
diffusion sources via variational inference.
•Technique. We propose a unified framework to jointly capture
1) both static and dynamic node features, and 2) the heteroge-
neous diffusion patterns of both networks. The approximation
of diffusion sources is fully aware of various node features and
the interplay of cross-network information diffusion patterns.
•Data. Cross-network source localization lacks high-quality data,
which is highly difficult to craft. We collect and curate a real-
world dataset that accounts for the Cross-platform Communi-
cation Network, which records the real-world misinformation
propagation from Github to Stack Overflow. We also provide a
simulated cross-network dataset using agent-based simulation to
disseminate misinformation across physical and social networks.
•Experiments. We conduct experiments against state-of-the-art
methods designed originally for single-network source localiza-
tion. Results show substantially improved performance of our
method for cross-network source localization.
2 Related Works
Information Source Localization. Diffusion source localization is
defined as inferring the initial diffusion sources given the current dif-
fused observation, which has attracted many applications, ranging
5420Source Localization for Cross Network Information Diffusion KDD ’24, August 25–29, 2024, Barcelona, Spain
from identifying rumor sources in social networks [ 10] to finding
blackout origins in smart grids [ 23]. Early approaches [ 20,27,32,33]
focused on identifying the single/multiple source of an online dis-
ease under the Susceptible-Infected (SI) or Susceptible-Infected-
Recover (SIR) diffusion patterns with either full or partial obser-
vation. Later on, Dong et al. [ 8] further leverage GNN to enhance
the prediction accuracy of LPSI. However, existing diffusion source
localization methods cannot well quantify the uncertainty between
different diffusion source candidates, and they usually require
searching over the high-dimensional graph topology and node
attributes to detect the sources, both drawbacks limit their effective-
ness and efficiency. Moreover, in the past few years, more methods
[16,21,25,26,28] have been proposed to address the dependency of
prescribed diffusion models and characterize the latent distribution
of diffusion sources, which have achieved state-of-the-art results.
However, their methods still may not generalize to cross-network
source localization due to the unique interconnected structure.
Information Diffusion on Cross Network. The interconnec-
tion between cross-networks allows information to flow seamlessly
from one platform to another through overlapping nodes. However,
it is important to note that the patterns of influence and information
propagation differ between various networks and can even vary
within the same network. Recent studies in information diffusion
across interconnected networks have made notable advancements.
Earlier works [ 5,12,18,29] have developed different frameworks for
correct modeling of the information flow within different network
formats, such as wireless networks, social networks, and supply
chains. Later on, many works have been proposed to study different
features and applications of cross-networks, e.g., mitigating cas-
cading failures [ 9,24]. However, until today, there are few works
[7,15] trying to correctly model the information diffusion pattern
in the interconnected network system.
3 Cross-network Diffusion Source Localization
In this section, the problem formulation is first provided before
deriving the overall objective based on the divergence-based varia-
tional inference. A novel optimization method is then proposed to
infer seed nodes given the observed cross-network diffused pattern.
3.1 Problem Formulation
Cross-networkG=(𝐺𝑠,𝐺𝑡)consists of a Source Network 𝐺𝑠=
(𝑉𝑠,𝐸𝑠)and a Target Network 𝐺𝑡=(𝑉𝑡,𝐸𝑡). Both𝐺𝑠and𝐺𝑡are
composed of a set of vertices 𝑉𝑠and𝑉𝑡corresponding to individual
users of the network as well as a set of edges 𝐸𝑠⊆𝑉𝑠×𝑉𝑠and
𝐸𝑡⊆𝑉𝑡×𝑉𝑡denote connecting pairs of users in both networks,
respectively. In addition, 𝑓𝑠∈R𝑁𝑠×𝐹and𝑓𝑡∈R𝑁𝑡×𝐹and denote
the static features of both networks (e.g., associated text embedding,
user age, social relations, etc.), where 𝐹denotes the dimension of
the node feature, and 𝑁𝑡,𝑁𝑠denote the number of nodes in each
network, respectively. To connect the cross-network G, there exists
a set of bridge links between 𝐺𝑠and𝐺𝑡denoted by𝐿={(𝑣𝑠,𝑣𝑡)|𝑣𝑠∈
𝑉𝑠,𝑣𝑡∈𝑉𝑡}, which represent the propagation paths from 𝐺𝑠to𝐺𝑡.
The information propagation in the cross-network is a one-
directional message passing from 𝐺𝑠to𝐺𝑡. More specifically, the
propagation initiates from a group of nodes denoted as 𝑥𝑠∈{0,1}𝑁𝑠in the source network 𝐺𝑠, where each entry has a binary value rep-
resenting whether the node is seed or not. After a certain period,
the information propagates from 𝐺𝑠to𝐺𝑡and infects a portion of
nodes in𝐺𝑡through the bridge links 𝐿. We use𝑦𝑡∈[0,1]𝑁𝑡to
denote the infection probability of each node in 𝐺𝑡.
Problem 1 (Cross-network diffusion source localization). Given
Gand the diffused observation of the target network 𝑦𝑡, the problem
of diffusion source localization in cross-networks (i.e., the inverse
problem of diffusion estimation) requires finding ˜𝑥𝑠∈{0,1}𝑁𝑠from
the source network 𝐺𝑠, such that the empirical loss ||˜𝑥𝑠−𝑥𝑠||2
2is
minimized, under the constraint that the diffused observation in
the target graph 𝑦𝑡could be generated from ˜𝑥𝑠through𝐿.
However, reconstructing ˜𝑥𝑠from𝑦𝑡is difficult due to the fol-
lowing challenges. 1) The difficulty of characterizing the distribution
of seed nodes in the cross-network scenario. To consider all possi-
bilities of the seed nodes in cross-network source localization, it’s
desired to model the distribution of seed nodes 𝑝(𝑥𝑠)by charac-
terizing the conditional probability 𝑝(𝑥𝑠|𝑦𝑡). However, learning
𝑝(𝑥𝑠|𝑦𝑡)requires jointly considering the topology structure of the
cross-networkGas well as the stochastic diffusion pattern through
bridge links 𝐿. Existing works cannot be directly adapted due to the
incapability of considering the complex cross-network scenario. 2)
The difficulty of jointly capturing dynamic and static features of the
nodes in the cross-network. The intrinsic patterns of the seed nodes
consist of both dynamic patterns (i.e., the choice of seed nodes
𝑥𝑠) and static patterns (e.g., node features 𝑓𝑠). The correlated fac-
tors lead to the high-dimensional and often intractable distribution
𝑝(𝑥𝑠), which makes maximizing the joint likelihood 𝑝(𝑥𝑠,𝑦𝑡)to
be hard and computationally inefficient. 3) The difficulty of jointly
capturing the heterogeneous diffusion patterns of the cross-network.
The underlying diffusion process from 𝑥𝑠to𝑦𝑡is not only affected
by numerous factors (e.g., the infectiousness of the misinformation
and the immunity power of the user), but the propagation patterns
in the cross-network are inherently different in different networks.
3.2 Latent Distribution Learning of Seed Nodes
To cope with the first challenge of characterizing the distribution
of diffusion sources in the cross-network, we propose to utilize
graph topology as well as the diffused observation to define the
conditional probability 𝑝(𝑥𝑠|𝑦𝑡). Since the diffused observation 𝑦𝑡
is conditioned on both networks Gas well as the diffusion source 𝑥𝑠,
we derive a conditional probability 𝑝(𝑦𝑡|𝑥𝑠,G)·𝑝(𝑥𝑠), where𝑝(𝑥𝑠)
is the distribution of infection sources within 𝐺𝑠. To estimate the
optimal diffusion source ˜𝑥𝑠, we employ the Maximum A Posteriori
(MAP) approximation by maximizing the following probability:
˜𝑥𝑠=arg max
𝑥𝑠𝑝(𝑦𝑡|𝑥𝑠,G)·𝑝(𝑥𝑠)=arg max
𝑥𝑠𝑝(𝑥𝑠,𝑦𝑡|G).
However, since 𝑝(𝑥𝑠)is often intractable and entangles both static
and dynamic features, we instead leverage deep generative models
to characterize the implicit distribution of 𝑝(𝑥𝑠).
To jointly consider all static and dynamic node features, we pro-
pose a disentangled generative model to map the intractable and
high-dimensional 𝑝(𝑥𝑠)to latent embeddings in low-dimensional
latent space. Specifically, we aim to learn the conditional distri-
bution𝑝(𝑥𝑠,𝑦𝑡,G|𝑧𝑠,𝑧𝑓𝑠)of𝑥𝑠given two latent variables 𝑧𝑠and
𝑧𝑓𝑠. Specifically, 𝑧𝑠∈R𝑘1(𝑘1≪𝑁𝑠) and𝑧𝑓𝑠∈R𝑘2(𝑘2≪𝑁𝑠) are
5421KDD ’24, August 25–29, 2024, Barcelona, Spain Chen Ling et al.
obtained by an approximate posterior 𝑝(𝑧𝑠,𝑧𝑓𝑠|𝑥𝑠,𝑦𝑡,G), where
𝑝(𝑧𝑠,𝑧𝑓𝑠)is the prior distribution of node’s dynamic and static
features. Note that 𝑘1and𝑘2are the numbers of variables in each
group, in order to capture the different types of semantic factors.
The goal here is to learn the conditional distribution of 𝑝(𝑥𝑠)
given𝑍=(𝑧𝑠,𝑧𝑓𝑠), namely, to maximize the marginal likelihood
of the observed cross-network diffusion in expectation over the
distribution of the latent variable set 𝑍asE𝑝𝜃(𝑍)[𝑝𝜃(𝑥𝑠,𝑦𝑡,G|𝑍)].
For a given observation of the information diffusion in the cross-
network, the prior distribution of the latent representations 𝑝(𝑍)is
still intractable to infer. We propose solving it based on variational
inference, where the posterior needs to be approximated by the
distribution 𝑞𝜙(𝑍|𝑥𝑠,𝑦𝑡,𝑓𝑠,G). In this way, the goal becomes to
minimize the Kullback–Leibler (KL) divergence between the true
prior and the approximate posterior. Moreover, we assume 𝑧𝑠and
𝑧𝑓𝑠capture different semantic factors. Specifically, 𝑧𝑠is required to
capture just the independent dynamic semantic factors of which
nodes are infection sources, and 𝑧𝑓𝑠is required to capture the
correlated semantic factors considering both dynamic features and
static node features. To encourage this disentangling property of
both posteriors, we introduce a constraint by trying to match the
inferred posterior configurations of the latent factors to the prior
𝑝(𝑧𝑠,𝑧𝑓𝑠)by setting each prior to being an isotropic unit Gaussian
N(0,1), leading to the constrained optimization problem as:
max
𝜃,𝜙E𝑞𝜙(𝑧𝑠,𝑧𝑓 𝑠|𝑥𝑠,𝑦𝑡,G)h
𝑝𝜃
𝑥𝑠,𝑦𝑡,G|𝑧𝑠,𝑧𝑓𝑠i
,
s.t.𝐾𝐿
𝑞𝜙(𝑧𝑠,𝑧𝑓𝑠|𝑥𝑠,𝑓𝑠,𝑦𝑡,G)||𝑝(𝑧𝑠,𝑧𝑓𝑠)
<𝐼.
Furthermore, given the assumption that 𝑝(𝑧𝑠)represents the distri-
bution of dynamic node features and 𝑝(𝑧𝑓𝑠)denotes the distribu-
tion of joint node features (entangles with both static and dynamic
features), the constraint term can be decomposed as:
𝑞𝜙(𝑧𝑠,𝑧𝑓𝑠|𝑥𝑠,𝑓𝑠,𝑦𝑡,G)=𝑞𝜙1(𝑧𝑠|𝑥𝑠,𝑦𝑡,G)·𝑞𝜙2(𝑧𝑓𝑠|𝑦𝑡,𝑓𝑠,𝑥𝑠,G)
Then the objective function can be written as:
max
𝜃,𝜙E𝑞𝜙(𝑧𝑠,𝑧𝑓 𝑠|𝑥𝑠,𝑦𝑡,G)h
𝑝𝜃
𝑥𝑠,𝑦𝑡,G|𝑧𝑠,𝑧𝑓𝑠i
, (1)
s.t.𝐾𝐿
𝑞𝜙1(𝑧𝑠|𝑥𝑠,𝑦𝑡,G)||𝑝(𝑧𝑠)
<𝐼𝑠,
𝐾𝐿
𝑞𝜙2(𝑧𝑓𝑠|𝑦𝑡,𝑥𝑠,G)||𝑝(𝑧𝑓𝑠)
<𝐼𝑓𝑠,
where we decompose 𝐼into two separate parts (i.e., 𝐼𝑠and𝐼𝑓𝑠) of the
information capacity to control each group of latent variables so that
the variables inside each group of latent variables are disentangled.
In practice,𝑞𝜙1(·)and𝑞𝜙2(·)are implemented as two encoders with
multi-layer perceptron structure.
3.3 Cross Network Diffusion Model Learning
To address the third challenge, i.e., making the source localiza-
tion be aware of the heterogeneous diffusion patterns between
networks, locating diffusion origins 𝑥𝑠may not only involve esti-
mating the distribution of seed nodes but the process should also be
determined by correctly modeling the information diffusion across
diverse and interlinked network structures G. In the context of
cross-network information diffusion, the diffused observation 𝑦𝑡
is determined by the diffusion source 𝑥𝑠under the cross-networkGthrough bridge links 𝐿. Therefore, the conditional distribution
𝑝𝜃(𝑥𝑠,𝑦𝑡,𝑥𝑓,G|𝑧𝑠,𝑧𝑓𝑠)can further be decoupled as:
log𝑝𝜃(𝑥𝑠,𝑦𝑡,𝑥𝑓,G|𝑧𝑠,𝑧𝑓𝑠)=log[𝑝𝜓(𝑦𝑡|𝑥𝑠,G)]+log[𝑝𝜃(𝑥𝑠|𝑧𝑠,𝑧𝑓𝑠)],
where𝑝𝜓(·)models the probability of the infection status 𝑦𝑡of
nodes in𝐺𝑡given seed nodes 𝑥𝑠in𝐺𝑠. Moreover, the second
term𝑝𝜃(𝑥𝑠|𝑧𝑠,𝑧𝑓𝑠)reveals that the latent variables 𝑍only encodes
information from 𝑥(i.e.,𝑦𝑡⊥𝑍|𝑥𝑠,G). According to the assump-
tion, we could also simplify both encoders as 𝑞𝜙1(𝑧𝑠|𝑥𝑠,G)and
𝑞𝜙2(𝑧𝑓𝑠|𝑥𝑠,𝑓𝑠,G)in Eq. (1) by removing 𝑦𝑡from the input.
Cross-network Information Propagation. Modeling the dif-
fusion from 𝑥𝑠to𝑦𝑡is complex due to multiple factors, such as
misinformation’s infectiousness and the distinct propagation pat-
terns across networks like GitHub and Stack Overflow, which cater
to different user communities. The unknown nature of these dif-
fusion patterns prevents the use of standard models like Linear
Threshold or Independent Cascade. This complexity underlines the
need to decompose and simplify 𝑝𝜓(𝑦𝑡|𝑥𝑠,G)to analyze the diverse
diffusion behaviors in 𝐺𝑠and𝐺𝑡through a learning approach:
log𝑝𝜓(𝑦𝑡|𝑥𝑠,G)=log𝑝𝜓1(𝑦𝑠|𝑥𝑠,𝐺𝑠)+log𝑝𝜓2(𝑦𝑡|𝑦𝑠,𝑥𝑡,𝐺𝑡).(2)
In this decomposition, 𝑝𝜓1(·)characterizes the diffusion pattern
of𝐺𝑠given the seed nodes 𝑥𝑠, which is independent of the in-
formation propagation in 𝐺𝑡.𝑦𝑠∈[0,1]𝑁𝑠records the infection
status of all nodes in 𝐺𝑠. When the diffusion is complete in 𝐺𝑠, the
infection probability is directly transferred to the target network
𝐺𝑡through bridge links 𝐿so that some nodes in 𝐺𝑡have initial
infection status (denoted as 𝑥𝑡) to initiate the infection process in
𝐺𝑡. The propagation in 𝐺𝑡is then modeled by 𝑝𝜓2(𝑦𝑡|𝑦𝑠,𝑥𝑡,𝐺𝑡)
by taking the graph structure 𝐺𝑡and initial seed infection proba-
bility𝑥𝑡as inputs. log𝑝𝜓(𝑦𝑡|𝑥𝑠,𝐺𝑠,𝐺𝑡)=log[Í
𝑥𝑡𝑝𝜓1(𝑥𝑡|𝑥𝑠,𝐺𝑠)·
𝑝𝜓2(𝑦𝑡|𝑥𝑡,𝐺𝑡)], where𝑥𝑡inherited infection probability from 𝑦𝑠. In
practice, we assume 𝑝𝜓1(𝑥𝑡|𝑥𝑠,𝐺𝑠)follows delta distribution, where
only the𝑥𝑡is 1 that corresponds to the 𝑥𝑠and the rest of 𝑥𝑡’s are
0. This property is also assumed in many works [ 22] using VAE.
Therefore, log𝑝𝜓(𝑦𝑡|𝑥𝑠,𝐺𝑠,𝐺𝑡)is simplified as Eq. (2).
Monotonic Constraint on Information Diffusion. The infor-
mation diffusion on the regular network is often regularized by
the monotone increasing property [ 6,16]. In this work, we also
assume the same monotonic property holds in the cross-network
information diffusion, namely 𝑦(𝑖)
𝑡⪰𝑦(𝑗)
𝑡,∀𝑥(𝑖)
𝑠⊇𝑥(𝑗)
𝑠. Specifi-
cally, selecting more seed nodes in 𝐺𝑠would result in a generally
higher (or at least equal) infection probability of nodes in 𝐺𝑠ac-
cording to the property of diminishing returns. Subsequently, the
bridge links would transfer the infection probability from 𝑦𝑠to
𝑥𝑡, and similarly, the probability of each node being infected in
𝑦(𝑖)
𝑡(estimated from 𝑥(𝑖)
𝑡) should be greater or equal to 𝑦(𝑗)
𝑡(esti-
mated from 𝑥(𝑗)
𝑡), such that 𝑦(𝑖)
𝑡⪰𝑦(𝑗)
𝑡. Therefore, owing to the
monotonic increasing property of the information diffusion, we
add the constraint 𝜆max(0,𝑦(𝑗)
𝑡−𝑦(𝑖)
𝑡)2
2,∀𝑥(𝑖)
𝑠⊇𝑥(𝑗)
𝑠,to Eq. (1),
where we transform the inequality constraint into its augmented
Lagrangian form to minimize ∥max(0,𝑦(𝑗)
𝑡−𝑦(𝑖)
𝑡)2
2and𝜆>0
denotes regularization hyperparameter.
Overall Objective for Training. We provide the graphical model
for the CNSL framework in Figure 3. As shown in the figure, solid
arrows indicate the variational approximation 𝑞𝜙1(𝑧𝑠|𝑥𝑠,𝐺𝑠)and
5422Source Localization for Cross Network Information Diffusion KDD ’24, August 25–29, 2024, Barcelona, Spain
Figure 2: The training pipeline of CNSL contains three steps: 1) 𝑞𝜙1and𝑞𝜙2approximate the distribution of 𝑝(𝑧𝑠,𝑧𝑓𝑠)in a
disentangled manner; 2) the inferred latent variables 𝑧𝑠and𝑧𝑓𝑠are concatenated to reconstruct ˆ𝑥𝑠; 3) the reconstructed ˆ𝑥𝑠is
leveraged as initial seed nodes to initiate the cross-network information propagation and predict expected diffusion ˆ𝑦𝑡.
Figure 3: The graphical model for CNSL, where the
solid arrows indicate the variational approximation
𝑞𝜙1(𝑧𝑠|𝑥𝑠,𝐺𝑠)and𝑞𝜙2(𝑧𝑓𝑠|𝑥𝑠,𝑓𝑠,𝐺𝑠)to the intractable poste-
rior𝑝(𝑍|𝑥𝑠,𝑓𝑠,𝐺𝑠). Dashed arrows denote the generative
process that decodes 𝑥𝑠from𝑝𝜃(𝑥𝑠|𝑍)and predicts the
information diffusion 𝑝𝜓(𝑦𝑡|𝑥𝑠,G).
𝑞𝜙2(𝑧𝑓𝑠|𝑥𝑠,𝑓𝑠,𝐺𝑠)to the intractable posterior 𝑝(𝑍|𝑥𝑠,𝑓𝑠,𝐺𝑠). Dashed
arrows denote the generative process that decodes 𝑥𝑠from𝑝𝜃(𝑥𝑠|𝑍)
and predicts the information diffusion 𝑝𝜓(𝑦𝑡|𝑥𝑠,G). The two direc-
tional arrow between 𝑦𝑠and𝑥𝑡indicates𝑥𝑡inherits the infection
probability from the diffusion observation 𝑦𝑠through bridging
nodes𝐿. Finally, we present the training objective of CNSL that
consists of Eq. (1), (2), and the monotonic constraint:
Ltrain=max
𝜃,𝜙 1,𝜙2E𝑞𝜙
𝑝𝜃(𝑥𝑠,𝑦𝑡,𝑥𝑓,G|𝑧𝑠,𝑧𝑓𝑠)
, (3)
s.t.𝐾𝐿
𝑞𝜙1(𝑧𝑠|𝑥𝑠,G)||𝑝(𝑧𝑠)
<𝐼𝑠,
𝐾𝐿
𝑞𝜙2(𝑧𝑓𝑠|𝑥𝑠,𝑓𝑠,G)||𝑝(𝑧𝑓𝑠)
<𝐼𝑓𝑠,
𝑦(𝑖)
𝑡⪰𝑦(𝑗)
𝑡,∀𝑥(𝑖)
𝑠⊇𝑥(𝑗)
𝑠,
= min
𝜃,𝜙 1,𝜙2,𝜓1,𝜓2−E𝑞𝜙
log𝑝𝜃(𝑥𝑠|𝑧𝑠,𝑧𝑓𝑠)
+log𝑝𝜓1(𝑦𝑠|𝑥𝑠,𝐺𝑠)+log𝑝𝜓2(𝑦𝑡|𝑦𝑠,𝑥𝑡,𝐺𝑡)
,
s.t.𝐾𝐿
𝑞𝜙1(𝑧𝑠|𝑥𝑠,G)||𝑝(𝑧𝑠)
<𝐼𝑠,
𝐾𝐿
𝑞𝜙2(𝑧𝑓𝑠|𝑥𝑠,𝑓𝑠,G)||𝑝(𝑧𝑓𝑠)
<𝐼𝑓𝑠,
max(0,𝑦(𝑗)
𝑡−𝑦(𝑖)
𝑡)2
2,
where we only need to sample one 𝑥(𝑖)
𝑠and many𝑥(𝑗)
𝑠’s (such that
𝑥(𝑖)
𝑠⊇𝑥(𝑗)
𝑠) as training samples for each mini-batch. The 𝑦(𝑖)
𝑡and𝑦(𝑗)
𝑡’s are estimated by arbitrary diffusion patterns. For simplicity,
we omit the subscript of E𝑞𝜙(𝑧𝑠,𝑧𝑓 𝑠|𝑥𝑠,𝑦𝑡,G)asE𝑞𝜙when the context
is clear. The overall framework is summarized in Figure 2.
3.4 Cross-network Seed Set Inference
Upon training completion, the joint probability 𝑝(𝑧𝑠,𝑧𝑓𝑠)is ap-
proximated by the posterior 𝑞𝜙(𝑧𝑠,𝑧𝑓𝑠|𝑥𝑠,𝑓𝑠,𝑦𝑡,G). Both𝑝𝜓1(·)
and𝑝𝜓2(·)effectively classify the diffusion patterns across net-
works. This study introduces a sampling method for ˜𝑥𝑠∼𝑝(𝑥𝑠)by
marginalizing over 𝑝(𝑧𝑠)·𝑝(𝑧𝑓𝑠)to conduct MAP estimation, where
𝑝(𝑥𝑠)=Í
𝑧𝑠Í
𝑧𝑓 𝑠𝑝𝜃(𝑥𝑠|𝑧𝑠,𝑧𝑓𝑠)𝑝(𝑧𝑠,𝑧𝑓𝑠). However, marginalizing
the standard Gaussian prior 𝑝(𝑧𝑠,𝑧𝑓𝑠)necessitates extensive sam-
pling to align the sample distribution with the target distribution,
increasing computational load. Additionally, it is also hard to sample
individual latent variables from the joint distribution of 𝑝(𝑧𝑠,𝑧𝑓𝑠).
To cope with both challenges, we consider the density over the
inferred latent variables induced by the approximate posterior in-
ference mechanism, and we propose the following objective w.r.t.
𝑧𝑠to infer ˜𝑥𝑠in an optimized manner. Specifically, the inference
objective functionLpredis written as:
Lpred=max𝑧𝑠E
𝑝𝜓(𝑦𝑡|𝑥𝑠,G)·𝑝𝜃(𝑥𝑠|𝑧𝑠,𝑧𝑓𝑠)
, (4)
s.t.𝑧𝑠∼𝑞𝜙1(𝑧𝑠|ˆ𝑥𝑠,G), 𝑧𝑓𝑠∼𝑞𝜙2(𝑧𝑓𝑠|ˆ𝑥𝑠,𝑓𝑠,G),
=min𝑧𝑠−Eh
log𝑝𝜓(𝑦𝑡|𝑥𝑠,G)+ log∑︁
𝑧𝑠∑︁
ˆ𝑥𝑠𝑝𝜃(𝑥𝑠|𝑧𝑠,𝑧𝑓𝑠)i
s.t.𝑧𝑠∼𝑞𝜙1(𝑧𝑠|ˆ𝑥𝑠,G), 𝑧𝑓𝑠∼𝑞𝜙2(𝑧𝑓𝑠|ˆ𝑥𝑠,𝑓𝑠,G),
where we sample many ˆ𝑥𝑠from the training set, and obtain equal
amount of𝑧𝑠from𝑞𝜙1(·). Note that we optimize 𝑧𝑠(dynamic latent
variable) only, instead of both 𝑧𝑠and𝑧𝑓𝑠(static-dynamic entangled
latent variable), which is rooted in the specific roles these variables
play in the model. 𝑧𝑠is targeted for optimization because it encodes
dynamic information crucial for identifying better seed nodes in the
context of information diffusion. This dynamic aspect is mutable
and can be optimized to improve source localization accuracy. On
the other hand, 𝑧𝑓𝑠entangles both dynamic and static informa-
tion, where the static part represents unchangeable node features.
5423KDD ’24, August 25–29, 2024, Barcelona, Spain Chen Ling et al.
Optimizing 𝑧𝑓𝑠would be less efficient because static features, by
their nature, cannot be optimized. The optimization process aims
to adjust variables to improve model performance, but since static
features remain constant, attempting to optimize 𝑧𝑓𝑠would not
enhance the model’s ability to localize diffusion sources.
Implementation of the Seed Set Inference. We provide imple-
mentation details of the overall inference process here. Specifically,
the inference framework first samples 𝑘seed node set ˆ𝑥𝑠from the
training set, and we can take the average value ¯𝑧𝑠and¯𝑧𝑓𝑠from the
learned latent distributions with taking 𝑘different ˆ𝑥𝑠as input:
¯𝑧𝑠=1
𝑘∑︁𝑘
𝑖𝑞𝜙1(𝑧𝑠|ˆ𝑥(𝑖)
𝑠,G),¯𝑧𝑓𝑠=1
𝑘∑︁𝑘
𝑖𝑞𝜙2(𝑧𝑠|ˆ𝑥(𝑖)
𝑠,𝑓𝑠,G).(5)
We concatenate ¯𝑧𝑠and¯𝑧𝑓𝑠as input to minimize the inference loss
in Eq. 4. The latent variable 𝑧𝑠is iteratively optimized according
to the inference objective function to minimize −log𝑝𝜓(𝑦𝑡|𝑥𝑠,G).
In practice, Eq. (4)cannot be optimized directly, we thus provide
a practical version of the inference objective function: since the
diffused observation 𝑦𝑡fits the Gaussian distribution and the seed
set𝑥𝑠fits the Bernoulli distribution, we can simplify Eq. (4) as:
Lpred=min𝑧𝑠−h
logÖ𝑁𝑠
𝑖=0𝑓𝜃(𝑧(𝑖)
𝑠,𝑧(𝑖)
𝑓𝑠)𝑥(𝑖)
𝑠(1−𝑓𝜃(𝑧(𝑖)
𝑠,𝑧(𝑖)
𝑓𝑠)1−𝑥(𝑖)
𝑠
+˜𝑦𝑡−𝑦𝑡2
2i
(6)
where the ˜𝑦is given as the optimal influence spread (i.e., ˜𝑦𝑡=𝑁𝑡).
In other words, the inference objective is guided by the discrepancy
between the inferred 𝑦𝑡and the ground truth ˜𝑦𝑡. We visualize the
overall inference procedure in Figure 2 (b). Specifically, we sample
¯𝑧𝑓𝑠and ¯𝑧𝑠, according to Eq. (5), and leverage 𝑝𝜃(·)to decode ˆ𝑥𝑠.
The predicted ˆ𝑥𝑠is leveraged to initiate the cross-network diffusion
and predict ˆ𝑦𝑡. The optimization supervision consists of 1) the mean
squared loss between ˆ𝑦𝑡and the ground truth 𝑦𝑡as well as 2) the
probability of node 𝑣𝑖being seed node 𝑓𝜃(𝑧(𝑖)
𝑠,𝑧(𝑖)
𝑓𝑠)∈[ 0,1].
4 Experimental Evaluation
This section reports both qualitative and quantitative experi-
ments that are carried out to test the performance of CNSL and
its extensions on a simulated dataset that simulates the spread
of misinformation across a city-level population and a collected
real-world cross-network dataset obtained by crawling two online
networking platforms and cross-references between them.
4.1 Real-world Dataset: Cross-Platform
Communication Network
We collected real-world data from GitHub and Stack Overflow to
form the cross-platform communication network, where informa-
tion flows from Github to Stack Overflow since many posts in Stack
Overflow have mentioned or discussed Github Repositories when
addressing user’s questions. We started by downloading the Stack
Overflow public data dump provided by the Internet Archive. Then,
we extracted all the Stack Overflow posts where their post texts
contain a URL to GitHub (i.e., 439,753 posts mapping to 439,753
repositories). We further built the Stack Overflow network by find-
ing the question posts, answer posts, and related posts of the current
439,753 posts. This yielded a total of 1,410,600 Stack Overflow posts,
encompassing data from 2008 up to 2023.To obtain the GitHub network, we expanded our initial GitHub
network by finding all GitHub repositories that the existing reposi-
tories depended upon. We utilized an open-source tool1, which uses
the GitHub GraphQL API to obtain the dependency information.
The resulting GitHub network contains 533,240 repositories. For
our experiment, we sampled GitHub repositories from the year 2021
and their dependent repositories from the year before 2021 (i.e.,
1204 nodes and 1043 edges). We then found their corresponding
Stack Overflow posts (i.e., 3862 nodes and 3149 edges). We obtained
the ground truth in a pseudo-setting: we randomly sampled 10% of
the GitHub nodes as seed nodes, and simulated their diffusion pro-
cess within the GitHub network and the Stack Overflow network
(i.e., 120 GitHub seed nodes, 354 GitHub infected nodes, 195 Stack
Overflow seed nodes, and 482 Stack Overflow infected nodes).
4.2 Simulated Dataset: Agent-Based Geo-Social
Information Spread
We leverage and agent-based simulation framework based on
realistic Patterns of Life [ 13,14] to simulate the spread of misin-
formation across social and physical networks. In this simulation,
an agent represents a simulated individual who commutes to their
workplace, eats at restaurants, and meets friends and recreational
sites. Inspired by the Theory of Planned Behavior [ 1] and Maslow’s
Hierarchy of Needs [ 19] as theories of human behavior, agents are
driven by physiological needs to eat and have a shelter, safety needs
such as financial stability requiring them to go to work, and needs
for love requiring them to meet friends and build and maintain a
social network. Details of the theories of social science informing
this simulation are found in [ 34] and details to use this simulation
for data-generation are described in [2].
We augmented this simulation framework to simulate the spread
of misinformation using a simple Susceptible-Infectious disease
model. The simulation is initialized with 15,000 agents. A small
number of𝑛(by default,𝑛=5) agents are selected randomly as the
sources of misinformation and flagged as “Infectious” and all other
agents are initially flagged as “Susceptible”. Agents can spread mis-
information in two ways: 1) through collocation, allowing an agent
to spread the misinformation in-person to other agents located at
the same workplace, restaurant, or recreational site, and 2) through
the social network, allowing an agent to spread misinformation to
their friends regardless of their location. To allow the generation of
large datasets for source localization, each spreading misinforma-
tion is stopped after five simulation days. At this time, the following
datasets are recorded:
•Ground Truth. The set of𝑛agents that were initially seeded with
the misinformation.
•Misinformation Spread. The list of agents to whom the misinfor-
mation has spread after five days.
•The Complete Co-location Network. This network captures the
agents who meet each other and thus, may spread misinformation
through co-location.
•The Observed Co-location Network. This network is a randomly
sampled subset of agents from the complete co-location network.
It represents the agents in the complete co-location network that
are parts of the simulated location tracking. This network is used
1https://github.com/edsu/xkcd2347
5424Source Localization for Cross Network Information Diffusion KDD ’24, August 25–29, 2024, Barcelona, Spain
to simulate the realistic case of not having access to the location
data of every individual.
•The Complete Social Network. This network records the friend
and family connections of all agents which may infect each other
through social contagion.
•The Observed Social Network. This network includes a randomly
sampled subset of agents from the complete social network and
simulates the social media environment. This network simulates
the realistic case where an observed social media network may
not capture the entire population.
•Cross-Network Links through Identity. Links between the two
observed networks are defined through identity. Any individual
agent in the co-location network is (trivially) connected to itself
in the social network.
Once this data is collected, the misinformation spread status of
all agents is set to “Susceptible” and 𝑛new agents are selected as the
seed nodes of a new case of misinformation. This process of creating
new cases of misinformation is iterated every five simulation days
to create an unlimited number of realistic datasets of information
spread across the physical and social spaces.
For the dataset used for the following experiments, there are
5,281 agents and 8,276 edges in the observed co-location network,
and 5,669 agents and 17,948 edges in the observed social network.
Each case of misinformation spread yields between 50-200 agents
to which the misinformation spreads after five days. This syn-
thetic dataset allows us to capture realistic misinformation spread
across both networks. Due to some agents not being captured
in the two networks, this dataset allows us to simulate the re-
alistic case where misinformation may spread outside of the ob-
served networks. We provide the code for our agent-based misin-
formation simulation framework in a GitHub repository found at
https://github.com/Siruiruirui/misinformation. This repository also
contains the generated dataset used in the following experiments.
4.3 Experiment Setup
Implementation Details. We employ a two-layer MLP for learn-
ing node features, which are concatenated with the seed vector
in the subsequent stage before being input to the encoder 𝑞𝜙2(·).
Both encoders ( 𝑞𝜙1(·),𝑞𝜙2(·)) and the decoder 𝑝𝜃(·)utilize three-
layer MLPs with non-linear transformations. We use GNN model
architecture coupled with a two-layer MLP network [ 3] as the ag-
gregation network with 64hidden units for the two propagation
models (𝑝𝜓1(·)and𝑝𝜓2(·)). The learning rates for encoder-decoder,
𝑝𝜓1(·), and𝑝𝜓2(·)are set to 0.0001, 0.005, and 0.01 respectively in a
multi-optimization manner. Additionally, the number of epochs is
15for all datasets, with a batch size of 2. The iteration numbers for
inference are set to 2for all datasets.
Comparison Methods. We illustrate the performance of CNSL in
various experiments against two sets of methods: 1) Rule-based
methods: LPSI [27] predicts the rumor sources based on the con-
vergent node labels without the requirement of knowing the un-
derlying information propagation model; OJC [32] aims at locating
sources in networks with partial observations, which has strength
in detecting network sources under the SIR diffusion pattern. 2)
Learning-based methods: GCNSI [8] learns latent node embed-
ding with GCN to identify multiple rumor sources close to theactual source; IVGD [25] propose a graph residual model to make
existing graph diffusion models invertible; SL-VAE [16] proposed to
learn the graph diffusion model with a generative model to charac-
terize the distribution of diffusion sources. DDMSL [ 30] proposed a
diffusion model-based source localization method to recover each
diffusion step iteratively. Note that existing comparison methods
are not designed for cross-network source localization, in order to
conduct a fair comparison, we repeated each model separately for
two networks and learned the two networks. We used bridge links
𝐿to connect these two models.
Evaluation Metrics. Source localization is a classification task so
that we use two main metrics to evaluate the performance of our
proposed model: 1). F1-Score (F1) and2). ROC-AUC Curve (AUC), as
they are classical metrics for classification tasks. since most real-
world scenarios tend to have an imbalance between the number of
diffusion sources and non-source nodes (fewer diffusion sources),
we additionally leverage PR@100 to evaluate the precision of the
top-100 prediction returned by models.
4.4 Quantitative Analysis
We evaluated the models in different diffusion configurations. For
the cross-platform communication data, the underlying diffusions
are LT (Table 1) and IC (Table 2) for the first network which was
followed by other three diffusion patterns (LT, IC, and SIS) for the
second network in each case. For the Geo-Social information spread
data (Table 3), the underlying diffusion pattern has been explained
in Section 4.2. For that dataset, we used two different simulations (A
and B) and also used two different types of seed selections. Here 𝐷0
considers the initial sources of misinformation as seed nodes and
𝐷1considers the initial sources of misinformation and the infected
agents on the first day as seed nodes.
Performance in the cross-platform communication network.
Table 1 shows that CNSL excels others across all metrics and diffu-
sion patterns. In the first network with LT diffusion pattern (LT2LT,
LT2IC, LT2SIS), CNSL achieves the highest recall (RE) in all scenar-
ios, with scores of 0.996, 0.997, and 0.997, respectively, indicating
its superior ability to identify all relevant instances in the dataset.
Additionally, CNSL also exhibits the best precision (PR) in LT2LT
and LT2IC scenarios, and competitive precision in the LT2SIS sce-
nario. The F1 scores, which balance precision and recall, are also
highest for CNSL, peaking at 0.498 in both LT2LT and LT2IC pat-
terns, demonstrating the method’s overall efficiency and accuracy.
The AUC scores for CNSL are robust, ranking highest in LT2LT and
LT2SIS scenarios, signifying excellent model performance across
various threshold settings. In the Table 2 first network with IC dif-
fusion pattern (IC2LT, IC2IC, IC2SIS), CNSL’s performance remains
impressive, maintaining the highest recall scores of 0.990, 0.998,
and 0.997, respectively. CNSL also boasts the highest F1 scores
in all scenarios, with a notable 0.499 in IC2IC, suggesting a bal-
anced performance between precision and recall. The AUC scores
for CNSL are again the highest, with 0.887 in IC2LT and 0.891 in
IC2IC, indicating its strong discriminative ability. Overall, CNSL
demonstrates considerable strength in reliably identifying relevant
instances across different diffusion patterns and networks, while
maintaining high precision and excellent area under the ROC curve.
5425KDD ’24, August 25–29, 2024, Barcelona, Spain Chen Ling et al.
LT2LT
LT2IC LT2SIS
Categor
y Method PR RE F1 AUC PR RE F1 AUC PR RE F1 AUC
Rule-base
dLPSI 0.156 0.841 0.263 0.583 0.141 0.849 0.242 0.533 0.079 0.942 0.127 0.497
OJC 0.104 0.035 0.052 0.500 0.116 0.036 0.054 0.502 0.113 0.036 0.053 0.501
Learning
base
dGCNSI 0.103 0.858 0.184 0.636 0.103 0.866 0.184 0.622 0.114 0.801 0.199 0.635
IVGD 0.228 0.948 0.368 0.139 0.227 0.874 0.359 0.138 0.123 0.985 0.215 0.240
SL-VAE 0.249 0.947 0.395 0.703 0.192 0.847 0.313 0.689 0.242 0.931 0.385 0.612
DDMSL 0.251 0.923 0.394 0.815 0.309 0.845 0.454 0.732 0.320 0.842 0.464 0.772
Our
MethodCNSL 0.332 0.996 0.498 0.888 0.332 0.997 0.498 0.889 0.332 0.997 0.498 0.890
CNSL-W/O 0.103 0.922 0.185 0.520 0.103 0.930 0.186 0.511 0.103 0.917 0.186 0.517
Table 1: Performance comparison for cross-platform communication network under LT diffusion pattern for the first network
with LT, IC, and SIS diffusion pattern for the second network.
IC2LT
IC2IC IC2SIS
Categor
y Method PR RE F1 AUC PR RE F1 AUC PR RE F1 AUC
Rule-base
dLPSI 0.124 0.868 0.217 0.489 0.215 0.657 0.324 0.562 0.129 0.906 0.226 0.522
OJC 0.117 0.032 0.050 0.503 0.097 0.027 0.042 0.499 0.115 0.032 0.050 0.502
Learning
base
dGCNSI 0.142 0.638 0.233 0.623 0.170 0.476 0.251 0.627 0.152 0.602 0.243 0.630
IVGD 0.120 0.979 0.210 0.733 0.548 0.391 0.083 0.439 0.115 0.825 0.195 0.733
SL-VAE 0.254 0.881 0.394 0.719 0.195 0.909 0.321 0.703 0.185 0.829 0.302 0.592
DDMSL 0.286 0.827 0.425 0.818 0.318 0.886 0.468 0.753 0.270 0.833 0.408 0.689
Our
MethodCNSL 0.333 0.990 0.498 0.887 0.333 0.998 0.499 0.891 0.332 0.997 0.498 0.888
CNSL-W/O 0.103 0.922 0.186 0.514 0.103 0.935 0.185 0.515 0.103 0.928 0.185 0.516
Table 2: Performance comparison for cross-platform communication network under IC diffusion pattern for first network with
LT, IC, and SIS diffusion pattern for the second network.
G2S-
A-D0 G2S-B-D0 G2S-A-D1 G2S-B-D1
Categor
y Method PR RE F1 AUC PR RE F1 AUC PR RE F1 AUC PR RE F1 AUC
Rule-base
dLPSI 0.147 0.982 0.256 0.512 0.165 0.954 0.281 0.609 0.152 0.903 0.260 0.475 0.224 0.973 0.364 0.578
OJC 0.053 0.018 0.022 0.496 0.125 0.039 0.051 0.507 0.063 0.040 0.043 0.497 0.115 0.058 0.071 0.505
Learning
base
dGCNSI 0.123 1.000 0.216 0.744 0.117 1.000 0.207 0.351 0.183 1.000 0.300 0.250 0.221 1.000 0.341 0.193
IVGD 0.139 1.000 0.244 0.502 0.138 1.000 0.242 0.500 0.218 1.000 0.352 0.490 0.266 1.000 0.409 0.500
SL-VAE 0.364 0.863 0.512 0.707 0.289 0.788 0.423 0.611 0.289 0.754 0.418 0.664 0.425 0.893 0.576 0.725
Our
MethodCNSL 0.481 0.816 0.605 0.931 0.452 0.885 0.598 0.933 0.499 0.779 0.609 0.894 0.539 0.987 0.698 0.901
CNSL-W/O S 0.122 1.000 0.219 0.503 0.117 1.000 0.2101 0.488 0.183 0.998 0.309 0.499 0.221 0.999 0.362 0.501
Table 3: Performance comparison for Geo-Social Information Spread Data (G2S) for two types (A, B) of simulation. Here 𝐷0
considers the initial sources of misinformation as seed nodes and 𝐷1considers the initial sources of misinformation and the
infected agents at the first day as seed nodes.
Performance in geo-social information spread data. In Table
3, the performance of various methods on Geo-Social Information
Spread Data (G2S) is evaluated for two simulation types, A and
B, with two different seeding strategies, D0 and D1. Our method,
CNSL, exhibits strong performance across all scenarios. In the G2S-
A-D0 simulation, CNSL achieves a high precision (PR) of 0.481,
showing its effectiveness in correctly identifying misinformation
spread. It also has the highest F1 score of 0.605 and an AUC of 0.931,
indicating a balanced precision-recall trade-off and excellent model
discrimination ability, respectively. For the G2S-B-D0 simulation,
CNSL’s precision (0.452) and F1 score (0.598) are notable, and the
AUC of 0.933 is the highest compared to other methods, suggest-
ing CNSL’s consistency and reliability. In the G2S-A-D1 scenario,
CNSL maintains a high recall (RE) of 0.779 and an impressive AUC
of 0.894, which signifies its capacity to identify true misinforma-
tion cases effectively when the seeding includes infected agentsfrom the first day. Remarkably, in the G2S-B-D1 scenario, CNSL
stands out with the highest precision (0.539) and F1 score (0.698),
and it achieves an outstanding AUC of 0.901. This demonstrates
CNSL’s superior ability to differentiate between misinformation
and non-misinformation spread, especially when the initial condi-
tion includes both sources of misinformation and infected agents.
The recall of 0.987 in this scenario also indicates that CNSL can
identify nearly all instances of misinformation spread. Overall, the
CNSL method outperforms other rule-based and learning-based
methods in most metrics across different simulations and seeding
strategies in geo-social networks.
Runtime Analysis. Figure 4 presents a runtime comparison among
four learning-based methods: CNSL, SL-VAE, GCNSI, and IVGD
across ten different diffusion configurations (a to j). CNSL, which is
our method, shows a competitive inference time in all datasets when
compared to the SL-VAE. In cross-platform communication network
5426Source Localization for Cross Network Information Diffusion KDD ’24, August 25–29, 2024, Barcelona, Spain
/uni00000044 /uni00000045 /uni00000046 /uni00000047 /uni00000048 /uni00000049 /uni0000004a /uni0000004b /uni0000004c /uni0000004d
/uni00000027/uni00000044/uni00000057/uni00000044/uni00000056/uni00000048/uni00000057/uni00000013/uni00000014/uni00000013/uni00000015/uni00000013/uni00000016/uni00000013/uni00000017/uni00000013/uni00000018/uni00000013/uni00000019/uni00000013/uni0000002c/uni00000051/uni00000049/uni00000048/uni00000055/uni00000048/uni00000051/uni00000046/uni00000048/uni00000003/uni00000057/uni0000004c/uni00000050/uni00000048/uni00000003/uni0000000b/uni00000056/uni00000048/uni00000046/uni0000000c/uni00000035/uni00000058/uni00000051/uni00000057/uni0000004c/uni00000050/uni00000048/uni00000003/uni00000026/uni00000052/uni00000050/uni00000053/uni00000044/uni00000055/uni0000004c/uni00000056/uni00000052/uni00000051
/uni00000026/uni00000031/uni00000036/uni0000002f
/uni00000036/uni0000002f/uni00000010/uni00000039/uni00000024/uni00000028
/uni0000002a/uni00000026/uni00000031/uni00000036/uni0000002c
/uni0000002c/uni00000039/uni0000002a/uni00000027
Figure 4: Runtime Comparison with learning based methods
for dataset a) LT2LT, b) LT2IC c) LT2SIS, d) IC2LT, e) IC2IC,
f) IC2SIS, g) G2S-A-D0, h) G2S-A-D1, i) G2S-B-D0, j) G2S-B-D1
/uni0000002f/uni00000037/uni00000015/uni0000002f/uni00000037 /uni0000002f/uni00000037/uni00000015/uni0000002c/uni00000026 /uni0000002f/uni00000037/uni00000015/uni00000036/uni0000002c/uni00000036 /uni0000002c/uni00000026/uni00000015/uni0000002f/uni00000037 /uni0000002c/uni00000026/uni00000015/uni0000002c/uni00000026 /uni0000002c/uni00000026/uni00000015/uni00000036/uni0000002c/uni00000036
/uni00000027/uni00000044/uni00000057/uni00000044/uni00000056/uni00000048/uni00000057/uni00000013/uni00000011/uni00000013/uni00000013/uni00000011/uni00000014/uni00000013/uni00000011/uni00000015/uni00000013/uni00000011/uni00000016/uni00000033/uni00000035/uni00000023/uni00000014/uni00000013/uni00000013/uni00000033/uni00000035/uni00000023/uni00000014/uni00000013/uni00000013/uni00000003/uni00000026/uni00000052/uni00000050/uni00000053/uni00000044/uni00000055/uni0000004c/uni00000056/uni00000052/uni00000051
/uni00000026/uni00000031/uni00000036/uni0000002f /uni00000036/uni0000002f/uni00000010/uni00000039/uni00000024/uni00000028
Figure 5: Precision@100: the precision rate of the top 100
nodes being predicted as seed nodes. The comparison is con-
ducted between our method: CNSL and the current state-of-
the-art: SL-VAE.
datasets (a) LT2LT, b) LT2IC, c) LT2SIS, d) IC2LT, e) IC2IC, and f)
IC2SIS)), CNSL demonstrates an inference time that is neither the
fastest nor the slowest, indicating a balanced computational demand
for these more complex scenarios. However, in datasets geo-social
information spread data (g) G2S-A-D0, h)G2S-A-D1, i)G2S-B-D0,
and j)G2S-B-D1), CNSL’s runtime is noticeably lower, suggesting
that while CNSL is highly effective in identifying misinformation
spread. Overall, CNSL shows a strength in providing a good balance
between accuracy and computational efficiency. While there are
scenarios where CNSL’s runtime is higher, these may correlate
with more complex network conditions where deeper analysis is
necessary, which CNSL seems to handle without compromising the
quality. This makes CNSL a robust method for practical applications
where runtime is a critical factor alongside precision and accuracy.
Precision analysis at top 100 nodes predicted by models. Fig-
ure 5 illustrates the precision at top 100 (PR@100) comparison
between CNSL and the state-of-the-art SL-VAE across various dif-
fusion patterns. PR@100 measures the precision rate of the top
100 nodes predicted as seed nodes, indicating how accurately each
method can identify the most influential nodes in the spread of in-
formation or misinformation. CNSL shows a strong performance in
this metric, outperforming SL-VAE in all diffusion patterns. CNSL
exhibits higher PR@100 rates, indicating that it is more precise
in identifying the key seed nodes. This precision is crucial in sce-
narios where it is important to quickly and accurately pinpoint
the main drivers of information spread within a network. Notably,
CNSL’s precision suggests that its algorithm is particularly adept
at handling complex diffusion patterns where the identification
of influential nodes is more challenging. The strength of CNSL,as highlighted by Figure 5, lies in its ability to consistently rank
the most relevant nodes higher than SL-VAE. The precision at the
top 100 nodes is essential for practical applications where inter-
ventions need to be targeted and efficient, such as in the case of
misinformation containment or viral marketing.
4.5 Case Study
In a case study depicted in Figure 6, we illustrate the distribution
of selected seed nodes. Here violet nodes represent the nodes that
are not seeds. On the other hand, green nodes are the original
seeds that were not selected by CNSL; orange nodes are wrongly
identified as seeds by CNSL; and the Blue color nodes are correctly
identified as seeds by CNSL.
(a) LT2LT
(b) LT2IC
 (c) LT2SIS
Figure 6: Seed inference by CNSL.
5 Conclusion
In conclusion, information diffusion source localization on cross-
networks requires locating the origins of information diffusion
within and across networks. We propose a Cross-Network Source
Localization (CNSL) framework in this work, which stands as a
pivotal advancement in addressing the complexities introduced by
cross-network environments, where traditional source localization
methods fall short. By ingeniously approximating the distribution
of diffusion sources through mean-field variational inference, en-
coding both static and dynamic features of nodes via a disentangled
generative prior, and uniquely modeling the diffusion dynamics of
interconnected networks, CNSL offers a comprehensive solution to
the problem. Extensive experiments, including quantitative anal-
ysis, case studies, and runtime analysis, have been conducted to
verify the effectiveness of the framework across different real-world
and synthetic cross-networks. The significance of this work lies not
only in its methodological innovation but also in its practical impli-
cations for safeguarding the integrity and reliability of information
in an increasingly interconnected digital world.
5427KDD ’24, August 25–29, 2024, Barcelona, Spain Chen Ling et al.
References
[1]Icek Ajzen. 1991. The Theory of Planned Behavior. Organizational Behavior and
Human Decision Processes 50 (12 1991), 179–211. https://doi.org/10.1016/0749-
5978(91)90020-T
[2]Hossein Amiri, Shiyang Ruan, Joon-Seok Kim, Hyunjee Jin, Hamdi Kavak, An-
drew Crooks, Dieter Pfoser, Carola Wenk, and Andreas Zufle. 2023. Massive
Trajectory Data Based on Patterns of Life. In Proceedings of the 31st ACM Interna-
tional Conference on Advances in Geographic Information Systems. 1–4.
[3]Pei Chen, Hang Yang, Kang Liu, Ruihong Huang, Yubo Chen, Taifeng Wang,
and Jun Zhao. 2020. Reconstructing Event Regions for Event Extraction via
Graph Attention Networks. In Proceedings of the 1st Conference of the Asia-Pacific
Chapter of the Association for Computational Linguistics and the 10th International
Joint Conference on Natural Language Processing. 811–820.
[4]Tanmoy Chowdhury, Chen Ling, Junji Jiang, Junxiang Wang, My T Thai, and
Liang Zhao. 2023. Deep Graph Representation Learning Influence Maximization
with Accelerated Inference. Available at SSRN 4663083 (2023).
[5]Chunhui Deng, Huifang Deng, and Zhipeng Fu. 2018. Modeling and Study of
Information Transfer in Complex Network. In 2018 International Conference on
Sensing, Diagnostics, Prognostics, and Control (SDPC). 668–675.
[6]Swapnil Dhamal, KJ Prabuchandran, and Y Narahari. 2016. Information diffusion
in social networks in two phases. IEEE TNSE 3, 4 (2016), 197–210.
[7]Nguyen Do, Tanmoy Chowdhury, Chen Ling, Liang Zhao, and My T Thai. 2024.
MIM-Reasoner: Learning with Theoretical Guarantees for Multiplex Influence
Maximization. In International conference on artificial intelligence and statistics.
[8]Ming Dong, Bolong Zheng, Nguyen Quoc Viet Hung, Han Su, and Guohui Li.
2019. Multiple rumor source detection with graph convolutional networks. In
CIKM. 569–578.
[9]Abdorasoul Ghasemi and Hermann de Meer. 2023. Robustness of interdependent
power grid and communication networks to cascading failures. IEEE Transactions
on Network Science and Engineering (2023).
[10] Jiaojiao Jiang, Sheng Wen, Shui Yu, Yang Xiang, and Wanlei Zhou. 2016. Identi-
fying propagation sources in networks: State-of-the-art and comparative studies.
IEEE Commun. Surv. Tutor. 19, 1 (2016), 465–481.
[11] Yanjie Jiang, Hui Liu, Nan Niu, Lu Zhang, and Yamin Hu. 2021. Extracting Concise
Bug-Fixing Patches from Human-Written Patches in Version Control Systems.
InIEEE/ACM 43rd International Conference on Software Engineering (ICSE 2021).
686–698.
[12] Hana Khamfroush, Novella Bartolini, Thomas F La Porta, Ananthram Swami, and
Justin Dillman. 2016. On propagation of phenomena in interdependent networks.
IEEE Transactions on network science and engineering 3, 4 (2016), 225–239.
[13] Joon-Seok Kim, Hyunjee Jin, Hamdi Kavak, Ovi Chris Rouly, Andrew Crooks,
Dieter Pfoser, Carola Wenk, and Andreas Züfle. 2020. Location-Based Social
Network Data Generation Based on Patterns of Life. In 2020 21st IEEE International
Conference on Mobile Data Management (MDM). 158–167. https://doi.org/10.
1109/MDM48529.2020.00038
[14] Joon-Seok Kim, Hamdi Kavak, Umar Manzoor, Andrew Crooks, Dieter Pfoser,
Carola Wenk, and Andreas Züfle. 2019. Simulating urban patterns of life: A geo-
social data generation framework. In Proceedings of the 27th ACM SIGSPATIAL
international conference on advances in geographic information systems. 576–579.
[15] Chen Ling, Di Cui, Guangmo Tong, and Jianming Zhu. 2021. On Forecasting
Dynamics in Online Discussion Forums. In 2021 IEEE International Conference on
Multimedia and Expo (ICME). 1–6.
[16] Chen Ling, Junji Jiang, Junxiang Wang, and Zhao Liang. 2022. Source localization
of graph diffusion via variational autoencoders for graph inverse problems. In
Proceedings of the 28th ACM SIGKDD conference on knowledge discovery and data
mining. 1010–1020.
[17] Chen Ling, Junji Jiang, Junxiang Wang, My T Thai, Renhao Xue, James Song,
Meikang Qiu, and Liang Zhao. 2023. Deep graph representation learning and
optimization for influence maximization. In International Conference on Machine
Learning. 21350–21361.
[18] Chen Ling, Guangmo Tong, and Mozi Chen. 2020. Nestpp: Modeling thread
dynamics in online discussion forums. In HT. 251–260.
[19] Abraham H Maslow. 1943. A theory of human motivation. Psychological review
50, 4 (1943), 370.
[20] B Aditya Prakash, Jilles Vreeken, and Christos Faloutsos. 2012. Spotting culprits
in epidemics: How many and which ones?. In ICDM. 11–20.
[21] Ruizhong Qiu, Dingsu Wang, Lei Ying, H Vincent Poor, Yifang Zhang, and
Hanghang Tong. 2023. Reconstructing Graph Diffusion History from a Single
Snapshot. arXiv preprint arXiv:2306.00488 (2023).
[22] Ali Razavi, Aaron van den Oord, Ben Poole, and Oriol Vinyals. 2019. Preventing
Posterior Collapse with delta-VAEs. In International Conference on Learning
Representations. https://openreview.net/forum?id=BJe0Gn0cY7
[23] Sushila Shelke and Vahida Attar. 2019. Source detection of rumor in social
network–a review. Online Social Networks and Media 9 (2019), 30–42.
[24] Diman Zad Tootaghaj, Novella Bartolini, Hana Khamfroush, Ting He, Nilan-
jan Ray Chaudhuri, and Thomas La Porta. 2018. Mitigation and recovery fromcascading failures in interdependent networks under uncertainty. IEEE Transac-
tions on Control of Network Systems 6, 2 (2018), 501–514.
[25] Junxiang Wang, Junji Jiang, and Liang Zhao. 2022. An invertible graph diffusion
neural network for source localization. In Proceedings of the ACM Web Conference
2022. 1058–1069.
[26] Zhen Wang, Dongpeng Hou, Chao Gao, Xiaoyu Li, and Xuelong Li. 2023. Light-
weight source localization for large-scale social networks. In Proceedings of the
ACM Web Conference 2023. 286–294.
[27] Zheng Wang, Chaokun Wang, Jisheng Pei, and Xiaojun Ye. 2017. Multiple source
detection without knowing the underlying propagation model. In AAAI.
[28] Xovee Xu, Tangjiang Qian, Zhe Xiao, Ni Zhang, Jin Wu, and Fan Zhou. 2024.
PGSL: A probabilistic graph diffusion model for source localization. Expert
Systems with Applications 238 (2024), 122028.
[29] Qi Xuan, Xincheng Shu, Zhongyuan Ruan, Jinbao Wang, Chenbo Fu, and Guan-
rong Chen. 2019. A self-learning information diffusion model for smart social
networks. IEEE Transactions on Network Science and Engineering 7, 3 (2019),
1466–1480.
[30] Xin Yan, Hui Fang, and Qiang He. 2024. Diffusion model for graph inverse
problems: Towards effective source localization on complex networks. Advances
in Neural Information Processing Systems 36 (2024).
[31] Wenyu Zang, Peng Zhang, Chuan Zhou, and Li Guo. 2015. Locating multiple
sources in social networks under the SIR model: A divide-and-conquer approach.
Journal of Computational Science 10 (2015), 278–287.
[32] Kai Zhu, Zhen Chen, and Lei Ying. 2017. Catch’em all: Locating multiple diffusion
sources in networks with partial observations. In AAAI.
[33] Kai Zhu and Lei Ying. 2016. Information Source Detection in the SIR Model: A
Sample-Path-Based Approach. IEEE/ACM TON 24, 1 (2016), 408–421.
[34] Andreas Züfle, Carola Wenk, Dieter Pfoser, Andrew Crooks, Joon-Seok Kim,
Hamdi Kavak, Umar Manzoor, and Hyunjee Jin. 2023. Urban life: a model of
people and places. Computational and Mathematical Organization Theory 29, 1
(2023), 20–51.
A Supplement Materials
A.1 Algorithm
Algorithm 1 CNSL Training Framework
Require:𝐺𝑠,𝐺𝑡,𝑓𝑠,𝐿,𝑥𝑠,𝑦𝑡
Ensure: Trained𝑞𝜙(·),𝑝𝜃(·), and𝑝𝜓(·)
1:for𝑒𝑝𝑜𝑐ℎ in1to𝑛𝑢𝑚_𝑒𝑝𝑜𝑐ℎ𝑠 do
2: foreach batch in 𝑡𝑟𝑎𝑖𝑛 _𝑠𝑒𝑡do
3:𝑧𝑠=𝑞𝜙1(𝑥𝑠,𝐺𝑠) ⊲Dynamic Encoder
4:𝑧𝑓𝑠=𝑞𝜙2(𝑥𝑠,𝑥𝑓𝑠,𝐺𝑠) ⊲Static Encoder
5: ˆ𝑥𝑠=𝑝𝜃(𝑧𝑠,𝑧𝑓𝑠) ⊲Decoder
6: ˆ𝑦𝑠=𝑝𝜓1(ˆ𝑥𝑠,𝐺𝑠) ⊲Source Network Diffusion
7: ˆ𝑥𝑡←ˆ𝑦𝑠 ⊲𝐿={(𝑣𝑠,𝑣𝑡)|𝑣𝑠∈𝑉𝑠,𝑣𝑡∈𝑉𝑡}
8: ˆ𝑦𝑡=𝑝𝜓2(ˆ𝑥𝑡,𝐺𝑡) ⊲Target Network Diffusion
9: CalculateLtrain ⊲Equation (3)
10: Backpropagate loss
11: Update model parameters
12: end for
13:end for
For training, we want to use observed 𝑥𝑠and𝑦𝑡to learn the
approximate posterior 𝑞𝜙(𝑍|𝑥𝑠,G), the decoding function 𝑝𝜃(𝑥𝑠|𝑍),
and the cross-network diffusion prediction function 𝑝𝜓(𝑦𝑡|𝑥𝑠,G).
Specifically, we separately obtain two latent variables 𝑧𝑠and𝑧𝑓𝑠in
Line 2-3. Both𝑧𝑠and𝑧𝑓𝑠are fed to reconstruct ˆ𝑥𝑠in Line 5. After
the seed set reconstruction, we conduct cross-network diffusion
prediction as shown in Line 6-8. The backpropagation is calculated
based on Eq. (3)that consists of seed nodes reconstruction error,
diffusion estimation error, as well as constraints of KL divergence
and influence monotonicity.
5428Source Localization for Cross Network Information Diffusion KDD ’24, August 25–29, 2024, Barcelona, Spain
Algorithm 2 CNSL Inference Framework
Require:𝑝𝜃(𝑥𝑠|𝑧𝑠,𝑧𝑓𝑠);𝑝𝜓1(𝑦𝑠|𝑥𝑠,𝐺𝑠);𝑝𝜓2(𝑦𝑡|𝑦𝑠,𝑥𝑡,𝐺𝑡); the
number of iteration 𝜂; learning rate 𝛼.
Ensure: ˆ𝑥𝑠
1:¯𝑧𝑠=1
𝑘Í𝑘
𝑖𝑞𝜙1(𝑧𝑠|ˆ𝑥(𝑖)
𝑠,G) ⊲ˆ𝑥(𝑖)
𝑠sampled from training set.
2:¯𝑧𝑓𝑠=1
𝑘Í𝑘
𝑖𝑞𝜙2(𝑧𝑠|ˆ𝑥(𝑖)
𝑠,G) ⊲ˆ𝑥(𝑖)
𝑠sampled from training set.
3:for𝑖=0,...,𝜂 do
4: ˆ𝑥𝑠=𝑝𝜃(¯𝑧𝑠,¯𝑧𝑓𝑠) ⊲Decoder
5: ˆ𝑦𝑠=𝑝𝜓1(ˆ𝑥𝑠,𝐺𝑠) ⊲Source Network Diffusion
6: ˆ𝑥𝑡←ˆ𝑥𝑠 ⊲𝐿={(𝑣𝑠,𝑣𝑡)|𝑣𝑠∈𝑉𝑠,𝑣𝑡∈𝑉𝑡}
7: ˆ𝑦𝑡=𝑝𝜓2(ˆ𝑥𝑡,𝐺𝑡) ⊲Target Network Diffusion
8: ¯𝑧𝑠←¯𝑧𝑠−𝛼·∇L pred(ˆ𝑦𝑡,¯𝑧𝑠,¯𝑧𝑓𝑠)
9:end for
10:ˆ𝑥𝑠=𝑝𝜃(¯𝑧𝑠,¯𝑧𝑓𝑠)For the seed set inference, we first sample 𝑘different ˆ𝑥(𝑖)
𝑠from
the training set, and we marginalize them to obtain two latent vari-
ables ¯𝑧𝑠and¯𝑧𝑓𝑠(Line 1-2). For𝜂iterations, we decode the predicted
ˆ𝑥𝑠based on(¯𝑧𝑠,¯𝑧𝑓𝑠)(Line 4) and conduct cross-network informa-
tion diffusion prediction (Line 5-7). The error between predicted ˆ𝑦𝑡
and the observed 𝑦𝑡is leveraged to update ¯𝑧𝑠based on Eq. (6).
5429