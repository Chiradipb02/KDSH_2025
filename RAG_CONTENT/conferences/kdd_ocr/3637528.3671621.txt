COMET: NFT Price Prediction with Wallet Profiling
Tianfu Wang
School of Computer Science and
Technology, University of Science and
Technology of China
Hefei, China
tianfuwang@mail.ustc.edu.cnLiwei Deng
Microsoft Inc.
Suzhou, China
denglw0830@outlook.comChao Wang
School of Artificial Intelligence and
Data Science, University of Science
and Technology of China
Hefei, China
chadwang2012@gmail.com
Jianxun Lian
Microsoft Research Asia
Beijing, China
jianxun.lian@outlook.comYue Yan
Microsoft Inc.
Beijing, China
yue.yan@microsoft.comNicholas Jing Yuan∗
Microsoft Inc.
Suzhou, China
nicholas.yuan@microsoft.com
Qi Zhang
Microsoft Inc.
Suzhou, China
zhang.qi@microsoft.comHui Xiong∗
Thrust of Artificial Intelligence, The
Hong Kong University of Science and
Technology (Guangzhou)
Guangzhou, China
Department of Computer Science and
Engineering, The Hong Kong
University of Science and Technology
Hong Kong SAR, China
xionghui@ust.hk
ABSTRACT
As the non-fungible token (NFT) market flourishes, price predic-
tion emerges as a pivotal direction for investors gaining valuable
insight to maximize returns. However, existing works suffer from
a lack of practical definitions and standardized evaluations, lim-
iting their practical application. Moreover, the influence of users’
multi-behaviour transactions that are publicly accessible on NFT
price is still not explored and exhibits challenges. In this paper,
we address these gaps by presenting a practical and hierarchical
problem definition. This approach unifies both collection-level and
token-level task and evaluation methods, which cater to varied
practical requirements of investors. To further understand the im-
pact of user behaviours on the variation of NFT price, we propose a
general wallet profiling framework and develop a COmmunity en-
hanced Multi-bEhavior Transaction graph model, named COMET.
COMET profiles wallets with a comprehensive view and considers
the impact of diverse relations and interactions within the NFT
ecosystem on NFT price variations, thereby improving prediction
performance. Extensive experiments conducted in our deployed
∗Corresponding authors.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
KDD ’24, August 25–29, 2024, Barcelona, Spain
©2024 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ACM ISBN 979-8-4007-0490-1/24/08.
https://doi.org/10.1145/3637528.3671621system demonstrate the superiority of COMET, underscoring its
potential in the insight toolkit for NFT investors.
CCS CONCEPTS
•Information systems →Data mining.
KEYWORDS
Web3, Non-fungible Token, FinTech, Graph Learning
ACM Reference Format:
Tianfu Wang, Liwei Deng, Chao Wang, Jianxun Lian, Yue Yan, Nicholas
Jing Yuan, Qi Zhang, and Hui Xiong. 2024. COMET: NFT Price Prediction
with Wallet Profiling. In Proceedings of the 30th ACM SIGKDD Conference
on Knowledge Discovery and Data Mining (KDD ’24), August 25–29, 2024,
Barcelona, Spain. ACM, New York, NY, USA, 12 pages. https://doi.org/10.
1145/3637528.3671621
1 INTRODUCTION
In recent years, the advent of blockchain technology and Web3 has
given rise to a novel class of digital assets, known as non-fungible
tokens (NFTs)[ 15]. Unlike cryptocurrencies, such as Bitcoin and
ETH, NFTs are media files (e.g., visual content and text descriptions
as shown in Figure 1(a)), attached to a specific digital token that
can be tracked and verified on a blockchain, which endows the
NFTs the property of investment as digital collection. According to
Forbes1statistics, as of February 2024, the global NFT market cap
has reached nearly 18.29 billion dollars. It signifies a remarkable
growth rate of about 2,636% compared to the figures in February
1https://www.forbes.com/digital-assets/nft-prices
5893
KDD ’24, August 25–29, 2024, Barcelona, Spain Tianfu Wang et al.
Sale
Transfer
Sale
Burn
Mint(b) Multi-behavior transactions within NFT lifecycle
…Collection-level MetadataToken-levelMetadata
Bored Ape Yacht ClubNameThe Bored Ape Yacht Club is a collection of 10,000 unique Bored Ape NFTs…Description
(a) Multimodal contents of collection-level and token-level metadataToken FilesPropertiesBackgroundBlueClothesBlack T…Key-value Pairs
Ethereum Blockchain
NFT Token
User Wallet
NFT Collection
Figure 1: An illustration of NFT ecosystem. (a) Multimodal
contents: collection-level name and description, and token-
level file and properties. (b) Multi-behaviour transactions:
mint, sale, transfer, and burn.
2021. The fastly developing market brings a lot of profit opportu-
nities, which attracts many investors into the wave of investment.
Therefore, estimating NFT price, offering valuable insights to guide
the investment process, draws lots of effort. Existing studies for
estimating NFT price can be roughly divided into two directions,
i.e., NFT asset valuation and NFT price prediction, based on differ-
ent ideas to get benefits. NFT asset valuation refers to discovering
the real potential value of NFT, aiming to look for underestimated
high-value NFT. Existing approaches mine various factors that can
influence the worth of NFTs. For example, Mekacher et al. [ 25]
show that tokens with rare or distinctive properties can create a
sense of scarcity, often resulting in higher prices. Costa et al. [ 9]
predict the NTF price based on its visual content. However, these
works fail to consider the dynamic nature of NFT market, making
it difficult to suit the market changing with each passing day. As a
result, To better adapt to the highly dynamic market environment,
more researchers are focusing on NFT price prediction [ 4,18,23].
It aims to forecast the daily prices of NFTs and pay attention to the
rise and fall of prices over time, studies in this direction typically
adopt a sequential model to extract useful information from the
historical sequence of prices. For example, Jain et al. [ 18] leverage
recurrent neural networks (RNNs) to forecast the daily price of
a collection based on past prices. Luo et al. [ 23] incorporate twit-
ter activities as supplementary features to predict future prices of
single collections.
Despite growing interest in NFTs, existing studies for price pre-
diction are still limited to the following aspects. On the one hand,
existing works are characterized by ambiguous and incomplete
problem definitions and evaluation methods, making it difficult to
fairly compare approaches and effectively advance the field. We
organize the recent studies in Table 1, which highlights their dis-
crepancies in multiple aspects ranging from problem definition to
evaluation. We observe that these works on price prediction only
focus on future collection-level prices, while the price variations
among tokens within identical collections pose an intriguing chal-
lenge that needs further exploration. On the other hand, current
research on NFT price prediction has failed to leverage valuableinformation from publicly accessible user behaviors, which offers
insights into uncovering potential price trends. As shown in Fig-
ure 1 (b), web3 users engage with NFTs through their digital wallets,
participating in multi-behavior transactions such as mints (primary
trade), sales (secondary trade), transfers (zero-price exchange), and
even burns (token destruction). These wallet behaviors contain
diverse semantics on market sentiments, which have an important
impact on shaping market dynamics and NFT prices. Furthermore,
identifying potential price trend correlations among NFTs and be-
tween NFTs and wallets also is a significant task. This allows us
to gain deeper insights into social influences and temporal correla-
tions, contributing to enhancing prediction accuracy. For instance,
if a wallet with a history of successful NFT investments suddenly
starts divesting from a particular collection, it might signal a shift
in market sentiment that can reflect price trends.
To tackle these problems, we provide a hierarchical definition of
the NFT price prediction problem that is more practical to provide
clarity. Concretely, we formulate the NFT price prediction with fore-
casting awareness at both the collection and token levels, which
enables our framework to cater to the diverse needs of practical
investors in such a highly dynamic market. To understand the ef-
fect of users’ multi-behaviour transactions on the variation of NFT
price, we propose a general wallet profiling framework that aims
to incorporate the influence of wallets when making predictions.
Considering the complexity (e.g., multi-behaviour patterns) and
sparsity of transactions (e.g., a limited number of wallets partici-
pating in trades actively), we develop a COmunity enhanced Muti-
bEhavior Transaction graph network model under this framework,
named COMET. Specifically, we develop a temporal transaction
graph construction method, in which wallets and NFT collections
are modeled as nodes and the multi-behaviour transactions are en-
coded as heterogeneous edges in the constructed graph. It facilitates
a comprehensive grasp of the interactions between collections and
wallets, simultaneously capturing underlying correlations among
different collections. Furthermore, we design a temporal transaction
graph learning model to learn the representations of collections and
wallets, which can adaptively propagate the influence of wallets on
the constructed graph. To further relieve the sparsity problem, we
introduce communities to enrich the similarity among the nodes
that exist in the same community. Finally, we optimize the proposed
model hierarchically for the collection and token level due to the
discrepancy, which cannot be ignored, between these two tasks.
In summary, our contributions are as follows:
•We systematically formalize a comprehensive and practical
problem definition for NFT price prediction, incorporating
both collection-level and token-level analyses, to address the
universal requirements of investors.
•We propose a novel wallet profiling framework for NFT price
prediction, mining the social influence behind transactions.
Specifically, we develop a graph modeling method, design
a community enhanced multi-behaviour transaction graph
model, and hierarchically predict two-level targets.
•We build an NFT price prediction system and deploy it in
practice, which encompasses data infrastructure and product
applications. We conduct extensive experiments to validate
the effectiveness of COMET and its components.
5894COMET: NFT Price Prediction with Wallet Profiling KDD ’24, August 25–29, 2024, Barcelona, Spain
Table 1: Comparison of existing works and COMET.
WorkProblem Definition Methodology Evaluation
Price-level Target Task Type Dataset Metrics
[25] Token Asset Value Correlation Correlation Analysis 1.4M Tokens Fitting error
[35] Token Asset Value Correlation Correlation Analysis 48K Tokens 𝑅2
[9] Token Asset Value Classification Multimodal Learning 4.7M Tokens Precision; Recall; F1
[19] Token Asset Value Classification LightGBM; XGBoost; etc 62K Tokens ACC; F1
[27] Token Asset Value Regression Linear Regression 4.7M Tokens 𝑅2
[4] Collection Daily Price Correlation Correlation Analysis 4 Collections /
[23] Collection Daily Price Regression NLP sentiment and MLP 19 Collections MAE; ACC; F1
[18] Collection Daily Price Regression RNN; Linear regression 1 Collections MSE; ACC
OursCollection Aggregated Price Classification Temporal Heterogeneous 100 Collections ACC; MCC
Token Sale Price Regression Graph Learning 1.5M Tokens MSE; MAE
2 RELATED WORK
We survey the related studies on NFT valuation and price prediction,
graph learning for finance, and temporal graph learning.
NFT Valuation and Price Prediction. As an emerging digital
asset class, NFTs have attracted exploratory efforts that consider
various influencing factors aimed at estimating their prices. We
categorize them into asset valuation and price prediction, summa-
rized in Table 1. From this table, we can observe that the asset value
approaches are all for token-level NFT pricing, while the price pre-
diction methods are for daily-level collection price prediction. The
former usually estimates the current or intrinsic value of a specific
NFT based on multiple relatively static factors, such as rarity [ 25],
multimodal content [ 9], and twitter activities [ 19]. However, these
works lack forecasting awareness and cannot meet the require-
ments of investors in such a dynamic market. Existing studies on
NFT price prediction mainly focus on daily collection price pre-
diction. For example, Brunet et al. [ 4] collected tweets based on
keyword search and analyzed the latent correlation between the
number of tweets and the average collection price. Luo et al. [ 23]
conducted sentiment analysis based on tweet texts and predicted
the next-day movement of the collection-level price with multiple
regression models. However, due to the lack of standardized prob-
lem definitions, datasets and evaluations, these approaches are hard
to be fairly compared with each other. Moreover, they can only
provide vague signals on which collection should be invested, while
ignoring the discrepancy between a specific token and collections,
e.g., the price trend of an NFT may be contrary to that of the whole
collection. In addition, the influence of wallets’ multi-behaviours on
the collection price is not included when modeling the predictive
patterns. These shortcomings prevent the existing approaches from
achieving the optima. Different from previous works, we present a
practical problem definition of NFT price prediction and a wallet
profiling framework to analyze the social influence on NFT prices.
Graph Learning for Finance. Graph structure plays an impor-
tant role in presenting financial knowledge, which facilitates un-
derstanding the correlations among financial assets [ 38]. A notable
application of this can be found in stock price prediction. Works
[21,43] constructed stock relationship graphs based on historical
sequence correlations or stock description documents. Furthermore,
studies [ 16,22] explored the relationship between stocks and fund
managers by constructing a heterogeneous graph. Utilizing theconstructed graphs, most of these studies employ graph neural
networks (GNNs) to extract meaningful features for their financial
tasks [6]. Despite the prevalence of graph structures in stock mar-
kets, the construction and modeling methods for graphs remain
unexplored in NFT price prediction. Incorporating multi-behavior
transactions into graphs is a challenge that needs to be addressed.
Temporal Graph Learning. As graph learning has demon-
strated impressive performance on static graphs [ 12,40,49,50],
researchers have started to explore more challenging graphs with
temporal evolution. The paradigms of existing methods can be
broadly grouped into timestamp embedding, parameter sequential
embedding, and hidden state sequential embedding [ 44]. Times-
tamp embedding-base methods [ 32] treat timestamps as a feature
type, incorporating them alongside other features during the prop-
agation process of GNNs. Methods based on parameter sequential
embedding [ 30] use RNNs to dynamically encode the parameters
of GNNs across time steps. Approaches based on hidden state se-
quential embedding [ 20] encode each snapshot of data with GNNs,
then employ RNNs to capture the temporal relationships between
these snapshots. Although these methods are adept at capturing
temporal information, they struggle with addressing challenges
posed by sparse and multi-behaviour transactions in NFT domains.
3 PROBLEM DEFINITION
Notations. Within in NFT ecosystem, let us denote a set of NFT
collections asC. For each collection 𝑐∈C, we denote a set of its
tokens asU𝑐. There is also a set of wallets, and we denote it as
W. For a token 𝑢∈U𝑐, there may be a sequence of historical sale
transactions, we denote it as S𝑢.
To bring clarity to this evolving field, we present a more practical
and hierarchical definition of the NFT price prediction problem.
Following the guide for the finance application [ 26], our definition
covers both the collection-level and the token-level tasks. This
approach not only allows us to analyze the overall price trends
of collections, but also understand the relative price relationships
between individual tokens and their collections.
Collection-Level price trend prediction. Given the high-
frequency natures of collection-level prices, predicting its trend is
particularly instructive to investors [ 38], which allows investors
to stay informed about the changing trends. Similar to studies on
stock movement predictions [ 43,45], we focus on predicting the
5895KDD ’24, August 25–29, 2024, Barcelona, Spain Tianfu Wang et al.
SaleNoiseRemoval
Collection PriceAggregation
Multimodal Content Embedding
TokenRarityCalculation
Data EngineeringPrediction & Optimization
NFT Metadata
CollectionPreprocessingSource
IPFS
EthereumSolution 1
AlchemySolution 2
BCELossCommunityDetection…Wallet TransferGraph Construction
TemporalTransaction Graph ConstructionTransactionGraphNetworkTemporalAttentionRepresentationGlobalCommunityDetection
Node Embedding Initialization
Multi-behaviorSemantic Aggregation
NFTFile
NFTTransactionCollection-level PriceTrend Predictor
Token-level SalePrice Predictor
MLP
MSELoss
Flipside
Global FeatureEncoder
Sale SequenceEncoder
Community-awareInformation Fusion
!!"#!!"$%&!!…Wallet Profiling Framework
InvestmentExperienceBehavior PatternContent PreferenceSocial Connection
NFTPrice
UpDown
Sale Price
Figure 2: An overview of NFT price prediction system with wallet profiling.
collection-level price trend over a specified period. At time step
𝑇, we consider historical data within a window of size 𝐻denoted
as{X𝑡𝑐|𝑡∈[𝑇−𝐻,𝑇]}, in whichX𝑡𝑐is not constrained to be the
historical price and can be various factors related to the NFT prices
(e.g., daily transaction counts and total sale volume). To predict the
price movement after the prediction step 𝑁, we define the binary
variable𝑦𝑐as follows:𝑦𝑐=1if𝑝𝑇+𝑁𝑐−𝑝𝑇𝑐>0, otherwise 𝑦𝑐=0.
Here,𝑝𝑡𝑐represents the collection-level price at time step 𝑡. Our
objective is to build a model that predicts the future movement of
collection-level price:
ˆ𝑦𝑐=F𝑐({X𝑡
𝑐|𝑡∈[𝑇−𝐻,𝑇]}). (1)
Token-Level sale price prediction. Sales of individual NFT to-
kens are typically infrequent and may have long intervals between
them. Drawing inspiration from works on real estate [ 48,52], we
aim to estimate future sale prices at which individual NFT tokens
are sold on the market, denoted as 𝑦𝑢=𝑝𝑇+𝑁𝑢. In addition to
collection-level historical data that contains the overall trend of the
entire collection, we incorporate the historical sale transactions 𝑆𝑢
of each token as input to consider the token’s relative relationship
with the overall collections. This predictive model is defined as:
ˆ𝑦𝑢=F𝑢 𝑆𝑢;F𝑐 {X𝑡
𝑐|𝑡∈[𝑇−𝐻,𝑇]}. (2)
Overall, our proposed method unifies both existing token-level
works [ 9,19,25,27,35] and collection-level studies [ 4,18,23], while
also enabling them to consider future predictability. The collection-
level task provides a broader perspective on overall trends from
a macroeconomic perspective, while the token-level task offers
detailed insights into specific decisions. This dual-task approach
effectively caters to the diverse needs of investors in the NFT market,
enhancing their decision-making capabilities.
4 NFT PRICE PREDICTION SYSTEM
We build an NFT price prediction system, as shown in Figure 2,
which consists of three components, i.e., data engineering, model
architecture, and prediction & optimization. Data engineering isused to acquire and preprocess NFT-related data, which provides
a data foundation for the following analysis components. Then,
the model architecture accepts the processed data features as in-
put and aims to capture the price trend patterns under the wallet
profiling framework. Specifically, we instantiate the framework
and propose a COmmunity-enhanced Multi-bEhavior Transaction
graph model, named COMET, which considers the multimodal
content and multi-behaviour transactions within the NFT ecosys-
tem. Finally, the prediction & optimization is adopted to train the
model parameters and infer the price in the future.
4.1 Data Engineering
We collect NFT-related data from multiple resources and perform
several key pre-processing to obtain insightful data.
4.1.1 Data Collection .NFT-related data can be categorized into
on-chain and off-chain data. Generally, on-chain data include trans-
action history, token ownership, etc., which are directly recorded
on the blockchain. In contrast, off-chain data refer to information
that exists outside the blockchain, mainly including NFT metadata,
NFT files, etc. We present two distinct data collection solutions that
are tailored for both industrial and lighting applications.
Infrasturture-supported Solution. We establish a local Ethereum
node using Geth2, enabling us to extract transaction data directly
from the blockchain using the Ethereum ETL3library. For off-chain
data, we harness the InterPlanetary File System (IPFS)4to crawl
them. This industrial-scale solution prioritizes scalability, efficiency,
and data integrity. It ensures efficient access to both on-chain and
off-chain NFT data, while enabling real-time and unlimited data
extraction and handling.
Public API-based Solution. We also create an open-source alterna-
tive based on publicly accessible API. Concretely, we use Alchemy5
2https://geth.ethereum.org/
3https://github.com/blockchain-etl/ethereum-etl
4https://ipfs.tech/
5https://www.alchemy.com
5896COMET: NFT Price Prediction with Wallet Profiling KDD ’24, August 25–29, 2024, Barcelona, Spain
Sale-To
Transfer-InTransfer-OutSale-From
MintBurnSale
Transfer!!"#
Edge Notations
…Holding
!!"#$%!!
Figure 3: Temporal transaction graph construction.
and Flipside6to obtain both after-processed on-chain and off-chain
data. This highly flexible solution provides users and communities
with accessible tools for investigating studies related to NFT.
4.1.2 Data Preprocessing .To improve the quality and usability of
NFT-related data, we perform a series of key data preprocessing.
Sale Noise Removal. As is common in financial markets, the NFT
marketplace often experiences the presence of noisy transactions.
To mitigate this, we first employ the robust strongly connected
graph method to identify and isolate wash sales, similar to work
[10]. Then, we apply the Box-Whisker method on sale time series
to exclude sales with anomalously high or low prices.
Collection-level Price Aggregation. In this study, we opt for the
daily median price as the preferred collection-level price metric.
This choice serves to mitigate the potential impact of anomalous
sale prices on the aggregation process, resulting in a more robust
modeling of collection-level pricing trends. In cases where there are
no recorded sales on certain days, we employ linear interpolation
to address the data gap.
Multimodal Content Embedding. NFT consists mainly of visual
and textual content. We employ a pretrained vision transformer
(ViT) model [ 13] to embed the image of NFTs, resulting in token-
level visual embeddings [ 5]. Regarding textual content, we con-
catenate various elements, including the collection-level name, de-
scription, and all token-level property keys [17]. To derive textual
embeddings, we leverage a pre-trained sentence BERT model [ 33].
Token-level Rarity Calculation. As revealed in studies [ 17,25], the
rarity of tokens strongly correlates with price differences among
their same collecions. For each collection 𝑐, we denote its propriety
set as𝑃𝑐. We first calculate the rarity score of each property by 𝑟𝑝=
|𝑐|
|𝑝|,𝑝∈𝑃𝑐, where|𝑐|denotes the number of tokens in collection
𝑐and|𝑝𝑐|denotes the number of tokens that have the property 𝑝.
Then, the rarity score of a token 𝑖∈𝐼𝑐is defined as 𝑟𝑖=Í
𝑝∈𝑃𝑖𝑐𝑠𝑝,
where𝑃𝑖𝑐is the set of properties of this token.
6https://flipsidecrypto.xyz/4.2 Wallet Profiling Framework
Wallet profiling aims to create a comprehensive profile of a digital
wallet within the NFT ecosystem. This profile encompasses a wide
range of attributes and information about wallet holders, contribut-
ing to the identification of correlations between their behavior
and the NFT price trends they interact with. In general, wallet
profiling includes the following four key aspects: (1) Investment
experience involves analyzing a wallet’s historical transaction fre-
quency, total asset value, and profitability. It provides insights into
the wallet holder’s level of investment experience, as well as their
track record in making successful investment decisions. Wallets
with more extensive experience may exhibit more sophisticated
trading strategies and a greater impact on NFT prices. (2) Content
preference examines the specific styles or types of NFTs that wallet
holders are most interested in. Understanding a wallet holder’s
content preferences contributes to identifying trends in the popu-
larity of NFT. (3) Social connections explore the latent relationships
between wallets within the NFT ecosystem. It provides insights
into potential collaborations, shared interests, or contrasting atti-
tudes towards the same NFTs among wallet holders. (4) Behavior
patterns focus on the dynamic trading strategies employed by a
wallet. This includes assessing how wallet holders react to price
fluctuations, whether they engage in speculative trading, or if they
adopt a long-term investment approach. Understanding these be-
havior patterns is critical for evaluating how the actions of wallet
holders influence NFT prices over time. Based on this framework,
we instantiate a model, namely COMET. As shown in the middle
of Figure 2, COMET contains four parts and we elaborate on each
part in the following sections.
4.2.1 Temporal Transaction Graph Construction .The NFT ecosys-
tem is characterized by multifaceted interactions between wallets
and collections, indicated by transactions. To model the profile of
wallets, we construct a temporal transaction graph. Specifically, we
segment transactions into daily time windows and build a series of
snapshot transaction graphs. We present the transaction graph at
𝑡day asG𝑡=(N𝑡,R𝑡), whereN𝑡, andR𝑡present the nodes, and
edges, respectively.
•N𝑡:G𝑡consists of two types of nodes, i.e., WandC, where
Wrefer to the user’s wallets, and Crepresent aggregated NFT
collections. For 𝑤∈W , we consider the daily count of mint,
sale, transfer, burn transactions, etc, as their dynamic features
𝑓𝑑𝑤, to model the investment experience of wallets. For 𝑐∈C, we
consider visual and textual content embeddings as static features
𝑓𝑠𝑐of each collection, which combines the holding behaviour to
acquire the wallets’ content preference. Moreover, we allocate
each wallet node and collection node a trainable embedding,
denoted as ¯ℎ𝑤and¯ℎ𝑐.
•R𝑡: There are two main types of edge, i.e., wallet to wallet and
wallet to NFT, in transactions, where the former aims to capture
the wallets’ social connections while the later is to model the
behaviour patterns of wallets. A wallet can buy or transfer in
an NFT from another wallet, which indicates two relations, i.e.,
sale𝑟𝑠and transfer 𝑟𝑡, between wallets. A wallet can mint, hold,
and burn an NFT, where we denote these three relations as 𝑟𝑚,
𝑟ℎ, and𝑟𝑏, respectively. Moreover, an NFT is also involved in the
sale and transfer transactions between wallets, which presents
5897KDD ’24, August 25–29, 2024, Barcelona, Spain Tianfu Wang et al.
four relations, i.e., sale-from, sale-to, transfer-in , transfer-out,
denoted as𝑟𝑠𝑓,𝑟𝑠𝑡,𝑟𝑡𝑖, and𝑟𝑡𝑜, separately. For the wallet to NFT
relations, we merge the NFTs to one node if they belong to the
same collection. This can relieve the data sparsity problem at the
NFT token level (See Appendix A.3 for detail).
Incorporating the four aspects of wallet profiling when con-
structing the graph, we can learn comprehensive descriptions of
wallets through information extraction from the constructed graph.
We summarize detailed features of transaction graphs in Appendix
A.2. By modeling all snapshots within the time window as such
transaction graphs, we obtain a temporal transaction graph that
evolves at the daily level. We denote it as {G𝑡|𝑡∈[𝑇−𝐻,𝑇]}.
Our approach provides comprehensive modeling of the dynamic
NFT ecosystem. It enables a holistic understanding of the interplay
between collections and wallets, while also implicitly capturing
correlations among collections.
4.2.2 Global Community Detection .Within a dynamic NFT ecosys-
tem, the transaction counts of wallets exhibit a characteristic power
law distribution, posing a significant challenge of data sparsity (see
Appendix A.3 for detail). Notably, transfer behaviour within the
NFT ecosystem tends to exhibit a close relationship between the
sender and the receiver wallet [ 10]. For example, there may be
different wallets registered by the same user. These wallets tend
to exhibit similar market sentiments and behaviour patterns. To
capture these intrinsic connections among wallets, we establish a
global wallet transfer graph, based on all historical transfers within
the specified time window. In this graph, nodes represent individ-
ual wallets, while edges indicate instances of transfer behaviour
between these wallets. We measure the strength of the connections
between wallets by considering the count of transfers as the weight
of each edge. Subsequently, we employ the Louvain algorithm [ 2]
to conduct community detection within this graph, resulting in the
identification of distinct wallet clusters. These clusters are collec-
tively denoted as Φ, and each wallet 𝑤is associated with a specific
cluster𝜙∈Φ. This approach enables us to reveal the inherent
community structure among wallets, and collaboratively consider
market sentiment and dynamic evolution at the community level.
4.2.3 Transaction Graph Network .For snapshot graphs {G𝑡}, we
propose a transaction graph network to obtain the embedding of
each collection and wallet. There are three components in this
network, i.e., node embedding initialization, community-aware
information fusion, and multi-behaviour semantic aggregation.
Node embedding initialization provides the initial embeddings
for each collection and wallet, which can be presented as follows:
˜ℎ𝑤,0=¯ℎ𝑤+MLP(𝑓𝑑
𝑤),∀𝑤∈W, (3)
ℎ𝑐,0=¯ℎ𝑐+MLP(𝑓𝑑
𝑐)+MLP(𝑓𝑠
𝑐),∀𝑐∈C, (4)
where ¯ℎ𝑤and¯ℎ𝑐are randomly initialized embeddings that will be
learned through gradient descending algorithm.
Community-aware information fusion is to address the sparse
transaction issue and perceive the community-driven collabora-
tion and evolution. Specifically, we first derive the embedding
ℎ𝜙of each cluster 𝜙with the mean pooling method, i.e., ℎ𝜙=
1
|𝜙|Í
𝑤∈𝜙˜ℎ𝑤,0,∀𝜙∈Φ. Then, we concatenate each wallet node
embedding ℎ𝑤and its cluster embedding ℎ𝜙and encode throughMLPs, to integrate the community-level information, and obtain
ℎ𝑤,0. When the context is clear, we unifiedly use ℎto indicate em-
beddings of nodes, i.e., wallets and collections, in the following
presentations.
Multi-behaviour semantic aggregation is to propagate embeddings
along with the constructed multi-type edges to model the wallet
profile and its influence on the price of NFT collections. This process
consists of multiple graph network layers, and given the 𝑛-th graph
network layer, we consider its input node embedding as ℎ𝑖,𝑛,∀𝑖∈
N𝑡. Specifically, for each distinct edge type 𝑟∈R, we engage in
adaptive semantic propagation to adjacent nodes [37].
ℎ𝑟
𝑖,𝑛=ℎ𝑖,𝑛+∑︁
𝑗∈N𝑟
𝑖𝛼𝑖,𝑗ℎ𝑗,𝑛,∀𝑖∈N𝑡,∀𝑟∈R𝑡, (5)
whereN𝑟
𝑖denotes the neighbors of node 𝑖under the view of edge
type𝑟.𝛼𝑖,𝑗denotes adaptive weights between node 𝑖and𝑗. Consid-
ering there are features ℎ𝑟
(𝑖,𝑗),𝑛for some edges, we add them with
features of node 𝑖and𝑗before computing the adaptive weights, i.e.,
ℎ𝑓
(𝑖,𝑗),𝑛=ℎ𝑖,𝑛+ℎ𝑗,𝑛+ℎ𝑟
(𝑖,𝑗),𝑛. For the edges without features, we
set their features as zero vectors. Then, 𝛼𝑖,𝑗is calculated as follows:
𝛼𝑖,𝑗=exp
𝜃⊤𝑣,𝑟𝜎(𝜃𝑤,𝑟ℎ𝑓
(𝑖,𝑗),𝑛
Í
𝑘∈N𝑟
𝑖exp
𝜃⊤𝑣,𝑟𝜎(𝜃𝑤,𝑟ℎ𝑓
(𝑖,𝑗),𝑛, (6)
where𝜃⊤𝑣,𝑟and𝜃𝑤,𝑟are trainable parameters, ⊤denotes the trans-
form operator and 𝜎denotes the activation function.
To aggregate the semantic information from various edge types,
we adopt the sum-pool method to integrate each node’s representa-
tions under different types of edges, calculated as follows:
ℎ𝑖,𝑛+1=ℎ𝑖,0+∑︁
𝑟∈Rℎ𝑟
𝑖,𝑛,∀𝑖∈N𝑡. (7)
Here, we also introduce the residual connection to enhance the
original features, while avoiding the over-smoothing issues.
4.2.4 Temporal Attention Representation .After obtaining overall
representations of each collection 𝑐at different time steps 𝑡, we use
a long short-term memory (LSTM) network to capture temporal
patterns among sequential snapshots [ 39,41]. We can obtain the
hidden state ℎ𝑡𝑐of each collection 𝑐at each timestep 𝑡:
ℎ𝑡
𝑐=LSTM(ℎ𝑡−1
𝑐,𝑥𝑡
𝑐),∀𝑡∈[𝑇−𝐻,𝑇], (8)
where𝑥𝑡𝑐denotes the hidden state of LSTM at timestep 𝑡.
Subsequently, we recognize that data from different time steps
may have varying degrees of significance in contributing to the
overall sequence representation [ 31]. To account for this, we create
a representation with temporal awareness by incorporating the
attentive weight 𝛼𝑡assigned to each hidden state ℎ𝑡𝑐, and fusing it
with the final hidden state ℎ𝑇𝑐.
ˆℎ𝑐=ℎ𝑇
𝑐+∑︁
𝑡∈[𝑇−𝐻,𝑇]𝛼𝑡ℎ𝑡
𝑐, 𝛼𝑡=exp(𝜃⊤𝑣𝜎(𝜃𝑤(ℎ𝑡𝑐)))Í
𝑇∈[𝑇−𝐻,𝑇]exp(𝜃⊤𝑣𝜎(𝜃𝑤(ℎ𝑡𝑐))).(9)
This mechanism ensures that the contributions of different time
steps are appropriately weighted and considered in the final repre-
sentation, acknowledging the varying importance of each snapshot.
5898COMET: NFT Price Prediction with Wallet Profiling KDD ’24, August 25–29, 2024, Barcelona, Spain
4.3 Hierarchical Prediction and Optimization
For two-level tasks, COMET is equipped with two predictors, hier-
archically predicting distinct targets and optimizing models.
4.3.1 Collection-level Price Trend Predictor .Given the temporal at-
tention representations of each collection 𝑐, we lastly use an MLP-
based predictor to generate the predictions of the price movements:
ˆ𝑦𝑐=𝜎𝑐(MLP(ˆℎ𝑐)) (10)
where𝜎𝑐is the𝑠𝑖𝑔𝑚𝑜𝑖𝑑 activation function to produce probability.
4.3.2 Token-level Sale Price Predictor .For each token 𝑢, the fea-
tures associated with each sale 𝑠∈S𝑢include the sale price, ETH-
to-USD exchange rate, and the collection-level price on that specific
day, denoted 𝑓𝑠𝑢. Given the heterogeneity of token content, varia-
tions in price can exist even within the same collection. To account
for these relative price relationships between individual tokens and
their respective collections, we draw inspiration from the work [ 34]
and employ a sale sequence encoder based on the Transformer [ 36]
(TFEncoder). We derive the token sale embedding ℎ𝑠𝑢as follows:
ℎ𝑠
𝑢=TFEncoder({𝑓𝑠
𝑢|𝑠∈S𝑢}). (11)
Specially, in the absence of prior sale events for a token, we utilize a
zero embedding as its event embedding. We also consider the rarity
score and total counts of every transaction type as its global features,
denoted as𝑓𝑔
𝑢, which is transformed by the MLP, i.e., ℎ𝑔
𝑢=MLP(𝑓𝑔
𝑢).
Finally, we fuse them with the latest hidden state ℎ𝑐of its collection
obtained from the transaction graph network, which contributes to
perceiving the future trend of overall collections. We produce the
token-level price prediction with the reluactivation function 𝜎𝑢.
ˆ𝑦𝑢=𝜎𝑢(MLP(ℎ𝑠
𝑢+ℎ𝑔
𝑢+ˆℎ𝑐)) (12)
Considering the dependencies between the two tasks, we opti-
mize COMET with a hierarchical strategy. Concretely, in the train-
ing of collection-level task, we minimize the binary cross-entropy
(BCE) loss to optimize both the transaction graph network and
collection-level predictor. Then, in the training of token-level task,
the COMET’ parameters that are trained in the collection-level task
are frozen. We merely optimize the token-level predictor with the
mean squared error (MSE) loss. Moreover, to avoid latent overfitting
issues, we include L2 regularization as an additional loss.
4.4 Practical Deployment
We have deployed our system in practical environments, which con-
sist of the establishment of data infrastructure and the integration
of practical products. See Appendix A.1 for more details.
5 EXPERIMENTS
We evaluate COMET in tasks at both collection and token levels,
comparing it to advanced baselines. We also conduct an ablation
study to validate the effectiveness of each component and analyze
feature importance. Furthermore, we study the impact of transac-
tion count on performance, placed in Appendix 5.5.
5.1 Experiment Setup
Datasets. We evaluate the performance of COMET using collected
NFT data from January 2021 to June 2023. Our evaluation datasetTable 2: Overall performance on the collection-level task.
Algorithm1-step 3-step 5-step
ACC↑MCC↑ACC↑MCC↑ACC↑MCC↑
RF 0.5627 -0.0017 0.5476 -0.003 0.5675 0.0371
SVM 0.5678 0.0537 0.5668 0.0197 0.5884 0.0419
XGBoost 0.5640 0.0665 0.5616 0.099 0.5755 0.1119
MLP 0.5513 0.0620 0.5792 0.1365 0.5808 0.1123
LSTM 0.5776 0.1372 0.5840 0.1348 0.5843 0.1237
TCN 0.5781 0.1387 0.5890 0.1386 0.5978 0.1698
ALSTM 0.5893 0.1537 0.5977 0.1681 0.5946 0.1329
D-Linear 0.5663 0.0451 0.5695 0.0427 0.5910 0.0680
N-BEATS 0.5835 0.1112 0.5902 0.1425 0.6029 0.0262
Informer 0.5505 -0.0173 0.5894 0.1266 0.5841 0.0262
Autoformer 0.5668 0.1063 0.5645 0.1422 0.6079 0.1479
COMET 0.6075 0.1861 0.6158 0.2092 0.6214 0.2128
focuses on the top 100 collections, ranked by their sales volume.
It comprises a total of 1.53 million tokens and 0.74 million wal-
lets, with a total of 7.76 million transactions. The distribution of
transaction types is as follows: mints (46.02%), sales (33.30%), trans-
fers (20.03%), and burns (0.63%). For the collection-level task, we
divide the daily price time series of each collection into three sub-
sets: the first 70% for training, the latest 15% for testing, and the
remaining 15% for validation. Following the setting of work [ 47],
we consider prediction steps at intervals of 1, 3, and 5 to assess
both short-term and long-term forecasting capabilities. To capture
historical trends effectively, we set the size of historical windows
to 14. Similarly, the token-level sale dataset is divided according to
the same proportions.
Baselines. For the collection-level classification task, we com-
pare COMET with three groups of baselines: (1) traditional machine
learning models, i.e., random forest (RF) [ 3], support vector machine
(SVM) [ 8], and XGBoost [ 7]; (2) stock movement prediction mod-
els, i.e., MLP, LSTM [ 28], temporal convelutional network (TCN)
[11] and attentive LSTM (ALSTM) [ 31]; (3) advanced time series
forecasting models, i.e., D-Linear [ 46], and N-BEATS [ 29], Informer
[51] and AutoFormer [ 42]. We adjust the final activation function
of these time series forecasting models for our classification task.
For the token-level task, we employ several machine learning re-
gression models, including RF, support vector regression (SVR) [ 14],
and XGBoost. We also utilize the MLP, LSTM, TCN, and ALSTM as
baseline sale sequence encoders. In addition to MLP, other methods
use ALSTM to encode historical data at the collection level.
Metrics. For the collection-level classification task, we adopt
the accuracy (ACC) and Matthews correlation coefficient (MCC) as
metrics, widely used in studies on stock trend prediction [ 24,45].
Besides, we utilize the MSE and mean absolute error (MAE) to
measure the prediction performance of token-level task.
Implementations. See Appendix for the details on model imple-
mentations, hyperparameter settings, and experiment equipment.
5.2 Collection-level Task Results
The results for the collection-level task across three different pre-
diction step settings are presented in Table 2. Notably, COMET
5899KDD ’24, August 25–29, 2024, Barcelona, Spain Tianfu Wang et al.
1-step 3-step 5-step
(a) ACC0.570.600.63ACC
1-step 3-step 5-step
(b) MCC0.160.180.200.22MCCw/o HE w/o TE w/o RE COMET
Figure 4: Results of edge ablation.
1-step 3-step 5-step
(a) ACC0.570.600.63ACC
1-step 3-step 5-step
(b) MCC0.160.180.200.22MCCw/o IDE w/o CIF w/o TAR COMET
Figure 5: Results of module ablation.
consistently outperforms all baselines, which highlights its superi-
ority. We observe that all methods achieve better performance as
the prediction step size increases. This trend indicates the challenge
posed by short-term fluctuations compared to predicting long-term
trends. Moreover, deep learning-based models (ALSTM, N-BEATS,
etc) tend to outperform traditional machine learning models (SVM,
XGBoost, etc), emphasizing their capacity for capturing non-linear
relationships and their suitability for NFT price prediction tasks.
Time series forecasting models (Informer, Autoformer, etc) exhibit
better performance in larger prediction step settings, demonstrat-
ing their effectiveness in forecasting long-term trends rather than
short-term fluctuations. Particularly, when compared to suboptimal
models, COMET exhibits (3.09%, 21.08%), (3.03%, 24.45%), and (2.22%,
25.26%) improvements in the setting of 1-step, 3-step, and 5-step,
respectively, concerning metrics (ACC, MCC). The greater improve-
ment in MCC over ACC suggests that COMET excels at reducing
both false positives and false negatives, highlighting its capability
to make well-balanced predictions, especially in such a situation
involving class imbalance and asymmetric error costs. By mining
the market sentiment behind multiple behaviors, our method more
accurately identifies the rise and fall of future price trends. This is
particularly valuable in NFT investment scenarios, where incorrect
predictions may have significant financial implications.
5.3 Ablation Study
We conduct ablation studies on COMET to evaluate the contribution
of each type of edge in the transaction graph construction method
and each module within the transaction graph network.
5.3.1 Edge Ablation .To examine the contributions of each type of
edge, we compare the COMET with its three variations: (1) w/o HE
omits all holding edges; (2) w/o TE removes all transaction-related
0.000 0.025 0.050 0.075 0.100
Importance ScoreTotal holding countTotal count of token supplyTextual embeddingDaily Transaction Counts (Wallet)Visual embeddingDaily Transaction Counts (Collection)ETH-to-USD priceTotal Asset ValueDaily V olumeDaily PriceFeature
Node Type
Collection Node
Wallet NodeFigure 6: Top 10 feature importances.
edges; and (3) w/o RE clears all wallet relationship edges. The re-
sults of this analysis are illustrated in Figure 4, which passes the
paired t-test about the significance level. We observe that removing
any of these edge types leads to reductions in performance. Trans-
action edges, which capture dynamic interactions between wallets
and NFT collections, significantly contribute to COMET’s effective-
ness. They provide valuable insights into the temporal evolution
of NFT market and the market sentiment behind multi-behaviour
transactions. On the other hand, holding edges capture varying
degrees of influence that wallets with different token holdings have
on NFT price trends, also enhancing the performance of COMET.
Moreover, relationship edges model the relationships among wal-
lets and shed light on the social dynamics, further contributing to
COMET’s performance. All results demonstrate the effectiveness
of our transaction graph transaction method.
5.3.2 Module Ablation .We compare COMET against three of its
variations to assess the impact of each module: (1) w/o IDE removes
the trainable embeddings of wallets and collections; (2) w/o CIF
discards the community-aware information fusion module; and
(3)w/o TAR replaces the temporal attention representation mod-
ule with a single LSTM. Figure 5 reports the results of this study,
passing paired t-test. We observe that removing any components
causes the performance degradation of COMET, underscoring the
indispensable contributions of each component to COMET’s overall
performance. In particular, among the modules, removing IDE has
the most significant decrease in performance. This phenomenon can
be attributed to the fact that, beyond the transaction history, each
wallet and collection possesses inherent characteristics, such as the
distinct behavioural patterns exhibited by wallets and the unique
attributes associated with collections. These inherent characteris-
tics are also significant drivers of NFT price prediction. IDE module
incorporates this personalization into the modeling process, facili-
tating the learning of these unique characteristics from historical
transactions. It enables COMET to achieve superior performance.
5.4 Feature Importance Analysis
To further assess the impact of utilized features, we employ the
permutation importance method [ 1]. Figure 6 shows the impor-
tance score of each feature. It is evident from the analysis that
historical prices and sale volumes of collections emerge as the two
5900COMET: NFT Price Prediction with Wallet Profiling KDD ’24, August 25–29, 2024, Barcelona, Spain
VeeFriends Doodles BAYC
Collection Name2.02.22.42.62.8Improvement of ACC (%)
(a) ACCVeeFriends Doodles BAYC
Collection Name15202530Improvement of MCC (%)
(b) MCC
VeeFriends
#Token: 10.3K
#Transactions: 31K
Doodles
#Token: 9.9K
#Transactions: 109K
BAYC
#Token: 9.9K
#Transactions: 225K
Figure 7: Performance improvements of COMET compared
to ALSTM cross different collections (5-step).
most influential features. These features are crucial because they
directly provide historical price trends and trading activities of
NFT collections. Notably, the wallet asset value also ranks high in
importance. This finding suggests that wallets with different asset
values have various impacts on NFT price trends. The behaviours
and decisions of wallets with larger asset values may potentially
exert a considerable influence on NFT prices. Interestingly, visual
embeddings exhibit higher importance scores compared to textual
embeddings, which underscores the higher correlations between
visual content and NFT price heterogeneity.
5.5 Effectiveness in Different Collections
To assess the performance of COMET on collections with varying
transaction counts, we compare COMET with ALSTM on three rep-
resentative collections (BAYC7, Doodles8, and VeeFrends9). These
collections possess similar token counts but differ significantly in
transaction counts. The key distinction between COMET and AL-
STM lies in COMET’s ability to harness the wallet profiling method
to extract NFT price-related insights from transaction behaviors.
In this analysis, we set the prediction step to 5. Figure 7 shows the
improvements achieved by COMET compared to ALSTM across
these collections. We observe that COMET tends to achieve more
significant performance improvements in collections with higher
transaction counts. This results mainly from the fact that collections
with higher transaction counts typically provide richer and more
diverse data for COMET. This increased data availability allows
COMET to better learn and capture the underlying patterns and
dynamics of the NFT market.
5.6 Token-level Task Results
Table 3 reports the token-level task results of COMET and all base-
line methods. We also compare COMET with two variations: (1)
w/o CE eliminates the collection embedding from the transaction
graph network of COMET, and instead employs ALSTM to en-
code the collection-level historical data; and (2) w/o TF replace
the Transformer-based sale encoder with an LSTM. We observe
that the performance differences among all algorithms are rela-
tively small across various prediction settings. This phenomenon
can be attributed to the low trading frequency of tokens and the
significant time intervals between transactions. Notably, COMET
outperforms all baseline models as well as its variations, which
7Collection address: 0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d
8Collection address: 0x8a90cab2b38dba80c64b7734e58ee1db38b8992e
9Collection address: 0xa3aee8bce55beea1951ef834b99f3ac60d1abeebTable 3: Overall performance on the token-level task.
Algorithm1-step 3-step 5-step
MAE↓MSE↓MAE↓MSE↓MAE↓MSE↓
RF 0.4723 2.1812 0.4757 2.2164 0.4743 2.1892
SVR 0.4901 2.2098 0.4849 2.1602 0.4921 2.2178
XGBoost 0.4815 2.1524 0.4950 2.2175 0.4835 2.1604
MLP 0.4181 1.9728 0.4305 2.0321 0.4201 1.9808
LSTM 0.3689 1.775 0.3638 1.7831 0.3679 1.7836
TCN 0.3859 1.9224 0.4003 1.9808 0.3796 1.8904
ALSTM 0.3631 1.7523 0.3714 1.8054 0.3601 1.7209
COMET 0.3442 1.5825 0.3379 1.619 0.3395 1.5643
w/o CE 0.3529 1.6163 0.3424 1.6370 0.3479 1.6005
w/o TF 0.3576 1.6394 0.3561 1.6793 0.3606 1.6674
demonstrates the effectiveness of COMET and each component.
Specifically, COMET’s transformer-based sale encoder plays a cru-
cial role in capturing the relative relationships between tokens
and collections through historical sales sequences. Additionally,
the collection embedding from the transaction graph network in
COMET provides an overarching perspective at the collection level,
integrating historical price trends and market sentiment changes.
This combination of capabilities contributes to COMET’s superior
performance in token-level price prediction tasks.
6 CONCLUSION
In this paper, we have investigated an emerging application prob-
lem, NFT price prediction. To bring clarity to this evolving field,
we have provided a practical and hierarchical problem definition
encompassing collection-level and token-level tasks, which cater
to the diverse practical requirements of investors. we also have
presented our NFT price prediction system, which includes robust
data infrastructure and advanced technical solutions. Furthermore,
we have proposed a novel wallet profiling framework and instan-
tiated the COMET model, enabling us to grasp the influences on
NFT prices behind transactions. Specifically, we have developed a
temporal transaction graph construction method that efficiently
models the multi-behavior transactions within the NFT ecosystem.
Building on this, we have designed a transaction graph network,
automatically extracting both temporal dynamics and structural
information relevant to NFT prices. Then, we have introduced a
hierarchical prediction approach to address the two-level predic-
tion targets. Extensive experiments on two-level tasks have shown
that COMET achieved the best performance, which demonstrates
its effectiveness and practical applicability. Furthermore, we have
deployed COMET from the perspectives of both the establishment
of the data infrastructure and the integration of practical products.
ACKNOWLEDGMENTS
This work was supported by the National Natural Science Founda-
tion of China (Grant No.92370204), National Key R&D Program of
China (Grant No.2023YFF0725001), Guangzhou-HKUST(GZ) Joint
Funding Program (Grant No.2023A03J0008), Education Bureau of
Guangzhou Municipality, and Nansha Postdoctoral Research Project.
5901KDD ’24, August 25–29, 2024, Barcelona, Spain Tianfu Wang et al.
REFERENCES
[1]André Altmann, Laura Toloşi, Oliver Sander, and Thomas Lengauer. 2010. Per-
mutation importance: a corrected feature importance measure. Bioinformatics
26, 10 (2010), 1340–1347.
[2]Vincent D Blondel, Jean-Loup Guillaume, Renaud Lambiotte, and Etienne Lefeb-
vre. 2008. Fast unfolding of communities in large networks. Journal of statistical
mechanics: theory and experiment 2008, 10 (2008), P10008.
[3] Leo Breiman. 2001. Random forests. Machine learning 45 (2001), 5–32.
[4]Simone Casale-Brunet, Mirko Zichichi, Lee Hutchinson, Marco Mattavelli, and
Stefano Ferretti. 2022. The impact of NFT profile pictures within social net-
work communities. In Proceedings of the 2022 ACM Conference on Information
Technology for Social Good (GoodIT ’22). 283–291.
[5]Liyi Chen, Zhi Li, Tong Xu, Han Wu, Zhefeng Wang, Nicholas Jing Yuan, and
Enhong Chen. 2022. Multi-modal siamese network for entity alignment. In
Proceedings of the 28th ACM SIGKDD conference on knowledge discovery and data
mining (KDD ’21). 118–126.
[6]Liyi Chen, Chuan Qin, Ying Sun, Xin Song, Tong Xu, Hengshu Zhu, and Hui
Xiong. 2024. Collaboration-Aware Hybrid Learning for Knowledge Development
Prediction. In Proceedings of the ACM on Web Conference 2024 (WWW ’21). 3976–
3985.
[7]Tianqi Chen and Carlos Guestrin. 2016. XGBoost: A Scalable Tree Boosting
System. In Proceedings of the 22nd ACM SIGKDD International Conference on
Knowledge Discovery and Data Mining (KDD ’16). 785–794.
[8]Corinna Cortes and Vladimir Vapnik. 1995. Support-vector networks. Machine
learning 20, 3 (1995), 273–297.
[9]Davide Costa, Lucio La Cava, and Andrea Tagarelli. 2023. Show Me Your NFT
and I Tell You How It Will Perform: Multimodal Representation Learning for NFT
Selling Price Prediction. In Proceedings of the ACM Web Conference 2023 (WWW
’23). 1875–1885.
[10] Dipanjan Das, Priyanka Bose, Nicola Ruaro, Christopher Kruegel, and Giovanni
Vigna. 2022. Understanding security issues in the NFT ecosystem. In Proceedings
of the 2022 ACM SIGSAC Conference on Computer and Communications Security
(CCS ’22). 667–681.
[11] Shumin Deng, Ningyu Zhang, Wen Zhang, Jiaoyan Chen, Jeff Z. Pan, and Huajun
Chen. 2019. Knowledge-Driven Stock Trend Prediction and Explanation via
Temporal Convolutional Network. In Companion Proceedings of The 2019 World
Wide Web Conference (WWW ’19). 678–685.
[12] Leilei Ding, Dazhong Shen, Chao Wang, Tianfu Wang, Le Zhang, Hui Xiong,
and Yanyong Zhang. 2024. DGR: A General Graph Desmoothing Framework for
Recommendation via Global and Local Perspectives. In Proceedings of the 33th
International Joint Conference on Artificial Intelligence (IJCAI ’24).
[13] Alexey Dosovitskiy, Lucas Beyer, Alexander Kolesnikov, Dirk Weissenborn, Xi-
aohua Zhai, Thomas Unterthiner, Mostafa Dehghani, Matthias Minderer, Georg
Heigold, Sylvain Gelly, Jakob Uszkoreit, and Neil Houlsby. 2021. An Image is
Worth 16x16 Words: Transformers for Image Recognition at Scale. In International
Conference on Learning Representations (ICLR ’21).
[14] Harris Drucker, Chris J. C. Burges, Linda Kaufman, Alex Smola, and Vladimir
Vapnik. 1996. Support Vector Regression Machines. In Proceedings of the 9th
International Conference on Neural Information Processing Systems (NeurIPS ’96).
155–161.
[15] Wensheng Gan, Zhenqiang Ye, Shicheng Wan, and Philip S. Yu. 2023. Web 3.0:
The Future of Internet. In Companion Proceedings of the ACM Web Conference
2023 (WWW ’23 Companion). 1266–1275.
[16] Siyuan Hao, Le Dai, Le Zhang, Shengming Zhang, Chao Wang, Chuan Qin, and
Hui Xiong. 2023. Hybrid Heterogeneous Graph Neural Networks for Fund Perfor-
mance Prediction. In International Conference on Knowledge Science, Engineering
and Management. Springer, 301–317.
[17] Huiguo He, Tianfu Wang, Huan Yang, Jianlong Fu, Nicholas Jing Yuan, Jian Yin,
Hongyang Chao, and Qi Zhang. 2023. Learning Profitable NFT Image Diffusions
via Multiple Visual-Policy Guided Reinforcement Learning. In Proceedings of the
31st ACM International Conference on Multimedia (MM ’23). 6831–6840.
[18] Shrey Jain, Camille Bruckmann, and Chase McDougall. 2022. NFT Appraisal
Prediction: Utilizing Search Trends, Public Market Data, Linear Regression and
Recurrent Neural Networks. arXiv preprint arXiv:2204.12932 (2022).
[19] Arnav Kapoor, Dipanwita Guhathakurta, Mehul Mathur, Rupanshu Yadav, Manish
Gupta, and Ponnurangam Kumaraguru. 2022. TweetBoost: Influence of Social
Media on NFT Valuation. In Companion Proceedings of the Web Conference 2022
(WWW ’22). 621–629.
[20] Jia Li, Zhichao Han, Hong Cheng, Jiao Su, Pengyun Wang, Jianfeng Zhang, and
Lujia Pan. 2019. Predicting Path Failure In Time-Evolving Graphs. In Proceedings
of the 25th ACM SIGKDD International Conference on Knowledge Discovery & Data
Mining (KDD ’19). 1279–1289.
[21] Wei Li, Ruihan Bao, Keiko Harimoto, Deli Chen, Jingjing Xu, and Qi Su. 2021.
Modeling the Stock Relation with Graph Network for Overnight Stock Movement
Prediction. In Proceedings of the Twenty-Ninth International Joint Conference on
Artificial Intelligence (IJCAI ’20). Article 626.
[22] Zhige Li, Derek Yang, Li Zhao, Jiang Bian, Tao Qin, and Tie-Yan Liu. 2019. Individ-
ualized Indicator for All: Stock-Wise Technical Indicator Optimization with StockEmbedding. In Proceedings of the 25th ACM SIGKDD International Conference on
Knowledge Discovery & Data Mining (KDD ’19) . 894–902.
[23] Junliang Luo, Yongzheng Jia, and Xue Liu. 2023. Understanding NFT Price Moves
through Tweets Keywords Analysis. In Proceedings of the 2023 ACM Conference
on Information Technology for Social Good (GoodIT ’23). 410–418.
[24] Sourav Medya, Mohammad Rasoolinejad, Yang Yang, and Brian Uzzi. 2022. An
Exploratory Study of Stock Price Movements from Earnings Calls. In Companion
Proceedings of the Web Conference 2022 (WWW ’22). 20–31.
[25] Amin Mekacher, Alberto Bracci, Matthieu Nadini, Mauro Martino, Laura Alessan-
dretti, Luca Maria Aiello, and Andrea Baronchelli. 2022. Heterogeneous rarity
patterns drive price dynamics in NFT collections. Scientific reports 12, 1 (2022),
13890.
[26] John J Murphy. 1999. Technical analysis of the financial markets: A comprehensive
guide to trading methods and applications. Penguin.
[27] Matthieu Nadini, Laura Alessandretti, Flavio Di Giacinto, Mauro Martino,
Luca Maria Aiello, and Andrea Baronchelli. 2021. Mapping the NFT revolu-
tion: market trends, trade networks, and visual features. Scientific reports 11, 1
(2021), 20902.
[28] David M. Q. Nelson, Adriano C. M. Pereira, and Renato A. de Oliveira. 2017.
Stock market’s price movement prediction with LSTM neural networks. In 2017
International Joint Conference on Neural Networks (IJCNN ’17). 1419–1426.
[29] Boris N. Oreshkin, Dmitri Carpov, Nicolas Chapados, and Yoshua Bengio. 2020. N-
BEATS: Neural basis expansion analysis for interpretable time series forecasting.
In8th International Conference on Learning Representations, (ICLR ’20).
[30] Aldo Pareja, Giacomo Domeniconi, Jie Chen, Tengfei Ma, Toyotaro Suzumura,
Hiroki Kanezashi, Tim Kaler, Tao B. Schardl, and Charles E. Leiserson. 2020.
EvolveGCN: Evolving Graph Convolutional Networks for Dynamic Graphs. In
Proceedings of the AAAI Conference on Artificial Intelligence (AAAI ’20).
[31] Yao Qin, Dongjin Song, Haifeng Cheng, Wei Cheng, Guofei Jiang, and Garrison W.
Cottrell. 2017. A Dual-Stage Attention-Based Recurrent Neural Network for
Time Series Prediction. In Proceedings of the 26th International Joint Conference
on Artificial Intelligence (IJCAI ’17). 2627–2633.
[32] Liang Qu, Huaisheng Zhu, Qiqi Duan, and Yuhui Shi. 2020. Continuous-Time
Link Prediction via Temporal Dependent Graph Neural Network. In Proceedings
of The Web Conference 2020 (WWW ’20). 3026–3032.
[33] Nils Reimers and Iryna Gurevych. 2019. Sentence-BERT: Sentence Embeddings
using Siamese BERT-Networks. In Proceedings of the 2019 Conference on Empirical
Methods in Natural Language Processing and the 9th International Joint Conference
on Natural Language Processing (EMNLP-IJCNLP ’19). 3982–3992.
[34] Fei Sun, Jun Liu, Jian Wu, Changhua Pei, Xiao Lin, Wenwu Ou, and Peng Jiang.
2019. BERT4Rec: Sequential Recommendation with Bidirectional Encoder Rep-
resentations from Transformer. In Proceedings of the 28th ACM International
Conference on Information and Knowledge Management (CIKM ’19). 1441–1450.
[35] Kishore Vasan, Milán Janosov, and Albert-László Barabási. 2022. Quantifying
NFT-driven networks in crypto art. Scientific reports 12, 1 (2022), 2769.
[36] Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones,
Aidan N Gomez, Ł ukasz Kaiser, and Illia Polosukhin. 2017. Attention is All
you Need. In Advances in Neural Information Processing Systems (NeurIPS ’17),
Vol. 30.
[37] Petar Veličković, Guillem Cucurull, Arantxa Casanova, Adriana Romero, Pietro
Liò, and Yoshua Bengio. 2018. Graph Attention Networks. In International Con-
ference on Learning Representations (ICLR ’18).
[38] Liping Wang, Jiawei Li, Lifan Zhao, Zhizhuo Kou, Xiaohan Wang, Xinyi Zhu,
Hao Wang, Yanyan Shen, and Lei Chen. 2023. Methods for Acquiring and
Incorporating Knowledge into Stock Price Prediction: A Survey. arXiv preprint
arXiv:2308.04947 (2023).
[39] Tianfu Wang, Qilin Fan, Xiuhua Li, Xu Zhang, Qingyu Xiong, Shu Fu, and Min
Gao. 2021. DRL-SFCP: Adaptive Service Function Chains Placement with Deep
Reinforcement Learning. In IEEE International Conference on Communications
(ICC ’21). 1–6.
[40] Tianfu Wang, Qilin Fan, Chao Wang, Long Yang, Leilei Ding, Nicholas Jing Yuan,
and Hui Xiong. 2024. FlagVNE: A Flexible and Generalizable Reinforcement
Learning Framework for Network Resource Allocation. In Proceedings of the 33th
International Joint Conference on Artificial Intelligence (IJCAI ’24).
[41] Tianfu Wang, Li Shen, Qilin Fan, Tong Xu, Tongliang Liu, and Hui Xiong. 2024.
Joint Admission Control and Resource Allocation of Virtual Network Embedding
via Hierarchical Deep Reinforcement Learning. IEEE Transactions on Services
Computing 17, 3 (2024), 1001–1015.
[42] Haixu Wu, Jiehui Xu, Jianmin Wang, and Mingsheng Long. 2021. Autoformer:
Decomposition Transformers with Auto-Correlation for Long-Term Series Fore-
casting. In Advances in Neural Information Processing Systems (NeurIPS ’21), Vol. 34.
22419–22430.
[43] Wentao Xu, Weiqing Liu, Chang Xu, Jiang Bian, Jian Yin, and Tie-Yan Liu. 2021.
REST: Relational Event-Driven Stock Trend Forecasting. In Proceedings of the
Web Conference 2021 (WWW ’21). 1–10.
[44] Leshanshui Yang, Sébastien Adam, and Clément Chatelain. 2023. Dynamic
Graph Representation Learning with Neural Networks: A Survey. arXiv preprint
arXiv:2304.05729 (2023).
5902COMET: NFT Price Prediction with Wallet Profiling KDD ’24, August 25–29, 2024, Barcelona, Spain
(a) Data collection pipeline
 (b) Data visualization panel
(c) Top collections interface in PowerNFT
 (d) Token details interface in PowerNFT
Figure 8: Practical deployment of our system. (a) illustrates the industrial-grade pipeline of data collection. (b) is a dashboard
that visualizes the overall blockchain operations. (c) shows the top collections interface in PowerNFT, where price trend
prediction is integrated. (d) depicts the token detail interface in PowerNFT, where the predictive sale price is displayed.
[45] Jaemin Yoo, Yejun Soun, Yong-chan Park, and U Kang. 2021. Accurate Multi-
variate Stock Movement Prediction via Data-Axis Transformer with Multi-Level
Contexts. In Proceedings of the 27th ACM SIGKDD Conference on Knowledge
Discovery & Data Mining (KDD ’21) . 2037–2045.
[46] Ailing Zeng, Muxi Chen, Lei Zhang, and Qiang Xu. 2023. Are Transformers
Effective for Time Series Forecasting?. In Thirty-Seventh AAAI Conference on
Artificial Intelligence, AAAI (AAAA ’23). 11121–11128.
[47] Liheng Zhang, Charu Aggarwal, and Guo-Jun Qi. 2017. Stock Price Prediction
via Discovering Multi-Frequency Trading Patterns. In Proceedings of the 23rd
ACM SIGKDD International Conference on Knowledge Discovery and Data Mining
(KDD ’17). 2141–2149.
[48] Weijia Zhang, Hao Liu, Lijun Zha, Hengshu Zhu, Ji Liu, Dejing Dou, and Hui
Xiong. 2021. MugRep: A Multi-Task Hierarchical Graph Representation Learning
Framework for Real Estate Appraisal. In Proceedings of the 27th ACM SIGKDD
Conference on Knowledge Discovery & Data Mining (KDD ’21) . 3937–3947.
[49] Zhi Zheng, Chao Wang, Tong Xu, Dazhong Shen, Penggang Qin, Baoxing Huai,
Tongzhu Liu, and Enhong Chen. 2021. Drug package recommendation via
interaction-aware graph induction. In Proceedings of the Web Conference 2021
(WWW ’21). 1284–1295.
[50] Zhi Zheng, Chao Wang, Tong Xu, Dazhong Shen, Penggang Qin, Xiangyu Zhao,
Baoxing Huai, Xian Wu, and Enhong Chen. 2023. Interaction-aware drug package
recommendation via policy gradient. ACM Transactions on Information Systems
41, 1 (2023), 1–32.
[51] Haoyi Zhou, Shanghang Zhang, Jieqi Peng, Shuai Zhang, Jianxin Li, Hui Xiong,
and Wancai Zhang. 2021. Informer: Beyond Efficient Transformer for Long
Sequence Time-Series Forecasting. In Thirty-Fifth AAAI Conference on Artificial
Intelligence (AAAI ’21). 11106–11115.
[52] Hengshu Zhu, Hui Xiong, Fangshuang Tang, Qi Liu, Yong Ge, Enhong Chen, and
Yanjie Fu. 2016. Days on Market: Measuring Liquidity in Real Estate Markets.
InProceedings of the 22nd ACM SIGKDD International Conference on Knowledge
Discovery and Data Mining (KDD ’16) . 393–402.A APPENDIX
A.1 Deployment Details
We have deployed our system in Microsoft from the following two
aspects: the establishment of data infrastructure and the integration
of practical products.
On the one hand, following the pipeline of data engineering
introduced in Section 4.1, we have constructed an industrial-grade
NFT data infrastructure to automate the collection, preprocessing,
and visualization of NFT-related data. As illustrated in Figure 8(a),
our data collection pipeline utilizes distinct crawlers interfacing
with local blockchain nodes and IPFS to acquire both on-chain and
off-chain data in real-time, respectively. Subsequently, we conduct
a series of data preprocessing, delivering high-quality data for the
NFT-related products. Additionally, we have developed a compre-
hensive data visualization panel, showcased in Figure 8(b). This
interface provides real-time analysis of blockchain metrics related
to blocks, contracts, miners, transactions, etc., enabling us to glean
valuable insights into overall blockchain operations. This infras-
tructure serves as the robust backbone of Microsoft NFT-related
products, such as Microsoft crypto wallet and Web3 search, ensur-
ing the efficiency and reliability of data flow.
On the other hand, we have integrated the NFT price prediction
model, COMET, into our flagship NFT product, PowerNFT, a plat-
form tailored for building up branded NFT marketplaces. Within
5903KDD ’24, August 25–29, 2024, Barcelona, Spain Tianfu Wang et al.
Table 4: Detailed Features of Transaction Graph
Node / Edge Feature Type Feature Name Description
Collection NodeStatic Visual embedding An embedding representing the visual content associated with the collection.
Static Textual embedding An embedding representing the textual content associated with the collection.
Static Total count of token supply Total number of tokens supplied in the collection.
Dynamic Daily price Daily price of the collection, providing a historical price trend.
Dynamic Daily transaction counts Daily counts of mints, sales, transfers, and burns of the collection.
Dynamic ETH-to-USD exchange rate Daily exchange rate of Ethereum (ETH) to US Dollars (USD).
Dynamic Total sale Volume Total sale volume of the collection over one day.
Wallet NodeDynamic Daily transaction counts Daily counts of mints, sales, transfers, and burns of the wallet.
Dynamic Total holding count Total count of NFT tokens held by the wallet.
Dynamic Total asset value Total value of assets held in the wallet.
Holding Edge Dynamic Owned token count Number of NFT tokens in one collection owned by the wallet.
Sale-from Edge Dynamic Sale Price Price at which an NFT token was sold.
Sale-to Edge Dynamic Sale Price Price at which an NFT token was sold.
Transfer-in Edge - - -
Transfer-out Edge - - -
Mint Edge - - -
Burn Edge - - -
Sale Edge Dynamic Sale Price Price at which an NFT token was sold.
Transfer Edge - - -
PowerNFT, COMET functions as an advanced insight tool, offer-
ing customers invaluable NFT investment insights and predictive
analytics. Figure 8(c) shows the real-time statistics of top NFT col-
lections in Ethereum, which visualizes the collection information,
market cap, sale volume, aggregated price and more. Notably, the
"price trend prediction" column adds a layer of foresight, empower-
ing users with future price trend forecasts and confidence levels.
Furthermore, as illustrated in Figure 8(d), our platform goes beyond
offering basic token information and historical prices by delivering
predictive sale prices, which equip users with actionable insights
for informed decision-making. We also introduce visual indicators
such as "safe" or "danger" icons in transaction activities, helping
users identify potential wash sales.
A.2 Detailed Features
We list the detailed features in Table 4, which are used in the trans-
action graph construction method of COMET. We categorize all
features into two types: static features are invariant over time,
whereas dynamic features may vary from day to day.
A.3 Dataset Distribution
100101102103104
Number of Transactions (Log Scale)100102104106Number of Tokens (Log Scale)
(a) Distribution of Token Transaction Count100101102103104105
Number of Transactions (Log Scale)100101102103Number of Wallets (Log Scale)
(b) Distribution of Wallet Transaction CountTransaction Type
Mint
Sale
Transfer
Figure 9: Disbutions of token and Wallet transaction counts.We present the distribution of the evaluation dataset in Figure
9. As depicted in Figure 9(a), the transaction counts of NFT token
exhibits a characteristic of power law distribution. This distribution
implies that only a limited number of NFT tokens are actively traded,
while the majority remain less frequently transacted. Figure 9(b)
shows the distributions of transaction counts of wallets, which also
follows the power law distribution. This means that only a few
wallets actively participate in the NFT marketplace.
A.4 Implementation Details
We build our neural network model with Pytorch and PyG library.
We set the hidden size of neural networks to 64, the number of graph
network layers to 2. To alleviate overfitting problems, we set the
dropout rate as 0.5 and the weight in L2 loss as 0.0005. Then, we train
it using Adam optimizer with a learning rate of 0.001 and a batch size
of 64. Regarding the baselines, for the traditional machine learning
model, we implement them with scikit-learn library and use the
grid search method to find the optimal candidate hyperparameters.
For deep learning-based baselines, we adopt the official source
code of D-Linear10, N-BEATS11, Informer12and AutoFormer13, and
implement others with Pytorch. We integrate the dropout and L2
loss and maintain the most hyperparameters same as our model.
Especially, we grid search the learning rate among {1e-4, 5e-4, 1e-3,
5e-3, 1e-2} for them and use Adam to optimize. All experiments are
conducted on a Linux server with a single NVIDIA A100 GPU.
Received 20 February 2007; revised 12 March 2009; accepted 5 June 2009
10https://github.com/cure-lab/LTSF-Linear
11https://github.com/philipperemy/n-beats
12https://github.com/zhouhaoyi/Informer2020
13https://github.com/thuml/autoformer
5904