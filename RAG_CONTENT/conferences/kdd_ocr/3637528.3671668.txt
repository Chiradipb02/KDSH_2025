FreQuant: A Reinforcement-Learning based Adaptive Portfolio
Optimization with Multi-frequency Decomposition
Jihyeong Jeon
Seoul National University
Seoul, South Korea
jeonjihyeong@snu.ac.krJiwon Park
Seoul National University
DeepTrade Technologies Inc.
Seoul, South Korea
jiwon_p@snu.ac.kr
Chanhee Park
Seoul National University
DeepTrade Technologies Inc.
Seoul, South Korea
chan0843@snu.ac.krU Kang
Seoul National University
Seoul, South Korea
ukang@snu.ac.kr
ABSTRACT
How can we leverage inherent frequency features of stock signals
for effective portfolio optimization? Portfolio optimization in the
domain of finance revolves around strategically allocating assets to
maximize returns. Recent advancements highlight the efficacy of
deep learning and reinforcement learning (RL) in capturing tem-
poral asset patterns for portfolio optimization. However, previous
methodologies focusing on time-domain often fail to detect sudden
market shifts and abrupt events because their models are overly
tailored to prevalent patterns, resulting in significant losses.
In this paper, we propose FreQuant (Adaptive Portfolio Opti-
mization via Multi- Frequency Quant itative Analysis), an effective
deep RL framework for portfolio optimization that fully operates
in the frequency domain, tackling the limitations of time domain-
focused models. By bringing the analysis into the frequency domain
with the Discrete Fourier Transform, our framework captures both
prominent and subtle market frequencies, enhancing its adaptabil-
ity and stability in response to market shifts. This approach allows
FreQuant to adeptly identify primary asset patterns while also
effectively responding to less common and abrupt market events,
providing a more accurate and comprehensive asset representa-
tion. Empirical validation on diverse real-world trading datasets
underscores the remarkable performance of FreQuant, showing its
superiority in terms of profitability. Notably, FreQuant achieves up
to2.1×higher Annualized Rate of Return and 2.9×higher Portfolio
Value than the best-performing competitors.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
KDD ’24, August 25–29, 2024, Barcelona, Spain.
©2024 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ACM ISBN 979-8-4007-0490-1/24/08
https://doi.org/10.1145/3637528.3671668CCS CONCEPTS
•Computing methodologies →Reinforcement learning; •
Applied computing →Economics ;•Information systems →
Data mining.
KEYWORDS
quantitative investment; reinforcement learning; portfolio optimiza-
tion; Fourier transform; deep learning
ACM Reference Format:
Jihyeong Jeon, Jiwon Park, Chanhee Park, and U Kang. 2024. FreQuant:
A Reinforcement-Learning based Adaptive Portfolio Optimization with
Multi-frequency Decomposition. In Proceedings of the 30th ACM SIGKDD
Conference on Knowledge Discovery and Data Mining (KDD ’24), August
25–29, 2024, Barcelona, Spain. ACM, New York, NY, USA, 11 pages. https:
//doi.org/10.1145/3637528.3671668
1 INTRODUCTION
How can we leverage inherent frequency features of stock signals for
effective portfolio optimization? Portfolio optimization is a crucial
area of research that aims to identify the best portfolio allocation to
maximize returns over a given period. The ability to make decisions
based on complex market conditions enables investors to manage
their portfolio effectively. As a result, there is growing demand for
methods that prioritize robustness and superior returns. Recent
studies have shown that Deep Learning [ 7,15,21,22,52], especially
when combined with Reinforcement Learning (RL) [ 2,20,25,40,51],
achieves effective portfolio optimization.
One of the primary challenges in this problem is how to model an
asset’s representation at a given trading moment. The dynamics of
the market change over time, and comprise complex factors, making
it difficult to accurately determine which factor contributes the most
to an asset’s behavior [ 5]. To address this issue, researchers have
explored various approaches, such as accounting for correlational
information between assets [ 26,31,43] or using attentive recurrent
networks [ 10,38,49]. These methodologies analyze the complex
signal of the asset in the time domain to identify implicit temporal
patterns, which are then used in expressing individual assets.
However, these time domain-focused models often implicitly
smooth over temporal variations and place excessive emphasis
on prevalent patterns, favoring continuous trends over abrupt
 
1211
KDD ’24, August 25–29, 2024, Barcelona, Spain. Jihyeong Jeon, Jiwon Park, Chanhee Park, and U Kang
Amplification  Conv
d-DFTEvents
d-Conv
Complex Events
Self-
AttentionFrequency-
Relation Map Asset
Embedding
(a) Multi-Event Fusion Network (b) Frequency-Relation Encoder Time Domain Asset Signals
Figure 1: The Frequency State Encoder (FSE) in FreQuant is pivotal for multi-granular asset representation that captures both
prevalent and abrupt patterns in asset signals. The FSE comprises two main components: (a) the Multi-Event Fusion Network
which amplifies and merges frequency features to capture complex patterns, and (b) the Frequency-Relation Encoder which
uses self-attention to interlink complex events and spotlight those essential for asset representation.
changes [ 16,51]. This smoothing mechanism—such as RNNs’ av-
eraging operations or attention mechanisms’ blending of tempo-
ral information—helps identify prevalent trends, but inadvertently
diminishes the significance of abrupt changes, treating them as
anomalies or outliers rather than signals. As a result, crucial market
shifts can be overlooked, potentially leading to substantial invest-
ment losses. Therefore, the challenge lies in developing models that
maintain sensitivity to both ongoing trends and sudden shifts.
To tackle this challenge, we shift our analysis to the frequency
domain, enabling discernment of pervasive trends and abrupt de-
viations in asset signals. For this purpose, we use the Discrete
Fourier Transform (DFT) [ 6,27], which converts time domain sig-
nals into frequency domain features, reflecting the intensity and
timing of periodic patterns. Notably, prevalent patterns correlate
with lower-frequency features, while rapid shifts are captured by
higher-frequency ones. This distinction aids the model’s direct
identification and handling of features tied to prevalent and sudden
shifts.
We propose FreQuant (Adaptive Portfolio Optimization via
Multi- Frequency Quant itative Analysis), a novel deep RL (DRL)
framework for adaptive portfolio optimization managing both preva-
lent and abrupt patterns in the signals, thereby enhancing stability
and responsiveness to market changes. Operating fully in the fre-
quency domain, FreQuant retains critical frequency attributes,
directly linking to the intensity and timing of periodic patterns.
For optimal portfolio construction, asset signals are processed
through FreQuant’s modules: the frequency state encoder and
the portfolio generator. The frequency state encoder decomposes
temporal patterns, learns to amplify and compose complex patterns,
and uses the self-attention mechanism to highlight key frequencies,
thereby creating multi-granular asset embeddings. Figure 1 depicts
this process for a single asset. The portfolio generator then inte-
grates these embeddings to produce real-valued portfolio weights,
effectively capturing the interrelationships among the assets.
To implement our framework, we use the deep deterministic
policy gradient [ 23], with effective guidance for stabilizing opti-
mization process and an explicit formulation of transaction fee in
long-short portfolio settings. Experimental results demonstrate theeffectiveness of our model in capturing market shifts and optimizing
portfolio returns, achieving the state-of-the-art performance.
Our Contributions are summarized as follows:
•We propose FreQuant, a novel DRL framework that leverages
multi-frequency features to adapt to sudden market shifts by
fully operating in the frequency domain while preserving the
essential information of these features.
•We present a precise formulation of transaction fees, a crucial
factor in long-short trading markets, to enhance the real-world
relevance of our model.
•Through extensive experiments conducted on diverse market
datasets, we demonstrate the superior performance of Fre-
Quant compared to other existing methods. Our framework
achieves up to 2×higher Annualized Rate of Return, making
it a promising approach for portfolio optimization tasks.
2 RELATED WORKS
Asset Movement Prediction Strategies. Recent advancements in
deep neural networks have led to significant progress in resolving
asset movement prediction problem [ 18,39–42,49,50]. Utilizing
attention mechanisms [ 38] to capture long-range dependencies,
several studies have uncovered temporal patterns from assets sig-
nals [ 33,41,49]. Additionally, the integration of external datasets,
such as expert trading signals [ 42] and high-frequency signals [ 18],
has been explored. Zhang et al .[50] employed DFT to extract multi-
frequency features within recurrent units. However, these tech-
niques often fall short in real-trading scenarios as they lack access
to essential information, such as adjusted rewards with transaction
fees or adjusted portfolio weights for the dynamic allocation.
Deep RL for Portfolio Optimization. The fusion of deep neu-
ral networks and reinforcement learning (RL), known as deep RL,
has demonstrated promise in portfolio optimization [ 20,26,31,
35,36,43,44,46,47]. For example, the EIIE framework [ 20] in-
troduced the first RL-based portfolio optimization with temporal
pattern modeling using Temporal Convolutional Networks (TCNs)
[4]. Other deep RL-based methods have integrated attention mech-
anisms to enhance explainability [ 31] and incorporate asset correla-
tions [ 43,45]. Additional efforts have leveraged external resources
such as high-frequency data [ 36,44,46], expert trading insights
 
1212FreQuant: A Reinforcement-Learning based Adaptive Portfolio Optimization with Multi-frequency Decomposition KDD ’24, August 25–29, 2024, Barcelona, Spain.
[26], or news articles [ 47] to enrich context embeddings. Neverthe-
less, the complexity of capturing sudden and abrupt events from
intricate asset signals remains a challenge for these methodologies.
3 PROBLEM FORMULATION
We give a formal definition of the portfolio optimization problem
in a long-short setting as follows:
Problem 1 (Portfolio Optimization with Long-Short).
Given: historical price data Xof𝑁assets and the market index,
Find: the optimal long-short weights 𝒗𝑡∈R𝑁+1for cash and each
individual asset at every rebalancing time-step 𝑡, aiming to maximize
the profit over the trading period through these investments.
This problem’s natural alignment with the Markov decision
process environment is concisely detailed in the following.
Time-steps. The trading period is defined as [𝑃𝑡𝑟𝑎𝑑𝑒𝑠,𝑃𝑡𝑟𝑎𝑑𝑒𝑒),
where𝑃𝑡𝑟𝑎𝑑𝑒𝑠 and𝑃𝑡𝑟𝑎𝑑𝑒𝑒 are the starting and ending dates of trading
period, respectively. Each rebalancing time step 𝑡is an index of an
opened market day between these dates. Formally, 𝑡belongs to the
set{1,2,...,⌊|𝐷\𝐶|−1
𝑟𝑓⌋}, where𝑟𝑓∈Z+represents the rebalancing
frequency,𝐷={𝑃𝑡𝑟𝑎𝑑𝑒𝑠,...,𝑃𝑡𝑟𝑎𝑑𝑒𝑒}is the set of calendar dates dur-
ing the trading period, and 𝐶={𝑥∈𝐷:𝑥is a closed market date }
is the set of closed market dates.
State Space. The state𝑠𝑡at a rebalancing time-step 𝑡, is com-
posed of assets’ price feature tensor 𝑿Asset
𝑡∈R𝐽×𝑁×𝑇, correspond-
ing to market’s price feature tensor 𝑿Market
𝑡∈R𝐽×1×𝑇, and the
current portfolio weights 𝒘′
𝑡∈R𝑁+1, where𝐽is the feature di-
mension, and 𝑇∈Z+is the number of look-up days. A feature
tensor 𝑿𝑡=[𝑰𝑡−𝑇;...;𝑰𝑡−1]consists of daily price feature matrix
𝑰𝑡=[𝒇𝑡,1;...;𝒇𝑡,𝑁]∈R𝐽×𝑁, where 𝒇𝑡,𝑖=[𝑓(1)
𝑡,𝑖,...,𝑓(𝐽)
𝑡,𝑖]𝑇∈R𝐽
is a feature vector of 𝑖-th asset.
Action Space. An optimal long-short weight vector or the de-
sired portfolio weights 𝒗𝑡=[𝑣𝑡,0,...,𝑣𝑡,𝑁]𝑇∈R𝑁+1at rebalancing
time-step𝑡, is𝑁+1dimensional vector, where the first component
𝑣𝑡,0≥0is cash-weight and −1𝑁≤𝒗𝑡,\0≤1𝑁are individual
assets’ long-short weights. The magnitude |𝑣𝑡,𝑖|of the𝑖-th asset
weight represents the investment ratio relative to the total bud-
get, giving the equality constraintÍ𝑁
𝑖=0|𝑣𝑡,𝑖|=1. A non-negative
weight𝑣𝑡,𝑖≥0for the𝑖-th asset indicates a long position, while a
negative weight 𝑣𝑡,𝑖<0implies a short position.
Reward Function. We assume the first and second row vectors
of𝑰𝑡, denoted as 𝒑1(𝑰𝑡)and𝒑2(𝑰𝑡), respectively, to be the daily
opening and highest prices, each in R𝑁. The change rate 𝜹𝑜
𝑡∈R𝑁
of the opening price of the assets during the rebalancing time-step
𝑡and𝑡+1is defined with element-wise operations as follows:
𝜹𝑜
𝑡=(𝒑1(𝑰𝑡+1)−𝒑1(𝑰𝑡))⊘𝒑1(𝑰𝑡), (1)
where⊘denotes Hadamard division. Similarly, the change rate
𝜹ℎ
𝑡∈R𝑁of highest price with respect to the opening price during
rebalancing time-step 𝑡and𝑡+1is defined as follows:
𝜹ℎ
𝑡=(𝒑2(𝑰𝑡)−𝒑1(𝑰𝑡))⊘𝒑1(𝑰𝑡). (2)
As asset prices fluctuate throughout the rebalancing period, the
weights allocated to individual assets at 𝑡differ from those at 𝑡+1.
For assets in a long position, the difference in weight from 𝑡to𝑡+1
is calculated by multiplying the weight at 𝑡by the change rate ofthe opening price, 𝜹𝑜
𝑡. Conversely, for assets in a short position,
considering a “Margin Call” scenario where the position is forcibly
closed if the price doubles 𝜹ℎ
𝑡≥1𝑁, the maximum loss is capped
at the initial invested weight. The weight difference for assets,
𝒅𝑡∈R𝑁, between rebalancing time-step at 𝑡and𝑡+1becomes:
𝒅𝑡=(𝒗𝑡,\0)+⊙𝜹𝑜
𝑡+(𝒗𝑡,\0)−⊙𝜹𝑚
𝑡, (3)
where⊙is Hadamard product, 𝑥+=max(𝑥,0)and𝑥−=−min(𝑥,0)
are the positive and negative part of 𝑥, respectively, and 𝛿𝑚
𝑡,𝑖=1if
𝛿ℎ
𝑡,𝑖≥1, otherwise 𝛿𝑜
𝑡,𝑖for𝑖=1,···,𝑁. Then the changed portfolio
weights 𝒘𝑡+1∈R𝑁+1at the rebalancing time-step 𝑡+1turns into:
𝒘𝑡+1=[𝑣𝑡,0,𝒗𝑡,\0+𝒅𝑡]. (4)
Accordingly, the normalized portfolio weights 𝒘′
𝑡+1∈R𝑁+1at the
rebalancing time-step 𝑡+1with𝐿1-norm becomes:
𝒘′
𝑡+1=𝒘𝑡+1
||𝒘𝑡+1||1. (5)
Then we define the reward function 𝑟𝑡∈R, which evaluates the
portfolio reallocation based on the value 𝑣𝑡at the subsequent rebal-
ancing time step 𝑡+1. Specifically, the reward function 𝑟𝑡can be
formulated as the combination of 1) total profit and loss, and 2) the
total paid transaction fee during the reallocation as follows:
𝑟𝑡=𝒅𝑇
𝑡sign(𝒗𝑡,\0)
|           {z           }
Total P&L Amount−𝑔(𝒘′
𝑡,𝒗𝑡,𝑓𝑙,𝑓𝑠)
|           {z           }
Total Paid Transaction Fee, (6)
where the function 𝑔computes the fee for the reallocation of portfo-
lio weights at time step 𝑡and0≤𝑓𝑙,𝑓𝑠<1represent the transaction
fee rates for closing long and short positions, respectively. We fur-
ther elaborate the calculation in the upcoming section.
Transaction Fee. In line with previous works that formulated
transaction fees for long position settings [ 20], we extend the for-
mulation to incorporate both long and short positions for assets.
In this setting, traders have the flexibility to take either a long or
short position for any given asset. In the rest part of this section,
we omit the rebalancing time-step 𝑡for the simplicity.
Let𝑐𝑖and𝑜𝑖denote closing and opening position weights for
the𝑖-th asset. Specifically, 𝑐𝑖≥0corresponds to closing a long
position, while 𝑐𝑖<0indicates a short position closing. Similarly,
𝑜𝑖≥0denotes opening a long position, and 𝑜𝑖<0indicates an
opening short position. Transaction fees are typically incurred only
when closing positions, not when opening new ones. The desired
weight𝑣𝑖for an asset needs to be adjusted after closing and opening
positions and normalizing for transaction fees, expressed as:
𝑣𝑖=𝑤′
𝑖−𝑐𝑖+𝑜𝑖
1−Θ∀𝑖=0,...,𝑁 , (7)
where Θ=Í𝑁
𝑖=1𝑐+
𝑖𝑓𝑙+𝑐−
𝑖𝑓𝑠∈Ris the total paid transaction fee.
To solve Eq. (7), we employ a fixed-point iteration method de-
noted as𝑔(𝒘′
𝑡,𝒗𝑡,𝑓𝑙,𝑓𝑠), iteratively solving 𝑐𝑖and𝑜𝑖to compute Θ.
Specifically, we alternate between fixing 𝑜𝑖and solving for 𝑐𝑖=
𝑣𝑖(Θ−1)+𝑤′
𝑖+𝑜𝑖, and fixing𝑐𝑖and solving for 𝑜𝑖=𝑣𝑖(1−Θ)−𝑤′
𝑖+𝑐𝑖.
This iterative approach converges to 𝑐∗
𝑖,𝑜∗
𝑖, andΘ∗while adhering
to the constraints, including i) 𝑤′
𝑖𝑐𝑖≥0to maintain consistent
closing position directions with the current position, ii) |𝑐𝑖|≤|𝑤′
𝑖|
 
1213KDD ’24, August 25–29, 2024, Barcelona, Spain. Jihyeong Jeon, Jiwon Park, Chanhee Park, and U Kang
ConvCash Bias
Portfolio
WeightsPortfolio
GenerationM
1d-
DFTMulti-Event
Fusion NetAsset
InputsConcatenateFreq-Relation
Encoder
1d-
DFTMulti-Event
Fusion NetFreq-Relation
Encoder
Frequency State EncoderConvMarket
InputsAsset-Relation
Encoder
Portfolio GeneratorConcatenateComplex Linear
Complex Linear
Complex LinearComplex Transformer Encoder
Figure 2: An overview of the proposed architecture FreQuant.
Algorithm 1: Fixed-point Iteration for Θ∗
Input: 𝒗: The desired portfolio weight vector.
𝒘: The current portfolio weight vector.
𝑓𝑙,𝑓𝑠: Transaction fee for closing long and short pos.
Output: Total paid transaction fee Θ∗for the reallocation.
1𝑘←0,𝒄(0)←0,𝒐(0)←0,Θ←0,𝒄𝑝𝑟𝑒𝑣←1𝑁+1
2while||𝒄(𝑘)−𝒄𝑝𝑟𝑒𝑣||2
2≥𝜖do
3 𝒄(𝑘+1)←𝒗⊙1𝑁+1(Θ−1)+𝒘+𝒐(𝑘)
4 if𝑐(𝑘+1)
𝑖𝑤𝑖<0then
5𝑐(𝑘+1)
𝑖←0 /* The first constraint */
6 end
7 if|𝑐(𝑘+1)
𝑖|≥|𝑤𝑖|then
8𝑐(𝑘+1)
𝑖←𝑤𝑖 /* The second constraint */
9 end
10 Θ←Í𝑁
𝑖=1(𝑐(𝑘+1)
𝑖)+𝑓𝑙+(𝑐(𝑘+1)
𝑖)−𝑓𝑠
11 𝒐(𝑘+1)←𝒗⊙1𝑁+1(1−Θ)− 𝒘+𝒄(𝑘+1)
12 if(𝑤𝑖−𝑐(𝑘+1)
𝑖)𝑜(𝑘+1)
𝑖<0then
13𝑜(𝑘+1)
𝑖←0 /* The third constraint */
14 end
15 𝒄𝑝𝑟𝑒𝑣←𝒄(𝑘+1)
16𝑘←𝑘+1
17end
18Θ∗←Θ
19return Θ∗
to cap closing positions, and iii) (𝑤′
𝑖−𝑐𝑖)𝑜𝑖≥0to preserve posi-
tion directionality after opening. The Algorithm 1 illustrates the
pseudo-algorithm for computing the transaction fee 𝑔(𝒘′
𝑡,𝒗𝑡,𝑓𝑙,𝑓𝑠).
4 PROPOSED METHOD
In this section, we introduce FreQuant, a novel deep reinforcement
learning-based architecture for portfolio optimization, operating
fully in the frequency domain. We address the following challenges:
C1Multi-Granular Asset Representation. The granular model,
overly attuned to prevalent market patterns, struggles to de-
tect the subtleties of fine-grained patterns, such as abrupt, yet
significant market shifts. How can we embed both the granular
and the fine-grained patterns within the asset representation?
C2Portfolio Generation with Asset-Correlation. Modeling
the evolving interrelationships among assets for portfolio gen-
eration aids in identifying the condition of noisy assets throughcomparisons and managing risk by diversifying the portfolio.
How can we model asset correlations during portfolio generation?
C3Stabilizing the Optimization Process. Deep reinforcement
learning faces instability in training actor-critic networks with
numerous parameters [ 9,12,24], inevitably requiring an ad-
ditional tactic for stabilization. How can we enhance stability
during the optimization process?
To tackle these challenges, we introduce an end-to-end frame-
work that operates exclusively in the frequency domain. This ap-
proach focuses on extracting meaningful insights from frequency
features and adapting to sudden market changes. Figure 2 provides
an overview of the FreQuant framework, addressing each chal-
lenge with the following main ideas:
I1Frequency State Encoder (Section 4.1). We bring our analy-
sis into the frequency domain with discrete Fourier transform
to explicitly disclose prevalent and abrupt patterns. These pat-
terns are effectively fused to capture complex patterns with
event-filters and convolution kernels. The Frequency-Relation
Encoder, an extension of the Transformer [ 38], is used to em-
phasize crucial frequency features and adapt to market shifts.
I2Portfolio Generator (Section 4.2). We capture the underly-
ing asymmetric correlations among the assets using the self-
attention mechanism. The context embeddings of each asset,
with these correlations, are utilized to compute confidence
scores that determine their inclusion in the final portfolio.
I3Optimization with Guidance (Section 4.3). We utilize the
DDPG algorithm during the optimization process and guide
the event-filter parameters to learn predefined fundamental
periodicities, thereby enhancing the process’s overall stability.
4.1 Frequency State Encoder
The main objective of the Frequency State Encoder (FSE) is to gen-
erate multi-granular asset representations that effectively capture
both prevalent and abrupt patterns within respective asset signals.
To achieve this, we focus our analysis in the frequency domain, em-
ploying DFT to explicitly identify both prevailing and rare patterns
within asset signals. We then utilize complex-valued operations to
further elaborate asset representation while preserving the charac-
teristics of distinguished patterns in frequency domain. Lastly, we
model intricate interrelationships among these patterns to elimi-
nate the redundancies and adaptively identify the pivotal pattern.
We omit the rebalancing time-step 𝑡from this discussion.
Scrutinizing Latest Patterns. Initially, we emphasize key price
signals, while diversifying representation through applying 1×1
convolution [ 37] along the feature dimension of the asset price
 
1214FreQuant: A Reinforcement-Learning based Adaptive Portfolio Optimization with Multi-frequency Decomposition KDD ’24, August 25–29, 2024, Barcelona, Spain.
feature tensor 𝑿Asset∈R𝐽×𝑁×𝑇with𝐽price features, 𝑁assets,
and𝑇window size. This produces the refined input tensor ˜𝑿Asset∈
R𝐹0×𝑁×𝑇, where𝐹0denotes the number of feature maps.
We target our analysis on the latest patterns by deploying multi-
ple FSE blocks with temporally segmented input tensors, as these
patterns tend to contribute more to price signals. Specifically, for
the𝑚-th FSE block, we have the respective 𝑚-th segment 𝑿Asset𝑚∈
R𝐹0×𝑁×¯𝑇𝑚of the refined input tensor, with the latest ¯𝑇𝑚=⌊𝑇
2𝑚−1⌋
points, for𝑚=1,...,𝑀 . For the brevity, we refer to a single input
tensor as 𝑿and segmented dimension as ¯𝑇in the following.
Multi-frequency Decomposition. For the explicit disclosure
of periodic patterns within the signals, we bring our analysis into
the frequency domain by applying a 1-dimensional real-valued ¯𝑇-
point DFT along the temporal dimension of the input tensor 𝑿∈
R𝐹0×𝑁×¯𝑇, and obtain complex feature tensor ˆ𝑿(0)∈C𝐹0×𝑁×𝑇0,
where𝑇0=⌊¯𝑇
2⌋+1is the truncated temporal dimension. Specifically,
for the finite sequence of ¯𝑇real numbers of 𝑖-th asset’s𝑓-th feature
map 𝑿𝑖,𝑓∈R¯𝑇, we have a Hermitian-symmetric finite complex
sequence ˜𝑿𝑖,𝑓∈C¯𝑇defined as ˜𝑿𝑖,𝑓
𝑘=Í¯𝑇−1
𝑛=0𝑿𝑖,𝑓
𝑛·𝑒−𝐼2𝜋𝑘
¯𝑇𝑛, where
𝐼=√
−1and the corresponding frequency is𝑘
¯𝑇×Sampling Rate .
For instance, if we have a daily price sequence and ¯𝑇=256, then the
8-th frequency feature ˜𝑿𝑖,𝑓
8corresponds to the amplitude and phase
information of the frequency1
32cycle/day , which is the pattern that
repeats every 32 days. We define each of these frequency feature
vectors ˜𝑿𝑖
𝑘∈C𝐹0as the𝑘-th periodic “Event ” of the𝑖-th asset,
where each component ˜𝑿𝑖,𝑓
𝑘depicts the characteristics of its event.
These events characterize the patterns like cyclical factors, business
cycles, seasonal effects, or other periodic influences [ 17]. We retain
only half of ˜𝑿by virtue of the Hermitian-symmetry, resulting in a
complex tensor ˆ𝑿(0)∈C𝐹0×𝑁×𝑇0, where𝑇0=⌊¯𝑇
2⌋+1.
Multi-Event Fusion Network. The goal of the multi-event fu-
sion network is to filter important frequency features out of the com-
plex tensor ˆ𝑿(0)and capture the complex event, which defies simple
sinusoidal representation and appears through a mixture of multi-
events. For this purpose, we employ a series of units 𝑖=1,...,𝐼 ,
each consisting of an event-filtering layer and a 1d-convolutional
layer, to signify crucial frequency features and discover fusion rules
for complex events, respectively.
Specifically, we apply the 𝑢-th event-filtering of the 𝑖-th unit
with parameters 𝑴(𝑖)
𝑢∈C𝐹𝑖−1×𝑁×𝑇𝑖−1, where parameters across
the asset dimension are shared, 𝑢=1,...,𝑢𝑖represents the index
of the event-filter within the 𝑖-th unit, and 𝐹𝑖−1and𝑇𝑖−1denote the
number of feature maps and the temporal dimension at the (𝑖−1)-th
unit, respectively. Each 𝑢-th event-filter aims to selectively preserve
the most relevant and informative features, resulting in a more
refined and meaningful representation. Collectively, concatenating
along the feature dimension of all event-filtered outputs 𝑿(𝑖)∈
C𝑢𝑖𝐹𝑖−1×𝑁×𝑇𝑖−1can be expressed as follows:
𝑿(𝑖)=Concat(𝑴(𝑖)
1⊙ˆ𝑿(𝑖−1),..., 𝑴(𝑖)
𝑢𝑖⊙ˆ𝑿(𝑖−1)). (8)
Subsequently, the 1d-convolution ˆ𝑿(𝑖)∈C𝐹𝑖×𝑁×𝑇𝑖of𝑖-th unit
along the temporal dimension for each asset with the kernel size
𝑘𝑖, stride size𝑠𝑖, and𝐹𝑖filters is:
ˆ𝑿(𝑖)=Conv1d(𝑿(𝑖);𝑘𝑖,𝑠𝑖,𝐹𝑖), (9)where Conv1d(𝑿)is the concatenated result of independently ap-
plied 1d-convolution operations for each asset of the 3d-input tensor
𝑿with the same parameters, and 𝑇𝑖=⌊𝑇𝑖−1−𝑘𝑖
𝑠𝑖+1⌋is the changed
temporal dimension. Consequently, 1d-convolution of the last unit
outputs a complex feature tensor ˆ𝑿∈Cˆ𝐹×𝑁×ˆ𝑇, where ˆ𝐹and ˆ𝑇
denotes the number of filters and temporal dimension at the last
1d-convolution, respectively.
Frequency-Relation Encoder. We further enhance asset repre-
sentation by modeling the extant relationships among the captured
events [ 8], which aids in eliminating redundancies and spotting
pivotal events. To this end, we adapt the Transformer encoder
[38] into a Complex Transformer Encoder (CTE), leveraging the
self-attention mechanism’s proficiency in delineating these rela-
tionships. To function fully in a complex vector space, we employ
the Hermitian inner product in place of the dot product to compute
the similarity between two complex vectors, and use complex soft-
max to normalize and retrieve the attention scores of these vectors.
In the following, we refer to CTE as either the Frequency-Relation
Encoder (FRE) when modeling events’ correlations or the Asset-
Relation Encoder (ARE) when designing assets’ interdependencies.
To exemplify within the FRE context, consider a permuted com-
plex feature tensor ˆ𝑋∈C𝑁×ˆ𝑇×ˆ𝐹, with 𝑾𝑄,𝑾𝐾,𝑾𝑉∈Cˆ𝐹×𝑑𝑘as
parameters for the complex linear projection [ 14] of query, key, and
value into𝑑𝑘-dimensional spaces, respectively. The asset dimen-
sion𝑁is treated as the mini-batch dimension. The attention scores
𝑺𝑖∈Rˆ𝑇×ˆ𝑇for the𝑖-th asset across their ˆ𝑇complex events are:
𝑺𝑖=cSoftmax(ˆ𝑿𝑖𝑾𝑄)(ˆ𝑿𝑖𝑾𝐾)∗
√︁
𝑑𝑘
, (10)
where ˆ𝑿𝑖∈Rˆ𝑇×ˆ𝐹is the𝑖-th asset’s feature matrix, (·)∗denotes the
Hermitian transpose,√︁
𝑑𝑘is a scaling factor, and cSoftmax(𝒛)=
𝑒|𝒛|/Í
𝑖𝑒|𝑧𝑖|is a row-wise complex softmax function adapted from
[30].
The correlated embedding 𝑿𝑐=𝑺(ˆ𝑿𝑾𝑉) ∈C𝑁×ˆ𝑇×𝑑𝑘is an
aggregation of linearly projected values, weighted by asymmetric
correlation scores between events. The correlated embedding is
then passed through a Feed Forward Network [ 14] and a layer
normalization layer [ 3] with a residual connection [ 13] to match
the input feature dimension ˆ𝐹. We denote the output embedding of
FRE as𝜉=FRE(ˆ𝑿)∈C𝑁×𝐸, where𝐸=ˆ𝑇×ˆ𝐹.
Final Asset Representation. The output embeddings, 𝜉Asset∈
C𝑁×𝐸for asset inputs and 𝜉Market∈C1×𝐸for market inputs, are
obtained using their respective networks with different parameteri-
zation (see Figure 2). To consider both local and global semantics,
we sum them in an element-wise manner, following [48, 49]:
𝜉𝑂=𝜉Asset+1𝑁𝜉Market. (11)
Finally, a context embedding 𝑪∈C𝑁×𝑑𝑐, which is the represen-
tation of the assets, is achieved by concatenating linearly projected
embeddings of each FSE outputs along the feature dimension as:
𝑪=Concat(𝜉𝑂
1𝑾1,...,𝜉𝑂
𝑀𝑾𝑀), (12)
where 𝑾𝑚∈C𝐸𝑚×𝑑𝑙are complex parameters, 𝐸𝑚is the output
dimension of the 𝑚-th FSE block, and 𝑑𝑐=𝑀×𝑑𝑙is the dimension
after concatenating 𝑀number of𝑑𝑙features.
 
1215KDD ’24, August 25–29, 2024, Barcelona, Spain. Jihyeong Jeon, Jiwon Park, Chanhee Park, and U Kang
4.2 Portfolio Generator
The central focus of the portfolio generator is to generate an optimal
portfolio 𝒗∈R𝑁+1with the attained asset context embeddings 𝑪∈
C𝑁×𝑑𝑐. This optimal portfolio must meet two crucial requirements
for high-quality investment: stability and profitability. To achieve
these objectives, we model the evolving interdependencies among
the assets [ 26,43,49] to enhance stability, and select a portion of
assets with the highest confidence scores to satisfy both criteria.
Asset-Relation Encoder. We embed the assets’ interdepen-
dencies through the Asset-Relation Encoder (ARE), which mirrors
the structure of the CTE, with a specific focus on creating asset-
correlated context embeddings ˆ𝑯. Specifically, it takes asset context
embeddings 𝑪∈C𝑁×𝑑𝑐and produces asset-correlated context em-
beddings ˆ𝑯=ARE(𝑪𝑾𝑐)∈C𝑁×𝑑𝑐, where 𝑾𝑐∈C𝑑𝑐×𝑑𝑐is the
linear projection weights, which serves as integrating the various
levels of representations obtained from the multiple FSE blocks.
Portfolio Generation. In real-world trading scenarios, the
number of assets held is often limited due to practical considera-
tions, making asset selection crucial. However, previous strategies
[26,43,45] fall short in markets with clear trends, such as consis-
tent bull markets, because they maintain a fixed number of short
positions regardless of market conditions. To address this, we con-
struct the optimal portfolio 𝒗, based on the highest magnitude of
confidence scores, offering a targeted response to the market.
Specifically, we define the confidence scores 𝒉∈R𝑁+1of the
asset with the asset-correlated context embeddings ˆ𝑯, the cash bias
𝒃𝑐∈C𝑑𝑐, and the current portfolio weights 𝒘′∈R𝑁+1as:
𝒉=ℜ(Concat 2(Concat 1(𝒃𝑇
𝑐,ˆ𝑯),𝒘′)𝒖+1𝑁+1𝑏𝑢), (13)
where Concat n(·)denotes concatenation along the n-th dimension,
ℜ(·) is the real part, and 𝒖∈C𝑑𝑐+1and𝑏𝑢∈Care the weight
and bias, respectively. Subsequently, let G ⊂ { 0,...,𝑁}be the
set of indices corresponding to the assets with the |G|highest
magnitudes of the confidence scores. Then, the optimal portfolio
weights 𝒗=[𝑣0,...,𝑣𝑁]∈R𝑁+1is defined as
𝑣𝑖=(ℎ𝑖Í
𝑗∈G|ℎ𝑗|if𝑖∈G
0 otherwise.(14)
4.3 Optimization with Guidance
We use the deep deterministic policy gradient [ 23] algorithm for
optimization, but it presents instability issues, particularly with
numerous parameters to optimize. To mitigate this, we propose a
novel regularization method that guides the event-filter parameters
using the inductive prior of fundamental periodicities.
Optimization Process. For every rebalancing time-step 𝑡, the
state𝑠𝑡∈S⊂X×W is fed into the parametrized actor network
𝜇(𝑠|𝜃𝜇)to produce an action 𝑎:=𝒗=𝜇(𝑠|𝜃𝜇)∈R𝑁+1, whereS
is the state space and Wis the portfolio weight space. After the
execution of an action 𝑎𝑡, the reward 𝑟𝑡and the next state 𝑠𝑡+1are
observed. The critic network 𝑄computes a q-value as follows:
𝑄(𝑠,𝑎|𝜃𝑄)=𝑽𝑇
𝑜(𝑾𝑄·Concat(Φ(𝑠|𝜃𝑠),𝑎)+𝒃)+∈R, (15)
where(·)+denotes the ReLU activation function, Φ(𝑠|𝜃𝑠)∈R𝑁+1
is a state encoding network which resembles the actor network𝜇(·)but parametrized with 𝜃𝑠, and 𝑽𝑜∈R𝑑𝑞,𝑾𝑄∈R𝑑𝑞×2(𝑁+1),
and𝒃∈R𝑑𝑞are the learnable parameters.
The weights of the critic network 𝜃𝑄is updated with the gra-
dients∇𝜃𝑄L=1
𝐵∇𝜃𝑄Í
𝑖(𝑦𝑖−𝑄(𝑠𝑖,𝑎𝑖|𝜃𝑄))2to minimize the tem-
poral difference, where 𝐵is the mini-batch size and 𝑦𝑖is the𝑖-th
sample target. The weights of the actor network is updated with the
action-value gradients [ 32] to maximize the performance objective:
∇𝜃𝜇J≈1
𝐵∑︁
𝑖∇𝑎𝑄(𝑠,𝑎|𝜃𝑄)|𝑠=𝑠𝑖,𝑎=𝜇(𝑠𝑖)∇𝜃𝜇𝜇(𝑠|𝜃𝜇)|𝑠𝑖.(16)
Guiding with Fundamental Periodicities. To further stabilize
the optimization process, we offer intuitive guidance for event-
filter parameters by incorporating fundamental periodicities. This
approach is inspired by the observation that market assets exhibit
basic, fundamental periodicities, such as common seasonality effects
(e.g., the Friday effect) [ 1,11,29]. Thus, we prompt the frequency
features to learn these inductive priors of fundamental periodicities,
serving as a stabilizing mechanism for the optimization process.
Recall that the output of the Multi-frequency Decomposition
is the complex tensor ˆ𝑿(0)∈C𝐹0×𝑁×𝑇0, and the first unit’s very
first event-filter is ˜𝑴=𝑴(1)
1∈C𝐹0×𝑁×𝑇0, where all 𝑁assets
share the same 𝐹0×𝑇0matrix. We define the magnitude of the
𝑖-th asset’s𝑓-th feature vector of the event-filter ˜𝑴𝑖,𝑓∈C𝑇0as
𝝆𝑓=|˜𝑴𝑖,𝑓|. To provide guidance, we regularize 𝝆𝑓so that the
parameters of the event-filter gradually follow and represent the
predefined periodicities 𝜂1=5,𝜂2=10,𝜂3=20,..., where|𝜂|≤𝐹0.
Since naturally existing patterns with length ¯𝑇that repeat every 𝜂𝑓
days in the time domain will have high magnitudes at every ⌊¯𝑇
𝜂𝑓⌋-
th index in the frequency domain, we aim to make the magnitude
of the event-filter 𝝆𝑓mimic these 𝜂𝑓-periodic patterns. Formally,
we jointly minimize the following regularization term:
L𝑟𝑒𝑔=∑︁|𝜂|
𝑓=1∥𝝆𝑓⊙𝜶𝑓∥2
2, (17)
where 𝜶𝑓=
ℜ −1+exp(𝐼2𝜋𝑗𝜂𝑓/¯𝑇)
−2+exp(𝐼2𝜋𝑗𝜂𝑓/¯𝑇)	𝑇0−1
𝑗=0is the guide of the 𝑓-th
feature vector with zero values only near the every ⌊¯𝑇
𝜂𝑓⌋-th index.
As a result, we update the actor network 𝜇(𝑠|𝜃𝜇)with the com-
positive gradients∇𝜃𝜇J𝑟𝑒𝑔using gradient ascent:
∇𝜃𝜇J𝑟𝑒𝑔=∇𝜃𝜇J−𝜆∇𝜃𝜇L𝑟𝑒𝑔, (18)
where𝜆is a hyperparameter balancing regularization intensity.
5 EXPERIMENTS
We perform experiments to address the following questions:
Q1Performance Evaluation (Section 5.2). Does FreQuant
outperform other methods, demonstrating its effectiveness in
portfolio optimization?
Q2Effects of Frequency-Relation Encoder (Section 5.3). Does
the Frequency-Relation Encoder dynamically emphasize sig-
nificant frequency features as time progresses?
Q3Interpretation of Event-filters (Section 5.4). Do the ac-
quired event-filters from the Multi-Events Fusion Network
accurately capture event-relevant patterns?
Q4Empirical Validation of the Robustness (Section 5.5). Does
FreQuant have enhanced stability and responsiveness to the
rapidly changing market?
 
1216FreQuant: A Reinforcement-Learning based Adaptive Portfolio Optimization with Multi-frequency Decomposition KDD ’24, August 25–29, 2024, Barcelona, Spain.
Table 1: The results of the proposed method FreQuant (FQ) and its variants, along with those of competitor models, are
presented in ARR and ASR metrics. The best result is shown in bold, and the second best is underlined.
Dataset U
.S. stock market KR
stock market Cr
ypto market CN
stock market JP
stock market U
.K. stock market
Metho
dology ARR(%)↑ ASR↑ ARR(%)↑ ASR↑ ARR(%)↑ ASR↑ ARR(%)↑ ASR↑ ARR(%)↑ ASR↑ ARR(%)↑ ASR↑
CSM
[19] -3.774
-0.238 -6.279
-0.545 -84.36
-3.122 -15.86
-1.358 1.621
0.139 -2.054
-0.181
BLSW [28] -11.51
-0.706 -16.64
-1.400 -145.0
-4.397 -21.79
-1.722 -9.612
-0.817 3.427
0.187
AlphaSto
ck [43] 9.141
0.495 6.922
0.363 70.56
0.966 11.63
0.486 20.06
1.089 10.43
0.815
De
epTrader [45] 16.80 0.810 27.84 0.994 102.6
1.598 29.40 1.154 26.22 1.190 15.48
0.795
MetaTrader [26] 13.69
0.429 5.509
0.368 82.17
1.208 27.31
0.940 15.05
0.526 11.16
0.718
FQ-FRE-CTE 7.213
0.360 10.17
0.427 93.32
1.318 20.25
1.015 6.697
0.399 12.71
0.478
FQ-FRE 12.69
0.434 12.06
0.570 99.28
1.905 25.94
1.219 8.769
0.404 14.62
0.714
FQ-CTE 13.21
0.542 13.42
0.663 116.7 1.834 25.16
1.284 20.29
0.835 18.28 0.688
FQ
(proposed) 36.25 0.770 38.57
1.008 179.4
2.370 36.45
2.109 41.93
1.263 24.80
1.413
/uni00000013/uni00000011/uni00000012/uni00000015/uni0000000e/uni00000011/uni00000012/uni0000000e/uni00000013/uni00000013 /uni00000013/uni00000011/uni00000012/uni00000017/uni0000000e/uni00000011/uni0000001a/uni0000000e/uni00000012/uni0000001a /uni00000013/uni00000011/uni00000012/uni0000001a/uni0000000e/uni00000011/uni00000016/uni0000000e/uni00000013/uni00000011/uni00000011/uni0000000f/uni00000011/uni00000013/uni0000000f/uni00000011/uni00000015/uni0000000f/uni00000011/uni00000017/uni0000000f/uni00000011/uni00000019/uni0000000f/uni00000011/uni00000012/uni00000011/uni0000000f/uni00000011/uni00000031/uni00000050/uni00000053/uni00000055/uni00000047/uni00000050/uni0000004d/uni0000004a/uni00000050/uni00000001/uni00000037/uni00000042/uni0000004d/uni00000056/uni00000046/uni00000001/uni00000009/uni00000031/uni00000037/uni0000000a
/uni0000002f/uni0000003a/uni00000034/uni00000026
/uni00000024/uni00000034/uni0000002e/uni00000023/uni0000002d/uni00000034/uni00000038
/uni00000022/uni00000034/uni0000002e/uni00000035
/uni00000025/uni00000035/uni00000027/uni00000032/uni0000000e/uni00000027/uni00000033/uni00000026
/uni00000027/uni00000032/uni0000000e/uni00000024/uni00000035/uni00000026/uni00000027/uni00000032/uni0000000e/uni00000027/uni00000033/uni00000026/uni0000000e/uni00000024/uni00000035/uni00000026
/uni00000027/uni00000032/uni00000001/uni00000009/uni00000051/uni00000053/uni00000050/uni00000051/uni00000050/uni00000054/uni00000046/uni00000045/uni0000000a/uni00000013/uni00000011/uni00000013/uni00000013/uni0000000e/uni00000011/uni00000012/uni0000000e/uni00000012/uni00000014
(
a) U.S. stock market
/uni00000013/uni00000011/uni00000012/uni00000017/uni0000000e/uni00000011/uni00000018/uni0000000e/uni00000012/uni0000001a /uni00000013/uni00000011/uni00000012/uni00000019/uni0000000e/uni00000011/uni00000017/uni0000000e/uni00000012/uni00000015 /uni00000013/uni00000011/uni00000013/uni00000011/uni0000000e/uni00000011/uni00000016/uni0000000e/uni00000011/uni00000018 /uni00000013/uni00000011/uni00000013/uni00000013/uni0000000e/uni00000011/uni00000014/uni0000000e/uni00000013/uni00000015/uni00000012/uni0000000f/uni00000011/uni00000013/uni0000000f/uni00000011/uni00000014/uni0000000f/uni00000011/uni00000015/uni0000000f/uni00000011/uni00000016/uni0000000f/uni00000011/uni00000017/uni0000000f/uni00000011/uni00000031/uni00000050/uni00000053/uni00000055/uni00000047/uni00000050/uni0000004d/uni0000004a/uni00000050/uni00000001/uni00000037/uni00000042/uni0000004d/uni00000056/uni00000046/uni00000001/uni00000009/uni00000031/uni00000037/uni0000000a
/uni0000002c/uni00000030/uni00000034/uni00000031/uni0000002a
/uni00000024/uni00000034/uni0000002e/uni00000023/uni0000002d/uni00000034/uni00000038
/uni00000022/uni00000034/uni0000002e/uni00000035
/uni00000025/uni00000035/uni00000027/uni00000032/uni0000000e/uni00000027/uni00000033/uni00000026
/uni00000027/uni00000032/uni0000000e/uni00000024/uni00000035/uni00000026/uni00000027/uni00000032/uni0000000e/uni00000027/uni00000033/uni00000026/uni0000000e/uni00000024/uni00000035/uni00000026
/uni00000027/uni00000032/uni00000001/uni00000009/uni00000051/uni00000053/uni00000050/uni00000051/uni00000050/uni00000054/uni00000046/uni00000045/uni0000000a (
b) KR stock market
/uni00000013/uni00000011/uni00000013/uni00000012/uni0000000e/uni00000012/uni00000012/uni0000000e/uni00000013/uni00000014 /uni00000013/uni00000011/uni00000013/uni00000013/uni0000000e/uni00000011/uni00000014/uni0000000e/uni00000011/uni00000018 /uni00000013/uni00000011/uni00000013/uni00000013/uni0000000e/uni00000011/uni00000017/uni0000000e/uni00000012/uni0000001a /uni00000013/uni00000011/uni00000013/uni00000013/uni0000000e/uni00000012/uni00000011/uni0000000e/uni00000011/uni00000012/uni00000011/uni0000000f/uni00000016/uni00000012/uni0000000f/uni00000011/uni00000012/uni0000000f/uni00000016/uni00000013/uni0000000f/uni00000011/uni00000013/uni0000000f/uni00000016/uni00000014/uni0000000f/uni00000011/uni00000014/uni0000000f/uni00000016/uni00000015/uni0000000f/uni00000011/uni00000015/uni0000000f/uni00000016/uni00000031/uni00000050/uni00000053/uni00000055/uni00000047/uni00000050/uni0000004d/uni0000004a/uni00000050/uni00000001/uni00000037/uni00000042/uni0000004d/uni00000056/uni00000046/uni00000001/uni00000009/uni00000031/uni00000037/uni0000000a
/uni00000023/uni0000002a/uni00000035/uni00000024/uni00000030/uni0000002a/uni0000002f
/uni00000024/uni00000034/uni0000002e/uni00000023/uni0000002d/uni00000034/uni00000038
/uni00000022/uni00000034/uni0000002e/uni00000035
/uni00000025/uni00000035/uni00000027/uni00000032/uni0000000e/uni00000027/uni00000033/uni00000026
/uni00000027/uni00000032/uni0000000e/uni00000024/uni00000035/uni00000026/uni00000027/uni00000032/uni0000000e/uni00000027/uni00000033/uni00000026/uni0000000e/uni00000024/uni00000035/uni00000026
/uni00000027/uni00000032/uni00000001/uni00000009/uni00000051/uni00000053/uni00000050/uni00000051/uni00000050/uni00000054/uni00000046/uni00000045/uni0000000a (
c) Crypto market
/uni00000013/uni00000011/uni00000012/uni00000018/uni0000000e/uni00000011/uni0000001a/uni0000000e/uni00000012/uni00000016 /uni00000013/uni00000011/uni00000012/uni00000019/uni0000000e/uni00000011/uni00000019/uni0000000e/uni00000013/uni00000018 /uni00000013/uni00000011/uni00000012/uni0000001a/uni0000000e/uni00000011/uni00000019/uni0000000e/uni00000011/uni00000019 /uni00000013/uni00000011/uni00000013/uni00000011/uni0000000e/uni00000011/uni00000018/uni0000000e/uni00000013/uni00000013/uni00000011/uni0000000f/uni00000016/uni00000012/uni0000000f/uni00000011/uni00000012/uni0000000f/uni00000016/uni00000013/uni0000000f/uni00000011/uni00000013/uni0000000f/uni00000016/uni00000031/uni00000050/uni00000053/uni00000055/uni00000047/uni00000050/uni0000004d/uni0000004a/uni00000050/uni00000001/uni00000037/uni00000042/uni0000004d/uni00000056/uni00000046/uni00000001/uni00000009/uni00000031/uni00000037/uni0000000a
/uni00000034/uni00000034/uni00000026/uni00000016/uni00000011
/uni00000024/uni00000034/uni0000002e/uni00000023/uni0000002d/uni00000034/uni00000038
/uni00000022/uni00000034/uni0000002e/uni00000035
/uni00000025/uni00000035/uni00000027/uni00000032/uni0000000e/uni00000027/uni00000033/uni00000026
/uni00000027/uni00000032/uni0000000e/uni00000024/uni00000035/uni00000026/uni00000027/uni00000032/uni0000000e/uni00000027/uni00000033/uni00000026/uni0000000e/uni00000024/uni00000035/uni00000026
/uni00000027/uni00000032/uni00000001/uni00000009/uni00000051/uni00000053/uni00000050/uni00000051/uni00000050/uni00000054/uni00000046/uni00000045/uni0000000a
(
d) CN stock market
/uni00000013/uni00000011/uni00000013/uni00000012/uni0000000e/uni00000011/uni00000014/uni0000000e/uni00000013/uni00000014 /uni00000013/uni00000011/uni00000013/uni00000012/uni0000000e/uni00000012/uni00000013/uni0000000e/uni00000014/uni00000011 /uni00000013/uni00000011/uni00000013/uni00000013/uni0000000e/uni00000012/uni00000011/uni0000000e/uni00000013/uni00000012 /uni00000013/uni00000011/uni00000013/uni00000014/uni0000000e/uni00000011/uni00000019/uni0000000e/uni00000011/uni00000013/uni00000011/uni0000000f/uni00000019/uni00000012/uni0000000f/uni00000011/uni00000012/uni0000000f/uni00000013/uni00000012/uni0000000f/uni00000015/uni00000012/uni0000000f/uni00000017/uni00000012/uni0000000f/uni00000019/uni00000013/uni0000000f/uni00000011/uni00000013/uni0000000f/uni00000013/uni00000031/uni00000050/uni00000053/uni00000055/uni00000047/uni00000050/uni0000004d/uni0000004a/uni00000050/uni00000001/uni00000037/uni00000042/uni0000004d/uni00000056/uni00000046/uni00000001/uni00000009/uni00000031/uni00000037/uni0000000a
/uni0000002f/uni0000002a/uni0000002c/uni0000002c/uni00000026/uni0000002a/uni00000013/uni00000013/uni00000016
/uni00000024/uni00000034/uni0000002e/uni00000023/uni0000002d/uni00000034/uni00000038
/uni00000022/uni00000034/uni0000002e/uni00000035
/uni00000025/uni00000035/uni00000027/uni00000032/uni0000000e/uni00000027/uni00000033/uni00000026
/uni00000027/uni00000032/uni0000000e/uni00000024/uni00000035/uni00000026/uni00000027/uni00000032/uni0000000e/uni00000027/uni00000033/uni00000026/uni0000000e/uni00000024/uni00000035/uni00000026
/uni00000027/uni00000032/uni00000001/uni00000009/uni00000051/uni00000053/uni00000050/uni00000051/uni00000050/uni00000054/uni00000046/uni00000045/uni0000000a (
e) JP stock market
/uni00000013/uni00000011/uni00000013/uni00000012/uni0000000e/uni00000011/uni00000014/uni0000000e/uni00000013/uni0000001a /uni00000013/uni00000011/uni00000013/uni00000013/uni0000000e/uni00000011/uni00000012/uni0000000e/uni00000011/uni00000016 /uni00000013/uni00000011/uni00000013/uni00000013/uni0000000e/uni00000012/uni00000011/uni0000000e/uni00000013/uni00000015 /uni00000013/uni00000011/uni00000013/uni00000014/uni0000000e/uni00000011/uni00000018/uni0000000e/uni00000013/uni00000017/uni00000011/uni0000000f/uni00000019/uni00000012/uni0000000f/uni00000011/uni00000012/uni0000000f/uni00000013/uni00000012/uni0000000f/uni00000015/uni00000012/uni0000000f/uni00000017/uni00000031/uni00000050/uni00000053/uni00000055/uni00000047/uni00000050/uni0000004d/uni0000004a/uni00000050/uni00000001/uni00000037/uni00000042/uni0000004d/uni00000056/uni00000046/uni00000001/uni00000009/uni00000031/uni00000037/uni0000000a
/uni00000027/uni00000035/uni00000034/uni00000026/uni00000012/uni00000011/uni00000011
/uni00000024/uni00000034/uni0000002e/uni00000023/uni0000002d/uni00000034/uni00000038
/uni00000022/uni00000034/uni0000002e/uni00000035
/uni00000025/uni00000035/uni00000027/uni00000032/uni0000000e/uni00000027/uni00000033/uni00000026
/uni00000027/uni00000032/uni0000000e/uni00000024/uni00000035/uni00000026/uni00000027/uni00000032/uni0000000e/uni00000027/uni00000033/uni00000026/uni0000000e/uni00000024/uni00000035/uni00000026
/uni00000027/uni00000032/uni00000001/uni00000009/uni00000051/uni00000053/uni00000050/uni00000051/uni00000050/uni00000054/uni00000046/uni00000045/uni0000000a (f
) U.K. stock market
Figure 3: The Portfolio Value (PV) across various models in different market datasets during their respective test periods.
Q5Case Study in Adaptive Positioning (Section 5.6). Does
FreQuant successfully adapt its weight allocation strategy in
response to price fluctuations?
5.1 Experimental Setup
Datasets. We employ six market datasets in our experiments. Ta-
ble 2 provides an overview of the training and testing periods, as
well as the number of assets in each market. Each market dataset
encompasses assets that were present throughout both the learning
and testing periods. The U.S., KR, and Crypto market datasets have
been newly collected from their respective markets. Meanwhile, the
CN, JP, and U.K. market datasets, which are public, were utilized in
previous studies [ 34,49]. To enable a more extensive experiment,
we have updated the data periods and assets across all datasets.
Competitors. We conduct a comparative assessment of Fre-
Quant by evaluating its performance against five established method-
ologies for portfolio optimization. These methodologies encompass
a combination of classical and contemporary techniques. Specifi-
cally, our analysis includes two traditional methods, Buying-Loser-
Selling-Winner (BLSW) [ 28] and Cross-Sectional Mean reversion
(CSM) [ 19], and three recently developed portfolio optimizationTable 2: Time periods and asset counts for different datasets.
Dataset #
Assets Training Period Testing Period
U
.S. stock market 224 1992.08-2013.08
2013.09-2022.11
KR stock market 528 2001.01-2016.06
2016.07-2022.11
Crypto market 44 2019.01-2021.10
2021.11-2022.11
CN
stock market134 2009.01-2017.09
2017.10-2020.12
JP stock market2118 2013.08-2021.03
2021.04-2023.12
U.K. stock market221 2011.09-2020.07
2020.08-2023.12
1https://github
.com/TradeMaster-NTU/TradeMaster
2https://datalab.snu.ac.kr/dtml/#datasets
methods, AlphaStock (AS) [ 43], DeepTrader (DT) [ 45], and Meta-
Trader (MT) [ 26]. All of these approaches are designed for long-
short operable scenarios.
Evaluation Metrics. We use two evaluation metrics to com-
prehensively evaluate the performance of our approach. First, we
examine the Annualized Rate of Return (ARR), providing a direct
measure of the method’s profitability. Second, we utilize the Annu-
alized Sharpe Ratio (ASR), which offers a balanced perspective by
considering both profitability and risk. The higher values for these
metrics indicate improved performance.
 
1217KDD ’24, August 25–29, 2024, Barcelona, Spain. Jihyeong Jeon, Jiwon Park, Chanhee Park, and U Kang
/uni00000013/uni00000011/uni00000012/uni00000015/uni0000000e/uni00000011/uni00000012/uni0000000e/uni00000013/uni00000013 /uni00000013/uni00000011/uni00000012/uni00000015/uni0000000e/uni00000011/uni00000014/uni0000000e/uni00000013/uni00000018 /uni00000013/uni00000011/uni00000012/uni00000015/uni0000000e/uni00000011/uni00000017/uni0000000e/uni00000011/uni0000001a /uni00000013/uni00000011/uni00000012/uni00000015/uni0000000e/uni00000011/uni00000019/uni0000000e/uni00000012/uni0000001a/uni00000011
/uni00000016
/uni00000012/uni00000011
/uni00000012/uni00000016
/uni00000013/uni00000011
/uni00000013/uni00000016
/uni00000014/uni00000011/uni00000027/uni00000053/uni00000046/uni00000052/uni00000056/uni00000046/uni0000004f/uni00000044/uni0000005a/uni00000001/uni0000002a/uni0000004f/uni00000045/uni00000046/uni00000059/uni00000022
/uni00000012 /uni00000013 /uni00000014
Frequency 
intensity shift (A)
  ������������������������������
(a) Sony (SONY)
/uni00000013/uni00000011/uni00000012/uni00000017/uni0000000e/uni00000011/uni00000017/uni0000000e/uni00000011/uni0000001a /uni00000013/uni00000011/uni00000012/uni00000017/uni0000000e/uni00000011/uni00000019/uni0000000e/uni00000012/uni00000013 /uni00000013/uni00000011/uni00000012/uni00000017/uni0000000e/uni00000012/uni00000011/uni0000000e/uni00000013/uni00000015 /uni00000013/uni00000011/uni00000012/uni00000018/uni0000000e/uni00000011/uni00000012/uni0000000e/uni00000011/uni00000016/uni00000011
/uni00000016
/uni00000012/uni00000011
/uni00000012/uni00000016
/uni00000013/uni00000011
/uni00000013/uni00000016
/uni00000014/uni00000011/uni00000027/uni00000053/uni00000046/uni00000052/uni00000056/uni00000046/uni0000004f/uni00000044/uni0000005a/uni00000001/uni0000002a/uni0000004f/uni00000045/uni00000046/uni00000059/uni00000022
/uni00000012/uni0000000f/uni00000011 /uni00000012/uni0000000f/uni00000012 /uni00000012/uni0000000f/uni00000013
   
  
  Frequency 
intensity shift (B)
   ����������������������������� (b) J.P. Morgan (JPM)
Figure 4: The changing frequency intensity 𝜓within FRE
over time for SONY and JPM. The circled regions exhibit
dynamic adaptation ability of FRE (see Section 5.3).
/uni00000011 /uni00000016 /uni00000012/uni00000011 /uni00000012/uni00000016 /uni00000013/uni00000011 /uni00000013/uni00000016 /uni00000014/uni00000011
/uni00000035/uni00000042/uni00000053/uni00000048/uni00000046/uni00000055/uni00000001/uni00000027/uni00000053/uni00000046/uni00000052/uni00000056/uni00000046/uni0000004f/uni00000044/uni0000005a/uni00000001/uni0000002a/uni0000004f/uni00000045/uni00000046/uni00000059/uni00000011
/uni00000016
/uni00000012/uni00000011
/uni00000012/uni00000016
/uni00000013/uni00000011
/uni00000013/uni00000016
/uni00000014/uni00000011/uni00000034/uni00000050/uni00000056/uni00000053/uni00000044/uni00000046/uni00000001/uni00000027/uni00000053/uni00000046/uni00000052/uni00000056/uni00000046/uni0000004f/uni00000044/uni0000005a/uni00000001/uni0000002a/uni0000004f/uni00000045/uni00000046/uni00000059
/uni00000011/uni0000000f/uni00000011/uni00000016 /uni00000011/uni0000000f/uni00000012/uni00000011 /uni00000011/uni0000000f/uni00000012/uni00000016
  Heightene d 
frequency (A)
  Heightene d 
frequency (B)
(a) SONY on 2014-08-12
/uni00000011 /uni00000016 /uni00000012/uni00000011 /uni00000012/uni00000016 /uni00000013/uni00000011 /uni00000013/uni00000016 /uni00000014/uni00000011
/uni00000035/uni00000042/uni00000053/uni00000048/uni00000046/uni00000055/uni00000001/uni00000027/uni00000053/uni00000046/uni00000052/uni00000056/uni00000046/uni0000004f/uni00000044/uni0000005a/uni00000001/uni0000002a/uni0000004f/uni00000045/uni00000046/uni00000059/uni00000011
/uni00000016
/uni00000012/uni00000011
/uni00000012/uni00000016
/uni00000013/uni00000011
/uni00000013/uni00000016
/uni00000014/uni00000011/uni00000034/uni00000050/uni00000056/uni00000053/uni00000044/uni00000046/uni00000001/uni00000027/uni00000053/uni00000046/uni00000052/uni00000056/uni00000046/uni0000004f/uni00000044/uni0000005a/uni00000001/uni0000002a/uni0000004f/uni00000045/uni00000046/uni00000059
/uni00000011/uni0000000f/uni00000011/uni00000014 /uni00000011/uni0000000f/uni00000011/uni00000015 /uni00000011/uni0000000f/uni00000011/uni00000016 /uni00000011/uni0000000f/uni00000011/uni00000017
  Heightene d 
frequency (A)
  Heightene d 
frequency (B) (b) JPM on 2016-08-19
Figure 5: Illustrative examples of the heightened frequency
features of SONY and JPM on the respective dates using the
attention scores 𝑆𝑖from the FRE (details are in Section 5.3).
5.2 Performance Evaluation (Q1)
Table 1 presents the outcomes of the performance evaluation in-
volving FreQuant and competitor models across multiple datasets.
In addition to other competitors, we compare FreQuant with its
variants. FQ-FRE denotes FreQuant without the FRE module, and
FQ-CTE signifies the replacement of the CTE module with two
original Transformer encoders [ 38], separately for the real and
imaginary parts of complex features. FQ-FRE-CTE removes the FRE
module from FreQuant while incorporating the original Trans-
former encoder in place of CTE.
FreQuant demonstrates robust performance in the portfolio
optimization task, as evident from Table 1. It shows superior perfor-
mance in terms of ARR, and exhibits strong risk-profit performance
by ASR. While FQ-FRE-CTE exhibits performance comparable to
previous methods, the persistent performance improvement ob-
served across its variants validates the effectiveness of each module.
Additionally, Figure 3 depicts the dynamic evolution of Portfolio
Value (PV) over time, defined asÎ𝑡′
𝑡=2(1+𝑟𝑡−1), where𝑡′is the
current rebalancing time-step and 𝑟𝑡−1is the reward at rebalancing
time-step𝑡−1, following Eq. (6). While high volatility induced
minor fluctuations in earnings, FreQuant effectively identifies and
capitalizes pivotal trading assets by incorporating both dominant
and abrupt events. This aligns with the results in Table 1 where
FreQuant achieves the highest PV across all datasets.
Periodicity = 5 Periodicity = 10Figure 6: The visualization of event-filters in both the fre-
quency domain (red) and the time domain (blue). The first
and second columns correspond to the event-filters with pre-
defined periodicities of 5and 10, respectively, induced by the
guidance in Eq. (17). The third column shows an event-filter
trained without any prior, exhibiting the capability of Fre-
Quant to capture and amplify significant multi-periodicity.
5.3 Effects of Frequency-Relation Encoder (Q2)
To demonstrate the dynamic adaptation effect of the Frequency-
Relation Encoder (FRE), we investigate the frequency intensity
𝜓𝑘
𝑖=Í
𝑗𝑺𝑗,𝑘
𝑖, where 𝑺𝑗,𝑘
𝑖denotes the attention score between the 𝑗-
th and𝑘-th complex features of the 𝑖-th asset, as defined in Eq. (10).
Figure 4 shows the changing frequency intensities for two assets,
Sony (SONY) and J.P. Morgan (JPM), across various time frames
within the U.S. market. Notably, the launch of a new game console
by Sony in early 2014 prompted a significant event, activating high-
frequency domain features in response to rapid price fluctuations.
Soon afterward, it shifted its attention towards low-frequency do-
main features, reflecting settled market conditions. Similarly, the
decision by the United Kingdom to exit the European Union (Brexit)
in June 2016 led to heightened price volatility, impacting financial
institutions like J.P. Morgan. Consequently, both assets exhibited
changes in frequency intensities during these periods, effectively
capturing evolving market conditions.
Furthermore, Figure 5 provides illustrative examples of height-
ened frequency features through the FRE. The attention scores
depicted exhibit a systematic arrangement, with specific features
emphasized by comparatively larger values, highlighting their im-
portance. While importance is generally distributed across both
low and high-frequency domain features, there are instances where
the most critical component is underlined, especially when distinct
patterns emerge and require focused attention.
5.4 Interpretation of Event-filters (Q3)
In Figure 6, we illustrate the appearance of the 𝑓-th learned event-
filters, ˜𝑴𝑖,𝑓∈C𝑇0, in each column. These event-filters are de-
signed to amplify significant frequency features derived from Multi-
frequency Decomposition, capturing pivotal recurrences of the as-
sets. As a result, the learned event-filters inherently represent the
overarching patterns exhibited by the assets. To visualize this in a
comprehensible form, we transform the originally existing event-
filters in the frequency domain (red) to the time domain (blue)
through the Inverse-DFT (IDFT). In the frequency domain, the mag-
nitude of event-filters, 𝝆𝑓=|˜𝑴𝑖,𝑓|, readily shows which frequency
features are amplified and focused on the most. Subsequently, the
 
1218FreQuant: A Reinforcement-Learning based Adaptive Portfolio Optimization with Multi-frequency Decomposition KDD ’24, August 25–29, 2024, Barcelona, Spain.
Table 3: Training statistics with and without Predefined Periodicity Guidance (PPG) in Eq. (17). The values indicate mean
cumulative reward followed by reward variance during the respective training episodes.
Dataset U
.S. stock market KR
stock market Cr
ypto market CN
stock market JP
stock market U
.K. stock market
Episo
de FQ FQ-PPG FQ FQ-PPG FQ FQ-PPG FQ FQ-PPG FQ FQ-PPG FQ FQ-PPG
1-10 -0.5(1.3) -1.2(2.7) 0.6(1.5) -0.1(2.7) -0.2(1.3) -0.4(1.6) -1.1(0.3) -1.0(0.3) -0.7(0.2) -1.2(0.4) -0.4(1.0) -0.5(1.2)
11-20 3.1(0.7) 0.1(3.5) 1.9(0.8) 0.3(1.8) 1.1(1.9) 1.0(4.3) 0.4(0.5) 0.5(0.8) 0.6(0.3) 1.6(5.2) 1.2(0.1) 1.7(0.5)
21-30 3.7(0.4) 1.7(4.7) 4.0(0.6) 0.6(1.0) 2.8(0.9) 1.3(2.7) 2.7(0.3) 2.6(0.4) 2.3(2.5) 8.2(0.8) 2.0(0.2) 1.9(0.3)
31-40 5.2(0.6) 3.8(2.9) 6.6(2.0) 3.0(2.1) 3.1(0.5) 1.5(3.1) 4.7(0.3) 3.8(0.3) 9.1(1.0) 8.3(2.1) 2.3(0.1) 2.0(0.7)
/uni00000036/uni0000000f/uni00000034/uni0000000f/uni00000001/uni0000004e/uni00000042/uni00000053/uni0000004c/uni00000046/uni00000055/uni00000001/uni0000003c/uni00000013/uni0000000f/uni00000016/uni00000006/uni0000003e /uni00000024/uni00000053/uni0000005a/uni00000051/uni00000055/uni00000050/uni00000001/uni0000004e/uni00000042/uni00000053/uni0000004c/uni00000046/uni00000055/uni00000001/uni0000003c/uni00000016/uni0000000f/uni00000016/uni00000006/uni0000003e /uni0000002c/uni00000033/uni00000001/uni0000004e/uni00000042/uni00000053/uni0000004c/uni00000046/uni00000055/uni00000001/uni0000003c/uni00000014/uni0000000f/uni00000016/uni00000006/uni0000003e/uni0000000e/uni00000013/uni00000011/uni00000011/uni00000013/uni00000011/uni00000015/uni00000011/uni00000017/uni00000011/uni00000035/uni00000050/uni00000055/uni00000042/uni0000004d/uni00000001/uni00000033/uni00000042/uni00000055/uni00000046/uni00000001/uni00000050/uni00000047/uni00000001/uni00000033/uni00000046/uni00000055/uni00000056/uni00000053/uni0000004f/uni00000001/uni00000009/uni00000006/uni0000000a/uni00000027/uni00000053/uni00000046/uni00000032/uni00000056/uni00000042/uni0000004f/uni00000055/uni00000001/uni00000009/uni00000051/uni00000053/uni00000050/uni00000051/uni00000050/uni00000054/uni00000046/uni00000045/uni0000000a /uni00000025/uni00000046/uni00000046/uni00000051/uni00000035/uni00000053/uni00000042/uni00000045/uni00000046/uni00000053 /uni0000002e/uni00000046/uni00000055/uni00000042/uni00000035/uni00000053/uni00000042/uni00000045/uni00000046/uni00000053 /uni00000022/uni0000004d/uni00000051/uni00000049/uni00000042/uni00000034/uni00000055/uni00000050/uni00000044/uni0000004c+16.9%p+49.3%p+24.4%p
Figure 7: The total rate of returns achieved on days with
significant market shifts. The values next to the market type
indicate the cut-off points used for identifying market shifts.
partial time domain sequence represented by IDFT(˜𝑴𝑖,𝑓)depicts
the targeted periodical patterns of price signals that the event-filters
aim to amplify. The figure reveals the event-filters’ focus on a spec-
trum of periodic patterns, ranging from fundamental patterns to
arbitrarily trained complex patterns shared among the assets. This
affirms the ability of FreQuant to incorporate not only fundamen-
tal periodic patterns but also multi-periodic patterns.
5.5 Empirical Validation of the Robustness (Q4)
In Figure 7, we validate the robustness of FreQuant using real-
market data by identifying periods with significant market shifts
via quantile-based outlier detection. Specifically, we formulate a
probability density function, denoted as 𝑃, which describes the
distribution of the rate of change 𝑋in the market index, expressed
on a percentage scale. The critical cut-off point 𝑑is set where
1−𝑃(−𝑑<𝑋≤𝑑)=0.1, indicating the 10th percentile of market
index rate changes. Dates with absolute changes exceeding 𝑑were
marked as high fluctuation dates, implying sudden market shifts.
We compare total rate of returns across different DRL-based mod-
els on these dates, with results confirming FreQuant’s superior
performance and resilience during abrupt market shifts.
In addition, for the regularization term introduced in Eq. (17),
we conducted experiments to evaluate the impact of Predefined
Periodicity Guidance (PPG) on learning stability by comparing the
model’s training statistics with and without PPG across several
episodes. In Table 3, the values are represented by 𝜇(𝜎2);𝜇indicate
the mean cumulative reward, while 𝜎2represents its variance. FQ
refers to our proposed method FreQuant, incorporating PPG, and
FQ-PPG denotes FreQuant without PPG by setting 𝜆=0in Eq.
(18). Results indicate that FQ with PPG consistently shows lower
variance than FQ-PPG, demonstrating PPG’s role in stabilizing
learning and confirming its significant contribution.
5.6 Case Study in Adaptive Positioning (Q5)
We conduct case studies on two cryptocurrencies, Bitcoin and Holo,
throughout a designated test period to evaluate the adaptive ca-
pability of FreQuant in reallocating weights in response to price
movements. Figure 8 illustrates the price dynamics of these assets
-0.10-0.050.000.050.10
Portfolio WeightBitcoin Weight Holo Weight
2022-01-02 2022-01-18 2022-02-03 2022-02-200.960.970.980.991.00Normalized Price
Bitcoin HoloFigure 8: Price fluctuations and changes in their weights of
Bitcoin and Holo in the cryptocurrency market dataset. The
line chart shows the normalized price, while the bar chart dis-
plays portfolio weights. We mark and color instances when-
ever the sign of the weight matches the price movement on
the following day.
alongside their weight adjustments during this period. Notably, Fre-
Quant demonstrates an ability to make independent investment
decisions for each asset, not overly reliant on broader market trends.
This indicates that while an influential asset like Bitcoin might de-
termine the overall market trend, individual assets possess distinct
behaviors based on their unique circumstances. Consequently, as-
sets do not uniformly follow a single investment direction; instead,
they are capable of adopting strategies contrary to prevailing mar-
ket trends, based on awareness of their distinct conditions. This
confirms FreQuant’s adaptive positioning in the face of market
fluctuations, highlighting its refined approach to portfolio optimiza-
tion problem in volatile environments.
6 CONCLUSION
In this paper, we introduce FreQuant, a DRL-based method for
adaptive portfolio optimization that exploits DFT-derived frequency
features to capture both prevalent and abrupt events. FreQuant
employs the Frequency State Encoder for asset representation, adap-
tively highlighting frequency features. The Portfolio Generator
generates an optimal portfolio by modeling asset interrelation-
ships. Comparative assessments show the state-of-the-art perfor-
mance of FreQuant on multiple datasets for profit and risk cri-
teria. Visualization of the Frequency-Relation Encoder’s attention
map demonstrates dynamic highlighting of key frequency features.
These findings underscore the effectiveness of incorporating fre-
quency features in addressing the portfolio optimization problem.
Future works include integrating diverse market and asset features.
ACKNOWLEDGMENTS
This work was supported by DeepTrade Technologies Inc. U Kang
is the corresponding author.
 
1219KDD ’24, August 25–29, 2024, Barcelona, Spain. Jihyeong Jeon, Jiwon Park, Chanhee Park, and U Kang
REFERENCES
[1]Carlo Altavilla, Luca Brugnolini, Refet S Gürkaynak, Roberto Motto, and Giuseppe
Ragusa. 2019. Measuring euro area monetary policy. Journal of Monetary Eco-
nomics 108 (2019), 162–179.
[2]Vitor Azevedo and Christopher Hoegner. 2023. Enhancing stock market anom-
alies with machine learning. Review of Quantitative Finance and Accounting 60, 1
(2023), 195–230.
[3]Jimmy Lei Ba, Jamie Ryan Kiros, and Geoffrey E Hinton. 2016. Layer normaliza-
tion. arXiv preprint arXiv:1607.06450 (2016).
[4]Shaojie Bai, J Zico Kolter, and Vladlen Koltun. 2018. An empirical evaluation
of generic convolutional and recurrent networks for sequence modeling. arXiv
preprint arXiv:1803.01271 (2018).
[5]L. Blume and D. Easley. 1992. Evolution and market behavior. Journal of Economic
Theory 58 (1992), 9–40. https://doi.org/10.1016/0022-0531(92)90099-4
[6]James W Cooley and John W Tukey. 1965. An algorithm for the machine cal-
culation of complex Fourier series. Mathematics of computation 19, 90 (1965),
297–301.
[7]Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. 2018. Bert:
Pre-training of deep bidirectional Transformers for language understanding.
arXiv preprint arXiv:1810.04805 (2018).
[8]Andrea Flori, S. Giansante, C. Girardone, and F. Pammolli. 2019. Banks’ business
strategies on the edge of distress. Annals of Operations Research 299 (2019),
481–530. https://doi.org/10.1007/s10479-019-03383-z
[9]Scott Fujimoto, Herke van Hoof, and David Meger. 2018. Addressing Function
Approximation Error in Actor-Critic Methods. In International Conference on
Machine Learning. https://api.semanticscholar.org/CorpusID:3544558
[10] Siyu Gao, Yunbo Wang, and Xiaokang Yang. 2023. Stockformer: Learning hybrid
trading machines with predictive coding. In Proceedings of the Thirty-Second
International Joint Conference on Artificial Intelligence, IJCAI-23. 4766–4774.
[11] Ramazan Gençay, Faruk Selçuk, and Brandon J Whitcher. 2001. An introduction
to wavelets and other filtering methods in finance and economics. Elsevier.
[12] Tuomas Haarnoja, Aurick Zhou, P. Abbeel, and Sergey Levine. 2018. Soft Actor-
Critic: Off-Policy Maximum Entropy Deep Reinforcement Learning with a Sto-
chastic Actor. ArXiv abs/1801.01290 (2018). https://api.semanticscholar.org/
CorpusID:28202810
[13] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. 2016. Deep residual
learning for image recognition. In Proceedings of the IEEE conference on computer
vision and pattern recognition. 770–778.
[14] Akira Hirose. 2012. Complex-valued neural networks. Vol. 400. Springer Science
& Business Media.
[15] Jonathan Ho, Ajay Jain, and Pieter Abbeel. 2020. Denoising diffusion probabilistic
models. Advances in neural information processing systems 33 (2020), 6840–6851.
[16] Thomas Hollis, Antoine Viscardi, and Seung Eun Yi. 2018. A comparison of
LSTMs and attention mechanisms for forecasting financial time series. arXiv
preprint arXiv:1812.07699 (2018).
[17] Harrison Hong and Jiang Wang. 2000. Trading and returns under periodic market
closures. The Journal of Finance 55, 1 (2000), 297–354.
[18] Min Hou, Chang Xu, Yang Liu, Weiqing Liu, Jiang Bian, Le Wu, Zhi Li, Enhong
Chen, and Tie-Yan Liu. 2021. Stock trend prediction with multi-granularity
data: A contrastive learning approach with adaptive fusion. In Proceedings of
the 30th ACM International Conference on Information & Knowledge Management.
700–709.
[19] Narasimhan Jegadeesh and Sheridan Titman. 1993. Returns to buying winners
and selling losers: Implications for stock market efficiency. The Journal of finance
48, 1 (1993), 65–91.
[20] Zhengyao Jiang, Dixing Xu, and Jinjun Liang. 2017. A deep reinforcement
learning framework for the financial portfolio management problem. arXiv
preprint arXiv:1706.10059 (2017).
[21] Alex Krizhevsky, Ilya Sutskever, and Geoffrey E Hinton. 2012. Imagenet classifi-
cation with deep convolutional neural networks. Advances in neural information
processing systems 25 (2012).
[22] Yann LeCun, Yoshua Bengio, and Geoffrey Hinton. 2015. Deep learning. nature
521, 7553 (2015), 436–444.
[23] Timothy P Lillicrap, Jonathan J Hunt, Alexander Pritzel, Nicolas Heess, Tom Erez,
Yuval Tassa, David Silver, and Daan Wierstra. 2015. Continuous control with
deep reinforcement learning. arXiv preprint arXiv:1509.02971 (2015).
[24] Volodymyr Mnih, Koray Kavukcuoglu, David Silver, Andrei A. Rusu, Joel Veness,
Marc G. Bellemare, Alex Graves, Martin Riedmiller, Andreas K. Fidjeland, Georg
Ostrovski, Stig Petersen, Charles Beattie, Amir Sadik, Ioannis Antonoglou, Helen
King, Dharshan Kumaran, Daan Wierstra, Shane Legg, and Demis Hassabis. 2015.
Human-level control through deep reinforcement learning. Nature 518, 7540
(2015), 529–533.
[25] John Moody and Matthew Saffell. 1998. Reinforcement learning for trading.
Advances in Neural Information Processing Systems 11 (1998).
[26] Hui Niu, Siyuan Li, and Jian Li. 2022. MetaTrader: An Reinforcement Learning
Approach Integrating Diverse Policies for Portfolio Optimization. In Proceedings
of the 31st ACM International Conference on Information & Knowledge Management .1573–1583.
[27] Yong-chan Park, Jun-Gi Jang, and U Kang. 2021. Fast and accurate partial fourier
transform for time series data. In Proceedings of the 27th ACM SIGKDD Conference
on Knowledge Discovery & Data Mining. 1309–1318.
[28] James M Poterba and Lawrence H Summers. 1988. Mean reversion in stock prices:
Evidence and implications. Journal of financial economics 22, 1 (1988), 27–59.
[29] Juan Carlos Rodriguez. 2007. Measuring financial contagion: A copula approach.
Journal of empirical finance 14, 3 (2007), 401–423.
[30] Simone Scardapane, Steven Van Vaerenbergh, Amir Hussain, and Aurelio Uncini.
2018. Complex-valued neural networks with nonparametric activation functions.
IEEE Transactions on Emerging Topics in Computational Intelligence 4, 2 (2018),
140–150.
[31] Si Shi, Jianjun Li, Guohui Li, Peng Pan, and Ke Liu. 2021. Xpm: An explainable
deep reinforcement learning framework for portfolio management. In Proceedings
of the 30th ACM international conference on information & knowledge management .
1661–1670.
[32] David Silver, Guy Lever, Nicolas Heess, Thomas Degris, Daan Wierstra, and
Martin Riedmiller. 2014. Deterministic policy gradient algorithms. In International
conference on machine learning. Pmlr, 387–395.
[33] Yejun Soun, Jaemin Yoo, Minyong Cho, Jihyeong Jeon, and U Kang. 2022. Accurate
Stock Movement Prediction with Self-supervised Learning from Sparse Noisy
Tweets. In 2022 IEEE International Conference on Big Data (Big Data). IEEE, 1691–
1700.
[34] Shuo Sun, Molei Qin, Haochong Xia, Chuqiao Zong, Jie Ying, Yonggang Xie, Lingx-
uan Zhao, Xinrun Wang, Bo An, et al .2023. TradeMaster: A Holistic Quantitative
Trading Platform Empowered by Reinforcement Learning. In Thirty-seventh
Conference on Neural Information Processing Systems Datasets and Benchmarks
Track.
[35] Shuo Sun, Xinrun Wang, Wanqi Xue, Xiaoxuan Lou, and Bo An. 2023. Mastering
Stock Markets with Efficient Mixture of Diversified Trading Experts. In KDD.
ACM, 2109–2119.
[36] Shuo Sun, Wanqi Xue, Rundong Wang, Xu He, Junlei Zhu, Jian Li, and Bo An.
2022. DeepScalper: A Risk-Aware Reinforcement Learning Framework to Cap-
ture Fleeting Intraday Trading Opportunities. In Proceedings of the 31st ACM
International Conference on Information & Knowledge Management. 1858–1867.
[37] Christian Szegedy, Wei Liu, Yangqing Jia, Pierre Sermanet, Scott Reed, Dragomir
Anguelov, Dumitru Erhan, Vincent Vanhoucke, and Andrew Rabinovich. 2015.
Going deeper with convolutions. In Proceedings of the IEEE conference on computer
vision and pattern recognition. 1–9.
[38] Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones,
Aidan N Gomez, Łukasz Kaiser, and Illia Polosukhin. 2017. Attention is all
you need. Advances in neural information processing systems 30 (2017).
[39] Daixin Wang, Zhiqiang Zhang, Yeyu Zhao, Kai Huang, Yulin Kang, and Jun Zhou.
2023. Financial Default Prediction via Motif-preserving Graph Neural Network
with Curriculum Learning. In Proceedings of the 29th ACM SIGKDD Conference
on Knowledge Discovery and Data Mining. 2233–2242.
[40] Haozhe Wang, Chao Du, Panyan Fang, Li He, Liang Wang, and Bo Zheng.
2023. Adversarial Constrained Bidding via Minimax Regret Optimization with
Causality-Aware Reinforcement Learning. In KDD. ACM, 2314–2325.
[41] Heyuan Wang, Tengjiao Wang, Shun Li, Jiayi Zheng, Shijie Guan, and Wei Chen.
2022. Adaptive Long-Short Pattern Transformer for Stock Investment Selection.
InProc. 31st Int. Joint Conf. Artif. Intell. 3970–3977.
[42] Heyuan Wang, Tengjiao Wang, and Yi Li. 2020. Incorporating expert-based
investment opinion signals in stock prediction: A deep learning framework. In
Proceedings of the AAAI Conference on Artificial Intelligence, Vol. 34. 971–978.
[43] Jingyuan Wang, Yang Zhang, Ke Tang, Junjie Wu, and Zhang Xiong. 2019. Al-
phastock: A buying-winners-and-selling-losers investment strategy using in-
terpretable deep reinforcement attention networks. In Proceedings of the 25th
ACM SIGKDD international conference on knowledge discovery & data mining.
1900–1908.
[44] Rundong Wang, Hongxin Wei, Bo An, Zhouyan Feng, and Jun Yao. 2021. Com-
mission fee is not enough: A hierarchical reinforced framework for portfolio
management. In Proceedings of the AAAI Conference on Artificial Intelligence,
Vol. 35. 626–633.
[45] Zhicheng Wang, Biwei Huang, Shikui Tu, Kun Zhang, and Lei Xu. 2021. Deep-
Trader: a deep reinforcement learning approach for risk-return balanced portfolio
management with market conditions Embedding. In Proceedings of the AAAI
Conference on Artificial Intelligence, Vol. 35. 643–650.
[46] Mengyuan Yang, Xiaolin Zheng, Qianqiao Liang, Bing Han, and Mengying Zhu.
2022. A Smart Trader for Portfolio Management based on Normalizing Flows.
IJCAI.
[47] Yunan Ye, Hengzhi Pei, Boxin Wang, Pin-Yu Chen, Yada Zhu, Ju Xiao, and Bo Li.
2020. Reinforcement-learning based portfolio management with augmented asset
movement prediction states. In Proceedings of the AAAI conference on artificial
intelligence, Vol. 34. 1112–1119.
[48] Jaemin Yoo and U Kang. 2021. Attention-Based Autoregression for Accurate and
Efficient Multivariate Time Series Forecasting. In Proceedings of the 2021 SIAM
International Conference on Data Mining, SDM 2021, Virtual Event, April 29 - May
 
1220FreQuant: A Reinforcement-Learning based Adaptive Portfolio Optimization with Multi-frequency Decomposition KDD ’24, August 25–29, 2024, Barcelona, Spain.
1, 2021, Carlotta Demeniconi and Ian Davidson (Eds.). SIAM, 531–539.
[49] Jaemin Yoo, Yejun Soun, Yong-chan Park, and U Kang. 2021. Accurate multivariate
stock movement prediction via data-axis transformer with multi-level contexts.
InProceedings of the 27th ACM SIGKDD Conference on Knowledge Discovery &
Data Mining. 2037–2045.
[50] Liheng Zhang, Charu Aggarwal, and Guo-Jun Qi. 2017. Stock price prediction
via discovering multi-frequency trading patterns. In Proceedings of the 23rd ACM
SIGKDD international conference on knowledge discovery and data mining. 2141–
2149.
[51] Zihao Zhang, Stefan Zohren, and Stephen Roberts. 2020. Deep learning for
portfolio optimization. The Journal of Financial Data Science (2020).
[52] Lifan Zhao, Shuming Kong, and Yanyan Shen. 2023. DoubleAdapt: A Meta-
learning Approach to Incremental Learning for Stock Trend Forecasting. In KDD.
ACM, 3492–3503.
APPENDIX
A EXPERIMENT DETAILS
A.1 Detailed Experimental Setup
The search space and values of the hyperparameters used in Fre-
Quant are summarized in Table 4. Besides the hyperparameters
shared across the datasets in Table 4, we set the number of invested
assets in the portfolio ( |G|) as40,80,16,14,25, and 10for the U.S.,
KR, Crypto, CN, JP, and U.K. market datasets, respectively. These
numbers are determined depending on the number of available
assets to invest in the respective markets. The transaction fee rates
for closing long ( 𝑓𝑙) and short (𝑓𝑠) positions are set to 0.0033=0.33%
and0.004=0.4%, respectively. Oftentimes, the transaction fee rate
for the closing short positions is higher than that for long positions,as the trading market treats the short position as a borrowed asset
(before realization), hence the interest rate is applied and induced
higher fee rate. While we constrain the sum of the absolute weights
to be 1 (e.g., invest only what we have), in some other works, the
settings may be extended to borrowing assets for short investments,
allowing the sum of the absolute weights to exceed 1.
All experiments were conducted on a workstation equipped with
a GTX 1080 Ti.
Table 4: The search space and the values of the hyperparam-
eters used in FreQuant.
Hyp
erparameter Sear
ch Space V
alue
A
ctor learning rate ( 𝛼𝜃𝜇)[5×10−5,1×10−3]1×10−4
Critic
learning rate ( 𝛼𝜃𝑄)[5×10−5,1×10−3]5×10−5
Regularization
coefficient (𝜆)[1×10−3,1] 5×10−1
Fe
e rate for long positions ( 𝑓𝑙)− 0.33%
Fe
e rate for short positions ( 𝑓𝑠)− 0.4%
Windo
w size (𝑇) [64−378] 256
Buffer
limit [5,000−100,000] 10,000
Batch
size (𝐵) [8−32] 8
Soft-up
date rate (𝜏)[1×10−3,1×10−1]1×10−2
Discount
factor (𝛾)(0,1] 0.99
#
of episode (𝐸) [50,1000] 150
#
of units in MEFN ( 𝐼)[1−4] 2
#
of FSE block ( 𝑀)[1−4] 4
1×1-conv
feature maps (𝐹 0)[5−32] 10
Conv1d
feature maps (𝐹 𝑖)[5−64] 16
CTE
linear projection dim ( 𝑑𝑘)[32−256] 64
#
of event-filters ( 𝑢𝑖)[1−10] 5
#
of predefined periodicities ( 𝜂)[5−10] 10
 
1221