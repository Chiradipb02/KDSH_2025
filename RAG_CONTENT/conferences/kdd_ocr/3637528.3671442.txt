Practical Machine Learning for Streaming Data
Heitor Murilo Gomes*
School of Engineering and Computer Science
Victoria University of Wellington
Wellington, New Zealand
heitor.gomes@vuw.ac.nzAlbert Bifet
AI Institute, University of Waikato
LTCI, Télécom Paris, IP Paris
Hamilton, New Zealand
abifet@waikato.ac.nz
ABSTRACT
Machine Learning for Data Streams has been an important area of
research since the late 1990s, and its usage in industry has grown
significantly over the last few years. However, there is still a gap
between the cutting-edge research and the tools that are readily
available, which makes it challenging for practitioners, including
experienced data scientists, to implement and evaluate these meth-
ods in this complex domain. Our tutorial aims to bridge this gap
with a dual focus. We will discuss important research topics, such as
partially delayed labeled streams, while providing practical demon-
strations of their implementation and assessment using CapyMOA,
an open-source library that provides efficient algorithms implemen-
tations through a high-level Python API. Source code is available
in https://github.com/adaptive-machine-learning/CapyMOA while
the accompanying tutorials and installation guide are available in
https://capymoa.org/.
CCS CONCEPTS
•Computing methodologies →Online learning settings; •
Information systems →Data stream mining.
KEYWORDS
Data Streams, Concept Drift, Semi-Supervised Learning, Classifica-
tion, Regression, Prediction Intervals
ACM Reference Format:
Heitor Murilo Gomes* and Albert Bifet. 2024. Practical Machine Learning
for Streaming Data. In Proceedings of the 30th ACM SIGKDD Conference
on Knowledge Discovery and Data Mining (KDD ’24), August 25–29, 2024,
Barcelona, Spain. ACM, New York, NY, USA, 2 pages. https://doi.org/10.1145/
3637528.3671442
1 TUTORIAL OVERVIEW
In this tutorial, our aim is to familiarize participants with the applica-
tion of various machine-learning tasks to streaming data. Alongside
providing an introductory overview outlining the typical super-
vised learning cycle (classification and regression), we direct our
attention to challenges such as:
•Prediction Intervals for regression tasks
∗Corresponding author.
Permission to make digital or hard copies of part or all of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for third-party components of this work must be honored.
For all other uses, contact the owner/author(s).
KDD ’24, August 25–29, 2024, Barcelona, Spain
©2024 Copyright held by the owner/author(s).
ACM ISBN 979-8-4007-0490-1/24/08
https://doi.org/10.1145/3637528.3671442•Concept drift detection, visualization and evaluation
•Modelling and addressing partially and delayed labeled
data streams using semi-supervised learning
•The idiosyncrasies of applying and evaluating clustering
andanomaly detection algorithms on streaming data
1.1 Tools and Programming Language
The tutorial is divided into three parts. Each part will be illustrated
through Python examples, even though we will discuss Java imple-
mentations the attendees are not expected to have any knowledge
of Java. Our objective is for attendees to exit the tutorial equipped
with the ability to utilize all the algorithms introduced and possess a
clear comprehension of their practical functioning. To facilitate this
understanding, we have streamlined the presentation to feature key
algorithms per task, thus allowing us to delve beyond theoretical
aspects and concentrate on the practical aspects. The following
tools will be used during the tutorial:
•MOA Massive Online Analysis framework [4]. MOA
is a machine learning framework tailored for data streams,
boasting an extensive library of algorithms for a variety
of tasks. MOA’s implementation in Java poses a significant
challenge for many newcomers due to its complexity.
•CapyMOA (www.capymoa.org). CapyMOA is a new open-
source project offering a high-level Python API for stream
learning algorithms. Its primary advantage lies in the acces-
sibility of Python-based API, providing both efficiency and
flexibility.
To streamline the setup process, attendees can follow the instruc-
tions to install CapyMOA here https://capymoa.org/installation.
html.
2 TUTORIAL OUTLINE
(1) Supervised learning (Classification and Regression)
(2) Concept drift (Detection, Simulation and Evaluation)
(3)Unsupervised learning (Clustering) and Anomaly Detection
(4)Partially and delayed labeled data (Semi-supervised learning)
2.1 Supervised Learning
We will introduce through examples the supervised setting for data
stream classification and regression. This includes evaluation proce-
dures, the learning cycle, and algorithms. Additionally, we will illus-
trate how prediction intervals can augment the interpretability and
confidence of streaming regression algorithms. The key algorithms
discussed in this part will include Hoeffding Trees [ 6], PLASTIC [ 9],
Streaming Gradient Boosted Trees (SGBT) [ 8], Self-Optimising K-
Nearest Leaves (SOKNL) [ 12] and ADAptive Prediction Interval
(ADAPI) [13].
6418
KDD ’24, August 25–29, 2024, Barcelona, Spain Heitor Murilo Gomes and Albert Bifet
2.2 Concept Drift
We will discuss concept drift detection, showcasing methods for
visualization, and evaluation. Departing from the conventional
approach of regarding drift detectors solely as a component of
adaptive learning algorithms, we will also showcase their utility in
assessing the degradation of traditional machine learning pipelines,
and how they can be evaluated. The key algorithms discussed in-
clude the Adaptive Windowing algorithm [3] and STUDD [5].
2.3 Unsupervised learning and Anomaly
Detection
In this section, we will address the challenges related to clustering
and anomaly detection in a streaming context. For clustering, we
will delve into the concepts of microclusters, providing practical
examples of algorithm execution, visualization, and evaluation. For
anomaly detection, we will cover both classic and recent algorithms,
discussing their challenges and evaluation procedures. The key
algorithms discussed include CluStream [ 2], StreamKM++ [ 1], Half-
Space Trees [14] and Online Isolation Forest [11].
2.4 Partially and delayed labeled data
Finally, we will delve into the exploration of methods designed
to tackle the complexities of partially and delayed labeled data in
streaming environments. We will bridge the gap between theory
and how that can be translated into code, for example, the different
scenarios shown in a recent survey [ 7]. Moreover, we will illustrate
how evaluation can be conducted in such settings, where label-
ing ratios and delays may vary. We will use the basic algorithms
cluster-and-label and incremental self-training [ 10] to illustrate the
scenario.
3 SOCIETAL IMPACTS
Advanced data stream learning techniques offer alternative solu-
tions to complex issues such as real-time fraud detection, predictive
maintenance for critical infrastructure, and personalized health-
care monitoring. Providing practitioners and researchers with the
skills and tools to apply cutting-edge methods can enhance prac-
tices across industries. This can lead to more effective data stream
learning systems, benefiting sectors like finance, healthcare, and
telecommunications.
4 PRESENTERS’ BIOGRAPHY
Heitor Murilo Gomes is a senior lecturer at the Victoria Univer-
sity of Wellington (VuW) in New Zealand. Before joining VuW,
Heitor was a senior research fellow and co-director of the AI In-
stitute at the University of Waikato were he taught from 2020 to
2022 the “Data stream mining” course. His main research area is
the application of machine learning for data streams in a variety
of tasks. In his field, he has introduced innovative approaches to
ensemble learning, particularly focusing on regression and classifi-
cation tasks. His research has also delved into unsupervised drift
detection, clustering methods and the intersection of online contin-
ual learning and data streams. Additionally, he has authored several
survey papers. In 2023, he received a Marsden Grant from the New
Zealand government to conduct fundamental research on noveltheories and algorithms for partially delayed labeled streams. Fur-
thermore, Heitor has contributed to several open-source projects
like MOA (Massive Online Analysis) and recently lead the devel-
opment of CapyMOA (www.capymoa.org), a python library for
efficient stream learning.
Website: http://www.heitorgomes.com
Professor Albert Bifet is the Director of the Te Ipu o te Mahara
AI Institute at the University of Waikato and Co-chair of the Ar-
tificial Intelligence Researchers Association (AIRA). His research
focuses on Artificial Intelligence, Big Data Science, and Machine
Learning for Data Streams. He is leading the TAIAO Environmental
Data Science project and co-leading the open source projects MOA
(Massive On-line Analysis), StreamDM for Spark Streaming and
SAMOA (Scalable Advanced Massive Online Analysis). He is the co-
author of a book on Machine Learning from Data Streams published
at MIT Press. He is one of the winners of the best paper award at the
ACM Conference on Fairness, Accountability, and Transparency
(ACM FAccT) 2023, and he will be the general co-chair of the Euro-
pean Conference on Machine Learning and Principles and Practice
of Knowledge Discovery in Databases (ECML-PKDD) 2024.
Website: https://albertbifet.com/
REFERENCES
[1]Marcel R Ackermann, Marcus Märtens, Christoph Raupach, Kamil Swierkot,
Christiane Lammersen, and Christian Sohler. 2012. Streamkm++ a clustering
algorithm for data streams. Journal of Experimental Algorithmics 17 (2012), 2–1.
[2]Charu C Aggarwal, S Yu Philip, Jiawei Han, and Jianyong Wang. 2003. A frame-
work for clustering evolving data streams. In VLDB conference. Elsevier, 81–92.
[3]Albert Bifet and Ricard Gavalda. 2007. Learning from time-changing data with
adaptive windowing. In Proceedings of the 2007 SIAM international conference on
data mining. SIAM, 443–448.
[4]Albert Bifet, Ricard Gavalda, Geoffrey Holmes, and Bernhard Pfahringer. 2017.
Machine learning for data streams: with practical examples in MOA. MIT press.
[5]Vitor Cerqueira, Heitor Murilo Gomes, Albert Bifet, and Luis Torgo. 2023. STUDD:
A student–teacher method for unsupervised concept drift detection. Machine
Learning 112, 11 (2023), 4351–4378.
[6]Pedro Domingos and Geoff Hulten. 2000. Mining high-speed data streams. In
Proceedings of the sixth ACM SIGKDD international conference on Knowledge
discovery and data mining. 71–80.
[7]Heitor Murilo Gomes, Maciej Grzenda, Rodrigo Mello, Jesse Read, Minh Huong
Le Nguyen, and Albert Bifet. 2022. A survey on semi-supervised learning for
delayed partially labelled data streams. Comput. Surveys 55, 4 (2022), 1–42.
[8]Nuwan Gunasekara, Bernhard Pfahringer, Heitor Murilo Gomes, and Albert Bifet.
2024. Gradient Boosted Trees for Evolving Data Streams. In Machine Learning.
Springer.
[9]M. Heyden, H. M. Gomes, E. Fouché, B. Pfahringer, and K. Bohm. 2024. Leveraging
Plasticity in Incremental Decision Trees. In European Conference on Machine
Learning (ECML PKDD).
[10] Minh Huong Le Nguyen, Heitor Murilo Gomes, and Albert Bifet. 2019. Semi-
supervised learning over streaming data using MOA. In 2019 IEEE international
conference on big data (Big Data). IEEE, 553–562.
[11] Filippo Leveni, Guilherme Weigert Cassales, Bernhard Pfahringer, Albert Bifet,
and Giacomo Boracchi. 2024. Online Isolation Forest. In International Conference
on Machine Learning (ICML). Proceedings of Machine Learning Research (PMLR).
[12] Yibin Sun, Bernhard Pfahringer, Heitor Murilo Gomes, and Albert Bifet. 2022.
SOKNL: A novel way of integrating K-nearest neighbours with adaptive random
forest regression for data streams. Data Mining and Knowledge Discovery 36, 5
(2022), 2006–2032.
[13] Yibin Sun, Bernhard Pfahringer, Heitor Murilo Gomes, and Albert Bifet. 2024.
Adaptive Prediction Interval for Data Stream Regression. In PAKDD.
[14] Swee Chuan Tan, Kai Ming Ting, and Tony Fei Liu. 2011. Fast anomaly detection
for streaming data. In Twenty-second international joint conference on artificial
intelligence. Citeseer.
6419