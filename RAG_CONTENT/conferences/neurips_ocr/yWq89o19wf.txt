User-Creator Feature Polarization in Recommender
Systems with Dual Influence
Tao Lin∗
Harvard University
tlin@g.harvard.eduKun Jin∗
Google
kunjin@google.com
Andrew Estornell
ByteDance
andrew.estornell@bytedance.comXiaoying Zhang
ByteDance
zhangxiaoying.xy@bytedance.com
Yiling Chen
Harvard University
yiling@seas.harvard.eduYang Liu
University of California, Santa Cruz
yangliu@ucsc.edu
Abstract
Recommender systems serve the dual purpose of presenting relevant content to
users and helping content creators reach their target audience. The dual nature of
these systems naturally influences both users and creators: users’ preferences are
affected by the items they are recommended, while creators may be incentivized
to alter their content to attract more users. We define a model, called user-creator
feature dynamics, to capture the dual influence of recommender systems. We prove
that a recommender system with dual influence is guaranteed to polarize, causing
diversity loss in the system. We then investigate, both theoretically and empirically,
approaches for mitigating polarization and promoting diversity in recommender
systems. Unexpectedly, we find that common diversity-promoting approaches do
not work in the presence of dual influence, while relevancy-optimizing methods
like top- ktruncation can prevent polarization and improve diversity of the system.
1 Introduction
From restaurant selection, video watching, to apartment renting, recommender systems play a pivotal
role across a plethora of real-world domains. These systems match users with content they like, and
help creators (those producing the content) identify their target audiences. Nevertheless, behind such
success, concerns have emerged regarding possible harmful outcomes of recommender systems, in
particular, filter bubbles [32,5] and polarization [36] – outcomes with insufficient recommendation
diversity andcreation diversity . Recommendation diversity, meaning the diversity of the contents
recommended to a user, is key to users’ engagement and retention on the platform. Meanwhile,
creation diversity, meaning the variety of content created on the platform, is a determinant of the
platform’s long-term health. In extreme cases, insufficient creation diversity can lead to consensus or
polarization, where the latter can cause conflict and hatred, diminish people’s mutual understanding,
and cause societal crises. Therefore, from both business and social responsibility perspectives,
championing and improving diversity in recommender systems is equally important as optimizing
recommendation relevancy.
∗The first two authors contributed equally to this work. And this work was done when Kun was at TikTok.
38th Conference on Neural Information Processing Systems (NeurIPS 2024).There is increasing emphasis in academia and industry on investigating and improving the diversity
of recommender systems, combating filter bubbles and polarization. Popular diversity-boosting
approaches include applying post-processing procedures such as re-ranking [ 11,47] and setting
diversity-aware objectives in addition to relevance maximization [ 38,44,22,39,12]. These methods
aim to increase the recommendation diversity for users. Assuming that the contents on the platform
are static, these methods have been shown to bring diversity gain to the system.
However, an important aspect that is overlooked in the aforementioned approaches is that: users
and contents on a recommendation platform are not static entities – they can be influenced by
the recommendation made by the system. In content creation platforms like YouTube, TikTok,
and Twitter, recommendations naturally affect both content users and content creators. It is well
known that the exposure to recommended items can shift a user’s preference [ 24,26,14]. On the
other hand, the creators have the incentive to change their creation styles constantly to attract their
audience better (and to make more profits from the platform) [ 15,20,23]. While the effects of
recommendation on either users or creators have been investigated separately, to our knowledge no
previous work considers both effects. The dual influence of recommendation on users and creators
causes complicated dynamics where users and creators interact and their preferences evolve together.
Such evolution might exacerbate filter bubble and polarization effects. Whether the aforementioned
diversity-boosting approaches still work in a dynamic environment with dual influence is questionable.
Our contributions The first contribution of our work is to define a novel, natural dynamics model
that captures the dual influence of a recommender system on users and creators, which we call
user-creator feature dynamics (Section 2). We leverage the users’ and items’/creators’ embedding
vectors to represent their preferences and creation styles, and use cosine similarity to characterize the
relevance of creations and users’ interests (which is common in the recommender system literature
and practice). This model allows us to formally reason about the impact of various design choices on
the long-term diversity of a recommender system with dual influence.
Our second contribution is to demonstrate that, under realistic conditions, the user-creator feature
dynamics of any recommender system with dual influence must unavoidably converge to polarization
(Section 3), i.e., the preferences of users and the contents of creators will become tightly clustered
into two opposite groups, significantly reducing the diversity of the system. We demonstrate that this
phenomenon still occurs even after applying diversity-boosting interventions to the system.
Then, (in Section 4) we investigate some real-world designs of recommendation algorithms in order
to look for techniques that mitigate polarization. Interestingly, we find that some common efficiency-
improving methods, such as top- ktruncation, can both prevent the system from polarization and
improve the creation diversity. We also provide empirical results (Section 5) on both synthetic and
real-world (MovieLens) data. As predicted by our theory, we find that systems with dual influence
more easily converge to polarization under diversity-boosting designs, while efficiency-oriented and
relevance-optimizing designs can in fact improve the long-term diversity of the system. This could
explain why polarization does not always happen in reality. Section 6 concludes.
1.1 Related Work
Diversity in recommendations Diversity, filter bubbles, and polarization in recommendations have
been important research topics in recent years, and they are closely related concepts with different
focuses. On the one hand, filter bubbles are frequently defined as decreasing recommendation
diversity over time [ 5], which describes both the process and the outcome of insufficiently diverse
recommendations. On the other hand, polarization describes the negative outcome of insufficient
mutual understanding between people [ 36]. In content platforms, an example of polarization is people
creating content with strong agreement or disagreement with other content under the same topic, e.g.,
political opinions. To combat these negative outcomes, previous works propose diversity-boosting
approaches including re-ranking [ 11,47] and diversity-aware objective optimization [ 38,44,22,39,
12,45]. Despite having positive effects in situations where user preferences and creation styles are
fixed, these approaches overlooked the dynamic nature of recommender systems and our work shows
that certain approaches will make long-term outcomes worse under the dual influence.
Opinion dynamics Opinion dynamics study the effect of people exchanging opinions with others
on social networks [ 37,17,29,4]. Our model of a recommender system with dual influence on users
2and creators resembles a bipartite social network, and our conclusion that the system converges to
polarization is conceptually similar to people reaching consensus on social networks [1, 10, 31, 46].
However, the technique we use to prove our conclusion (absorbing Markov chain) significantly differs
from the main technique (stability of ODE) in the mentioned works.
Performative effects of recommender systems The phenomenon that predictive systems like
recommender systems can impact the individuals interacting with those systems (e.g., users and
creators) is related to the literature of performative prediction [ 34,18]. These impacts can be direct,
such as individuals ostensibly modifying their features in order to obtain more desirable outcomes
[27]. Prior works on the performative effects of recommender systems (e.g., [ 7,24,14,41,15,42,
35,20,3,43,2,23]) only consider one-sided impact, either on users or on creators. Differing from
them, our work studies two-sided impacts, i.e., on both users and creators. We provide a table to
compare our work with previous works in Appendix A.
2 Model: User-Creator Feature Dynamics
We define a dynamics model for user preferences and content/creator features in a recommender
system. Let Ut= [ut
j]m
j=1= [ut
1, . . . ,ut
m]∈Rd×mbe a population of musers and Vt= [vt
i]n
i=1=
[vt
1, . . . ,vt
n]∈Rd×nbe a population of ncreators at time t, where each vector ut
j,vt
i∈Sd−1
represent the preference/feature vector of each user and creator respectively, assumed to be on the
unit sphere Sd−1withℓ2-norm. Then (Ut,Vt)denotes the state of the dynamics at time t. The
dynamics evolve as follows at each time step t≥0:
1) Recommendation: Each user j∈[m]is recommended a creator, where creator i∈[n]is chosen
with a probability
pt
ij=pt
ij(Ut,Vt). (1)
While we allow a wide array of different functions pt
ij(·), a common example of such functions is the
so-called softmax function :
pt
ij= softmax( ut
j,Vt;β) =exp(β⟨ut
j,vt
i⟩)Pn
i=1exp(β⟨ut
j,vt
i⟩). (2)
A larger βmeans that the recommendation is more sensitive to the relevance of a creator to a user,
measured by ⟨ut
j,vt
i⟩.
2) User update: After recommendation, each user j∈[m]updates their feature vector ut
j, based on
which creator, say it
j, was recommended to them:
ut+1
j=P 
ut
j+ηuf(vt
it
j,ut
j)vt
it
j
. (3)
Here, ηu∈[0,1]is a parameter controlling the rate of update, f(vi,uj)is a function that quantifies
the impact of creator i’s content on user j(discussed in detail later), and P(x) =x
∥x∥2is the
projection back onto the unit sphere. Our user update model generalizes [ 14], which considers
ut+1
j=P(ut
j+ηu⟨vt
it
j,ut
j⟩vt
it
j), by replacing the inner product with a general function f.
3) Creator update: Creators also update their feature vectors based on which users are recommended
their content. For each creator i∈[n], letJt
i={j:it
j=i}be the set of users being recommended
creator i, thenvt
iis updated by:
vt+1
i=P
vt
i+ηc
|Jt
i|X
j∈Jt
ig(ut
j,vt
i)ut
j
, (4)
where ηc∈[0,1]is a parameter controlling the rate of update, and g(uj,vi)is a function that
quantifies the impact of user jon creator i.
Impact functions fandgOur results apply to any impact functions fandgthat satisfy the
following natural assumptions. First, f(vi,uj)and the inner product ⟨vi,uj⟩have the same sign:
f(vi,uj)is
>0if⟨vi,uj⟩>0
<0if⟨vi,uj⟩<0
= 0 if⟨vi,uj⟩= 0.This means that if a user likes the content ( ⟨vt
i,ut
j⟩>0), then the
3user vector ut
jwill be updated towards the direction of the creator vector vt
j. If the user dislikes the
content ( ⟨vt
i,ut
j⟩<0), then the user vector ut
jwill move away from vt
j. Such “biased assimilation”
user behavior is well documented in the literature [ 14]. Further, we assume upper and lower bounds
on|f|:
|f(vi,uj)| ≤1,|f(vi,uj)| ≥Lf>0whenever ⟨vi,uj⟩ ̸= 0.
The lower bound |f(vi,uj)| ≥Lfmeans that the exposure to an item that a user likes or dis-
likes always has some non-negligible impact on the user’s preference. For example, f(vi,uj) =
sign(⟨vi,uj⟩)a+b⟨vi,uj⟩satisfies both assumptions when Lf=a >0andb≥0.
Forg, likewise assume that its sign is the same as ⟨uj,vi⟩:g(uj,vi)is
>0if⟨uj,vi⟩>0
<0if⟨uj,vi⟩<0
= 0 if⟨uj,vi⟩= 0.Intuitively,
this captures the incentive of a creator who aims to maximize the average ratings from users who are
recommended their items. On video platforms for example, if the creators are rewarded based on
the average rating of their videos, they will try to reinforce their creation styles based on the users
who give positive feedback ( ⟨uj,vi⟩>0) so that their creations are more likely to be recommended
to those users. Meanwhile, the creators will also change their creation styles based on negative
feedback ( ⟨uj,vi⟩<0), but in the opposite direction of the negative-feedback users’ interests, so
that their creations are less likely to be recommended to those users. Taking both scenarios into
account, the creator moves towards the weighted average of user preferencesP
j∈Jt
ig(ut
j,vt
i)ut
j,
which is captured by our update rule (4). A particular example of gis the sign function g(uj,vi) =
sign(⟨uj,vi⟩)∈ {− 1,0,1}. We will only consider the sign function gin order to simplify the
theoretical presentation. We believe that all our results can be generalized to other gfunctions
satisfying similar conditions as f; the details are left as future work.
3 Unavoidable Polarization
Having defined the user-creator feature dynamics in a recommender system with dual influence,
we now theoretically study how such dynamics evolve. Our main result is: if every creator can
be recommended to every user with some non-zero probability, then the dynamics must eventually
polarize .
Definition 3.1 (consensus and bi-polarization) .LetR >0. The dynamics (Ut,Vt)is said to reach:
•R-consensus if there exists a vector c∈Rdsuch that every feature vector is R-close to c:
∀ut
j,∥ut
j−c∥2≤Rand∀vt
i,∥vt
i−c∥2≤R.
•R-bi-polarization if there exists a vector c∈Rdsuch that every feature vector is R-close to +c
or−c:∀ut
j,∥ut
j−c∥2≤Ror∥ut
j+c∥2≤R, and∀vt
i,∥vt
i−c∥2≤Ror∥vt
i+c∥2≤R.
The dynamics is said to reach (R,c)-consensus (or (R,c)-bi-polarization) if the dynamics reaches
R-consensus (or R-bi-polarization) with the vector c.
Consensus is any state where all users and creators have similar feature vectors (with maximum
difference R), implying that they have similar interests or preferences. Bi-polarization is any state
where all users and creators are clustered into two groups with exactly opposite features (e.g.,
Republicans vs Democrats). Mathematically, consensus is a special case of bi-polarization.
Proposition 3.2. Bi-polarization states are absorbing: once the dynamics reaches (R,c)-bi-
polarization with some R∈[0,1]andc∈Sd−1, it will satisfy (R,c)-bi-polarization forever.
The same holds for consensus.
A natural property of a recommender system is that every creator can be recommended to every
user with some non-zero probability: pt
ij≥p0>0with some constant p0. This is satisfied by the
softmax function, which is a rough model of real-world recommendation algorithms [ 13,26]:pt
ij=
exp(β⟨ut
j,vt
i⟩)Pn
i=1exp(β⟨ut
j,vt
i⟩)≥exp(−β)
nexp(β)=p0>0. Moreover, many large-scale real-world recomendation
systems (e.g., Yahoo! [ 28] and Kuaishou [ 16]) intentionally insert small random traffic attempting
to improve recommendation diversity or explore users’ interests [ 25,40], which will cause all
recommendation probabilities to be non-zero. We show in Theorem 3.3 that, however, a recommender
system satisfying pt
ij≥p0>0must converge to polarization, under some additional conditions on
the users’ and creators’ update rates:
4Theorem 3.3. Suppose g(uj,vi) = sign( ⟨uj,vi⟩), the update rates ηc≤ηuLf
2andηu<1
2, and the
recommendation probability pt
ij≥p0>0,∀i, j, t . Then, from almost all initial states, the dynamics
(Ut,Vt)will eventually reach R-consensus or R-bi-polarization for any R >0.
In other words, if the users’ and creators’ updates are not too fast and all recommendation probabilities
are non-zero, then all users and creators will eventually converge to at most two clusters (regardless
of the feature dimension d). Since creators in one cluster produce similar contents, users in such a
polarized system can never receive diverse recommendations. This means that the naïve attempt of
imposing pt
ij≥p0>0cannot improve the diversity of a recommender system with dual influence.
The conditions on the update rates ηu, ηcare only assumed to simplify the proof of Theorem 3.3. Our
experiments (in Section 5) will show that polarization still occurs even without those conditions.
Theorem 3.3 does not characterize the rate of convergence of the user-creator feature dynamics to
polarization, which we leave as an open question.
The proof of Theorem 3.3 is an absorbing Markov chain argument. It uses the following lemma:
Lemma 3.4. Suppose ηc≤ηuLf
2andηu<1
2. For any R > 0, for almost every state (Ut,Vt)in
the state space, there exists a path (Ut,Vt)→(Ut+1,Vt+1)→ ··· → (Ut+T,Vt+T)of finite
length that leads to an R-bi-polarization state (Ut+T,Vt+T).
The proof of this lemma (in Appendix F) is involved. It uses induction on the number of creators n.
The base case of n= 1is proved by a potential function argument. For n≥2, we first construct a
path that leads the subsystem ofn−1creators and all users to R-bi-polarization. Then, depending on
where the remaining creator is, we construct a sequence of recommendations that leads the remaining
creator to one of the two clusters formed by the n−1creators and all users. Such recommendations
will move some users out of the formed clusters, which requires extra care in the proof.
Proof of Theorem 3.3. For any state (Ut,Vt)in the state space, by Lemma 3.4 there exists a path
(Ut,Vt)→ ··· → (Ut+T,Vt+T)of length Tthat leads to R-bi-polarization. Because every
creator can be recommended to a user with probability at least p0, each transition (Ut′,Vt′)→
(Ut′+1,Vt′+1)happens with probability at least pm
0. So, the path of length Thas probability at least
pmT
0>0, and the probability that the dynamics does not reach R-bi-polarization after KT steps is at
most (1−pmT
0)K, which →0asK→ ∞ . Therefore, with probability 1the dynamics will reach
R-bi-polarization eventually.
4 Discussions on Real-World Designs
Next, we discuss how 4 types of real-world recommender system designs affect the user-creator
feature dynamics: top- ktruncation, threshold truncation, diversity-boosting, and uniform traffic.
(1) Top- kTruncation A prevalent practice in modern two-stage recommendation algorithms on
large-scale platforms, such as YouTube [ 13], is to first filter out items that are unlikely to be relevant
to a user, then make recommendations from the remaining items. In particular, we consider the top- k
truncation policy: for every user j, find the kmost relevant creators, namely, the kcreators whose
inner products with the user ⟨vt
i,ut
j⟩are largest (equivalently, the kcreators whose probabilities
pt
ijof being recommended to user jare highest), then recommend one of those kcreators to
userjwith probability proportional to pt
ij. The other creators will not be recommended. This
practice significantly reduces the computation cost and improves the relevancy of recommendations.
Interestingly, we show that such a practice also has the potential to improve the long-term diversity of
a recommender system with dual influence.
Definition 4.1 (clusters) .We say a state (Ut,Vt)forms qclusters if there exist c1, . . . ,cq∈Rd
and a small number R >0such that every feature vector is in the ℓ2ball of some ciwith radius R
(denoted by B(cℓ, R) ={x:∥x−cℓ∥2≤R}), and B(cℓ,2R)∩B(cℓ′,2R) =∅forℓ̸=ℓ′.
It is clear that consensus has a single cluster, and bi-polarization has two.
Proposition 4.2. With top- ktruncation, there exist states (Ut,Vt)that form ⌊n/k⌋clusters and are
absorbing (i.e., once the system forms ⌊n/k⌋clusters, it forms ⌊n/k⌋clusters forever).
5This result is in contrast with Theorem 3.3 which shows that a recommender system where every
creator can be recommended to every user ( pt
ij>0) is doomed to polarize. With top- ktruncation
where some pt
ij= 0, polarization can be avoided. Experiments in Section 5.3 support our prediction
that top- ktruncation can reduce polarization and improve diversity.
(2) Threshold Truncation Besides top- ktruncation, threshold truncation is another way to filter
out irrelevant creators: set a threshold τ∈[−1,1]such that any user-creator pair with inner product
⟨ui,vj⟩< τ is not recommended. A natural choice is τ= 0, meaning that users will not receive
recommendations predicted to be “disliked” by them. Increasing τis similar to increasing the βin
the softmax function, which improves recommendation relevance.
Proposition 4.3. Ind-dimensional feature space, if user-creator pairs with ⟨ui,vj⟩<0are not
recommended, then there exist stable states with d+ 1clusters.
Although truncation at τ= 0 allows stable states with d+ 1clusters to exist, the dynamics does
not necessarily converge to such states; it can still end up with stable states with fewer clusters. In
fact, experiments (in Appendix B.2) show that truncation at τ= 0 isnot good for diversity and
causes severe polarization, while truncation at a large threshold like τ= 0.707is better at reducing
polarization.
(3) Diversity Boosting Diversity boosting aims to explore users’ interests and improve users’
experience by diversifying recommendation. For example, when making recommendations, the
model optimizes the objective:
hrel(⟨ui,vj⟩) +ρhdiv(listi,vj), (5)
where hrel, hdivrewards the recommendation relevance and diversity respectively and listirecords
the recent list of recommended items to user i.hdivcan take a simple form ofP
j′∈listi1−
⟨vj′,vj⟩, andρ >0controls the strength of diversity-boosting. Despite being successful when users’
preferences and items are fixed, this design alone cannot prevent bi-polarization in our dual-influence
dynamics, since the conditions in Theorem 3.3 are still satisfied and the users’ and creators’ update
rules remain the same. Experiments in Section 5.2 support our claim.
(4) Uniform Traffic Adding a small fraction of uniform traffic to the personalized recommendations
is another method proposed in previous works to improve recommendation diversity or to explore
user preferences [ 25,16,9,8,30]. This method gives a non-zero lower bound on the probability of
every creator being recommended to every user. So, as a corollary of our Theorem 3.3, it causes a
recommender system with dual influence to polarize. Such an observation is striking as it demonstrates
that optimizing for recommendation diversity in a static setting can ultimately lead to a huge loss of
the system diversity in the long run.
5 Experiments
We present experimental results on the behavior of user-creator feature dynamics on synthetic data
and real-world (MovieLens 20M) data and the effect of top- ktruncation and threshold truncation on
the dynamics.
5.1 Synthetic Data Experiments
Setup The dynamics is initialized by randomly generating user and creator features on the unit
sphere in Rd. We pick d= 10 , number of creators n= 50 , number of users m= 100 . We use the
softmax recommendation probability function (2). We simulate the dynamics for T= 1000 steps,
repeated 100times each with a new initialization. We choose the sign impact function g(uj,vi) =
sign(⟨uj,vi⟩)for creator updates. For user updates, we choose inner product f(vi,uj) =⟨vi,uj⟩.
The inner product function is studied in previous works on users’ preference dynamics (but not
creators’) [ 14]. Note that the inner product does not satisfy the condition |f(vi,uj)| ≥Lfneeded in
Theorem 3.3. However, we still observe convergence to polarization in nearly all experiments. Thus,
even when this condition does not hold, users and creators still tend towards polarization in practice.
Three key parameters in our model are β(sensitivity of the softmax function), ηc(creator update
rate), and ηu(user update rate). We set them to β= 1, ηc=ηu= 0.1, and change one parameter at
6Figure 1: Snapshots of the dynamics simulated with the same initialization but different
recommendation sensitivity β. A larger βresulted in more clusters at time step t= 200 .
a time to see its effect on the dynamics. We also test what happens when some dimensions of the user
features are fixed features that are not updated.
Measures To quantify the behavior of the dynamics, given user and creator feature vectors (U,V)
we compute the following measures, which cover diversity, relevancy, and polarization of the system:
•Creator Diversity (CD): diversity of the creator features, measured by their average pairwise
distance [47, 33]: CD(V) =1
n(n−1)Pn
i=1P
j̸=i∥vi−vj∥.
•Recommendation Diversity (RD): diversity of the contents recommended to a user, measured by
the weighted variance of the contents: RD(U,V;β) =1
mPm
j=1Pn
i=1pij∥vi−vj∥2, where
vj=Pn
i=1pijviandpij=exp(β⟨uj,vi⟩)Pn
i=1exp(β⟨uj,vi⟩).
•Recommendation Relevance (RR): relevance of the contents recommended to a user, measured by
the weighted average of inner products: RR(U,V;β) =1
mPm
j=1Pn
i=1pij⟨uj,vi⟩.
•Tendency to Polarization (TP): This is a novel measure we propose to quantify how close the
system is to consensus or bi-polarization, measured by the average absolute inner products
between the creators: TP(V) =1
n2Pn
i=1Pn
k=1|⟨vi,vk⟩|.TP(V)being closer to 1 means that
the system is more polarized, because the term |⟨vi,vk⟩|is1iff the two vectors vi,vkare equal
or opposite to each other.
It is worth noting that a high creator diversity is necessary for simultaneously achieving high recom-
mendation relevance and high recommendation diversity. For example, they cannot be simultaneously
achieved in a polarized state.
Sensitivity Parameter βA larger βmeans that a user will be recommended more relevant con-
tent/creator with a higher probability. β= 0, on the other hand, means that the user receives uniform
recommendations across all creators. Our main observation from the experiments is: a larger β
leads to higher creator diversity and alleviated polarization in the long run .
Figure 1 shows snapshots of the dynamics at different time steps under different βvalues. Here, we
choose dimension d= 3instead of 10so the feature vectors can be visualized on a 3d sphere. We see
that the system tends to form more clusters at time t= 200 asβincreases.
Figure 2 shows the changes of the 4 measures CD, RD, RR, TP over time under different βvalues.
We see that a more diverse recommendation policy (a smaller β) leads to lower creator diversity and
a higher level of polarization in the long run. In particular, while Creator Diversity reaches a similar
level under different βin the end, it drops at a slower rate with a larger β(seeβ= 5,6). Moreover,
from the plot of Tendency to Polarization, we see that a larger βalleviates polarization, which means
improvement in the diversity of the whole system.
An explanation for our observation is the following: When βis smaller, each user receives more
uniform recommendations across all creators. So, for different creators, the sets of users recommended
7Figure 2: Changes of measures over time under different sensitivity parameter β, on synthetic data.
β= 0means uniform (non-personalized) recommendation. β=∞means hard-max recommenda-
tion: only recommend the single most relevant creator to a user. Larger βreduces the tendency to
polarization.
to those creators have larger intersections. Since the creator updates are based on the sets of
recommended users, different creators will be moving towards more similar directions. This leads to
faster polarization. One can also predict this observation from Theorem 3.3: when βis large, the
minimum recommendation probability p0of the softmax function tends to 0, so it might take a long
time for the system to converge to polarization, while with a small βthe system polarizes quickly.
Update Rates ηcandηuA larger ηcmeans that creator features are updated faster, and intuitively
should lead to faster polarization. This is validated in experiments: Figure 3 shows that a larger ηc
indeed causes more extreme polarization and lower diversity (both CD and RD). A larger ηumeans
that user features are updated faster. It has a similar effect of exacerbating polarization as ηcdoes, as
shown in Figure 4.
Figure 3: Changes of measures over time under different creator update rate ηc, on synthetic data
Figure 4: Changes of measures over time under different user update rate ηu, on synthetic data
Number of Fixed Dimensions We also consider the scenario where some dimensions of the user
feature vectors are fixed features and thus not updated from round to round (e.g., age, gender), which
is a realistic scenario. Detailed results are in Appendix B.1. The main observation is:as the number
of fixed dimensions increases, the diversity of the system improves and the degree of polarization
is reduced. This is similar to the effect of decreasing user update rate ηu. The observation that
8fixed dimensions of user features help to improve diversity might be a reason why the recommender
systems in practice are not as polarized as our theoretical prediction.
5.2 Real-World Data Experiments
In this part, we conduct experiments on the MovieLens 20M dataset [ 19]. We use a real-world two-
tower recommendation model with 16-dimensional tower tops as the user and creator embeddings
(Figure 9). The model is initialized by fitting a two-tower model [ 21] on the existing MovieLens
rating data and using the tower tops as the initial user and creator embeddings. Then we follow
Algorithm 1 to simulate the dynamics.
Figure 5 shows the effect of the recommendation sensitivity parameter βon the system. Similar to
the synthetic data experiments, a smaller β(more diverse recommendation for the users in the short
term) results in faster polarization. We note that the joint results on CD and TP are more informative
than each one alone: despite β= 0has a higher creator diversity than β= 2atT= 500 , the system
reaches polarization more quickly under β= 0. The higher creator diversity under β= 0is because
the two clusters in the bi-polarized state are more balanced so the average pairwise distance between
the creators is higher under β= 0than under β= 2.
Figure 6 shows the effect of using diversity-aware objective (Eq. 5) for diversity boosting. We
see that myopically promoting the short-term recommendation diversity (using a larger ρ) results a
higher creation diversity but also a higher tendency to polarization. A possible explanation for this
phenomenon is, similar to the case with β, the system polarizes into two balanced clusters which
actually have a large average pairwise distance. In this case, Tendency to Polarization is a better
measure for diversity loss than Creator Diversity (average pairwise distance).
Figure 5: Experiment on MovieLens 20M dataset under different recommendation sensitivity β
Figure 6: Experiment on MovieLens 20M dataset with diversity-aware objective under different ρ
5.3 Top- kTruncation and Threshold Truncation
We experimented with top- ktruncation on the synthetic data (Table 1) and the MovieLens dataset
(Appendix C). Our main observation is:a small kimproves the diversity of the recommender
system and reduces polarization . This is consistent with our theoretical prediction (Proposition 4.2).
However, there is a tradeoff between the diversity of recommendations to users (RD) and the diversity
of creations in the system (CD and TP). A top- ktruncation policy with small kis “not diverse” for
users because it exposes a user only to a small set of contents. However, such a policy can lead to a
more diverse outcome in the whole system. This tradeoff is worth further studying.
9Table 1: Diversity improvement by top- ktruncation on synthetic data
βkCreator Diversity Recommendation Diversity Recommendation Relevance Tendency to Polarization
150 1.00±.03 0.42±0.01 0.76±0.01 1.00±10−3
25 0.52±.32 0.03±0.03 0.97±0.02 0.91±0.13
20 0.91±.15 0.00±0.01 1.00±0.01 0.68±0.12
10 1.17±.06 0.00±10−3 1.00±10−3 0.50±0.07
5 1.31±.02 0.00±10−3 1.00±10−3 0.35±0.03
1 1.40±10−3 0.00±10−3 1.00±10−3 0.27±10−3
350 0.95±.14 0.02±0.02 0.99±0.01 0.91±0.10
25 0.80±.24 0.00±0.01 1.00±10−3 0.77±0.13
20 0.89±.13 0.00±10−3 1.00±10−3 0.74±0.11
10 1.18±.05 0.00±10−3 1.00±10−3 0.49±0.07
5 1.31±.02 0.00±10−3 1.00±10−3 0.34±0.03
1 1.40±10−3 0.00±10−3 1.00±10−3 0.27±10−3
We also experimented with threshold truncation on synthetic data (Appendix B.2) and MovieLens
data (Appendix C). The effect of a large truncation threshold τis similar to the effect of a small kin
top-ktruncation.
6 Conclusion
Our work defines a dynamics model to capture the dual influence of recommender systems on user
preferences and content creation. Although our model is a theoretical abstraction, we believe that
it captures the essence of a real-world recommender system, and our effort is an important initial
endeavor to study diversity in recommender systems with dual influence. (See Appendix H for some
additional discussions on real-world recommender systems.) We specifically point out different
concepts of diversity in recommender systems (creation diversity, recommendation diversity, and
tendency to polarization) and provide theoretical and empirical evidences to show that, due to dual in-
fluence, myopically optimizing recommendation diversity might hurt the long-term creation diversity
and result in polarization of the system. We also explore popular design choices in recommender
systems and show an interesting and somewhat counter-intuitive result that designs purely targeting
efficiency improvement (e.g., top- ktruncation) can alleviate polarization. We believe that the insights
from our work are valuable to building healthy and sustainable recommender systems, and our results
can inspire more sophisticated solutions for improving the long-term diversity of recommender
systems to be developed.
References
[1]Daron Acemo ˘glu, Giacomo Como, Fabio Fagnani, and Asuman Ozdaglar. Opinion fluctuations
and disagreement in social networks. Mathematics of Operations Research , 38(1):1–27, 2013.
ISSN 0364765X, 15265471. URL http://www.jstor.org/stable/23358646 .
[2]Krishna Acharya, Varun Vangala, Jingyan Wang, and Juba Ziani. Producers equilibria and
dynamics in engagement-driven recommender systems. arXiv preprint arXiv:2401.16641 , 2024.
[3]Arpit Agarwal and William Brown. Online recommendations for agents with discounted
adaptive preferences. arXiv preprint arXiv:2302.06014 , 2023.
[4]Claudio Altafini and Gabriele Lini. Predictable dynamics of opinion forming for networks with
antagonistic interactions. IEEE Transactions on Automatic Control , 60(2):342–357, 2015. doi:
10.1109/TAC.2014.2343371.
[5]Guy Aridor, Duarte Goncalves, and Shan Sikdar. Deconstructing the filter bubble: User
decision-making recommender systems. In Proceedings of the 14th ACM Conference on
Recommender Systems , RecSys ’20, page 82–91, New York, NY , USA, 2020. Association
for Computing Machinery. ISBN 9781450375832. doi: 10.1145/3383313.3412246. URL
https://doi.org/10.1145/3383313.3412246 .
10[6]Nikhil Bansal and Anupam Gupta. Potential-Function Proofs for Gradient Methods. The-
ory of Computing , 15(4):1–32, 2019. doi: 10.4086/toc.2019.v015a004. URL https:
//theoryofcomputing.org/articles/v015a004 . Publisher: Theory of Computing.
[7]Omer Ben-Porat and Moshe Tennenholtz. A game-theoretic approach to recommendation
systems with strategic content providers. Advances in Neural Information Processing Systems ,
31, 2018.
[8]Stephen Bonner and Flavian Vasile. Causal embeddings for recommendation. In Proceedings
of the 12th ACM Conference on Recommender Systems , pages 104–112, Vancouver British
Columbia Canada, September 2018. ACM. ISBN 978-1-4503-5901-6. doi: 10.1145/3240323.
3240360. URL https://dl.acm.org/doi/10.1145/3240323.3240360 .
[9]Christian Borgs, Jennifer Chayes, Christian Ikeokwu, and Ellen Vitercik. Bursting the Filter
Bubble: Disincentivizing Echo Chambers in Social Networks. In Proceedings of EAAMO’23:
ACM Conference on Equity and Access in Algorithms, Mechanisms, and Optimization , 2023.
[10] Marco Caponigro, Anna Chiara Lai, and Benedetto Piccoli. A nonlinear model of opinion
formation on the sphere. Discrete & Continuous Dynamical Systems - A , 35(9):4241–4268,
2015. ISSN 1553-5231. doi: 10.3934/dcds.2015.35.4241. URL http://aimsciences.org/
/article/doi/10.3934/dcds.2015.35.4241 .
[11] Jaime Carbonell and Jade Goldstein. The use of mmr, diversity-based reranking for reordering
documents and producing summaries. In Proceedings of the 21st Annual International ACM
SIGIR Conference on Research and Development in Information Retrieval , SIGIR ’98, page
335–336, New York, NY , USA, 1998. Association for Computing Machinery. ISBN 1581130155.
doi: 10.1145/290941.291025. URL https://doi.org/10.1145/290941.291025 .
[12] Peizhe Cheng, Shuaiqiang Wang, Jun Ma, Jiankai Sun, and Hui Xiong. Learning to recommend
accurate and diverse items. In Proceedings of the 26th International Conference on World Wide
Web, WWW ’17, page 183–192, Republic and Canton of Geneva, CHE, 2017. International
World Wide Web Conferences Steering Committee. ISBN 9781450349130. doi: 10.1145/
3038912.3052585. URL https://doi.org/10.1145/3038912.3052585 .
[13] Paul Covington, Jay Adams, and Emre Sargin. Deep Neural Networks for YouTube Recom-
mendations. In Proceedings of the 10th ACM Conference on Recommender Systems , pages
191–198, Boston Massachusetts USA, September 2016. ACM. ISBN 978-1-4503-4035-9. doi:
10.1145/2959100.2959190. URL https://dl.acm.org/doi/10.1145/2959100.2959190 .
[14] Sarah Dean and Jamie Morgenstern. Preference Dynamics Under Personalized Recom-
mendations. In Proceedings of the 23rd ACM Conference on Economics and Computa-
tion, pages 795–816, Boulder CO USA, July 2022. ACM. ISBN 978-1-4503-9150-4. doi:
10.1145/3490486.3538346. URL https://dl.acm.org/doi/10.1145/3490486.3538346 .
[15] Itay Eilat and Nir Rosenfeld. Performative Recommendation: Diversifying Content via Strategic
Incentives, June 2023. URL http://arxiv.org/abs/2302.04336 . arXiv:2302.04336 [cs].
[16] Chongming Gao, Shijun Li, Yuan Zhang, Jiawei Chen, Biao Li, Wenqiang Lei, Peng Jiang,
and Xiangnan He. Kuairand: An unbiased sequential recommendation dataset with randomly
exposed videos. In Proceedings of the 31st ACM International Conference on Information &
Knowledge Management , CIKM ’22, page 3953–3957, New York, NY , USA, 2022. Association
for Computing Machinery. ISBN 9781450392365. doi: 10.1145/3511808.3557624. URL
https://doi.org/10.1145/3511808.3557624 .
[17] Benjamin Golub and Matthew O. Jackson. Naïve learning in social networks and the wisdom
of crowds. American Economic Journal: Microeconomics , 2(1):112–49, February 2010. doi:
10.1257/mic.2.1.112. URL https://www.aeaweb.org/articles?id=10.1257/mic.2.1.
112.
[18] Moritz Hardt, Meena Jagadeesan, and Celestine Mendler-Dünner. Performative power. Advances
in Neural Information Processing Systems , 35:22969–22981, 2022.
11[19] F Maxwell Harper and Joseph A Konstan. The movielens datasets: History and context. Acm
transactions on interactive intelligent systems (tiis) , 5(4):1–19, 2015.
[20] Jiri Hron, Karl Krauth, Michael I. Jordan, Niki Kilbertus, and Sarah Dean. Modeling Content
Creator Incentives on Algorithm-Curated Platforms, July 2023. URL http://arxiv.org/
abs/2206.13102 . arXiv:2206.13102 [cs, stat].
[21] Po-Sen Huang, Xiaodong He, Jianfeng Gao, Li Deng, Alex Acero, and Larry Heck. Learning
deep structured semantic models for web search using clickthrough data. In Proceedings of the
22nd ACM international conference on Information & Knowledge Management , pages 2333–
2338, San Francisco California USA, October 2013. ACM. ISBN 978-1-4503-2263-8. doi:
10.1145/2505515.2505665. URL https://dl.acm.org/doi/10.1145/2505515.2505665 .
[22] Neil J. Hurley. Personalised ranking with diversity. In Proceedings of the 7th ACM Conference
on Recommender Systems , RecSys ’13, page 379–382, New York, NY , USA, 2013. Association
for Computing Machinery. ISBN 9781450324090. doi: 10.1145/2507157.2507226. URL
https://doi.org/10.1145/2507157.2507226 .
[23] Meena Jagadeesan, Nikhil Garg, and Jacob Steinhardt. Supply-side equilibria in recommender
systems. Advances in Neural Information Processing Systems , 36, 2024.
[24] Ray Jiang, Silvia Chiappa, Tor Lattimore, András György, and Pushmeet Kohli. Degenerate
Feedback Loops in Recommender Systems. In Proceedings of the 2019 AAAI/ACM Conference
on AI, Ethics, and Society , pages 383–390, Honolulu HI USA, January 2019. ACM. ISBN
978-1-4503-6324-2. doi: 10.1145/3306618.3314288. URL https://dl.acm.org/doi/10.
1145/3306618.3314288 .
[25] Natali Helberger Judith Möller, Damian Trilling and Bram van Es. Do not blame it on the
algorithm: an empirical assessment of multiple recommender systems and their impact on
content diversity. Information, Communication & Society , 21(7):959–977, 2018. doi: 10.1080/
1369118X.2018.1444076. URL https://doi.org/10.1080/1369118X.2018.1444076 .
[26] Dimitris Kalimeris, Smriti Bhagat, Shankar Kalyanaraman, and Udi Weinsberg. Preference
amplification in recommender systems. In Proceedings of the 27th ACM SIGKDD Conference
on Knowledge Discovery & Data Mining , KDD ’21, page 805–815, New York, NY , USA, 2021.
Association for Computing Machinery. ISBN 9781450383325. doi: 10.1145/3447548.3467298.
URL https://doi.org/10.1145/3447548.3467298 .
[27] Sagi Levanon and Nir Rosenfeld. Generalized strategic classification and the case of aligned
incentives. In International Conference on Machine Learning , pages 12593–12618. PMLR,
2022.
[28] Lihong Li, Wei Chu, John Langford, and Robert E. Schapire. A contextual-bandit approach to
personalized news article recommendation. In Proceedings of the 19th International Conference
on World Wide Web , WWW ’10, page 661–670, New York, NY , USA, 2010. Association
for Computing Machinery. ISBN 9781605587998. doi: 10.1145/1772690.1772758. URL
https://doi.org/10.1145/1772690.1772758 .
[29] Wei Li and Mark W. Spong. Unified cooperative control of multiple agents on a sphere for
different spherical patterns. IEEE Transactions on Automatic Control , 59(5):1283–1289, 2014.
doi: 10.1109/TAC.2013.2286897.
[30] Dugang Liu, Pengxiang Cheng, Zinan Lin, Xiaolian Zhang, Zhenhua Dong, Rui Zhang,
Xiuqiang He, Weike Pan, and Zhong Ming. Bounding System-Induced Biases in Recom-
mender Systems with a Randomized Dataset. ACM Transactions on Information Systems ,
41(4):1–26, October 2023. ISSN 1046-8188, 1558-2868. doi: 10.1145/3582002. URL
https://dl.acm.org/doi/10.1145/3582002 .
[31] Johan Markdahl, Johan Thunberg, and Jorge Goncalves. Almost Global Consensus on the
$n$ -Sphere. IEEE Transactions on Automatic Control , 63(6):1664–1675, June 2018. ISSN
0018-9286, 1558-2523. doi: 10.1109/TAC.2017.2752799. URL https://ieeexplore.ieee.
org/document/8038829/ .
12[32] Farzan Masrour, Tyler Wilson, Heng Yan, Pang-Ning Tan, and Abdol Esfahanian. Bursting
the filter bubble: Fairness-aware network link prediction. Proceedings of the AAAI Conference
on Artificial Intelligence , 34(01):841–848, Apr. 2020. doi: 10.1609/aaai.v34i01.5429. URL
https://ojs.aaai.org/index.php/AAAI/article/view/5429 .
[33] Tien T. Nguyen, Pik-Mai Hui, F. Maxwell Harper, Loren Terveen, and Joseph A. Konstan.
Exploring the filter bubble: the effect of using recommender systems on content diversity. In Pro-
ceedings of the 23rd International Conference on World Wide Web , WWW ’14, page 677–686,
New York, NY , USA, 2014. Association for Computing Machinery. ISBN 9781450327442. doi:
10.1145/2566486.2568012. URL https://doi.org/10.1145/2566486.2568012 .
[34] Juan Perdomo, Tijana Zrnic, Celestine Mendler-Dünner, and Moritz Hardt. Performative
prediction. In International Conference on Machine Learning , pages 7599–7609. PMLR, 2020.
[35] Siddharth Prasad, Martin Mladenov, and Craig Boutilier. Content prompting: Modeling
content provider dynamics to improve user welfare in recommender ecosystems. arXiv preprint
arXiv:2309.00940 , 2023.
[36] Fernando P. Santos, Yphtach Lelkes, and Simon A. Levin. Link recommendation algorithms
and dynamics of polarization in online social networks. Proceedings of the National Academy
of Sciences , 118(50):e2102141118, 2021. doi: 10.1073/pnas.2102141118. URL https:
//www.pnas.org/doi/abs/10.1073/pnas.2102141118 .
[37] Alain Sarlette, Rodolphe Sepulchre, and Naomi Ehrich Leonard. Autonomous rigid body
attitude synchronization. In 2007 46th IEEE Conference on Decision and Control , pages
2566–2571, 2007. doi: 10.1109/CDC.2007.4434153.
[38] Ruilong Su, Li’Ang Yin, Kailong Chen, and Yong Yu. Set-oriented personalized ranking for
diversified top-n recommendation. In Proceedings of the 7th ACM Conference on Recommender
Systems , RecSys ’13, page 415–418, New York, NY , USA, 2013. Association for Computing
Machinery. ISBN 9781450324090. doi: 10.1145/2507157.2507207. URL https://doi.org/
10.1145/2507157.2507207 .
[39] Mark Wilhelm, Ajith Ramanathan, Alexander Bonomo, Sagar Jain, Ed H. Chi, and Jennifer
Gillenwater. Practical diversified recommendations on youtube with determinantal point pro-
cesses. In Proceedings of the 27th ACM International Conference on Information and Knowl-
edge Management , CIKM ’18, page 2165–2173, New York, NY , USA, 2018. Association
for Computing Machinery. ISBN 9781450360142. doi: 10.1145/3269206.3272018. URL
https://doi.org/10.1145/3269206.3272018 .
[40] Longqi Yang, Yin Cui, Yuan Xuan, Chenyang Wang, Serge Belongie, and Deborah Estrin.
Unbiased offline recommender evaluation for missing-not-at-random implicit feedback. In
Proceedings of the 12th ACM Conference on Recommender Systems , RecSys ’18, page 279–287,
New York, NY , USA, 2018. Association for Computing Machinery. ISBN 9781450359016. doi:
10.1145/3240323.3240355. URL https://doi.org/10.1145/3240323.3240355 .
[41] Fan Yao, Chuanhao Li, Denis Nekipelov, Hongning Wang, and Haifeng Xu. Learning from a
learning user for optimal recommendations. In Proceedings of the 39th International Conference
on Machine Learning , volume 162 of Proceedings of Machine Learning Research , pages 25382–
25406. PMLR, 17–23 Jul 2022. URL https://proceedings.mlr.press/v162/yao22a.
html .
[42] Fan Yao, Chuanhao Li, Denis Nekipelov, Hongning Wang, and Haifeng Xu. How Bad is Top-K
Recommendation under Competing Content Creators? In Proceedings of the 40th International
Conference on Machine Learning , volume 202 of Proceedings of Machine Learning Research ,
pages 39674–39701. PMLR, July 2023. URL https://proceedings.mlr.press/v202/
yao23b.html .
[43] Fan Yao, Yiming Liao, Mingzhe Wu, Chuanhao Li, Yan Zhu, James Yang, Jingzhou Liu, Qifan
Wang, Haifeng Xu, and Hongning Wang. User welfare optimization in recommender systems
with competing content creators. In Proceedings of the 30th ACM SIGKDD Conference on
Knowledge Discovery and Data Mining , KDD ’24, page 3874–3885, New York, NY , USA, 2024.
Association for Computing Machinery. ISBN 9798400704901. doi: 10.1145/3637528.3672021.
URL https://doi.org/10.1145/3637528.3672021 .
13[44] Mi Zhang and Neil Hurley. Avoiding monotony: improving the diversity of recommenda-
tion lists. In Proceedings of the 2008 ACM Conference on Recommender Systems , Rec-
Sys ’08, page 123–130, New York, NY , USA, 2008. Association for Computing Machinery.
ISBN 9781605580937. doi: 10.1145/1454008.1454030. URL https://doi.org/10.1145/
1454008.1454030 .
[45] Xiaoying Zhang, Hongning Wang, and Hang Li. Disentangled representation for diversified
recommendations. In Proceedings of the Sixteenth ACM International Conference on Web
Search and Data Mining , pages 490–498, 2023.
[46] Ziqiao Zhang, Said Al-Abri, and Fumin Zhang. Opinion Dynamics on the Sphere for Stable
Consensus and Stable Bipartite Dissensus. 9th IFAC Conference on Networked Systems NECSYS
2022 , 55(13):288–293, January 2022. ISSN 2405-8963. doi: 10.1016/j.ifacol.2022.07.274.
[47] Cai-Nicolas Ziegler, Sean M. McNee, Joseph A. Konstan, and Georg Lausen. Improving
recommendation lists through topic diversification. In Proceedings of the 14th International
Conference on World Wide Web , WWW ’05, page 22–32, New York, NY , USA, 2005. Associa-
tion for Computing Machinery. ISBN 1595930469. doi: 10.1145/1060745.1060754.
14A Additional Discussions on Related Works
Table 2: Comparison between our work and some previous works on performative effects of recom-
mender systems
WorksAdaptive
Users?Adaptive
Creators?Creator RewardDynamics or
Equilibrium?Content Adjustment Model
Ours Yes Yes User engagement DynamicsConditioned on previous time step;
implicit cost of content adjustment
[15] No Yes Exposure DynamicsConditioned on previous time step;
explicit cost of content adjustment
[42] No Yes User engagement Dynamics Freely choose without cost
[35] No Yes User engagement Dynamics Freely choose without cost
[23] No Yes Exposure Equilibrium Freely choose with cost
[20] No Yes Exposure Equilibrium Freely choose without cost
[7] No Yes Exposure Equilibrium Freely choose without cost
[2] No Yes User engagement Equilibrium Freely choose without cost
[43] No YesDesigned by a welfare-
maximizing platformDynamics Freely choose without cost
[14] Yes No1N/A Dynamics N/A
[41] Yes No1N/A Dynamics N/A
[3]Adaptive and
adversarialNo1N/A Dynamics N/A
1: These works study the design of recommendation algorithms for the platform with a fixed set of
content, without explicitly modeling the content creators.
B Additional Experiments on Synthetic Data
B.1 Number of Fixed Dimensions
In this part, we consider the case where some dimensions of the user feature vectors are fixed
features and thus not updated from round to round (e.g., ages, genders). Formally, we fix the first
k≤ddimensions. The remaining d−kdimensions ut
j[k+ 1 : d] = ( ut
j[k+ 1], . . . , ut
j[d])
are updated according to the following rule: ut+1
j[k+ 1 : d] =∥ut
j[k+ 1 : d]∥ · P 
ut
j[k+ 1 :
d]+ηuf(vt
i,ut
j)vt
i[k+1 : d]
. The multiplication by ∥ut
j[k+1 : d]∥ensures unit norm ∥ut+1
j∥= 1.
The effect of the number of fixed dimensions on the dynamics is shown in Figure 7. We see that
the diversity of the system improves as the number of fixed dimensions increases, and the degree of
polarization is reduced. This is similar to the effect of decreasing user update rate ηuin Figure 4.
The observation that fixed user features encourage diversity might be a reason why the recommender
systems in practice are not as polarized as our theoretical prediction.
Figure 7: Changes of measures over time under different numbers of fixed dimensions, on synthetic
data
15B.2 Threshold Truncation
Table 3 shows that the effect of different thresholds in threshold truncation on the long-term diversity
of the system. We see that truncating at τ= 0, which corresponds to 90◦angle between ujandvi, is
not good for diversity, resulting in the lowest creator diversity measure (CD) and highest tendency to
polarization (TP). Truncating at a large threshold like 0.707is good for diversity, instead.
Figure 8 shows how the diversity measures change over time, under different truncation thresholds.
Table 3: Diversity improvement by threshold truncation on synthetic data
βthreshold τ CD RD RR TP
0−cos(60◦) =−0.5 1.00±0.03 0 .00±10−31.00±10−30.99±10−3
−cos(72◦) =−0.309 0.96±0.06 0.01±0.02 1.00±0.02 0 .92±0.10
cos(90◦) = 0 0.03±0.16 0 .00±10−31.00±10−30.99±0.04
cos(72◦) = 0 .309 0.72±0.30 0 .00±10−31.00±10−30.81±0.12
cos(60◦) = 0 .5 1.16±0.11 0 .00±10−31.00±10−30.47±0.10
cos(45◦) = 0 .707 1.37±0.02 0.00±10−31.00±10−30.33±0.02
cos(30◦) = 0 .866 1.30±0.03 0 .00±10−31.00±10−30.55±0.05
1−cos(60◦) =−0.5 0.98±0.04 0 .00±0.02 1 .00±0.01 0 .96±0.04
−cos(72◦) =−0.309 0.92±0.08 0 .00±0.02 0 .99±0.02 0 .87±0.10
cos(90◦) = 0 0.13±0.31 0 .00±10−31.00±10−30.97±0.08
cos(72◦) = 0 .309 0.85±0.16 0 .00±10−31.00±10−30.76±0.11
cos(60◦) = 0 .5 1.21±0.07 0 .00±10−31.00±10−30.43±0.08
cos(45◦) = 0 .707 1.38±0.01 0.00±10−31.00±10−30.30±0.01
cos(30◦) = 0 .866 1.33±0.02 0 .00±10−31.00±10−30.47±0.04
3−cos(60◦) =−0.5 0.91±0.18 0.01±0.02 1.00±0.01 0 .83±0.10
−cos(72◦) =−0.309 0.85±0.23 0 .00±10−31.00±10−30.78±0.11
cos(90◦) = 0 0.64±0.33 0 .00±10−31.00±10−30.81±0.12
cos(72◦) = 0 .309 1.01±0.14 0 .00±10−31.00±10−30.64±0.14
cos(60◦) = 0 .5 1.26±0.05 0 .00±10−31.00±10−30.38±0.06
cos(45◦) = 0 .707 1.39±0.01 0.00±10−31.00±10−30.28±0.01
cos(30◦) = 0 .866 1.37±0.01 0 .00±10−31.00±10−30.34±0.01
16Figure 8: Changes of measures over time under different truncation threshold τ, with β= 1, on
synthetic data
17C Additional Experiments on Real-World Dataset
C.1 Details of the Recommendation Algorithm
Figure 9: Two tower model for the MovieLens experiment, where the two towers both have size
16×16with linear layers and ReLu activations.
Algorithm 1 Real-world Recommendation with Dual Influence
Input: t= 0, actual embedding U(0), V(0), true labels Y(0)
ij:=y(u(0)
i, v(0)
j), initial parameter
θ(0)(which includes the predicted embedding ˆU(0),ˆV(0))
repeat
Let temporary parameter w(0)←θ(t)
Compute loss L(θ(t), Y(t))
fors= 1tom−1do
w(s+1)←θ(s)−η∇wL(w(s), Y(t))
end for
θ(t+1)←w(m)
Deliver recommendations based on ˆU(t+1),ˆV(t+1)
Update U(t+1), V(t+1), and Y(t+1)
t←t+ 1
until∥θ(t)−θ(t−1)∥2≤δ
18C.2 Top- kand Threshold Truncations
We also try top- kand threshold truncations (Section 4) on the MovieLens 20M dataset. Here, we
haven= 2000 creators and m= 2000 users, with feature dimension d= 16 . The results for top- k
truncation are in Table 4 and Figure 10. Similar to the experiments with synthetic data, we see that a
smaller kimproves Creator Diversity (CD) and Recommendation Relevance (RR), reduces Tendency
to Polarization (TP), yet worsens Recommendation Diversity (RD).
Table 4: Diversity improvement by top- ktruncation on MovieLens 20M dataset
βk CD RD RR TP
02000 1.00±10−31.00±10−30.00±10−31.00±10−3
1000 0.30±0.04 0 .03±0.01 0 .88±0.01 1 .00±10−3
500 1.10±0.06 0 .00±10−31.00±10−30.43±0.03
100 1.36±10−30.00±10−31.00±10−30.28±0.01
10 1.40±10−30.00±10−31.00±10−30.20±10−3
1 1.40±10−30.00±10−31.00±10−30.20±10−3
12000 1.00±10−30.42±10−30.92±0.01 1 .00±10−3
1000 0.61±0.16 0 .03±0.01 0 .97±0.01 0 .90±0.06
500 1.14±0.04 0 .00±10−31.00±10−30.41±0.04
100 1.35±0.01 0 .00±10−31.00±10−30.27±10−3
10 1.40±10−30.00±10−31.00±10−30.20±10−3
1 1.40±10−30.00±10−31.00±10−30.20±10−3
32000 0.92±0.07 0.02±0.01 0.99±10−30.91±0.05
1000 0.65±0.18 0 .00±10−31.00±10−30.69±0.14
500 1.07±0.07 0 .00±10−31.00±10−30.48±0.11
100 1.36±0.01 0 .00±10−31.00±10−30.27±0.01
10 1.40±10−30.00±10−31.00±10−30.20±10−3
1 1.40±10−30.00±10−31.00±10−30.20±10−3
Figure 10: Changes of measures over time under different k, with β= 1, on MovieLens 20M dataset
19Results for threshold truncation are in Table 5 and Figure 11. Similar to synthetic data, we see that a
large (but not too large) threshold like 0.707 is good for improving CD and TP.
Table 5: Threshold truncation with different thresholds on MovieLens 20M dataset
βthreshold τ CD RD RR TP
0−cos(60◦) =−0.5 1.00±10−30.00±10−31.00±10−31.00±10−3
−cos(72◦) =−0.309 1.00±10−30.00±10−31.00±10−31.00±10−3
cos(90◦) = 0 0.01±0.01 0 .00±10−31.00±10−31.00±10−3
cos(72◦) = 0 .309 0.83±0.08 0 .00±10−31.00±10−30.72±0.09
cos(60◦) = 0 .5 1.20±0.05 0 .00±10−31.00±10−30.46±0.07
cos(45◦) = 0 .707 1.39±10−30.00±10−31.00±10−30.20±10−3
cos(30◦) = 0 .866 1.36±10−30.00±10−31.00±10−30.40±0.01
1−cos(60◦) =−0.5 1.00±10−30.00±10−31.00±10−31.00±10−3
−cos(72◦) =−0.309 0.96±0.03 0 .00±10−31.00±10−30.95±0.03
cos(90◦) = 0 0.02±0.02 0 .00±10−31.00±10−30.99±10−3
cos(72◦) = 0 .309 0.83±0.07 0 .00±10−31.00±10−30.66±0.10
cos(60◦) = 0 .5 1.18±0.06 0 .00±10−31.00±0.01 0 .44±0.07
cos(45◦) = 0 .707 1.40±10−30.00±10−31.00±10−30.20±10−3
cos(30◦) = 0 .866 1.35±0.01 0 .00±10−31.00±10−30.40±0.02
3−cos(60◦) =−0.5 0.77±0.27 0 .00±10−31.00±10−30.86±0.09
−cos(72◦) =−0.309 0.80±0.24 0 .00±10−31.00±10−30.79±0.13
cos(90◦) = 0 0.04±0.02 0 .00±10−31.00±10−30.98±0.01
cos(72◦) = 0 .309 0.99±0.11 0 .00±10−31.00±10−30.55±0.13
cos(60◦) = 0 .5 1.26±0.05 0 .00±10−31.00±10−30.36±0.06
cos(45◦) = 0 .707 1.40±10−30.00±10−31.00±10−30.20±10−3
cos(30◦) = 0 .866 1.36±10−30.00±10−31.00±10−30.39±0.01
Figure 11: Changes of measures over time under truncation with different threshold τ, with β= 1,
on MovieLens 20M dataset
20D Useful Lemmas
This section provides some lemmas that will be used in the proofs. They are mainly about some
properties of the dynamics update rule.
Claim D.1. For vectors x,y∈Rdwith unit norm ∥x∥2=∥y∥2= 1, we have:
•∥x−y∥2
2= 2(1 − ⟨x,y⟩).
•⟨x,y⟩= 1−1
2∥x−y∥2
2.
Lemma D.2 (Convex Cone Property) .Letz1, . . . ,zk∈Rdbe vectors with norm ∥zt
i∥2= 1.
Suppose ⟨zi,y⟩>0for every i= 1, . . . , k for some y∈Rd. Letx=P(Pk
i=1aizi)for some
a1, . . . , a k≥0(namely, xis the normalization of some vector in the convex cone formed by
z1, . . . ,zk). Then, we have
⟨x,y⟩ ≥k
min
i=1⟨zi,y⟩>0and ∥x−y∥2≤kmax
i=1∥zi−y∥2>0.
Proof.
⟨x,y⟩=DPk
i=1aizi
∥Pk
i=1aizi∥2,yE
=1
∥Pk
i=1aizi∥2kX
i=1ai⟨zi,y⟩
≥1
∥Pk
i=1aizi∥2kX
i=1aik
min
i=1⟨zi,y⟩=k
min
i=1⟨zi,y⟩Pk
i=1ai
∥Pk
i=1aizi∥2
≥k
min
i=1⟨zi,y⟩Pk
i=1aiPk
i=1ai=k
min
i=1⟨zi,y⟩.
This proves the first inequality. To prove the second inequality, we use Claim D.1 and the first
inequality:
∥x−y∥2=p
2(1− ⟨x,y⟩)≤q
2(1−min
i⟨zi,y⟩) = max
ip
2(1− ⟨zi,y⟩) =kmax
i=1∥zi−y∥2.
Lemma D.3. Letxt,y,zt∈Rdbe vectors with norm ∥xt∥2= 1,∥y∥2≥0,∥zt∥2≤1. Suppose
⟨xt,y⟩ ≥0,⟨zt,y⟩ ≥0. After the update xt+1=P(xt+ηzt), we have
⟨xt+1−xt,y⟩ ≥η
1 +η∥zt∥2
⟨zt,y⟩ − ∥zt∥2⟨xt,y⟩
.
As a corollary, if y=ztand∥zt∥2= 1, then
⟨xt+1−xt,zt⟩ ≥η
1 +η
1− ⟨xt,zt⟩
.
Proof. By definition,
⟨xt+1−xt,y⟩=Dxt+ηzt
∥xt+ηzt∥2−xt,yE
=1
∥xt+ηzt∥2−1
· ⟨xt,y⟩+η
∥xt+ηzt∥2· ⟨zt,y⟩
(because ∥xt+ηzt∥2≤1 +η∥zt∥2)≥1
1 +η∥zt∥2−1
· ⟨xt,y⟩+η
1 +η∥zt∥2· ⟨zt,y⟩
=η
1 +η∥zt∥2
⟨zt,y⟩ − ∥zt∥2⟨xt,y⟩
.
Lemma D.4. Letxt,zt∈Rdbe vectors with norm ∥xt∥2= 1,∥zt∥2≤1. Suppose ⟨xt,zt⟩ ≥0
andη >0. Then the update xt+1=P(xt+ηzt)satisfies
21•⟨xt+1−xt,zt⟩ ≥1
η∥xt+1−xt∥2
2.
•∥xt+1−xt∥2≤η∥zt∥2.
Proof. Let˜xt+1=xt+ηzt, soxt=P(˜xt+1)andzt=1
η(˜xt+1−xt). Then we have
⟨xt+1−xt,zt⟩=1
η⟨xt+1−xt,˜xt+1−xt⟩.
Because ⟨xt,zt⟩ ≥0, the vector ˜xt+1=xt+ηzthas length ≥1and hence is outside (or on the
surface) of the d-dimensional unit ball. Since xt=P(˜xt+1)is the projection of ˜xt+1onto the unit
ball, and ztis another vector inside the unit ball, by the “Pythagorean property” (Proposition 2.2 in
[6]), we must have ⟨xt−xt+1,˜xt+1−xt+1⟩ ≤0. This implies
⟨xt+1−xt,zt⟩ ≥1
η
⟨xt+1−xt,˜xt+1−xt⟩+⟨xt−xt+1,˜xt+1−xt+1⟩
=1
η⟨xt+1−xt,xt+1−xt⟩=1
η∥xt+1−xt∥2
2,
which proves the first claim. To prove the second claim, we use Cauchy-Schwarz inequality:
1
η∥xt+1−xt∥2
2≤ ⟨xt+1−xt,zt⟩ ≤ ∥ xt+1−xt∥2∥zt∥2.
This implies ∥xt+1−xt∥2≤η∥zt∥2.
Lemma D.5. Consider a creator vt
iand a user ut
j. Suppose the user is always recommended
creator i(so the user is updated by ut+1
j=P(ut
j+ηuf(vt
i,ut
j)vt
i)), and creator iis updated by
vt+1
i=P(vt
i+ηcαt
i)with∥αt
i∥2≤1and⟨vt
i,αt
i⟩ ≥0at each time step. Assume:
•The inner product ⟨u0
j,v0
i⟩>0initially. (Note that ⟨u0
j,u0
j′⟩needs not hold.)
•There exists some constant Lf>0such that f(vi,uj)≥Lf>0whenever ⟨uj,vi⟩>0.
•ηc≤ηuLf
2and0≤ηu<1
2.
Then, we have ⟨ut
j,vt
i⟩>0in all time steps.
Proof. We prove by induction. Suppose ⟨ut
j,vt
i⟩>0already holds. We prove that ⟨ut+1
j,vt+1
i⟩>0
will also hold. Take the difference between ⟨ut+1
j,vt+1
i⟩and⟨ut
j,vt
i⟩:
⟨ut+1
j,vt+1
i⟩ − ⟨ut
j,vt
i⟩=⟨ut+1
j,vt+1
i−vt
i⟩+⟨ut+1
j−ut
j,vt
i⟩.
For⟨ut+1
j−ut
j,vt
i⟩, using Lemma D.3 with xt=ut
j,zt=vt
i, and η=ηuf(vt
i,ut
j), we get
⟨ut+1
j−ut
j,vt
i⟩ ≥ηuf(vt
i,ut
j)
1+ηuf(vt
i,ut
j) 
1− ⟨ut
j,vt
i⟩
≥ηuLf
1+ηuLf 
1− ⟨ut
j,vt
i⟩
.
For⟨ut+1
j,vt+1
i−vt
i⟩, by Cauchy-Schwarz inequality and Lemma D.4,
⟨ut+1
j,vt+1
i−vt
i⟩ ≥ − ∥ ut+1
j∥2· ∥vt+1
i−vt
i∥2≥ − 1·ηc∥αt
i∥2≥ − ηc.
• If1− ⟨ut
j,vt
i⟩>1
2(1 +ηuLf), then we have
⟨ut+1
j,vt+1
i⟩ − ⟨ut
j,vt
i⟩> η uLf1
2−ηc≥0
by the assumption of ηc≤ηuLf
2.
• If1− ⟨ut
j,vt
i⟩ ≤1
2(1 +ηuLf), then we have
⟨ut+1
j,vt+1
i⟩ − ⟨ut
j,vt
i⟩ ≥ 0−ηc
=⇒ ⟨ut+1
j,vt+1
i⟩ ≥ ⟨ ut
j,vt
i⟩ −ηc≥1
2−1
2ηuLf−ηc>0
under the assumption of ηc≤ηuLf
2andηu<1
2.
22The above two cases together ensure ⟨ut+1
j,vt+1
i⟩>0.
Lemma D.6. Consider a system of one user and one creator that satisfies ⟨u0
j,v0
i⟩>0and
⟨u0
j,y⟩>⟨v0
i,y⟩>0for some y∈Rdwith∥y∥ ≤1initially. The creator is always recommended
to the user (so the updates are ut+1
j=P(ut
j+ηuf(vt
i,ut
j)vt
i)andvt+1
i=P(vt
i+ηcut
j)). Suppose
ηc≤ηuLf
2and0≤ηu<1
2. Then, we have:
•⟨ut
j,y⟩>⟨vt
i,y⟩>0for all t≥1.
•Suppose ⟨u0
j,y⟩ − ⟨v0
i,y⟩=D > 0. For any R < D , after T=8
3ηuLfln2
R2steps, we
have⟨vT
i,y⟩ − ⟨v0
i,y⟩ ≥ηc
ηu+ηc(D−R).
Proof. We prove the first item by induction. Suppose ⟨ut
j,y⟩>⟨vt
i,y⟩>0holds. Consider
t+ 1. First, by Lemma D.2, ⟨vt+1
i,y⟩>0holds. Then, we prove ⟨ut+1
j,y⟩>⟨vt+1
i,y⟩. Let
f=f(vt
i,ut
j).
⟨ut+1
j,y⟩ − ⟨vt+1
i,y⟩=Dut
j+ηufvt
i
∥ut
j+ηufvt
i∥2,yE
−Dvt
i+ηcut
j
∥vt
i+ηcut
j∥2,yE
=1
∥ut
j+ηufvt
i∥2−ηc
∥vt
i+ηcut
j∥2
⟨ut
j,y⟩ −1
∥vt
i+ηcut
j∥2−ηuf
∥ut
j+ηufvt
i∥2
⟨vt
i,y⟩
>1
∥ut
j+ηufvt
i∥2−ηc
∥vt
i+ηcut
j∥2
⟨vt
i,y⟩ −1
∥vt
i+ηcut
j∥2−ηuf
∥ut
j+ηufvt
i∥2
⟨vt
i,y⟩
=1 +ηuf
∥ut
j+ηufvt
i∥2−1 +ηc
∥vt
i+ηcut
j∥2
⟨vt
i,y⟩
=1 +ηufq
1 + 2 ηuf⟨ut
j,vt
i⟩+ (ηuf)2−1 +ηcq
1 + 2 ηc⟨ut
j,vt
i⟩+ (ηc)2
⟨vt
i,y⟩.
Leta=⟨ut
j,vt
i⟩ ≤1. We note that the function
h(η) =1 +ηp
1 + 2 ηa+η2=s
1 + 2 η+η2
1 + 2 ηa+η2=s
1 +(2−2a)η
1 + 2 ηa+η2=s
1 +2(1−a)
1
η+ 2a+η
is increasing in η∈[0,1]. Under the assumption of ηc≤ηuLf
2≤ηuf
2< ηuf, we have h(ηc)≤
h(ηuf)and hence
⟨ut+1
j,y⟩ − ⟨vt+1
i,y⟩> 
h(ηuf)−h(ηc)
⟨vt
i,y⟩ ≥ 0.
We then prove the second item. Using Lemma D.3 for vt+1
i=P(vt
i+ηcut
j), we get
⟨vt+1
i−vt
i,y⟩ ≥ηc
1 +ηc
⟨ut
j,y⟩ − ⟨vt
i,y⟩
.
Using Lemma D.3 for ut+1
j=P(ut
j+ηuf(vt
i,ut
j)vt
i)and using the fact ⟨vt
i,y⟩ − ⟨ut
j,y⟩<0
proved in item 1,
⟨ut+1
j−ut
j,y⟩ ≥ηuf(vt
i,ut
j)
1 +ηuf(vt
i,ut
j)
⟨vt
i,y⟩ − ⟨ut
j,y⟩
≥ηu
1 +ηu
⟨vt
i,y⟩ − ⟨ut
j,y⟩
.
Rearranging the above two inequalities:
1 +ηc
ηc
⟨vt+1
i,y⟩ − ⟨vt
i,y⟩
≥ ⟨ut
j,y⟩ − ⟨vt
i,y⟩;
1 +ηu
ηu
⟨ut+1
j,y⟩ − ⟨ut
j,y⟩
≥ ⟨vt
i,y⟩ − ⟨ut
j,y⟩.
23Summing the above two inequalities over t= 0,1, . . . , T −1:
1 +ηc
ηc
⟨vT
i,y⟩ − ⟨v0
i,y⟩
+1 +ηu
ηu
⟨uT
j,y⟩ − ⟨u0
j,y⟩
≥0. (6)
According to Lemma F.1, after at most T=8
3ηuLfln2
R2steps, we have ∥uT
j−vT
i∥2≤R. This
implies ⟨uT
j,y⟩ − ⟨vT
i,y⟩=⟨uT
j−vT
i,y⟩ ≤ ∥uT
j−vT
i∥ ≤Rand hence

⟨vT
i,y⟩−⟨v0
i,y⟩
−
⟨uT
j,y⟩−⟨u0
j,y⟩
=
⟨u0
j,y⟩−⟨v0
i,y⟩
−
⟨uT
j,y⟩−⟨vT
i,y⟩
≥D−R.
(7)
Multiplying (7) by1+ηu
ηuand adding to (6):
1 +ηc
ηc+1 +ηu
ηu
⟨vT
i,y⟩ − ⟨v0
i,y⟩
≥1 +ηu
ηu(D−R).
This implies
⟨vT
i,y⟩−⟨v0
i,y⟩ ≥1+ηu
ηu
1+ηc
ηc+1+ηu
ηu(D−R) =ηc(1 +ηu)
ηu(1 +ηc) +ηc(1 +ηu)(D−R)≥ηc
ηu+ηc(D−R).
given ηc≤ηu.
The following lemma shows that, when we reflect some of the feature vectors in a system (Ut, Vt) =
({ut
j}j∈[m],{vt
i}i∈[n]), there is a correspondence between the behaviors of the system with the
reflected vectors and the original system.
Lemma D.7 (Reflection) .Let(Ut, Vt) = ({ut
j}j∈[m],{vt
i}i∈[n])be a system of musers and n
creators with impact functions f, g. Let ai, bj∈ {+1,−1},∀i∈[n],∀i∈[m]be some binary
constants. Define:
˜ut
j=bjut
j=±ut
j, ˜vt
i=aivt
i=±˜vt
i.
and impact functions
˜f(˜vi,˜uj) =aibjf(vi,uj), ˜g(˜uj,˜vi) =aibjg(uj,vi).
Then:
•There is a “correspondence” between the evolution of the system (Ut, Vt)with impact
functions f, gand the evolution of the system (˜Ut,˜Vt) = ({˜ut
j}j∈[m],{˜vt
i}i∈[n])with
impact functions ˜f,˜g. Formally, suppose every user is recommended the same creator
in the two systems, then the updated vectors in the two systems still satisfy the relations:
˜ut+1
j=bjut+1
j,˜vt+1
i=aivt+1
i.
•If the system (˜Ut,˜Vt)is inR-bi-polarization, then the original system (Ut, Vt)is also in
R-bi-polarization.
Proof. Consider the first item. Suppose user iis recommended creator jat time step tin the two
systems. Then by definition, the updated user vectors in the two systems satisfy
˜ut+1
j=P ˜ut
j+ηu˜f(˜vt
i,˜ut
j)˜vt
i
=P 
bjut
j+ηuaibjf(vt
i,ut
j)aivt
i
=P 
bjut
j+ηubjf(vt
i,ut
j)vt
i
=bjP 
ut
j+ηuf(vt
i,ut
j)vt
i
=bjut+1
j
Suppose creator iis recommended to the set of users Jat time step tin the two systems. Then,
˜vt+1
i=P ˜vt
i+ηc
|J|X
j∈Jg(˜ut
j,˜vt
i)˜ut
j
=P 
aivt
i+ηc
|J|X
j∈Jaibjg(ut
j,vt
i)bjut
j
=P 
aivt
i+ηc
|J|X
j∈Jaig(ut
j,vt
i)ut
j
=aiP 
vt
i+ηc
|J|X
j∈Jg(ut
j,vt
i)ut
j
=aivt+1
i.
24This means that the evolution of the system (˜Ut,˜Vt)has a correspondence to the evolution of the
original system (Ut, Vt).
Consider the second item. Suppose (˜Ut,˜Vt)is inR-bi-polarization, so ˜vt
i=±vt
iisR-close to ±c
and˜ut
j=±ut
jisR-close to ±cwith some vector c∈Sd−1. This implies that vt
iisR-close to ±c
andut
jisR-close to ±c. So, the system (Ut, Vt)satisfies R-bi-polarization.
E Proof of Proposition 3.2
Proof. Let(Ut,Vt)be an (R,c)-bi-polarization state with R∈[0,1]andc∈Sd−1, where all ut
j
andvt
iare within distance Rto+cor−c. We show that, after one step of update, ut+1
jandvt+1
iare
still within distance Rto+cor−c, so(Ut+1,Vt+1)still satisfies (R,c)-bi-polarization.
Consider ut
j. Without loss of generality, suppose ut
jis close to +c, so∥ut
j−c∥2≤R. Suppose
userjis recommended creator iat step t. Let ˜vt
i=vt
iif⟨vt
i,ut
j⟩ ≥0and˜vt
i=−vt
iif⟨vt
i,ut
j⟩<0.
Then, the user update is
ut+1
j=P
ut
j+ηuf(vt
i,ut
j)vt
i
=P
ut
j+ηu|f(vt
i,ut
j)|˜vt
i
.
Since ˜vt
iis close to +cor−c,⟨˜vt
i,ut
j⟩>0, andut
jis close to +c, it must be that ˜vt
iis close to +c,
so∥˜vt
i−c∥2≤R. Then, since ut+1
jis the normalization of a vector in the convex cone formed by
ut
jand˜vt
i, by Lemma D.2, we have
∥ut+1
j−c∥2≤max
∥ut
j−c∥2,∥˜vt
i−c∥2	
≤R.
Consider vt
i. Suppose ∥vt
i−c∥2≤R. LetJbe the set of users that are recommended creator iat
stept. For each j∈J, let˜ut
j=ut
jif⟨ut
j,vt
i⟩ ≥0and˜ut
j=−ut
jif⟨ut
j,vt
i⟩<0. Then, the creator
update is
vt+1
i=P
vt
i+ηc
|J|X
j∈Jg(ut
j,vt
i)ut
j
=P
vt
i+ηc
|J|X
j∈J|g(ut
j,vt
i)|˜ut
j
.
We note that every ˜ut
jsatisfies ∥˜ut
j−c∥2≤R(by the same reasoning as above). Then, since vt+1
iis
the normalization of a vector in the convex cone formed by vt
iand{˜ut
j}j∈J, by Lemma D.2, we have
∥vt+1
i−c∥2≤minn
∥vt
i−c∥2,min
j∈J∥˜ut
j−c∥2o
≤R.
F Proof of Lemma 3.4
Lemma 3.4 is proved by induction on the number nof creators. We first show that any system with 1
creator and multiple users must converge to R-bi-polarization in finite steps for any R >0. Using
the result for 1creator, we then construct a finite length path that leads to R-bi-polarization for any
system with n≥2creators.
F.1 Base Case: Convergence Results for n= 1Creator
We prove some convergence results for the special case of only one creator. This will serve as the
basis for the proof for n≥2creators. Recall that we have the following dynamics update rule:
•User: ut+1
j=P(ut
j+ηuf(vt
i,ut
j)vt
i)where vt
iis the creator recommended to user j;
f(vi,uj)satisfies:
f(vi,uj)is

>0if⟨vi,uj⟩>0
<0if⟨vi,uj⟩<0
= 0 if⟨vi,uj⟩= 0.(8)
•Creator: vt+1
i=P(vt
j+ηc
|J|P
j∈Jg(ut
j,vt
i)ut
j)where Jis the set of users being recom-
mended creator i.
25Lemma F.1. Consider a system of 1creator vt
iand|J|users{ut
j}j∈J, where the creator is
recommended to all users at every time step. Assume:
•Initially, ∀j∈J,⟨u0
j,v0
i⟩>0.
•There exists some constant Lf>0such that f(vi,uj)≥Lf>0whenever ⟨vi,uj⟩>0.
•g(uj,vi) = 1 when⟨uj,vi⟩>0.
•ηc≤ηuLf
2and0≤ηu<1
2.
Then, for any R >0, after at most8
3ηuLfln2|J|
R2steps,P
j∈J∥ut
j−vt
i∥2
2≤R2will hold forever. In
particular, each user vector will satisfy ∥ut
j−vt
i∥2≤R.
Proof. We first note that, by Lemma D.5, all user vectors satisfy ⟨ut
j,vt
i⟩>0in all time steps
t >0. Hence, the creator update is always vt+1
i=P(vt
i+ηc
|J|P
j∈Jg(ut
j,vt
i)ut
j) =P(vt
i+
ηc1
|J|P
j∈Jut
j).
Letat= 1/(1−3ηuLf
8)t. Define the following potential function:
Φt=atX
j∈J1
2∥ut
j−vt
i∥2
2=atX
j∈J 
1− ⟨ut
j,vt
i⟩
. (9)
We will show that Φtis monotonically decreasing. Take the difference between Φt+1andΦt:
Φt+1−Φt=at+1X
j∈J
⟨ut
j,vt
i⟩ − ⟨ut+1
j,vt+1
i⟩
+ (at+1−at)X
j∈J 
1− ⟨ut
j,vt
i⟩
=at+1X
j∈J⟨vt
i,ut
j−ut+1
j⟩+X
j∈J⟨ut
j,vt
i−vt+1
i⟩+X
j∈J⟨ut+1
j−ut
j,vt
i−vt+1
i⟩
+ (at+1−at)X
j∈J 
1− ⟨ut
j,vt
i⟩
.
Using Lemma D.3 with xt=ut
j,zt=vt
i, and η=ηuf(vt
i,ut
j), we get
⟨vt
i,ut
j−ut+1
j⟩ ≤ −ηuf(vt
i,ut
j)
1 +ηuf(vt
i,ut
j) 
1− ⟨ut
j,vt
i⟩
≤ −ηuLf
2 
1− ⟨ut
j,vt
i⟩
.
Using Lemma D.4 with xt=ut
j,zt=vt
i, and η=ηuf(vt
i,ut
j), we get
⟨vt
i,ut
j−ut+1
j⟩ ≤ −1
ηuf(vt
i,ut
j)∥ut+1
j−ut
j∥2
2≤ −1
ηu∥ut+1
j−ut
j∥2
2.
Using Lemma D.4 with xt=vt
i,zt=1
|J|P
j∈Jut
j, and η=ηc, we get
X
j∈J⟨ut
j,vt
i−vt+1
i⟩=|J|⟨1
|J|X
j∈Jut
j,vt
i−vt+1
i⟩ ≤ −|J|
ηc∥vt+1
i−vt
i∥2
2.
26Using the above three inequalities, we can upper bound Φt+1−Φt:
Φt+1−Φt
=at+13
4X
j∈J⟨vt
i,ut
j−ut+1
j⟩+1
4X
j∈J⟨vt
i,ut
j−ut+1
j⟩
+X
j∈J⟨ut
j,vt
i−vt+1
i⟩+X
j∈J⟨ut+1
j−ut
j,vt
i−vt+1
i⟩
+ (at+1−at)X
j∈J 
1− ⟨ut
j,vt
i⟩
≤at+1
−3
4X
j∈JηuLf
2 
1− ⟨ut
j,vt
i⟩
−1
4X
j∈J1
ηu∥ut+1
j−ut
j∥2
2
−|J|
ηc∥vt+1
i−vt
i∥2
2+X
j∈J∥ut+1
j−ut
j∥2· ∥vt+1
i−vt
i∥2
+ (at+1−at)X
j∈J 
1− ⟨ut
j,vt
i⟩
=at+1
−3ηuLf
8X
j∈J 
1− ⟨ut
j,vt
i⟩
−X
j∈J1
4ηu∥ut+1
j−ut
j∥2
2+1
ηc∥vt+1
i−vt
i∥2
2
| {z }
≥2q
1
4ηuηc∥ut+1
j−ut
j∥2
2∥vt+1
i−vt
i∥2
2− ∥ut+1
j−ut
j∥2· ∥vt+1
i−vt
i∥2
+ (at+1−at)X
j∈J 
1− ⟨ut
j,vt
i⟩
≤at+1
−3ηuLf
8X
j∈J 
1− ⟨ut
j,vt
i⟩
−X
j∈Jq
1
ηuηc−1
|{z}
≥0
∥ut+1
j−ut
j∥2· ∥vt+1
i−vt
i∥2
+ (at+1−at)X
j∈J 
1− ⟨ut
j,vt
i⟩
≤at+1
−3ηuLf
8X
j∈J 
1− ⟨ut
j,vt
i⟩
+ 0
+ (at+1−at)X
j∈J 
1− ⟨ut
j,vt
i⟩
= 
1−3ηuLf
8
at+1−atX
j∈J 
1− ⟨ut
j,vt
i⟩
= 0
where the last step is because (1−3ηuLf
8)at+1=at.
We have shown that Φtis monotonically decreasing. Thus,
1
2X
j∈J∥uT
j−vT
i∥2=ΦT
aT≤Φ0
aT≤P
j∈J1
aT= 
1−3ηuLf
8T|J| ≤e−3ηuLf
8T|J| ≤1
2R2
whenever T≥8
3ηuLfln2|J|
R2.
Corollary F.2 (of Lemma F.1) .Consider a system of 1creator vt
iand|J|users{ut
j}j∈J, where the
creator is recommended to all users at every time step. Assume:
•Initially, ⟨u0
j,v0
i⟩ ̸= 0for every j∈J.
•There exists some constant Lf>0such that |f(vi,uj)| ≥Lf>0whenever ⟨vi,uj⟩ ̸= 0.
•g(uj,vi) = sign( ⟨uj,vi⟩).
•ηc≤ηuLf
2and0≤ηu<1
2.
Then, for any R >0, after at most8
3ηuLfln2|J|
R2steps, the system will reach R-bi-polarization.
27Proof. LetJ+={j∈J:⟨u0
j,v0
i⟩>0}be the set of users with positive inner products with
creator iinitially; let J−={j∈J:⟨u0
j,v0
i⟩<0}. Let ˜ut
j=−ut
jforj∈J−and˜ut
j=ut
jfor
j∈J+. Then, the system consisting of {˜ut
j}j∈Jandvt
isatisfies the initial condition ⟨˜u0
j,v0
i⟩>0
in Lemma F.1. So, by Lemma F.1, it reaches R-consensus after at most8
3ηuLfln2|J|
R2steps. Then by
the reflection lemma (Lemma D.7), the original system, consisting of {ut
j}j∈Jandvt
i, must reach
R-bi-polarization.
F.2 Inductive Step: Proof of Lemma 3.4
Lemma F.3. Consider a system of n≥1creators {vt
1, . . . ,vt
n} and|J|users{ut
j}j∈J. Assume:
•Initially, ⟨v0
i,v0
i′⟩>0for every i, i′, and⟨v0
i,u0
j⟩>0for every i, j.
•Assumptions of Lemma F .1.
Then, for any R∈(0,1), there exists a path of finite length that leads the initial state (U0,V0)to
R-consensus.
Proof. Fix any R∈(0,1). Choose R1such thatq
(ηu
ηc+ 2)4 R1=R. Clearly, R1< R . We
construct a path that leads the state (U0,V0)toR-consensus as follows.
Step (1): Consider the subsystem of the first n−1creators and all users J. By induction, there
exists a path of length T1=Ln−1,R1<+∞that leads the subsystem to (R1,cT1)-consensus with
somecT1∈Sd−1.So, after these T1steps, all creators i∈ {1, . . . , n −1}and all users j∈J
satisfy ∥vT1
i−cT1∥ ≤R1and∥uT1
j−cT1∥ ≤R1. Creator ndoes not update during these T1
steps, so vT1n=v0
n, and it still has positive inner products with the first n−1creators and all users
by the convex cone property (Lemma D.2). Let’s then consider the distance between creators n
and the consensus center cT1:∥vT1n−cT1∥. If∥vT1n−cT1∥ ≤R, then the system has satisfied
(R,cT1)-consensus, so our construction is finished. Otherwise, ∥vT1n−cT1∥> R. We continue the
construction as follows:
Step (2): Pick any user j0∈J, recommend creator nto user j0forT2=8
3ηuLfln2
R2
1steps, while
recommending creator 1 to all other users. From the (R1,cT1)-consensus in step (1) we know
∥uT1
j0−cT1∥ ≤R1, so
⟨uT1
j0,cT1⟩= 1−1
2∥uT1
j0−cT1∥2≥1−R2
1
2>1−R2
2≥1−1
2∥vT1
n−cT1∥2=⟨vT1
2,cT1⟩.
Thus, we can apply Lemma D.6 with y=cT1to derive that, after these T2steps,
⟨vT1+T2
n ,cT1⟩ − ⟨vT1
n,cT1⟩ ≥ηc
ηu+ηc
⟨uT1
j0,cT1⟩ − ⟨vT1
n,cT1⟩ −R1
≥ηc
ηu+ηc
1−R2
1
2− ⟨vT1
n,cT1⟩ −R1
.
=⇒ ⟨ vT1+T2
n ,cT1⟩ ≥ ⟨ vT1
n,cT1⟩+ηc
ηu+ηc
1−R2
1
2− ⟨vT1
n,cT1⟩ −R1
. (10)
For the inner product between creator nand user j0, by Lemma F.1 ∥vT1+T2n−uT1+T2
j0∥ ≤R1, so
⟨vT1+T2
n ,uT1+T2
j0⟩= 1−1
2∥vT1+T2
n−uT1+T2
j0∥2≥1−R2
1
2. (11)
Consider the inner products between creator nand the first n−1creators and the users in J\ {j0}.
Because the first n−1creators and the users in J\{j0}form (R1,cT1)-consensus at time step T1, by
Observation 3.2, they still form (R1,cT1)-consensus at time step T1+T2, so∥vT1+T2
i−cT1∥ ≤R1
and∥uT1+T2
j−cT1∥ ≤R1. This implies, for i̸=n,
⟨vT1+T2
n ,vT1+T2
i⟩ ≥ ⟨ vT1+T2
n ,cT1⟩ − ∥vT1+T2
i−cT1∥
≥ ⟨vT1+T2
2 ,cT1⟩ −R1
(10)≥ ⟨vT1
n,cT1⟩+ηc
ηu+ηc
1−R2
1
2− ⟨vT1
n,cT1⟩ −R1
−R1, (12)
28and for j∈J\ {j0},
⟨vT1+T2
n ,uT1+T2
j⟩ ≥ ⟨ vT1+T2
n ,cT1⟩ − ∥uT1+T2
j−cT1∥
≥ ⟨vT1+T2
2 ,cT1⟩ −R1
(10)≥ ⟨vT1
n,cT1⟩+ηc
ηu+ηc
1−R2
1
2− ⟨vT1
n,cT1⟩ −R1
−R1. (13)
Step (3): Consider the subsystem of the first n−1creators and all users J. By induction, there exists
a path of length T3=Ln−1,R1<+∞that leads the subsystem to (R1,cT1+T2+T3)-consensus with
somecT1+T2+T3∈Sd−1.So, we have ∥vT1+T2+T3
i −cT1+T2+T3∥ ≤R1for every i∈ {1, . . . , n −1}
and∥uT1+T2+T3
j −cT1+T2+T3∥ ≤R1for every j∈J, andvT1+T2+T3n =vT1+T2n . Consider the
inner product between creator nand any of the first n−1creators i∈ {1, . . . , n −1}. By the convex
cone property (Lemma D.2),
⟨vT1+T2+T3
n ,vT1+T2+T3
i ⟩=⟨vT1+T2
n ,vT1+T2+T3
i ⟩
Lemma D.2 ≥min
⟨vT1+T2
n ,vT1+T2
i⟩,min
j∈J⟨vT1+T2
n ,uT1+T2
j⟩	
by (11), (12), (13) ≥min
⟨vT1
n,cT1⟩+ηc
ηu+ηc
1−R2
1
2− ⟨vT1
n,cT1⟩ −R1
−R1,1−R2
1
2	
=⟨vT1
n,cT1⟩+ηc
ηu+ηc
1−R2
1
2− ⟨vT1
n,cT1⟩ −R1
−R1 (14)
where the last equality is because, under the assumption of ∥vT1n−cT1∥> R=q
(ηu
ηc+ 2)4 R1,
⟨vT1
n,cT1⟩+ηc
ηu+ηc
1−R2
1
2− ⟨vT1
n,cT1⟩ −R1
−R1
=ηu
ηu+ηc⟨vT1
n,cT1⟩+ηc
ηu+ηc
1−R2
1
2−R1
−R1
=ηu
ηu+ηc
1−1
2∥vT1
2−cT1∥2
+ηc
ηu+ηc
1−R2
1
2−R1
−R1
≤ηu
ηu+ηc
1−1
2(ηu
ηc+ 2)4 R1
+ηc
ηu+ηc
1−R2
1
2−R1
−R1
≤max{1−1
2(ηu
ηc+ 2)4 R1,1−R2
1
2−R1} −R1
= 1−R2
1
2−R1−R1≤1−R2
1
2.
From (14) and ∥vT1+T2+T3
i −cT1+T2+T3∥ ≤R1,
⟨vT1+T2+T3
n ,cT1+T2+T3⟩ ≥ ⟨ vT1+T2
n ,vT1+T2+T3
i ⟩ − ∥vT1+T2+T3
i −cT1+T2+T3∥
≥ ⟨vT1
n,cT1⟩+ηc
ηu+ηc
1−R2
1
2− ⟨vT1
n,cT1⟩ −R1
−2R1.
Using 1to minus the above inequality, we obtain
1− ⟨vT1+T2+T3
n ,cT1+T2+T3⟩ ≤ηu
ηu+ηc
1− ⟨vT1
n,cT1⟩
+ηc
ηu+ηc
R2
1
2+R1
+ 2R1.
LetFt= 1− ⟨vt
n,ct⟩, then
FT1+T2+T3≤ηu
ηu+ηcFT1+ηc
ηu+ηc
R2
1
2+R1
+ 2R1. (15)
29Repeat steps (2) and (3) for Ktimes. Then, using (15) for Ktimes,
FT1+K(T2+T3)≤ηu
ηu+ηcFT1+(K−1)(T2+T3)+ηc
ηu+ηc
R2
1
2+R1
+ 2R1
≤ηu
ηu+ηc
ηu
ηu+ηcFT1+(K−2)(T2+T3)+ηc
ηu+ηc
R2
1
2+R1
+ 2R1
+ηc
ηu+ηc
R2
1
2+R1
+ 2R1
...
≤ ηu
ηu+ηcKFT1+
1 +ηu
ηt+ηc+···+ ηu
ηt+ηcK−1
ηc
ηu+ηc
R2
1
2+R1
+ 2R1
≤ ηu
ηu+ηcK·1 +1
1−ηu
ηu+ηc
ηc
ηu+ηc
R2
1
2+R1
+ 2R1
= ηu
ηu+ηcK+R2
1
2+R1+ηu+ηc
ηc2R1
≤R2
1
2+R2
1
2+R1+ηu+ηc
ηc2R1≤ ηu
ηc+ 2)2 R1,
by choosing K=ln2
R2
1
lnηu+ηc
ηu≤ηu+ηc
ηcln2
R2
1. This means that, after repeating steps (2) and (3) for K
times, we must have
∥vT1+K(T2+T3)
n −cT1+K(T2+T3)∥=q
2 
1− ⟨vT1+K(T2+T3)
n ,cT1+K(T2+T3)⟩
=p
2FT1+K(T2+T3)≤q
2 ηu
ηc+ 2)2 R1=R.
The above inequality, together with the fact that other creators i̸=nand all users in Jalready
satisfy (R1≤R,cT1+K(T2+T3))-consensus after step (3), implies that the whole system has reached
(R,cT1+K(T2+T3))-consensus.
The length of the path constructed above is at most:
T1+K(T2+T3)≤Ln−1,R1+ηu+ηc
ηcln2
R2
1
8
3ηuLfln2|J|
R2
1+Ln−1,R1
=Ln,R<+∞,
which is finite.
Lemma F.4. Consider a subsystem of ncreators {vt
1, . . . ,vt
n} and|J|users{ut
j}j∈J. Assume:
•Initially, the first n−1creators and all users are in R0-consensus: ∥v0
i−c∥ ≤ R0,
∥u0
j−c∥ ≤R0, with 0< R 0<ηc
5(ηc+ηu).
•⟨v0
n,u0
j0⟩>0for some j0∈J.
•g(uj,vi) = sign( ⟨uj,vi⟩).
•Assumption of Lemma F .1.
Then, for any R∈(0,1), there exists a path of finite length that leads the initial state (U0,V0)to
R-consensus.
Proof. First, we recommend creator nto user j0forT=8
3ηuLfln2
R2
0steps, while recommending
other creators to other users arbitrarily. Applying Lemma D.6 with y=u0
j0, we get
⟨vT
n,u0
j0⟩ − ⟨v0
n,u0
j0⟩ ≥ηc
ηu+ηc
⟨u0
j0,u0
j0⟩ − ⟨v0
n,u0
j0⟩ −R0
=ηc
ηu+ηc
1− ⟨v0
n,u0
j0⟩ −R0
.
(16)
On the other hand, because the first n−1creators and all users in J\{j0}form an (R0,c)-consensus
at time step 0, according to Observation 3.2, they still form an (R0,c)-consensus at time step T, so
∥vT
i−c∥ ≤R0for every i∈ {1, . . . , n −1}. This implies, for every i∈ {1, . . . , n −1},
⟨vT
n,vT
i⟩ − ⟨vT
n,u0
j0⟩ ≥ − ∥ vT
i−u0
j0∥ ≥ − ∥ vT
i−c∥ − ∥c−u0
j0∥ ≥ − 2R0. (17)
30Adding (16) and (17) and moving ⟨v0
n,u0
j0⟩to the right side, we get
⟨vT
n,vT
i⟩ ≥ ⟨ v0
n,u0
j0⟩+ηc
ηu+ηc
1− ⟨v0
n,u0
j0⟩ −R0
−2R0
=ηu
ηu+ηc⟨v0
n,u0
j0⟩+ηc
ηu+ηc 
1−R0
−2R0
>0 +ηc
ηu+ηc 
1−R0
−2R0>0,
under the condition of R0<ηc
5(ηu+ηc). Moreover, for every j∈J\ {j0}, because ∥uT
j−vT
i∥ ≤
∥uT
j−c∥+∥c−vT
i∥ ≤2R0,
⟨vT
n,uT
j⟩ ≥ ⟨ vT
n,vT
i⟩ − ∥uT
j−vT
i∥ ≥ηc
ηu+ηc 
1−R0
−4R0>0.
Forj0, by Lemma F.1, ∥vT
n−uT
j0∥ ≤R0, so
⟨vT
n,uT
j0⟩= 1−1
2∥vT
n−uT
j0∥2≥1−R2
0
2>0.
For the inner product between any creator i∈ {1, . . . , n −1}and the users:
⟨vT
i,uT
j0⟩ ≥ ⟨ vT
i,vT
n⟩ − ∥vT
n−uT
j0∥ ≥ηc
ηu+ηc 
1−R0
−2R0−R0=ηc
ηu+ηc 
1−R0
−3R0>0;
∀j∈J\ {j0},⟨vT
i,uT
j⟩= 1−1
2∥vT
i−uT
j∥2≥1−1
2 
∥vT
i−c∥+∥c−uT
j∥2>1−1
2(2R0)2>0.
All of the “ >0” inequalities above show that the system of {vT
i}i∈[n]and{uT
j}j∈Jsatisfies the
condition of Lemma F.3. So, there exists a path of finite length T2<+∞that leads the system
toR-consensus by Lemma F.3. The total length of path T+T2=8
3ηuLfln2
R2
0+T2<+∞is
finite.
Lemma 3.4. Suppose ηc≤ηuLf
2andηu<1
2. For any R > 0, for almost every state (Ut,Vt)in
the state space, there exists a path (Ut,Vt)→(Ut+1,Vt+1)→ ··· → (Ut+T,Vt+T)of finite
length that leads to an R-bi-polarization state (Ut+T,Vt+T).
Proof. We prove this lemma by induction on the number of creators n. The case for n= 1directly
follows from Corollary F.2 which shows that, for any system of n= 1creator and |J|users with
no⟨v0
i,u0
j⟩= 0, there exists a path of length at most LR
1=8
3ηuLFln2|J|
R2<+∞that leads to
R-bi-polarization.
Consider n≥2. Consider the subsystem consisting of the first n−1creators {vt
1, . . . ,vt
n−1}and all
users. Let R0=ηc
6(ηc+ηu). By induction, there exists a path of finite length T1=LR0
n−1<+∞that
leads the subsystem to R0-bi-polarization, with some vector c0∈Sd−1, so every vT1
iisR0-close to
+c0or−c0, fori̸=n, and every uT1
jisR0-close to +c0or−c0. Define:
˜vt
i=vt
i ifvT1
iisR0-close to +c
−vt
iifvT1
iisR0-close to −c∀i̸=n, ˜ut
j=(
ut
j ifuT1
jisR0-close to +c
−ut
jifuT1
jisR0-close to −c∀j∈J.
By definition, we have
∥˜vT1
i−c0∥ ≤R0,∀i̸=n, ∥˜uT1
j−c0∥ ≤R0,∀j∈J.
This means that {˜vT1
i}i̸=nand{˜uT1
j}j∈Jform an (R0,c0)-consensus. Consider creator n. Let
˜vt
n=(
vt
n if⟨vT1n,˜uT1
j0⟩>0for some j0∈J
−vt
nif⟨vT1n,˜uT1
j⟩<0for all j∈J.
(The case where ⟨vT1n,˜uT1
j⟩= 0for some j∈Jis ignored because the initial states that can lead to
such states have measure 0.) By definition, we have
⟨˜vT1
n,˜uT1
j0⟩>0for some j0∈J.
Note that, at time step T1, the system consisting of {˜vT1
i}i∈[n]and{˜uT1
j}j∈Jsatisfies the condition
of Lemma F.4, so there exists a path of length T2=˜LR
n<+∞that leads the system to R-consensus.
Then by the reflection lemma (Lemma D.7), the original system {vt
i}i∈[n],{ut
j}j∈Jmust reach
R-bi-polarization. The total length of path that leads to this R-bi-polarization is LR
n=T1+T2=
LR0
n−1+˜LR
n<+∞.
31G Missing Proofs from Section 4
G.1 Proof of Proposition 4.2
LetR >0be any small number. Let c1, . . . ,c⌊n/k⌋∈Rdbe⌊n/k⌋vectors that satisfy B(cℓ,2R)∩
B(cℓ′,2R) =∅forℓ̸=ℓ′, where B(c, R)is the ball centered at cwith radius R:{x∈Rd:
∥x−c∥2≤R}. Consider user and creator features (Ut,Vt)that satisfy: every ball B(cℓ, R)
(ℓ= 1, . . . ,⌊n/k⌋) contains kcreator vectors, and every user vector ut
jis in one of the balls
B(cℓ, R). By definition, (Ut,Vt)form⌊n/k⌋clusters. We show that, after one step of update, the
new state (Ut+1,Vt+1)must still form ⌊n/k⌋clusters. Consider any user j. Suppose ut
j∈B(cℓ, R),
then the distance from ut
jto any creator vt
i∈B(cℓ, R)is at most 2R:
∥ut
j−vt
i∥ ≤2R.
The distance from ut
jto any creator vt
i′not in B(cℓ, R)is greater than 2R:
∥ut
j−vt
i′∥>2R
because vt
i′is in some other ball B(cℓ′, R)that satisfies B(cℓ′,2R)∩B(cℓ,2R) =∅. This implies
that the inner products between user jand the creators in ball B(cℓ, R)are greater than that with the
creators in other ball:
∀vt
i∈B(cℓ, R),⟨ut
j,vt
i⟩= 1−1
2∥ut
j−vt
i∥2
2≥1−1
2(2R)2>1−1
2∥ut
j−vt
i′∥=⟨ut
j,vt
i⟩,∀vt
i′∈B(cℓ′, R).
Since B(cℓ, R)contains kcreators, these kcreators are the k-most relevant ones to user j, so user j
will only be recommended these creators. Then, by applying Observation 3.2 to each of the ⌊n/k⌋
balls separately, we see that each ball is a R-consensus and hence absorbing. So, the new state
(Ut+1,Vt+1)still forms ⌊n/k⌋clusters with these ⌊n/k⌋balls.
G.2 Proof of Proposition 4.3
Thed-dimensional simplex centered at the original has d+1vectors with negative inner products with
each other. They form d+1clusters. Since user-creator pairs with negative inner product ⟨ui,vj⟩<0
are not recommended, recommendations only happen within each cluster. By Observation 3.2, each
cluster is absorbing, so the whole system is stable, keep forming d+ 1clusters forever.
H Additional Discussion on Real-World Recommender Systems
Here we further discuss real-world recommender systems’ properties and designs that are currently
not covered in our main paper. We plan to generalize our model in the future to further capture these
features and discuss insightful findings, but having them in the current paper may be a distraction to
our main findings.
H.1 User and Creator Retention and Activeness
In our current model, the users and creators will stay in the system from the start to the end. However,
in real-world recommender systems, users and creators may leave the platform either permanently
or for a certain period. Meanwhile, new users and creators will join the platform. Such join and
leave dynamics are also influenced by the recommendations’ relevance and diversity, which further
complicate the problem. Moreover, users and creators have different activeness levels on the platform,
e.g., some users may watch a lot more videos than others, and some creators may post a lot more
creations, these effects will also be strongly correlated with the dual influence of the recommender
system.
H.2 Creation Quality
Creation quality is a major factor influencing users’ feedback in addition to the creation style, e.g.,
well-made cuisine videos could also be fun and liked by gamers and pet lovers, which we need more
than a collaborative filtering type of modeling like our current model to capture such features. A
32potential solution to boost both long-term system diversity and single-shot recommendation diversity
is to design mechanisms that can incentivize creators to create higher-quality videos instead of
changing their creation styles.
H.3 Cold Start
Cold Start is widely used in real-world recommender systems for newly published items. Due
to the lack of user-item interactions on new items, the systems randomly recommend these new
items to users and collect data for collaborative filtering. In our current model, if we consider the
creators creating new items in each time step under their current time creation style, then cold start
guarantees the conditions in Theorem 3.3. But if we consider the system to have good enough content
understanding ability and can accurately predict the new creations’ embeddings, the cold start is not
necessary and our model and results in the top- ktruncation and threshold truncation parts are valid.
We also highlight a subtle difference between cold start and random traffic, if cold start is used on
creators instead of items, then after the creator is exposed to users a certain number of times, the
system will not guarantee to provide a non-zero probability of recommending this creator, and thus
the conditions in Theorem 3.3 may not hold.
33NeurIPS Paper Checklist
1.Claims
Question: Do the main claims made in the abstract and introduction accurately reflect the
paper’s contributions and scope?
Answer: [Yes]
Justification:
Guidelines:
•The answer NA means that the abstract and introduction do not include the claims
made in the paper.
•The abstract and/or introduction should clearly state the claims made, including the
contributions made in the paper and important assumptions and limitations. A No or
NA answer to this question will not be perceived well by the reviewers.
•The claims made should match theoretical and experimental results, and reflect how
much the results can be expected to generalize to other settings.
•It is fine to include aspirational goals as motivation as long as it is clear that these goals
are not attained by the paper.
2.Limitations
Question: Does the paper discuss the limitations of the work performed by the authors?
Answer: [Yes]
Justification: Limitations are discussed in Section 6 and Section H.
Guidelines:
•The answer NA means that the paper has no limitation while the answer No means that
the paper has limitations, but those are not discussed in the paper.
• The authors are encouraged to create a separate "Limitations" section in their paper.
•The paper should point out any strong assumptions and how robust the results are to
violations of these assumptions (e.g., independence assumptions, noiseless settings,
model well-specification, asymptotic approximations only holding locally). The authors
should reflect on how these assumptions might be violated in practice and what the
implications would be.
•The authors should reflect on the scope of the claims made, e.g., if the approach was
only tested on a few datasets or with a few runs. In general, empirical results often
depend on implicit assumptions, which should be articulated.
•The authors should reflect on the factors that influence the performance of the approach.
For example, a facial recognition algorithm may perform poorly when image resolution
is low or images are taken in low lighting. Or a speech-to-text system might not be
used reliably to provide closed captions for online lectures because it fails to handle
technical jargon.
•The authors should discuss the computational efficiency of the proposed algorithms
and how they scale with dataset size.
•If applicable, the authors should discuss possible limitations of their approach to
address problems of privacy and fairness.
•While the authors might fear that complete honesty about limitations might be used by
reviewers as grounds for rejection, a worse outcome might be that reviewers discover
limitations that aren’t acknowledged in the paper. The authors should use their best
judgment and recognize that individual actions in favor of transparency play an impor-
tant role in developing norms that preserve the integrity of the community. Reviewers
will be specifically instructed to not penalize honesty concerning limitations.
3.Theory Assumptions and Proofs
Question: For each theoretical result, does the paper provide the full set of assumptions and
a complete (and correct) proof?
Answer: [Yes]
34Justification: Proof sketches are given in the body and the full proofs are in the appendix.
Guidelines:
• The answer NA means that the paper does not include theoretical results.
•All the theorems, formulas, and proofs in the paper should be numbered and cross-
referenced.
•All assumptions should be clearly stated or referenced in the statement of any theorems.
•The proofs can either appear in the main paper or the supplemental material, but if
they appear in the supplemental material, the authors are encouraged to provide a short
proof sketch to provide intuition.
•Inversely, any informal proof provided in the core of the paper should be complemented
by formal proofs provided in appendix or supplemental material.
• Theorems and Lemmas that the proof relies upon should be properly referenced.
4.Experimental Result Reproducibility
Question: Does the paper fully disclose all the information needed to reproduce the main ex-
perimental results of the paper to the extent that it affects the main claims and/or conclusions
of the paper (regardless of whether the code and data are provided or not)?
Answer: [Yes]
Justification: Experiment details are provided in Section 5 and Section C.
Guidelines:
• The answer NA means that the paper does not include experiments.
•If the paper includes experiments, a No answer to this question will not be perceived
well by the reviewers: Making the paper reproducible is important, regardless of
whether the code and data are provided or not.
•If the contribution is a dataset and/or model, the authors should describe the steps taken
to make their results reproducible or verifiable.
•Depending on the contribution, reproducibility can be accomplished in various ways.
For example, if the contribution is a novel architecture, describing the architecture fully
might suffice, or if the contribution is a specific model and empirical evaluation, it may
be necessary to either make it possible for others to replicate the model with the same
dataset, or provide access to the model. In general. releasing code and data is often
one good way to accomplish this, but reproducibility can also be provided via detailed
instructions for how to replicate the results, access to a hosted model (e.g., in the case
of a large language model), releasing of a model checkpoint, or other means that are
appropriate to the research performed.
•While NeurIPS does not require releasing code, the conference does require all submis-
sions to provide some reasonable avenue for reproducibility, which may depend on the
nature of the contribution. For example
(a)If the contribution is primarily a new algorithm, the paper should make it clear how
to reproduce that algorithm.
(b)If the contribution is primarily a new model architecture, the paper should describe
the architecture clearly and fully.
(c)If the contribution is a new model (e.g., a large language model), then there should
either be a way to access this model for reproducing the results or a way to reproduce
the model (e.g., with an open-source dataset or instructions for how to construct
the dataset).
(d)We recognize that reproducibility may be tricky in some cases, in which case
authors are welcome to describe the particular way they provide for reproducibility.
In the case of closed-source models, it may be that access to the model is limited in
some way (e.g., to registered users), but it should be possible for other researchers
to have some path to reproducing or verifying the results.
5.Open access to data and code
Question: Does the paper provide open access to the data and code, with sufficient instruc-
tions to faithfully reproduce the main experimental results, as described in supplemental
material?
35Answer: [Yes]
Justification: Provided in the supplemental file.
Guidelines:
• The answer NA means that paper does not include experiments requiring code.
•Please see the NeurIPS code and data submission guidelines ( https://nips.cc/
public/guides/CodeSubmissionPolicy ) for more details.
•While we encourage the release of code and data, we understand that this might not be
possible, so “No” is an acceptable answer. Papers cannot be rejected simply for not
including code, unless this is central to the contribution (e.g., for a new open-source
benchmark).
•The instructions should contain the exact command and environment needed to run to
reproduce the results. See the NeurIPS code and data submission guidelines ( https:
//nips.cc/public/guides/CodeSubmissionPolicy ) for more details.
•The authors should provide instructions on data access and preparation, including how
to access the raw data, preprocessed data, intermediate data, and generated data, etc.
•The authors should provide scripts to reproduce all experimental results for the new
proposed method and baselines. If only a subset of experiments are reproducible, they
should state which ones are omitted from the script and why.
•At submission time, to preserve anonymity, the authors should release anonymized
versions (if applicable).
•Providing as much information as possible in supplemental material (appended to the
paper) is recommended, but including URLs to data and code is permitted.
6.Experimental Setting/Details
Question: Does the paper specify all the training and test details (e.g., data splits, hyper-
parameters, how they were chosen, type of optimizer, etc.) necessary to understand the
results?
Answer: [Yes]
Justification: See Section 5.
Guidelines:
• The answer NA means that the paper does not include experiments.
•The experimental setting should be presented in the core of the paper to a level of detail
that is necessary to appreciate the results and make sense of them.
•The full details can be provided either with the code, in appendix, or as supplemental
material.
7.Experiment Statistical Significance
Question: Does the paper report error bars suitably and correctly defined or other appropriate
information about the statistical significance of the experiments?
Answer: [Yes]
Justification:
Guidelines:
• The answer NA means that the paper does not include experiments.
•The authors should answer "Yes" if the results are accompanied by error bars, confi-
dence intervals, or statistical significance tests, at least for the experiments that support
the main claims of the paper.
•The factors of variability that the error bars are capturing should be clearly stated (for
example, train/test split, initialization, random drawing of some parameter, or overall
run with given experimental conditions).
•The method for calculating the error bars should be explained (closed form formula,
call to a library function, bootstrap, etc.)
• The assumptions made should be given (e.g., Normally distributed errors).
•It should be clear whether the error bar is the standard deviation or the standard error
of the mean.
36•It is OK to report 1-sigma error bars, but one should state it. The authors should
preferably report a 2-sigma error bar than state that they have a 96% CI, if the hypothesis
of Normality of errors is not verified.
•For asymmetric distributions, the authors should be careful not to show in tables or
figures symmetric error bars that would yield results that are out of range (e.g. negative
error rates).
•If error bars are reported in tables or plots, The authors should explain in the text how
they were calculated and reference the corresponding figures or tables in the text.
8.Experiments Compute Resources
Question: For each experiment, does the paper provide sufficient information on the com-
puter resources (type of compute workers, memory, time of execution) needed to reproduce
the experiments?
Answer: [NA]
Justification: Computer resources are not a limitation in our experiments.
Guidelines:
• The answer NA means that the paper does not include experiments.
•The paper should indicate the type of compute workers CPU or GPU, internal cluster,
or cloud provider, including relevant memory and storage.
•The paper should provide the amount of compute required for each of the individual
experimental runs as well as estimate the total compute.
•The paper should disclose whether the full research project required more compute
than the experiments reported in the paper (e.g., preliminary or failed experiments that
didn’t make it into the paper).
9.Code Of Ethics
Question: Does the research conducted in the paper conform, in every respect, with the
NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines ?
Answer: [Yes]
Justification:
Guidelines:
•The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.
•If the authors answer No, they should explain the special circumstances that require a
deviation from the Code of Ethics.
•The authors should make sure to preserve anonymity (e.g., if there is a special consid-
eration due to laws or regulations in their jurisdiction).
10.Broader Impacts
Question: Does the paper discuss both potential positive societal impacts and negative
societal impacts of the work performed?
Answer: [Yes]
Justification: Discussed in Section 6.
Guidelines:
• The answer NA means that there is no societal impact of the work performed.
•If the authors answer NA or No, they should explain why their work has no societal
impact or why the paper does not address societal impact.
•Examples of negative societal impacts include potential malicious or unintended uses
(e.g., disinformation, generating fake profiles, surveillance), fairness considerations
(e.g., deployment of technologies that could make decisions that unfairly impact specific
groups), privacy considerations, and security considerations.
•The conference expects that many papers will be foundational research and not tied
to particular applications, let alone deployments. However, if there is a direct path to
any negative applications, the authors should point it out. For example, it is legitimate
to point out that an improvement in the quality of generative models could be used to
37generate deepfakes for disinformation. On the other hand, it is not needed to point out
that a generic algorithm for optimizing neural networks could enable people to train
models that generate Deepfakes faster.
•The authors should consider possible harms that could arise when the technology is
being used as intended and functioning correctly, harms that could arise when the
technology is being used as intended but gives incorrect results, and harms following
from (intentional or unintentional) misuse of the technology.
•If there are negative societal impacts, the authors could also discuss possible mitigation
strategies (e.g., gated release of models, providing defenses in addition to attacks,
mechanisms for monitoring misuse, mechanisms to monitor how a system learns from
feedback over time, improving the efficiency and accessibility of ML).
11.Safeguards
Question: Does the paper describe safeguards that have been put in place for responsible
release of data or models that have a high risk for misuse (e.g., pretrained language models,
image generators, or scraped datasets)?
Answer: [NA]
Justification:
Guidelines:
• The answer NA means that the paper poses no such risks.
•Released models that have a high risk for misuse or dual-use should be released with
necessary safeguards to allow for controlled use of the model, for example by requiring
that users adhere to usage guidelines or restrictions to access the model or implementing
safety filters.
•Datasets that have been scraped from the Internet could pose safety risks. The authors
should describe how they avoided releasing unsafe images.
•We recognize that providing effective safeguards is challenging, and many papers do
not require this, but we encourage authors to take this into account and make a best
faith effort.
12.Licenses for existing assets
Question: Are the creators or original owners of assets (e.g., code, data, models), used in
the paper, properly credited and are the license and terms of use explicitly mentioned and
properly respected?
Answer: [Yes]
Justification:
Guidelines:
• The answer NA means that the paper does not use existing assets.
• The authors should cite the original paper that produced the code package or dataset.
•The authors should state which version of the asset is used and, if possible, include a
URL.
• The name of the license (e.g., CC-BY 4.0) should be included for each asset.
•For scraped data from a particular source (e.g., website), the copyright and terms of
service of that source should be provided.
•If assets are released, the license, copyright information, and terms of use in the
package should be provided. For popular datasets, paperswithcode.com/datasets
has curated licenses for some datasets. Their licensing guide can help determine the
license of a dataset.
•For existing datasets that are re-packaged, both the original license and the license of
the derived asset (if it has changed) should be provided.
•If this information is not available online, the authors are encouraged to reach out to
the asset’s creators.
13.New Assets
Question: Are new assets introduced in the paper well documented and is the documentation
provided alongside the assets?
38Answer: [NA]
Justification:
Guidelines:
• The answer NA means that the paper does not release new assets.
•Researchers should communicate the details of the dataset/code/model as part of their
submissions via structured templates. This includes details about training, license,
limitations, etc.
•The paper should discuss whether and how consent was obtained from people whose
asset is used.
•At submission time, remember to anonymize your assets (if applicable). You can either
create an anonymized URL or include an anonymized zip file.
14.Crowdsourcing and Research with Human Subjects
Question: For crowdsourcing experiments and research with human subjects, does the paper
include the full text of instructions given to participants and screenshots, if applicable, as
well as details about compensation (if any)?
Answer: [NA]
Justification:
Guidelines:
•The answer NA means that the paper does not involve crowdsourcing nor research with
human subjects.
•Including this information in the supplemental material is fine, but if the main contribu-
tion of the paper involves human subjects, then as much detail as possible should be
included in the main paper.
•According to the NeurIPS Code of Ethics, workers involved in data collection, curation,
or other labor should be paid at least the minimum wage in the country of the data
collector.
15.Institutional Review Board (IRB) Approvals or Equivalent for Research with Human
Subjects
Question: Does the paper describe potential risks incurred by study participants, whether
such risks were disclosed to the subjects, and whether Institutional Review Board (IRB)
approvals (or an equivalent approval/review based on the requirements of your country or
institution) were obtained?
Answer: [NA]
Justification:
Guidelines:
•The answer NA means that the paper does not involve crowdsourcing nor research with
human subjects.
•Depending on the country in which research is conducted, IRB approval (or equivalent)
may be required for any human subjects research. If you obtained IRB approval, you
should clearly state this in the paper.
•We recognize that the procedures for this may vary significantly between institutions
and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the
guidelines for their institution.
•For initial submissions, do not include any information that would break anonymity (if
applicable), such as the institution conducting the review.
39