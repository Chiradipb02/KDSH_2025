Estimating Generalization Performance Along the
Trajectory of Proximal SGD in Robust Regression
Kai Tan
Department of Statistics
Rutgers University
Piscataway, NJ 08854
kai.tan@rutgers.eduPierre C. Bellec
Department of Statistics
Rutgers University
Piscataway, NJ 08854
pierre.bellec@rutgers.edu
Abstract
This paper studies the generalization performance of iterates obtained by Gradient
Descent (GD), Stochastic Gradient Descent (SGD) and their proximal variants in
high-dimensional robust regression problems. The number of features is compa-
rable to the sample size and errors may be heavy-tailed. We introduce estimators
that precisely track the generalization error of the iterates along the trajectory of
the iterative algorithm. These estimators are provably consistent under suitable
conditions. The results are illustrated through several examples, including Huber
regression, pseudo-Huber regression, and their penalized variants with non-smooth
regularizer. We provide explicit generalization error estimates for iterates gener-
ated from GD and SGD, or from proximal SGD in the presence of a non-smooth
regularizer. The proposed risk estimates serve as effective proxies for the actual
generalization error, allowing us to determine the optimal stopping iteration that
minimizes the generalization error. Extensive simulations confirm the effectiveness
of the proposed generalization error estimates.
1 Introduction
Consider the linear model:
y=Xb∗+ε, (1)
where y∈Rnis the response vector, X∈Rn×pis the design matrix, b∗∈Rpis the unknown
regression vector, and ε∈Rnis the noise vector that we assume independent of X. The entries of ε
may be heavy-tailed, for instance our working assumptions allow for infinite second moment.
For the estimation of b∗, we consider the following regularized optimization problem
bb∈arg min
b∈Rp1
nnX
i=1ρ(yi−x⊤
ib) +g(b), (2)
where ρ:R→Ris a data-fitting loss and g:Rp→Ris a regularization function. In the
present robust regression setting, typical examples of ρinclude the Huber [ 14] loss ρ(r;δ) =
δ2R|r/δ|
0min(1 , x)dx, the Pseudo-Huber loss ρ(r;δ) =δ2(p
1 + (r/δ)2−1)or other Lipschitz
loss functions to combat the possible heavy-tails of the additive noise. Typical examples of penalty
functions include the L1/Lasso [ 27] penalty g(b) =λ∥b∥1, group-Lasso penalty [ 29] for grouped
variables, or their non-convex variants including for instance SCAD [12] or MCP [30].
In order to solve the optimization problem (2), practitioners resort to iterative algorithms, for instance
gradient descent, accelerated gradient descent, stochastic gradient descent, and the corresponding
proximal methods [ 20] in the presence of a non-smooth regularizer. Let the algorithm starts with
38th Conference on Neural Information Processing Systems (NeurIPS 2024).some initializer bb1∈Rp(typically bb1=0) followed by consecutive iterates bb2,bb3, . . ., where bbt
is typically obtained, for gradient descent and its variants as will be detailed below, from bbt−1and
by applying an additive correction involving the gradient of the objective function. Our goal of this
paper is to quantify the predictive performance of each iterate bbt.
We assume throughout that the covariance E[xix⊤
i] =Σof the feature vectors is finite. We measure
the predictive performance of bbtusing the out-of-sample error
Eh
x⊤
newbbt−x⊤
newb∗2
|(xi, yi)i∈[n]i
=∥Σ1/2(bbt−b∗)∥2
where xnewis a new feature vector, independent of the data (xi, yi)i∈[n]and has the same distribution
asxi. The above squared metric is used because the noise εi(and thus yi) is allowed to have infinite
variance, and in this case the squared prediction error E[(x⊤
newbbt−ynew)2|(xi, yi)i∈[n]] = +∞
irrespective of the value of bbt.
The paper proposes to estimate the out-of-sample error ∥Σ1/2(bbt−b∗)∥2of the t-th iterate using the
right-hand side of the approximation
∥Σ1/2(bbt−b∗)∥2+∥ε∥2/n≈(y−Xbbt) +t−1X
s=1wt,sSsψ(y−Xbbs)2
/n, (3)
where ψ:Rn→Ris the derivative of ρacting component-wise on each coordinate in Rnand
Ssis a diagonal matrix of the form Ss=P
i∈Iseie⊤
iwhere Is⊂[n]is the batch for the s-th
stochastic gradient update and ei∈Rnis the i-th canonical basis vector. Here the wt,sare quantities,
introduced in Section 3.3 below, that can be computed from data and do not require the knowledge of
Σ. The approximation (3)is made rigorous in Theorem 3.6, where the right-hand side is proved to be
consistent (i.e., the difference between the two sides of the inequality converges to 0 in probability)
for a first set of weights (ws,t)s<t, and in Theorem 3.7 where a second set of weights are proposed.
Because the right-hand side of (3)is observable from the data and the iterates (bbs)s≤tare computed
from the iterative algorithm, the approximation (3)lets us compare the out-of-sample error of iterates
bbtat different time tup to the additive term ∥ε∥2/n(which does not depend on tnor on the choice
of the iterative scheme or the choice of loss and penalty). It also lets us compare different tuning
parameters, for instance learning rate, multiplicative parameter of the penalty function, batch size in
Stochastic Gradient Descent (SGD). The right-hand side of (3)can serve as the criteria to choose the
iteration number or tuning parameters that achieves the smallest out-of-sample error.
1.1 Related literature
Estimation of prediction risk of regression estimates has received significant attention in the last
few decades. One natural avenue to estimate the generalization performance is to use V-fold cross-
validation or leave-one-out schemes. In the proportional regime of interest here, where dimension
pand sample size nare of the same order, V-fold cross-validation with finite V, e.g., V= 5,10is
known to fail at consistently estimate the risk of the estimator trained on the full dataset [23, Figure
1]; this is simply explained because training with the biased sample size n(V−1)/Vmay behave
differently than training with the full dataset. Leave-one-out schemes, or drastically increasing V,
requires numerous refitting and is thus computationally expensive.
This motivates computationally efficient estimates of the risk of an estimator trained on the full dataset
without sample-splitting, including Approximate Leave-One-out (ALO) schemes [ 23] that do not rely
on sample-splitting and refitting; see [ 1] and the references therein for recent developments. For ridge
regression and other estimators constructed from the square loss, the Generalized Cross-Validation
(GCV) [ 28] has been shown be to be effective, and it avoids data-splitting and refitting; it only
needs to fit the full data once and then adjust the training error by a multiplicative factor larger than
1. Beyond ridge regression, the extension of GCV using degrees-of-freedom has been studied for
Lasso regression [ 2,3,18,9], and alternatives were developed for robust M-estimators [ 3,4]. While
ALO or GCV and its extensions are good estimators of the predictive risk of a solution bbto the
optimization problem (2), they are not readily applicable to quantify the prediction risk of iterates
bbtobtained by widely-used iterative algorithms such as gradient descent (GD), stochastic gradient
2descent (SGD) or their proximal variants: ALO and GCV focus on estimating the final (t→+∞)
iterate of the algorithm, when a solution bbin(2)is found. Our goal in the present paper is to develop
risk estimation methodologies along the trajectory of the algorithm.
Luo et al. [17] developed methods to estimate the cross-validation error of iterates that solves an
empirical risk minimization problem. Their approach requires the Hessian of the objective function
to be well-conditioned (i.e., the smallest and largest eigenvalues are bounded) along all iterates.
This condition is not satisfied for the regression problems we consider in this paper, such as high-
dimensional robust regression with a Lasso penalty. In the context of least squares problems with
both pandnbeing large, [ 7] studied the fundamental limits on the performance of first order
methods, showing that these are dominated by a specific Approximate Message Passing algorithm.
Paquette et al. [19] demonstrated that the dynamics of Stochastic Gradient Descent (SGD) become
deterministic in the large sample and dimensional limit, providing explicit expressions for these
dynamics when the design matrix is isotropic. Our work differs from [ 19] in two key ways: First,
we address a more general regression problem incorporating a non-smooth regularizer, thereby
considering both SGD and proximal SGD; second, we offer explicit risk estimates for each iteration,
rather than focusing solely on the theoretical dynamics of the iterates. Celentano et al. [8]and [ 13]
characterize the dynamical mean-field dynamics of iterative schemes, and identify that the limiting
process involves a “memory” kernel, describing how the dynamics of early iterates affect later ones.
Most recently, and most closely related to the present paper, [ 5] proposed risk estimate for iterates bbt
obtained by running gradient descent and proximal gradient descent methods for solving penalized
least squares optimizations. However, [ 5] focuses exclusively on the square loss for ρin(3), which
is not readily applicable to robust regression with heavy tailed noise for which the Huber or other
robust losses must be used. Bellec and Tan [5]is further restricted to gradient updates using the full
dataset, which does not cover stochastic gradient descent. While several proof techniques used in the
present paper are inspired by [ 5], we will explain in Remark 3.8 that directly generalizing [ 5] to SGD
in robust regression leads to a poor risk estimate for small batch sizes. The proposal of the present
paper leverages out of batch samples to overcome this issue.
For gradient descent for the square loss and without penalty, Patil et al. [21] demonstrates both the
failure of GCV along the trajectory and the success of computationally expensive leave-one out
schemes, and develops a proposal to reduce the computational cost. Finally, let us mention the
works [ 10,16] that characterize the dynamics of the iterates in phase retrieval and matrix sensing
problems, assuming that a fresh batch of observations (independent of all previous updates) is used at
each iteration. This is different from the usual SGD setting studied in the present paper where the
observations used during a stochastic gradient update may be reused in future stochastic gradient
updates, creating intricate probabilistic dependence between gradient updates at different iterations.
Robust regression is highly valuable in real data analysis due to its ability to handle heavy-tailed noise
effectively, and we will see below that the use of stochastic gradient updates and data-fitting loss
functions different from the square loss require estimates that have a drastically different structure
that in the square loss case. The present paper develops generalization error estimates in situations
where no consistent estimate have been proposed: (1) we develop generalization error estimates
along the trajectory of iterative algorithms aimed at solving (2)for robust loss functions including the
pseudo-Huber loss; (2) the estimates are applicable not only to gradient updates involving the full
dataset (gradient descent and its variants), but also to SGD and proximal SGD where a random batch
is used for each update.
2 Problem setup
The paper studies iterative algorithms aimed at solving the optimization problem (2). We consider
the algorithm that generates iterates bbtfort= 1,2, ..., T according to the following iteration:
bbt+1=ϕt
bbt+ηt
|It|X⊤Stψ(y−Xbbt)
, (4)
where St∈Rn×nis the diagonal matrix St=P
i∈Iteie⊤
iforIt⊂[n]thet-th batch (independent
of(X,y)), where ϕt:Rp7→Rpandψ:Rn7→Rnare two functions and ηtis the step size.
Typically, ψ:Rn→Rnis the componentwise application of ρ′(where ρis the data-fitting loss in
(2)), and the matrix St∈Rn×nis diagonal with elements in {0,1}encoding the observations i∈[n]
3used in the t-th stochastic gradient update. The presence of Stand possibly nonlinear function ψ
is such that the above iteration scheme is not covered by previous related works including [ 5,21],
which only tackle St=In(full batch gradient updates) and ψ:Rn→Rnthe identity map ( ρin(2)
restricted to be the square loss). The iterative scheme (4), on the other hand, covers SGD with robust
loss functions.
In the next section, we first provide a few examples of algorithms encompassed in the general
iteration (4). This includes Gradient Descent (GD), Stochastic Gradient Descent (SGD), and their
corresponding proximal methods [ 20], Proximal GD and Proximal SGD. GD and SGD are widely
used in practice, while the proximal methods are particularly useful for solving the optimization
problem (2) with non-smooth regularizers.
2.1 Robust regression without penalty
If there are no penalties in (2), i.e., g(b) = 0 , then the minimization problem becomes
bb∈arg min
b∈Rp1
nnX
i=1ρ(yi−x⊤
ib).
To solve this problem, provided ρis differentiable, one may use gradient descent (SGD) and stochastic
gradient descent (SGD).
Example 2.1 (GD) .The GD method consists of the following iteration:
bbt+1=bbt+ηt
nX⊤ψ(y−Xbbt), (5)
where ψis the derivative of ρacting component-wise on its argument, and ηtis the step size (also
known as learning rate). For the least squares loss ρ(x) =x2/2, we have ψ(u) =u.
Example 2.2 (SGD) .Suppose at t-th iteration, we use the batch It⊂[n]to compute the gradient,
bbt+1=bbt+ηt
|It|X
i∈Itxiψ(yi−x⊤
ibbt) =bbt+ηt
|It|X⊤Stψ(y−Xbbt), (6)
where St=P
i∈Iteie⊤
iandeiis the i-th canonical vector in Rn. IfIt= [n]for each t, then
|It|=nandSt=In, hence this SGD method reduces to the GD method in (5).
2.2 Robust regression with Lasso penalty
Regularized regression is useful for high-dimensional regression problems where pis larger than
n. We consider the Lasso penalty g(b) =λ∥b∥1to fight for the curse of dimensionality and obtain
sparse estimates (our working assumptions, on the other hand, do not assume that the ground truth b∗
is sparse). While GD and SGD are not directly applicable to solve the optimization problem (2)with
Lasso penalty due to ∥ · ∥ 1lacking differentiability at 0, Proximal Gradient Descent (Proximal GD)
[20] and Stochastic Proximal Gradient Descent (Proximal SGD) can be used to solve this optimization
with Lasso penalty.
Example 2.3 (Proximal GD) .Forg(b) =λ∥b∥1in(2), the Proximal GD gives the following
iterations:
bbt+1= soft ληt bbt+ηt
nX⊤ψ(y−Xbbt)
,
where softθ(·)applies the soft-thresholding u7→sign(u)(|u| −θ)+component-wise.
Example 2.4 (Proximal SGD) .Similar to the Proximal GD, the Proximal SGD consists of the
following iterations:
bbt+1= soft ληt bbt+ηt
|It|X⊤Stψ(y−Xbbt)
.
Letρ′:Rn→Rnbe the function applies the derivative of ρ:R→Rto each of its component, i.e.,
ρ′(u) = (ρ′(u1), ..., ρ′(un))⊤. Then the above examples can be summarized in the following table
with different definition of ψ,ϕt, andSt.
4Table 1: Specification of ψ,ϕt,Stfor each algorithm
GD SGD Proximal GD Proximal SGD
ψ(u)ρ′(u)ρ′(u)ρ′(u) ρ′(u)
ϕt(v)v v softληt(v) softληt(v)
St In St In St
To define the proposed estimators of the generalization error, we further define the following Jacobian
matrices:
Dt=∂ψ(r)
∂r
r=y−Xbbt∈Rn×n,eDt=∂ϕt(v)
∂v
v=bbt+ηt
|It|X⊤Stψ(y−Xbbt)∈Rp×p.
Then, we have eDt=Ipfor GD and SGD, and eDt=P
j∈ˆSteje⊤
jfor Proximal GD and Proximal
SGD based on soft-thresholding, where ˆSt={j∈[p] :e⊤
jbbt+1̸= 0}.
3 Main results
Assumption 3.1. The design matrix Xhas i.i.d. rows from Np(0,Σ)for some positive definite matrix
Σsatisfying 0< λ min(Σ)≤1≤λmax(Σ)and∥Σ∥op∥Σ−1∥op≤κ. We assume Var[x⊤
ib∗]≤δ2,
that is, the signal of the model (1) is bounded from above.
Assumption 3.2. The noise εis independent of Xand has i.i.d. entries from a fixed distribution
independent of n, p, withE[|εi|]≤δ, that is, bounded first moment.
Assumption 3.3. The data fitting loss ρ:R→Ris convex, continuously differentiable and its
derivative ψis 1-Lipschitz and |ψ(x)| ≤δfor all x∈R. The function ϕtis 1-Lipschitz and satisfies
ϕt(0) =0. The matrices St=P
i∈Iteie⊤
i, and|It| ≥c0nfor some positive constant c0∈(0,1].
Letηmax= max t∈[T]ηt.
Huber loss and Psuedo-Huber loss all satisfy Assumption 3.3.
Assumption 3.4. The data fitting loss ρis twice continuously differentiable with positive second
derivative.
Assumption 3.5. The sample size nand feature dimension psatisfy p/n≤γfor a constant
γ∈(0,∞).
3.1 Intuition regarding the estimates of the generalization error
This subsection provides the intuition behind the definition of the estimates define below. For the
sake of clarify, and in this subsection only, assume that
Σ=Ip,ε=0, η t/|It|= 1/n. (7)
With the above working assumptions, the validity of the estimates defined below relies on the
probabilistic approximation
∥bbt−b∗∥2≈1
nnX
i=1
−x⊤
i(bbt−b∗) +pX
j=1e⊤
j∂bbt
∂xij2
,
which was developed in [ 3] for risk estimation purposes, but outside the context of iterative algorithms.
Above, ej∈Rpis the j-th canonical basis vector. In the present noiseless case with ε=0, the
first term inside the squared norm in the right-hand side is equal to the residual yi−x⊤
ibbt, so that
the above display resembles (3). Taking this probabilistic approximation for granted, to study the
second term in the right-hand side, we must understand the derivatives of bbtwith respect to the
entries (xij)i∈[n],j∈[p]ofX. In(4), each iterate is a relatively simple function of the previous ones,
with the simplifications (7)this isbbt+1=ϕt(bbt+X⊤Stψ(y−Xbbt)/n). Fort= 1, given that bb1
is a constant initialization,∂
∂xijbb2=eD1eje⊤
iS1ψ(y−Xbb1)/n−eD1X⊤S1D1ei(bb1−b∗)j/n.
We find in the proof, that when summing these quantities over j∈[p], the second term involving
5(bb1−b∗)jis negligible, and the same negligibility holds at later iterations with terms involving
(bbt−b∗)j(or any (bbs−b∗)j,s≤t). By performing a similar simple calculation at the next iteration,
and ignoring these terms, we find with f1
i=e⊤
iS1ψ(y−Xbb1)andf2
i=e⊤
iS2ψ(y−Xbb2)by
the chain rule
pX
j=1e⊤
j∂bb2
∂xij≈TrheD1
ni
|{z}
w2,1f1
i,pX
j=1e⊤
j∂bb3
∂xij≈TrheD2
ni
|{z}
w3,2f2
i+Trh
eD2(Ip−X⊤S2D2X/n)eD1/ni
| {z }
w3,1f1
i.
This reveals the weights (ws,t)s<tin(3)at iteration t= 2andt= 3. We could continue this further by
successive applications of the chain rule, although for later iterations this unrolling of the derivatives,
capturing the interplay between the Jacobians Dt,eDtand the stochastic gradient matrix St, becomes
increasingly complex. This recursive unrolling of the derivatives can be performed numerically at the
same time as the computation of the iterates. On the other hand, for the mathematical proof, for the
formal definition of the weights in (3)and for the proposed estimates of the generalization error, the
matrix notation defined in the next subsection exactly captures this unrolling of the derivatives.
3.2 Formal matrix notation to capture recursive derivatives
We now set up the matrix notation that captures this recursive unrolling of the derivatives by the
chain rule. Throughout, Tis the final number of iterations. Define three block diagonal matrices D ∈
RnT×nT,eD ∈RpT×pT, andS ∈RnT×nTbyD=PT
t=1 
(ete⊤
t)⊗Dt
,eD=PT
t=1 
(ete⊤
t)⊗eDt
,
andS=PT
t=1 
(ete⊤
t)⊗St
. Now we are ready to introduce the following matrices of size T×T:
W=pX
j=1(IT⊗e⊤
j)(IT⊗Σ1/2)Γ(IT⊗Σ1/2)(IT⊗ej), (8)
bA=nX
i=1(IT⊗e⊤
i)D(IT⊗X)Γ(IT⊗X⊤)(IT⊗ei), (9)
cK=TX
t=1Tr(Dt)ete⊤
t−nX
i=1(IT⊗e⊤
i)D(IT⊗X)Γ(IT⊗X⊤)SD(IT⊗ei), (10)
where Γ=M−1L(Λ⊗Ip)eD ∈RpT×pT,L=PT
t=2 
(ete⊤
t−1)⊗Ip
,Λ=PT
t=1ηt
|It|ete⊤
t,
M=
Ip
−P1Ip
......
−PT−1Ip
and Pt=eDt
Ip−ηt
|It|X⊤StDtX
.
Although notationally involved, the purpose of these matrices is just to formalize the recursive
computation of the derivatives by the chain rule mentioned in Section 3.1.
3.3 Main results: estimating the generalization error consistently
For each iterate bbt, define the target rt(generalization error) and its estimate ˆrtby
rtdef=∥Σ1/2(bbt−b∗)∥2+∥ε∥2
n, ˆrt=1
n(y−Xbbt) +t−1X
s=1wt,sSsψ(y−Xbbs)2
,(11)
where wt,s:=e⊤
tWe sandW∈RT×Tis the matrix defined in (8). The following shows that
|ˆrt−rt| →P0(convergence to 0 in probability) under suitable assumptions.
Theorem 3.6 (Proved in Appendix C.1) .Let Assumptions 3.1, 3.3 and 3.5 be fulfilled. Then ∀ϵ >0,
P
|ˆrt−rt|> ϵ
≤maxn
1,C(T, γ, η max, c0, δ, κ)
ϵo1√n+Eh
minn
1,∥ε∥
noi
. (12)
If additionally Assumption 3.2 holds then E[min{1,∥ε∥
n}]→0, so that, as n, p→+∞while
(T, γ, η max, c0, δ, κ, ϵ )are held fixed, the right-hand side converges to 0 and ˆrt−rtconverges to 0
in probability.
6This establishes that ˆrtis consistent at estimating rt. The statement E[min{1,∥ε∥/n}]→0is
equivalent to ∥ε∥2/n2→P0(convergence in probability), and is proved in [ 22] under the assumption
thatE|εi|<+∞withεii.i.d. from a fixed distribution; this allows Var[εi] = +∞as long as the first
moment is finite. The expression of Winvolves Σ, which is typically unknown in practice. Our next
result provides a consistent estimate of Wusing quantities that do not require the knowledge of Σ.
We propose to estimate WbyfWdef=cK−1bAwherecKandbAare the T×Tmatrices defined in
(9)-(10). We define another estimate ˜rtby replacing Win (11) with fW=cK−1bA:
˜rt=1
n(y−Xbbt) +t−1X
s=1˜wt,sSsψ(y−Xbbs)2
,
where ˜wt,s=e⊤
tfWe s.
Theorem 3.7 (Proved in Appendix C.3) .Under Assumptions 3.1 and 3.3 to 3.5, for any ϵ >0,
P
|˜rt−rt|> ϵ
≤2e−n/18+ maxn
1,C(T,γ,η max,c0,δ,κ)
ϵoh
1√n+E[min(1 ,∥ε∥
n)]i
.
If additionally Assumption 3.2 holds then E[min{1,∥ε∥
n}]→0, so that, as n, p→+∞while
(T, γ, η max, c0, δ, κ, ϵ )are held fixed, the right-hand side converges to 0 and ˜rt−rtconverges to 0
in probability.
This establishes the consistency of ˜rt. The simulations presented next confirm that the two estimates
˜rtandˆrtboth are accurate estimates of rt. The estimate ˜rthas the advantage of not relying on the
knowledge of Σand are recommended in practice.
Remark 3.8.We highlight that directly generalizing the approach in [ 5] would lead to the approx-
imation eA≈fKW , where eAandfKare given in (23) and(26), respectively. From eA≈fKW ,
obtaining an estimate of Wrequires inverting fK. However, this inversion fails for SGD for small
(but still very realistic) batch sizes of order 0.1nin simulations (see Figure 4). The matrix fKis
lower triangular, and the reason for the lack of invertibility of fKcan be seen in the diagonal terms
equal to Tr[StDt]in(26), where St∈ {0,1}n×nis the diagonal matrix with 1 in position (i, i)if
and only if the i-th observation is used in the t-th batch. This diagonal element of fKcan easily be
small (or even 0) for small batches, if the batch only contains observations such that (Dt)iiis 0 or
small. Let ˜rsub
tdenote the estimate of the same form as ˜rtbut using the weight matrix fK−1eAinstead.
Simulation results in Figure 4 confirm that ˜rsub
tis suboptimal compared to our proposed ˜rt. For
SGD and proximal SGD, we solved this issue regarding the invertibility of fKby using out-of-batch
samples in the construction of cKandbA, in order to avoid Stin the diagonal elements of cKin
equation (31). This is the key to making these estimators work for SGD and proximal SGD, and
this use of out-of-batch samples is new compared to [ 5] (which only tackles the square loss with
full-batch gradients).
Remark 3.9.The constant C(T, γ, η max, c0, δ, κ)in the above results is not explicit. Inspection
of the proof reveals that the dependence of this constant in Tis currently TT, allowing Tof
order log(n)/log log nbefore the bound becomes vacuous. Improving this dependence in Tappears
challenging and possibly out of reach of current tools, even for the well-studied Approximate Message
Passing (AMP) algorithms. The papers [ 25,24] feature for instance the same log(n)/log log n
dependence for approximating the risk of AMP. The preprint [ 15] offers the latest advances on the
dependence on Tin the bounds satisfied by AMP. It allows T≍poly(n)while still controlling certain
AMP related quantities, although for the risk [ 15, equations (16)-(17)] the condition required on T
is still logarithmic in n. This suggests that advances on this front are possible, at least for isotropic
design and specific loss and regularizer such as those studied in [ 15]: Lasso or Robust M-estimation
with no regularizer. Since these latest advances in [ 15] are obtained for specific estimates (Lasso or
Robust M-estimation with no regularizer), it may be possible to follow a similar strategy and improve
our bounds for specific examples of iterative algorithms closer to AMP, or algorithms featuring only
separable losses and penalty. We leave such improvements for specific examples for future work, as
the goal of the current paper is to cover a general framework allowing iterations of the form (4)with
little restriction on the nonlinear functions except being Lipschitz.
74 Simulation
In this section, we present numerical experiments to assess the performance of the proposed risk
estimates. All necessary code for reproducing these experiments is provided in the supplementary
material and is publicly available in the GitHub repository https://github.com/kaitan365/
SGD-generlization-errors . Our goal is to compare the performance of the proposed risk
estimates with the true risk rtfor different regression methods and iterative algorithms.
We generate the dataset (X,y)from the linear model (1), that is, y=Xb∗+ε. Here, the rows
ofX∈Rn×pare sampled from a centered multivariate normal distribution with covariance matrix
Σ=Ip. The noise vector εconsists of i.i.d. entries drawn from a tdistribution with two degrees of
freedom so that the noise variance is infinite. The true regression vector b∗∈Rpis chosen with p/20
nonzero entries, set to a constant value such that the signal strength ∥b∗∥2equals 10.
We explore two scenarios of the (n, p)pairs and corresponding iterative algorithms:
(i)(n, p) = (10000 ,5000) : In this configuration, with nmuch larger than p, we examine Huber
regression and Pseudo-Huber regression (without penalty or soft-thresholding). Both the
gradient descent (GD) and stochastic gradient descent (SGD) algorithms are implemented
for each type of regression.
(ii)(n, p) = (10000 ,12000) : Here, we investigate Huber regression and Pseudo-Huber regres-
sion with an L1 penalty, λ∥b∥1(λ= 0.002) and corresponding soft-thresholding step. For
each penalized regression, we employ the Proximal Gradient Descent (Proximal GD) and
Stochastic Proximal Gradient Descent (Proximal SGD) algorithms.
In all algorithms, we start with the initial vector bb1=0pand proceed with a fixed step size
η= (1 +p
p/n∗)−2where n∗=nfor GD and proximal GD, and n∗=n/5for SGD and
proximal SGD. We run each algorithm for T= 100 steps. For SGD and Proximal SGD, batches
It⊂ {1,2, . . . , n }are randomly sampled without replacement and independently of (X,y,(Is)s̸=t),
each with cardinality |It|=n
5.
A crucial component of the proposed risk estimates ˆrtand˜rtinvolve the weight matrices WandfW.
The matrix Wis defined in Theorem 3.6, and fW=cK−1bAis defined in Theorem 3.7. We employ
Hutchinson’s trace approximation to compute W,bA, andcK. This implementation is computationally
efficient. We refer readers to [5, Section 4] for more details.
Recall that we have proposed two estimates for rt=∥Σ1/2(bbt−b∗)∥2+∥ε∥2/n, one is ˆrtin
Theorem 3.6 which requires knowing Σ=E[xix⊤
i], and the other is ˜rtin Theorem 3.7 which does
not need Σ. Since the quantity ∥ε∥2/nremains constant along the algorithm trajectory, we only
focus on the estimation of ∥Σ1/2(bbt−b∗)∥2. We repeat each numerical experiment 100 times and
present the aggregated results in Figures 1, 2 and 3.
In Figure 1, we focus on the scenario with (n, p) = (10000 ,5000) , and plot the actual risk ∥Σ1/2(bbt−
b∗)∥2, and its two estimates ˆrt− ∥ε∥2/nand˜rt− ∥ε∥2/nalong with the 2 standard error bar for
GD and SGD algorithms applied to both Huber and Pseudo Huber regression. In Figure 2, we focus
on the scenario with (n, p) = (10000 ,12000) , and present the risk curves for the Proximal GD
and Proximal SGD algorithms applied to both L1-penalized Huber regression and Pseudo-Huber
regression.
Figure 1 and Figure 2 confirm the three curves are in close agreement, indicating that the proposed
estimates ˆrt− ∥ε∥2/nand˜rt− ∥ε∥2/nare consistent estimates of the actual risk ∥Σ1/2(bbt−b∗)∥2.
The two estimates closely capture the risk ∥Σ1/2(bbt−b∗)∥2over the entire trajectory of the algorithms.
For GD and Proximal GD, the risk curves exhibit a U-shape, first decreasing and then increasing,
and the estimates ˆrtand˜rtclosely capture this pattern. This suggests that the proposed estimates are
reliable and can be used to monitor the risk of the iterates and find the optimal iteration (the iteration
minimizing the generalization error) along the trajectory of the algorithm.
Additional experiments: varying step sizes for different iterations. We also conduct simulations
to investigate the accuracy of the proposed risk estimates in a setting with varying step size. We
consider two types of step sizes: 1). ηt= 1iftis odd, and ηt= 0iftis even; 2). ηt= 1iftis odd,
80 100 200 300 400 500
Iteration number t2345678910Value1/2(btb*)2
rt2/n
rt2/n
(a) Risk curves of GD for Huber regression
0 100 200 300 400 500
Iteration number t246810Value1/2(btb*)2
rt2/n
rt2/n
 (b) Risk curves of SGD for Huber regression
0 100 200 300 400 500
Iteration number t2345678910Value1/2(btb*)2
rt2/n
rt2/n
(c) Risk curves of GD for Pseudo-Huber re-
gression
0 100 200 300 400 500
Iteration number t246810Value1/2(btb*)2
rt2/n
rt2/n
(d) Risk curves of SGD for Pseudo-Huber
regression
Figure 1: Risk curves for Huber and Pseudo-Huber regression with GD and SGD algorithms for
the scenario (n, p) = (10000 ,5000) .Upper row: Huber regression, Lower row: Pseudo-Huber
regression. Left column: GD, Right column: SGD.
andηt= 0.5iftis even. While the above choices of step size are not preferred in practice, here the
goal is show that the proposed risk estimates is able to accurately capture the dynamics of the risk
even when the step size changes along the trajectory of the algorithm. For instance, the first choice of
step size should produce a risk curve that is flat when tis even. The results are presented in Figure 3,
illustrating that the risk estimates accurately capture the flat segments of the true risk curve.
Additional experiments: the estimate ˜rsub
tis suboptimal. We compare the performance of ˜rsub
t
with our proposed estimates in Huber regression with (n, p, T ) = (4000 ,1000,20)and batch size
|It|=n/10andηt= 0.2for all t∈[T]. It is clear from Figure 4 that ˜rtis more accurate than the
suboptimal estimator ˜rsub
t, especially when tincreases.
90 100 200 300 400 500
Iteration number t45678910Value1/2(btb*)2
rt2/n
rt2/n
(a) Risk curves of proximal GD for Huber
regression
0 100 200 300 400 500
Iteration number t345678910Value1/2(btb*)2
rt2/n
rt2/n
(b) Risk curves of proximal SGD for Huber
regression
0 100 200 300 400 500
Iteration number t45678910Value1/2(btb*)2
rt2/n
rt2/n
(c) Proximal GD for Pseudo-Huber regres-
sion
0 100 200 300 400 500
Iteration number t2345678910Value1/2(btb*)2
rt2/n
rt2/n
(d) Proximal SGD for Pseudo-Huber regres-
sion
Figure 2: Risk curves for L1-penalized Huber and Pseudo-Huber regression with Proximal GD and
Proximal SGD algorithms for the scenario (n, p) = (10000 ,12000) .Upper row: L1-penalized
Huber regression, Lower row: L1-penalized Pseudo-Huber regression. Left column: Proximal GD,
Right column: Proximal SGD.
5 Discussion
This paper proposes a novel risk estimate for the generalization error of iterates generated by the
proximal GD and proximal SGD algorithms in robust regression. The proposed risk estimates
accurately capture the predictive risk of the iterates along the trajectory of the algorithms, and are
provably consistent (Theorems 3.6 and 3.7). Three matrices in RT×Tin(8)-(10) reveal the interplay
between the squared risk, the residuals and the gradients, so that the approximation (3)holds. This
structure is different from the square loss case studied in [ 5] where only two matrices (inverse of each
other) are sufficient.
Let us mention some open questions along with potential future research directions. The first question
regards the probabilistic model: we currently assume Gaussian features xi, and it would be of interest
to study the extension in which our consistency results are universal, allowing non-Gaussian feature
distributions. Second, it is of interest to extend the current estimates to more general optimization
problems of the form (2)with non-smooth data-fitting loss, for instance the Least Absolute Deviation
loss∥y−Xb∥1. In this case the gradient does not exist at the origin, which calls for different
algorithms than the GD and SGD variants presented here, for instance the Alternating Direction
Method of Multipliers (ADMM) [ 6]. It is of independent interest to derive the risk estimates for
iterates obtained by such primal-dual methods.
10Acknowledgments
P. C. Bellec acknowledges partial support from the NSF Grants DMS-1945428 and DMS-2413679.
The authors acknowledge the Office of Advanced Research Computing (OARC) at Rutgers, The State
University of New Jersey for providing access to the Amarel cluster and associated research computing
resources that have contributed to the results reported here. The authors thank the anonymous
reviewers for their valuable comments and suggestions that helped improve the presentation of the
paper.
References
[1]Arnab Auddy, Haolin Zou, Kamiar Rahnamarad, and Arian Maleki. Approximate leave-one-out
cross validation for regression with l1 regularizers. In International Conference on Artificial
Intelligence and Statistics , pages 2377–2385. PMLR, 2024.
[2]Mohsen Bayati, Murat A Erdogdu, and Andrea Montanari. Estimating lasso risk and noise level.
InAdvances in Neural Information Processing Systems , volume 26. Curran Associates, Inc.,
2013.
[3]Pierre C Bellec. Out-of-sample error estimate for robust m-estimators with convex penalty.
Information and Inference: A Journal of the IMA , 12(4):2782–2817, 10 2023.
[4]Pierre C Bellec and Yiwei Shen. Derivatives and residual distribution of regularized m-estimators
with application to adaptive tuning. In Conference on Learning Theory , pages 1912–1947.
PMLR, 2022.
[5]Pierre C Bellec and Kai Tan. Uncertainty quantification for iterative algorithms in linear models
with application to early stopping. arXiv preprint arXiv:2404.17856 , 2024.
[6]Stephen Boyd, Neal Parikh, Eric Chu, Borja Peleato, and Jonathan Eckstein. Distributed opti-
mization and statistical learning via the alternating direction method of multipliers. Foundations
and Trends® in Machine learning , 3(1):1–122, 2011.
[7]Michael Celentano, Andrea Montanari, and Yuchen Wu. The estimation error of general first
order methods. In Conference on Learning Theory , pages 1078–1141. PMLR, 2020.
[8]Michael Celentano, Chen Cheng, and Andrea Montanari. The high-dimensional asymptotics of
first order methods with random data. arXiv preprint arXiv:2112.07572 , 2021.
[9]Michael Celentano, Andrea Montanari, and Yuting Wei. The Lasso with general Gaussian
designs with applications to hypothesis testing. Ann. Statist. , 51(5):2194–2220, 2023. ISSN
0090-5364.
[10] Kabir Aladin Chandrasekher, Ashwin Pananjady, and Christos Thrampoulidis. Sharp global
convergence guarantees for iterative nonconvex optimization: A gaussian process perspective.
arXiv preprint arXiv:2109.09859 , 2021.
[11] Kenneth R Davidson and Stanislaw J Szarek. Local operator theory, random matrices and
banach spaces. Handbook of the geometry of Banach spaces , 1(317-366):131, 2001.
[12] Jianqing Fan and Runze Li. Variable selection via nonconcave penalized likelihood and its
oracle properties. J. Amer. Statist. Assoc. , 96(456):1348–1360, 2001. ISSN 0162-1459.
[13] Cedric Gerbelot, Emanuele Troiani, Francesca Mignacco, Florent Krzakala, and Lenka Zde-
borova. Rigorous dynamical mean-field theory for stochastic gradient descent methods. SIAM J.
Math. Data Sci. , 6(2):400–427, 2024.
[14] Peter J Huber. Robust statistics , volume 523. John Wiley & Sons, 2004.
[15] Gen Li and Yuting Wei. A non-asymptotic distributional theory of approximate message passing
for sparse and robust regression. arXiv preprint arXiv:2401.03923 , 2024.
11[16] Mengqi Lou, Kabir Aladin Verchand, and Ashwin Pananjady. Hyperparameter tuning via
trajectory predictions: Stochastic prox-linear methods in matrix sensing. arXiv preprint
arXiv:2402.01599 , 2024.
[17] Yuetian Luo, Zhimei Ren, and Rina Barber. Iterative approximate cross-validation. In Interna-
tional Conference on Machine Learning , pages 23083–23102. PMLR, 2023.
[18] Léo Miolane and Andrea Montanari. The distribution of the Lasso: uniform control over sparse
balls and adaptive parameter tuning. Ann. Statist. , 49(4):2313–2335, 2021. ISSN 0090-5364.
[19] Courtney Paquette, Kiwon Lee, Fabian Pedregosa, and Elliot Paquette. Sgd in the large:
Average-case analysis, asymptotics, and stepsize criticality. In Conference on Learning Theory ,
pages 3548–3626. PMLR, 2021.
[20] Neal Parikh and Stephen Boyd. Proximal algorithms. Foundations and trends ®in Optimization ,
1(3):127–239, 2014.
[21] Pratik Patil, Yuchen Wu, and Ryan Tibshirani. Failures and successes of cross-validation for
early-stopped gradient descent. In International Conference on Artificial Intelligence and
Statistics , pages 2260–2268. PMLR, 2024.
[22] Iosif Pinelis. Large deviations: Growth of empirical average of iid non-negative random
varialbes with infinite expectations?, 2021. URL https://mathoverflow.net/q/390939 .
Accessed: 2024-05-21.
[23] Kamiar Rahnama Rad and Arian Maleki. A scalable estimate of the out-of-sample prediction
error via approximate leave-one-out cross-validation. J. R. Stat. Soc. Ser. B. Stat. Methodol. , 82
(4):965–996, 2020. ISSN 1369-7412.
[24] Cynthia Rush. An asymptotic rate for the lasso loss. In International Conference on Artificial
Intelligence and Statistics , pages 3664–3673. PMLR, 2020.
[25] Cynthia Rush and Ramji Venkataramanan. Finite sample analysis of approximate message
passing algorithms. IEEE Trans. Inform. Theory , 64(11):7264–7286, 2018.
[26] Kai Tan, Gabriel Romon, and Pierre C. Bellec. Noise covariance estimation in multi-task high-
dimensional linear models. Bernoulli , 30(3):1695 – 1722, 2024. doi: 10.3150/23-BEJ1644.
[27] Robert Tibshirani. Regression shrinkage and selection via the lasso. J. R. Stat. Soc. Ser. B Stat.
Methodol. , 58(1):267–288, 1996.
[28] Grace Wahba. A comparison of gcv and gml for choosing the smoothing parameter in the
generalized spline smoothing problem. Ann. Statist. , pages 1378–1402, 1985.
[29] Ming Yuan and Yi Lin. Model selection and estimation in regression with grouped variables. J.
R. Stat. Soc. Ser. B Stat. Methodol. , 68(1):49–67, 2006. ISSN 1369-7412.
[30] Cun-Hui Zhang. Nearly unbiased variable selection under minimax concave penalty. Ann.
Statist. , 38(2):894–942, 2010. ISSN 0090-5364.
12Supplementary Material of “Estimating Generalization Performance
Along the Trajectory of Proximal SGD in Robust Regression”
A Additional simulation results
The following figures illustrate the proposed risk estimates accurately estimate the trajectory of the
risk even when the step size changes at every step.
1234567891011121314151617181920
Iteration number t345678910Value1/2(btb*)2
rt2/n
rt2/n
(a)ηt= 1iftis odd, and ηt= 0iftis even.
1234567891011121314151617181920
Iteration number t246810Value1/2(btb*)2
rt2/n
rt2/n
 (b)ηt= 1iftis odd, and ηt= 0.5iftis even.
Figure 3: Risk curves for SGD applied to Huber regression with (n, p) = (3000 ,1000) using different
choices of step sizes. Left panel: ηt= 1iftis odd, and ηt= 0iftis even. Right panel: ηt= 1ift
is odd, and ηt= 0.5iftis even.
Figure 4 compares the performance of the proposed estimators ˆrt,˜rtand the estimator ˜rsub
tgeneral-
ized directly from [5]. It confirms that our proposed estimators outperforms ˜rsub
t.
1234567891011121314151617181920
Iteration number t246810Value1/2(btb*)2
rt2/n
rt2/n
rsub
t2/n
(a) Huber regression
1234567891011121314151617181920
Iteration number t2345678910Value1/2(btb*)2
rt2/n
rt2/n
rsub
t2/n
 (b) Pseudo-Huber regression
Figure 4: Risk curves for SGD applied to Huber and pseudo-Huber regression with (n, p, T ) =
(4000 ,1000,20),|It|=n/10andηt= 0.2for all t.
13B Auxiliary Results
Throughout, we define
E= [ε, ...,ε]∈Rn×T, F= [S1ψ(y−Xbb1), ...,STψ(y−XbbT)]∈Rn×T,(13)
H=Σ1/2[bb1−b∗, ...,bbT−b∗]∈Rp×T,R= [y−Xbb1, ...,y−XbbT]∈Rn×T.(14)
Note that in the above E,Hare not observable since εandb∗are unknown. However, FandRare
observable and can be easily computed once the iterates (bbt)t∈[T]are calculated.
B.1 Change of variables
In this section, we conduct the change of variable to simplify the proof. Specifically, we view the
linear model y=Xb∗+εas a model with design matrix Gand the regression vector θ∗, i.e.
y=Xb∗+ε=XΣ−1/2
|{z}
GΣ1/2b∗
|{z}
θ∗+ε.
This way, the design matrix Ghas i.i.d. entries from standard normal distribution. Using the same
argument in [ 5, Appendix D], we can show that the matrices H,F,bA,cKremains the same under the
change of variable. Therefore, we can prove the main results using the model with design matrix G
and the regression vector θ∗. In other words, we assume without of loss of generality that the design
matrix Xhas i.i.d. N(0,1), or equivalently that the independent rows of Xare normally distributed
with covariance Σ=Ip. We prove the main results using Σ=Ip, and the results for general Σ
follow by this change of variable with the constant C(T, γ, η max, c0, δ)appearing in the bounds
depending additionally on κ(the upper bound of the condition number of Σfrom Assumption 3.1).
B.2 Derivative formulae
In this section, we present derivative formulae that will be useful in later proofs. The following
formulas differ from [ 5] due to the use of robust loss functions and the application of SGD with
random batches at each iteration. The formulae are also significantly more complex than in the case
of regularized M-estimators [3, 4].
Lemma B.1 (Proved in Appendix D.1) .Let(bbt)t∈[T]be the iterates generated from the recursion (4)
and the initial value bb1is independent of X. Then the derivative of bbtwith respect to Xis given by
∂bbt
∂xij= (e⊤
t⊗Ip)Γh
((F⊤ei)⊗ej)−(IT⊗X⊤)SD((H⊤ej)⊗ei)i
, (15)
where Γ=M−1L(Λ⊗Ip)eD,L=PT
t=2 
(ete⊤
t−1)⊗Ip
,Λ=PT
t=1ηt
|It|ete⊤
t, and
M=
Ip
−P1Ip
......
−PT−1Ip
where Pt=eDt(Ip−ηt
|It|X⊤StDtX).
Recall F= [S1ψ(y−Xbb1), ...,STψ(y−XbbT)], we have Flt=e⊤
lStψ(y−Xbbt). The following
two corollaries are a direct consequence of Lemma B.1.
Lemma B.2 (Proved in Appendix D.2 ) .Under the same conditions of Lemma B.1. Let Flt=
e⊤
lFet=e⊤
lStψ(y−Xbbt), we have
∂Flt
∂xij=Dlt
ij+ ∆lt
ij, (16)
where
Dlt
ij=−e⊤
lStDteie⊤
jHet+ ((e⊤
jH)⊗e⊤
i)DS(IT⊗X)Γ⊤(IT⊗X⊤)SD(et⊗el),
∆lt
ij=−((e⊤
iF)⊗e⊤
j)Γ⊤(IT⊗X⊤)SD(et⊗el).
14Lemma B.3 (Proved in Appendix D.3) .LeteF= [ψ(y−Xbb1), ...,ψ(y−XbbT)]andeFl,t=e⊤
leFet.
Under the same conditions of Lemma B.1. We have
∂eFl,t
∂xij=˜Dlt
ij+˜∆lt
ij, (17)
where
˜Dlt
ij=−e⊤
lDteie⊤
jHet+ ((e⊤
jH)⊗e⊤
i)DS(IT⊗X)Γ⊤(IT⊗X⊤)D(et⊗el),
˜∆lt
ij=−((e⊤
iF)⊗e⊤
j)Γ⊤(IT⊗X⊤)D(et⊗el).
Definition B.4. Define the matrices Υ1∈Rp×T,Υ2∈Rn×T,Υ3∈RT×T,Υ4∈RT×T,
Υ5∈RT×Tby the identities
∀j∈[p],nX
i=1∂e⊤
iF
∂xij=−e⊤
jHfK⊤−e⊤
jΥ1, (18)
∀i∈[n],pX
j=1∂e⊤
jH
∂xij=e⊤
iFW⊤−e⊤
iΥ2, (19)
nX
i=1pX
j=1∂F⊤eie⊤
jH
∂xij=−fKH⊤H+F⊤FW⊤−Υ3, (20)
nX
i=1pX
j=1∂H⊤X⊤eie⊤
jH
∂xij= (nIT−eA)H⊤H+H⊤X⊤FW⊤−Υ4, (21)
nX
i=1pX
j=1∂F⊤eie⊤
jX⊤eF
∂xij=−fKH⊤X⊤eF+pF⊤eF−F⊤FbA⊤−Υ5, (22)
where the matrices fK,bA,eA,Ware defined as follows
eA=nX
i=1(IT⊗e⊤
i)(IT⊗X)Γ(IT⊗X⊤)SD(IT⊗ei), (23)
bA=nX
i=1(IT⊗e⊤
i)D(IT⊗X)Γ(IT⊗X⊤)(IT⊗ei), (24)
W=pX
j=1(IT⊗e⊤
j)Γ(IT⊗ej), (25)
fK=TX
t=1Tr(StDt)ete⊤
t−nX
i=1(IT⊗e⊤
i)SD(IT⊗X)Γ(IT⊗X⊤)SD(IT⊗ei). (26)
The matrices Υ1,Υ2, . . . are negligible in the sense that their Frobenius norms are of smaller orders
compared to their preceding terms in (18)–(22). We provide the bounds in next lemma, which is
obtained by deriving alternative expressions for Υ1, ...,Υ5in Appendix D.4.
Lemma B.5 (Proved in Appendix D.6) .Under the same conditions of Theorem 3.6 with Σ=Ip, we
have
max
k∈{1,3,4}E[∥Υk∥2
op|ε]≤C(T, γ, η max, c0)(δ2+∥b∗∥2),
E[∥Υ2∥2
op|ε]≤n−1C(T, γ, η max, c0)(δ2+∥b∗∥2),
E[∥Υ5∥2
op|ε]≤n2C(T, γ, η max, c0)(δ2+∥b∗∥2).
15We further define a few matrices of size T×T:
Θ1=F⊤XH +fKH⊤H−F⊤FW⊤,
Θ2=n−1[F⊤XX⊤eF+fKH⊤X⊤eF−pF⊤eF+F⊤FbA⊤],
Θ3=H⊤X⊤XH−(nIT−eA)H⊤H−H⊤X⊤FW⊤,
Θ4=p
nF⊤eF−1
n(fKH⊤+F⊤X)(cKH⊤+eF⊤X)⊤,
Θ5=nH⊤H−(WF⊤−H⊤X⊤)(WF⊤−H⊤X⊤)⊤,
Θ6=∥E∥−1
F(E⊤XH−E⊤FW⊤).(27)
The next lemma provides the moment bounds for the Frobenius norm of these matrices.
Lemma B.6 (Proved in Appendix D.7) .Under the same conditions of Theorem 3.6, we have
max
k∈{1,2,3}E[∥Θk∥2
F|ε]≤nC(T, γ, η max, c0)(δ2+∥b∗∥2), (28)
max
k∈{4,5}E[∥Θk∥F|ε]≤n1/2C(T, γ, η max, c0)(δ2+∥b∗∥2), (29)
E[∥Θ6∥2
F|ε]≤C(T, γ, η max, c0)(δ2+∥b∗∥2), (30)
almost surely, where E[· |ε]is the conditional expectation given ε.
We are able to prove the main theorems using Lemma B.6.
C Proof of main results
C.1 Proof of Theorem 3.6
It suffices to prove this theorem for the case Σ=Ip. When Σ̸=Ip, the result can be derived using
a change of variables argument, as outlined in Appendix B.1. By basic algebra, we have
Θ5+∥E∥F(Θ6+Θ⊤
6)
=nH⊤H−(XH−FW⊤)⊤(XH−FW⊤) +E⊤(XH−FW⊤) + (XH−FW⊤)⊤E
=nH⊤H+E⊤E−(E−XH +FW⊤)⊤(E−XH +FW⊤)
=nH⊤H+E⊤E−(R+FW⊤)⊤(R+FW⊤).
Notice that rt=∥bbt−b∗∥2+∥ε∥2/nis the t-th diagonal entry of (H⊤H+E⊤E/n), and ˆrtis the
t-th diagonal entry of (R+FW⊤)⊤(R+FW⊤)/n. Since ∥E∥F=√
T∥ε∥, using the previous
display that conditionally on ε, we have
Ehˆrt−rt|εi
≤n−1Eh
∥Θ5∥F+ 2∥E∥F∥Θ6∥F|εi
=n−1Eh
∥Θ5∥F+ 2√
T∥ε∥∥Θ6∥F|εi
.
Using the moment bounds of Θ5andΘ6in Lemma B.6, we have
Ehˆrt−rt|εi
≤C(T, γ, η max, c0, δ)√n
1 +∥ε∥√n
.
Furthermore, if E[|εi|]is finite, we have by [ 22] that∥ε∥/n→P0(convergence in probability) if ε
has i.i.d. entries with a fixed distribution independent of n. Under this assumption, the right-hand side
of the previous display converges to 0 in probability. By enlarging the constant if necessary, assume
C(T, γ, η max, c0, δ)≥1. To obtain a quantitative bound, by the conditional version of Markov’s
inequality, for any ϵ >0, and almost surely with respect to εthat
P
|ˆrt−rt|> ϵ|ε
≤minn
1,C(T, γ, η max, c0, δ)
ϵ1√n+∥ε∥
no
≤maxn
1,C(T, γ, η max, c0, δ)
ϵo
minn
1,1√n+∥ε∥
no
.
16Taking expectation with respect to ε, we obtain
P
|ˆrt−rt|> ϵ
≤maxn
1,C(T, γ, η max, c0, δ)
ϵo
Eh
minn
1,1√n+∥ε∥
noi
≤maxn
1,C(T, γ, η max, c0, δ)
ϵo1√n+Eh
minn
1,∥ε∥
noi
withE[min{1,∥ε∥
n}]→0(equivalently, ∥ε∥/n→P0) if the entries of εare i.i.d. with a fixed
distribution independent of nwithE[|εi|]<+∞by [22]. This finishes the proof of Theorem 3.6.
C.2 Operator norm bound on bK
We first recall the definition of cKfrom (10) in the main text:
cK=TX
t=1Tr(Dt)ete⊤
t−nX
i=1(IT⊗e⊤
i)D(IT⊗X)Γ(IT⊗X⊤)SD(IT⊗ei). (31)
Define two events: Ω1={X∈Rn×p:∥X∥op/√n≤2 +p
p/n}andΩ2={|{i∈[n] :|εi| ≤
M}| ≥2n
3},where Mis a large enough constant such that P(|εi|> M)≤1/6.
Lemma C.1. Under the same conditions of Theorem 3.6 with Σ=Ip, we have in the event
Ω∗= Ω 1∩Ω2that
n∥cK−1∥op≤C(T, γ, η max, c0, δ,∥b∗∥).
Furthermore, Ω∗has probability at least 1−e−n/18−e−n/2.
Proof of Lemma C.1. Under Assumptions 3.1 and 3.5, we know that P(Ω1)≥1−e−n/2from [ 11].
In the event Ω1, we have by Lemma D.2 that
∥XH∥2
F/n≤C(T, γ, η max, c0)(δ2+∥b∗∥2) :=C∗.
Markov’s inequality further implies
|{i∈[n] :∥x⊤
iH∥2>3C∗}| ≤n/3.
In other words, |{i∈[n] :∥x⊤
iH∥2≤3C∗}| ≥2n
3.Recall that Mis such that P(|εi|> M)≤1/6.
By Hoeffding’s inequality, we have
P1
nnX
i=11{|εi|> M} ≥P(|εi|> M) +a
≤e−2na2.
Taking a= 1/6, we have P 1
nPn
i=11{|εi|> M} ≥P(|εi|> M) + 1/6
≤e−n/18.Furthermore,
using|{i∈[n] :|εi|> M}|=Pn
i=11{|εi|> M}, we have
n
|{i∈[n] :|εi|> M}| ≥n/3|o
=n1
nnX
i=11{|εi|> M} ≥1/6 + 1 /6o
⊆n1
nnX
i=11{|εi|> M} ≥P(|εi|> M) + 1/6o
.
Therefore,
P
|{i∈[n] :|εi|> M}| ≥n/3
≤e−n/18.
Equivalently, we have P(|{i∈[n] :|εi| ≤M}| ≥2n
3)≥1−e−n/18.That is, at least2n
3of the
entries of εare bounded by Mwith probability at least 1−e−n/18.
Recall that Ω2={|{i∈[n] :|εi| ≤M}| ≥2n
3},thenP(Ω2)≥1−e−n/18. Hence, P(Ω1∩Ω2)≥
1−e−n/18−e−n/2. In the event Ω1∩Ω2, the set
ˆI={i∈[n] :|εi| ≤M,∥x⊤
iH∥2≤3C∗}
17has size at leastn
3. For any i∈ˆIandt∈[T], we have
|yi−x⊤
ibbt|=|εi−x⊤
iHet| ≤ |εi|+|x⊤
iHet| ≤M+p
3C∗. (32)
By the definition of Dt, under Assumption 3.4, we have
Tr(Dt) =nX
i=1ρ′′(yi−x⊤
ibbt)
>X
i∈ˆIρ′′(yi−x⊤
ibbt) since ρ′′≥0by convexity
≥ |ˆI| min
u:|u|≤M+√3C∗ρ′′(u) due to (32)
≥n/3 min
u:|u|≤M+√3C∗ρ′′(u) :=c∗n since ˆIhas size at least n/3.
Here c∗is a constant depending on ρ, M, C ∗only.
By the definition of cKin(31),cK/nis a lower triangular matrix with diagonal entries equal to
Tr(Dt)/n. It is invertible if and only if all its diagonal entries are non-zero. Therefore, in the event
Ω1∩Ω2, we have cK/nis invertible.
LetbΛ=PT
t=1Tr(Dt)ete⊤
t. Then it is diagonal, ∥bΛ−1∥op= max t∈[T]Tr[Dt]−1≤(c∗n)−1and
cK=bΛ−bL (33)
wherebL=Pn
i=1(IT⊗e⊤
i)D(IT⊗X)Γ(IT⊗X⊤)SD(IT⊗ei).HerebLis a strictly lower triangular
matrix. Using the upper bound of ∥Γ∥opin Lemma D.4, we have ∥bL∥op≤nC(T, γ, η max, c0)in
the event Ω1. Now we rewrite cK−1as
cK−1= (cKbΛ−1bΛ)−1=bΛ−1(cKbΛ−1)−1=bΛ−1(IT−bLbΛ−1)−1.
Notice that bLbΛ−1∈RT×Tis a strictly lower triangular matrix, thus
(IT−bLbΛ−1)−1=∞X
k=0(bLbΛ−1)k=T−1X
k=0(bLbΛ−1)k.
By the triangle inequality,
∥(IT−bLbΛ−1)−1∥op≤T−1X
k=0∥bLbΛ−1∥k
op≤C(T, γ, η max, c0, δ,∥b∗∥).
Therefore, in the event Ω1∩Ω2which has probability P(Ω1∩Ω2)≥1−e−n/18−e−n/2,
∥cK−1∥op≤ ∥bΛ−1∥op∥(IT−bLbΛ−1)−1∥op≤n−1C(T, γ, η max, c0, δ,∥b∗∥).
Lemma C.2. Under the same conditions of Theorem 3.7 with Σ=Ip, we have
∥cK∥op≤n(1 +∥X∥2
op∥Γ∥op),∥bA∥op≤n∥X∥2
op∥Γ∥op,∥W∥op≤n∥Γ∥op.
Proof of Lemma C.2. By the definition of cKin (31), using ∥D∥ op≤1and∥S∥ op≤1, we have
∥cK∥op≤ ∥bΛ∥op+∥bL∥op≤n(1 +∥X∥2
op∥Γ∥op).
Similarly, by the definition of bAin (24), we have
∥bA∥op≤n∥X∥2
op∥Γ∥op.
Last, by the definition of Win (25), we have ∥W∥op≤n∥Γ∥op.
18Lemma C.3. Under the same conditions of Theorem 3.6 with Σ=Ip, we have
E[∥F⊤F(bA−cKW )⊤∥F|ε]≤n3/2C(T, γ, η max, c0)(δ2+∥b∗∥2),
E[∥R⊤F(bA−cKW )⊤∥F|ε]≤n2(∥ε∥
n+1√n)C(T, γ, η max, c0)(δ2+∥b∗∥2).
Proof of Lemma C.3. First, using the definitions of Θ1,Θ2,Θ4in (27), we have
n−1F⊤F(bA−cKW )⊤=n−1Θ1cK⊤+Θ2+Θ4. (34)
Hence,
E[∥F⊤F(bA−cKW )⊤∥F|ε]
=E[∥(Θ1cK⊤+nΘ2+nΘ4)∥F|ε] by (34)
≤E[∥Θ1∥2
F|ε]1/2E[∥cK∥2
op|ε]1/2+nE[∥Θ2∥F+∥Θ4∥F|ε]by the Cauchy-Schwarz inequality
≤n3/2C(T, γ, η max, c0)(δ2+∥b∗∥2).
Here the last line uses the upper bounds of E[∥Θk∥F|ε]from Lemma B.6, and the bound of
E[∥cK∥op|ε]follows from Lemma C.2 and the bound of ∥Γ∥opfrom Lemma D.4. This proves the
first inequality.
For the second inequality, we define
ˇΘ1=R⊤XH +ˇKH⊤H−R⊤FW⊤
∥E∥F/√n+ 1,
ˇΘ2=R⊤XX⊤eF+ˇKH⊤X⊤eF−pR⊤eF+R⊤FbA⊤
n(∥E∥F/√n+ 1),
ˇΘ4=pR⊤eF−(ˇKH⊤+R⊤X)(cKH⊤+eF⊤X)⊤
n(∥E∥F/√n+ 1),
where ˇK=nIT−Pn
i=1(IT⊗(e⊤
iX))Γ(IT⊗X⊤)SD(IT⊗(X⊤ei)). Using similar argument
that proves Lemma B.6, we can obtain the following bound of ˇΘ1,ˇΘ2,ˇΘ4.
max
k∈{1,2}E[∥ˇΘk∥2
F|ε]≤nC(T, γ, η max, c0)(δ2+∥b∗∥2), (35)
E[∥ˇΘ4∥F|ε]≤n1/2C(T, γ, η max, c0)(δ2+∥b∗∥2). (36)
By the definitions of ˇΘ1,ˇΘ2,ˇΘ4, we have
(∥E∥F/√n+ 1)[n−1ˇΘ1cK⊤+ˇΘ2+ˇΘ4] =n−1R⊤F(bA−cKW )⊤.
Therefore, conditional on ε, we have
E[∥R⊤F(bA−cKW )⊤∥F|ε] = (∥E∥F/√n+ 1)E[∥ˇΘ1cK⊤+nˇΘ2+nˇΘ4∥F|ε]
≤n3/2(∥E∥F/√n+ 1)C(T, γ, η max, c0)(δ2+∥b∗∥2).
This finishes the proof of Lemma C.3.
C.3 Proof of Theorem 3.7
In the event Ω∗= Ω 1∩Ω2, we know from Lemma C.1 that cKis invertible and ∥cK−1∥op≤n−1C.
Define fW=cK−1bA. Using R+FfW⊤=R+FW⊤+F(fW−W)⊤, we have
(R+FfW⊤)⊤(R+FfW⊤)−(R+FW⊤)⊤(R+FW⊤)
= (R+FW⊤)⊤F(fW−W)⊤+ (fW−W)F⊤(R+FW⊤) + (fW−W)F⊤F(fW−W)⊤.
We have by the triangle inequality
∥(R+FfW⊤)⊤(R+FfW⊤)−(R+FW⊤)⊤(R+FW⊤)∥F
≤2∥(R+FW⊤)⊤F(fW−W)⊤∥F+∥(fW−W)F⊤F(fW−W)∥F
≲∥R⊤F(fW−W)⊤∥F+∥WF⊤F(fW−W)⊤∥F+∥(fW−W)F⊤F(fW−W)∥F.
19Recall that in the event Ω∗, we have ∥cK−1∥op≤n−1C. Using bA−cKW =cK(fW−W)and
Lemma C.3, we have
Eh
I(Ω∗)∥(R+FfW⊤)⊤(R+FfW⊤)−(R+FW⊤)⊤(R+FW⊤)∥Fεi
≲Eh
I(Ω∗)∥R⊤F(fW−W)⊤∥Fεi
+Eh
I(Ω∗)∥WF⊤F(fW−W)⊤∥Fεi
+Eh
I(Ω∗)∥(fW−W)F⊤F(fW−W)⊤∥Fεi
=Eh
I(Ω∗)∥R⊤F(bA−cKW )⊤(cK⊤)−1∥Fεi
+Eh
I(Ω∗)∥WF⊤F(bA−cKW )⊤(cK⊤)−1∥Fεi
+Eh
I(Ω∗)∥cK−1(bA−cKW )F⊤F(bA−cKW )⊤(cK⊤)−1∥Fεi
.
According to Lemma C.3 and the bound of ∥cK−1∥opin Lemma C.1, the first conditional expectation
is bounded from above by
n(∥ε∥
n+1√n)C(T, γ, η max, c0)(δ2+∥b∗∥2).
Using the bound of ∥K−1∥opin Lemma C.1, the bound of ∥W∥opin Lemma C.2, and the bound of
E[∥F⊤F(bA−cKW )⊤∥F|ε]in Lemma C.3, the second conditional expectation is bounded from
above by
n1/2C(T, γ, η max, c0)(δ2+∥b∗∥2).
Similarly, the third conditional expectation is bounded from above by
n1/2C(T, γ, η max, c0)(δ2+∥b∗∥2).
In summary, we have
n−1E[I(Ω∗)∥(R+FfW⊤)⊤(R+FfW⊤)−(R+FW⊤)⊤(R+FW⊤)∥F|ε]
≤1√n ∥ε∥√n+ 1
C(T, γ, η max, c0)(δ2+∥b∗∥2).
Since ˜rtandˆrtare the t-th diagonal entries of (R+FfW⊤)⊤(R+FfW⊤)/nand(R+FW⊤)⊤(R+
FW⊤)/n, respectively, we have
E[I(Ω∗)|˜rt−ˆrt| |ε]
≤Eh
I(Ω∗)∥(R+FfW⊤)⊤(R+FfW⊤)−(R+FW⊤)⊤(R+FW⊤)∥Fεi
≤1√n ∥ε∥√n+ 1
C(T, γ, η max, c0)(δ2+∥b∗∥2).
Using the same argument in the proof of Theorem 3.6, we have for any ϵ >0,
P
I(Ω∗)|˜rt−ˆrt|> ϵ|ε
≤min
1,C(T,γ,η max,c0,δ)
ϵ(1√n+∥ε∥
n)
≤max{1,C(T,γ,η max,c0,δ)
ϵ}min(1 ,1√n+∥ε∥
n).
Taking expectation with respect to ε, we have
P
I(Ω∗)|˜rt−ˆrt|> ϵ
≤max{1,C(T,γ,η max,c0,δ)
ϵ}E[min(1 ,1√n+∥ε∥
n)].
Using the union bound and P(Ω∗)≥1−e−n/18−e−n/2≥1−2e−n/18, we obtain
P
|˜rt−ˆrt|> ϵ
≤2e−n/18+ max {1,C(T,γ,η max,c0,δ)
ϵ}1√n+E[min(1 ,∥ε∥
n)]
.
Using the triangle inequality and the tail probability of |ˆrt−rt|in Theorem 3.6, we have
P
|˜rt−rt|> ϵ
≤2e−n/18+ max {1,C(T,γ,η max,c0,δ)
ϵ}1√n+E[min(1 ,∥ε∥
n)]
.
20D Proof of results in Appendix B.2
D.1 Proof of Lemma B.1
By assumption, we know bb1is independent of Xandbbt+1=ϕt bbt+ηt
|It|X⊤Stψ(y−Xbbt)
from
(4). Recall that Dt=∂ψ(u)
∂u
u=y−XbbtandeDt=∂ϕt(v)
∂v
v=bbt+ηt
|It|X⊤Stψ(y−Xbbt). Let a dot denote
the derivative with respect to xij. By product rule and chain rule and using y−Xbbt=ε−X(bbt−b∗),
we have
˙bt+1=eDth
˙bt+ηt
|It|
˙X⊤Stψ(y−Xbbt)−X⊤StDt(˙X(bbt−b∗) +X˙bt)i
=eDth
˙bt+ηt
|It|
˙X⊤Ft−X⊤StDt(˙XHt+X˙bt)i
,
where the last line uses Ft=Stψ(y−Xbbt)andHt=bbt−b∗. Arranging terms gives
−eDt(Ip−ηt
|It|X⊤StDtX)˙bt+˙bt+1=ηt
|It|eDt(˙X⊤Ft−X⊤StDt˙XHt).
LetPt=eDt(Ip−ηt
|It|X⊤StDtX)andat=ηt
|It|eDt(˙X⊤Ft−X⊤StDt˙XHt), we can rewrite
the above recursion of ˙btas a linear system:

Ip
−P1Ip
......
−PT−1Ip

| {z }
M
˙b1
˙b2
...
˙bT
=
0
Ip0
......
Ip0

| {z }
L
a1
a2
...
aT

|{z}
a.
Solving the above system, we have ˙bt= (e⊤
t⊗Ip)M−1La.Since ˙X=∂X
∂xij=eie⊤
j,atcan be
further simplified as
at=ηt
|It|eDt 
eje⊤
iFt−X⊤StDteie⊤
jHt
.
Using D=PT
t=1 
(ete⊤
t)⊗Dt
,eD=PT
t=1 
(ete⊤
t)⊗eDt
,S=PT
t=1 
(ete⊤
t)⊗St
, and
Λ=PT
t=1ηt
|It|ete⊤
t, we have
a= (Λ⊗Ip)eD
vec(eje⊤
iF)−(IT⊗X⊤)SDvec(eie⊤
jH)
= (Λ⊗Ip)eD
((F⊤ei)⊗ej)−(IT⊗X⊤)SD((H⊤ej)⊗ei)
.
Plugging this expression for ainto˙bt= (e⊤
t⊗Ip)M−1Lagives
∂bbt
∂xij= (e⊤
t⊗Ip)M−1L(Λ⊗Ip)eD[((F⊤ei)⊗ej)−(IT⊗X⊤)SD((H⊤ej)⊗ei)].
This finishes the proof of Lemma B.1.
D.2 Proof of Lemma B.2
By definition, Flt=e⊤
lStψ(y−Xbbt). By the chain rule of differentiation, we have
∂Flt
∂xij=e⊤
l∂Stψ(y−Xbbt)
∂xij=−e⊤
lStDt(eie⊤
jHet+X∂bbt
∂xij).
Notice that (et⊗(DtSt)) =DS(et⊗In). The desired formula then follows by plugging in the
expression of∂bbt
∂xijin Lemma B.1.
D.3 Proof of Lemma B.3
The desired identity follows by
∂˜Flt
∂xij=e⊤
l∂ψ(y−Xbbt)
∂xij=−e⊤
lDt(eie⊤
jHet+X∂bbt
∂xij)
and the expression of∂bbt
∂xijin Lemma B.1.
21D.4 Alternative expressions for the matrices defined in Definition B.4
This section derives alternative expressions for the matrices Υ1, ...,Υ5defined in Definition B.4.
We first study Υ1in (18). Using F=PT
t=1Fete⊤
t, we have by Lemma B.2
nX
j=1∂e⊤
iF
∂xij=nX
i=1TX
t=1∂Fit
∂xije⊤
t=nX
i=1TX
t=1Dit
ije⊤
t+nX
i=1TX
t=1∆it
ije⊤
t. (37)
Now we compute the two terms in the right-hand side of (37). For the first term, using the expression
ofDlt
ijin Lemma B.2,
X
i,tDit
ije⊤
t
=−e⊤
jHTX
t=1Tr(StDt)ete⊤
t+X
i,t((e⊤
jH)⊗e⊤
i)DS(IT⊗X)Γ⊤(et⊗(X⊤DtStei))e⊤
t
=−e⊤
jHTX
t=1Tr(StDt)ete⊤
t+e⊤
jHnX
i=1(IT⊗e⊤
i)DS(IT⊗X)Γ⊤(IT⊗X⊤)DS(IT⊗ei)
=−e⊤
jHfK⊤by (26) .
Next, we compute the second term in the right-hand side of (37). Using the expression of ∆lt
ijin
Lemma B.2,
X
i,t∆it
ije⊤
t=−X
i,t((e⊤
iF)⊗e⊤
j)Γ⊤(et⊗(X⊤DtStei))e⊤
t
=−e⊤
jX
i((e⊤
iF)⊗Ip)Γ⊤(IT⊗X⊤)DS(IT⊗ei)
| {z }
Υ1.
The identity (18) then follows by substituting the above two expressions into (37).
To study Υ2in(19), we use a similar procedure. Using the mixed property of Kronecker product and
the fact that the transpose of a scalar remains the same, we have
pX
j=1∂e⊤
jH
∂xij=pX
j=1TX
t=1∂e⊤
jbbt
∂xije⊤
t=X
j,te⊤
j(e⊤
t⊗Ip)Γ((F⊤ei)⊗ej)e⊤
t
−X
j,te⊤
j(e⊤
t⊗Ip)Γ(IT⊗X⊤)SD((H⊤ej)⊗ei)e⊤
tby (15)
=e⊤
iFX
j(IT⊗e⊤
j)Γ⊤(IT⊗ej)
−X
j,t((e⊤
jH)⊗e⊤
i)DS(IT⊗X)Γ⊤(et⊗ej)e⊤
t
=e⊤
iFX
j(IT⊗e⊤
j)Γ⊤(IT⊗ej)
−e⊤
iX
j((e⊤
jH)⊗In)DS(IT⊗X)Γ⊤(IT⊗ej)
=e⊤
iFW⊤−e⊤
iΥ2,
where W=P
j(IT⊗e⊤
j)Γ(IT⊗ej)andΥ2=P
j((e⊤
jH)⊗In)DS(IT⊗X)Γ⊤(IT⊗ej).
22To study Υ3in (20), we use the product rule of differentiation and (18)-(19):
nX
i=1pX
j=1∂F⊤eie⊤
jH
∂xij=nX
i=1pX
j=1∂F⊤
∂xijeie⊤
jH+F⊤nX
i=1pX
j=1ei∂e⊤
jH
∂xij
=−X
j(fKH⊤ej+Υ⊤
1ej)e⊤
jH+F⊤X
iei(e⊤
iFW⊤−e⊤
iΥ2)
=−fKH⊤H+F⊤FW⊤−(Υ⊤
1H+F⊤Υ2)| {z }
Υ3.
ForΥ4in (21), by the product rule,
nX
i=1pX
j=1∂H⊤X⊤eie⊤
jH
∂xij
=X
i,j∂H⊤
∂xijX⊤eie⊤
jH+H⊤X
i,jeje⊤
ieie⊤
jH+H⊤X⊤X
i,jeie⊤
j∂H
∂xij
=X
i,j∂H⊤
∂xijX⊤eie⊤
jH+nH⊤H+H⊤X⊤(FW⊤−Υ2) by (19) .
We then compute the first term of the last line as follows
X
i,j∂H⊤
∂xijX⊤eie⊤
jH
=X
i,j,tete⊤
t∂H⊤
∂xijX⊤eie⊤
jH
=X
i,j,tet∂bbt
∂xij⊤
X⊤eie⊤
jH
=X
i,j,tete⊤
iX∂bbt
∂xije⊤
jH
=−X
i,j,tete⊤
iX(e⊤
t⊗Ip)Γ(IT⊗X⊤)SD((H⊤ej)⊗ei)e⊤
jH+eΥ1 by (15)
=−X
i(IT⊗(e⊤
iX))Γ(IT⊗X⊤)SD(IT⊗ei)H⊤H+eΥ1
=−eAH⊤H+eΥ1 by (23),
where
eΥ1=X
i,j,tete⊤
iX(e⊤
t⊗Ip)Γ((F⊤ei)⊗ej)e⊤
jH=X
i(IT⊗e⊤
iX)Γ((F⊤ei)⊗Ip)H.
Combining the above pieces, we have
nX
i=1pX
j=1∂H⊤X⊤eie⊤
jH
∂xij=−eAH⊤H+eΥ1+nH⊤H+H⊤X⊤(FW⊤−Υ2)
= (nIT−eA)H⊤H+H⊤X⊤FW⊤−(H⊤X⊤Υ2−eΥ1)| {z }
Υ4.
This provides an alternative expression for Υ4in (21).
23Last, we study Υ5in (22). We have
nX
i=1pX
j=1∂F⊤eie⊤
jX⊤eF
∂xij=X
i,jh∂F⊤ei
∂xije⊤
jX⊤eF+F⊤eie⊤
jeje⊤
ieF+F⊤eie⊤
jX⊤∂eF
∂xiji
=−(fKH⊤+Υ⊤
1)X⊤eF+pF⊤eF+X
i,jF⊤eie⊤
jX⊤∂eF
∂xij.
It remains to compute the third term in the last display. Using the fact that eF=Pn
l=1PT
t=1ele⊤
leFete⊤
t, we have by Lemma B.3 that
∂eF
∂xij=X
l,tel∂e⊤
leFet
∂xije⊤
t=X
l,tel(˜Dlt
ij+˜∆lt
ij)e⊤
t.
Using
˜Dlt
ij=−e⊤
lDteie⊤
jHet+ ((e⊤
jH)⊗e⊤
i)DS(IT⊗X)Γ⊤(IT⊗X⊤)D(et⊗el),
˜∆lt
ij=−((e⊤
iF)⊗e⊤
j)Γ⊤(IT⊗X⊤)D(et⊗el),
we find
X
i,jF⊤eie⊤
jX⊤∂eF
∂xij=X
i,j,l,tF⊤eie⊤
jX⊤el∂e⊤
leFet
∂xije⊤
t
=X
i,j,l,tF⊤eie⊤
jX⊤el˜∆lt
ije⊤
t+X
i,j,l,tF⊤eie⊤
jX⊤el˜Dlt
ije⊤
t.
We now compute the two terms in the above display. For the first term, we have
X
i,j,l,tF⊤eie⊤
jX⊤el˜∆lt
ije⊤
t
=X
i,j,l,tF⊤eie⊤
jX⊤el
−((e⊤
iF)⊗e⊤
j)Γ⊤(IT⊗X⊤)D(et⊗el)
e⊤
t
=−F⊤FnX
l=1(IT⊗(e⊤
lX))Γ⊤(IT⊗X⊤)D(IT⊗el)
=−F⊤FbA⊤by (24).
For the second term, we have
X
i,j,l,tF⊤eie⊤
jX⊤el˜Dlt
ije⊤
t
=X
i,j,l,tF⊤eie⊤
jX⊤el[−e⊤
lDteie⊤
jHet+ ((e⊤
jH)⊗e⊤
i)DS(IT⊗X)Γ⊤(et⊗(X⊤Dtel))]e⊤
t
=−TX
t=1F⊤DtXHe t+nX
l=1(e⊤
lXH⊗F⊤)DS(IT⊗X)Γ⊤(IT⊗X⊤)D(IT⊗el)
| {z }
eΥ2.
Thus, we have established
X
i=1pX
j=1∂F⊤eie⊤
jX⊤eF
∂xij=−fKH⊤X⊤eF+pF⊤eF−F⊤FbA⊤−(Υ⊤
1X⊤eF−eΥ2)| {z }
Υ5.
This provides an alternative expression for Υ5in (22).
24D.5 Preparation results for proving Lemmas B.5 and B.6
Lemma D.1 (Moment bounds for H,F,eF).Under Assumptions 3.1, 3.3 and 3.5 with Σ=Ip. Let
H,Fbe defined in (13), we have for any finite integer k,
E[∥X/√n∥2k
op]≤C(γ, k),
E[∥H∥2k
F|ε]≤C(T, γ, c 0, ηmax, k)(δ2+∥b∗∥)2k,
E[∥F/√n∥2k
F|ε]≤E[∥eF/√n∥2k
F|ε]≤C(T, k)δ2k.
Proof of Lemma D.1. For the first inequality, according to Assumption 3.1 and Σ=Ip,Xhas
i.i.d. standard normal entries. By [ 11, Theorem II.13], there exists a random variable z∼N(0,1)
such that ∥X∥op≤√n+√p+zalmost surely. Under Assumption 3.5 that p/n≤γ, we have
E[∥X/√n∥k
op]≤C(γ, k)for any finite integer k.
For the second inequality, since ∥H∥2
F=PT
t=1∥bbt−b∗∥2, it suffices to bound ∥bbt−b∗∥2for each t∈
[T]. Define the sequence of scalars atdef= max {∥bbt∥, δ}. Since bbt=ϕt−1(bbt−1+ηt
ntX⊤Stψ(y−
Xbbt−1))where nt:=|It|. Note that ∥ψ(yIt−XItb)∥ ≤p
|It|δby Assumption 3.3, we have
∥bbt−0∥=∥bbt−ϕt−1(0)∥ sinceϕt−1=0
≤ ∥bbt−1+ηt
|It|X⊤Stψ(y−Xbbt−1)∥ sinceϕtis 1-Lipschitz
=∥bbt−1+ηt
|It|X⊤
Itψ(yIt−XItbbt−1)∥
≤ ∥bbt−1∥+ηt√
|It|∥XIt∥opδ by the triangle inequality
≤ ∥bbt−1∥+ηmax√c0n∥X∥opδ by|It| ≥c0n
≤at−1+ηmax√c0∥X/√n∥opat−1
= (1 +ηmax√c0∥X/√n∥op)at−1.
Since at= max {∥bbt∥, δ}andδ≤at−1, we have
at≤(1 +ηmax√c0∥X/√n∥op)at−1.
Notice a1=δsincebb1=0p, we obtain
at≤(1 +ηmax√c0∥X/√n∥op)t−1δ.
Hence, using the inequality ∥bbt−b∗∥2≤2∥bbt∥2+ 2∥b∗∥2, we have
∥H∥2
F≲TX
t=1(∥bbt∥2+∥b∗∥2)
≤TX
t=1
(1 +ηmax√c0∥X/√n∥op)2t−2δ2+∥b∗∥2
≤T(δ2+∥b∗∥2)(1 +ηmax√c0∥X/√n∥op)2T. (38)
Taking conditional expectation on both sides given ε, the desired moment bound for Hfollows from
the moment bound for ∥X/√n∥op.
For the third inequality, since |ψ(x)| ≤δfrom Assumption 3.3, we have ∥ψ(u)∥ ≤nδ2for any
u∈Rn. By the definitions of FandeF, we have
∥F∥2
F≤ ∥eF∥2
F=TX
t=1∥ψ(y−Xbbt)∥2≤Tnδ2.
Since the above display holds for any ε, it implies the desired conditional moment bounds for
F,eF.
25Lemma D.2 (Frobenius norm bound for XH ).Under Assumptions 3.1, 3.3 and 3.5, we have
∥XH∥2
F≤C(T, γ, η max, c0)n(δ2+∥b∗∥2)
with probability at least 1−exp(−n/2).
Proof of Lemma D.2. By [11, Theorem II.13], under Assumption 3.1 with Σ=Ip, we have
P(∥X/√n∥op≤2 +√γ)≥1−exp(−n/2).
Using∥XH∥2
F≤ ∥X∥2
op∥H∥2
Fand the bound (38), we have
∥XH∥2
F≤nC(T, γ, η max, c0)(δ2+∥b∗∥2)
holds with probability at least 1−exp(−n/2).
Lemma D.3 (Operator norm bound for M).Under Assumptions 3.1, 3.3 and 3.5, we have
∥M−1∥op≤C(T)(1 + ξ)T,
where ξ=ηmax
c0n∥X∥2
op.
Proof of Lemma D.3. By the definition of Min Lemma B.1, we have
M=
Ip
−P1Ip
......
−PT−1Ip
where Pt=eDt(Ip−ηt
|It|X⊤StDtX).
Hence, we can write M=IpT−A, where Ais the lower triangular matrix with off-diagonal blocks
P1, ...,PT−1. Using the matrix identity (I−A)−1=P∞
k=0Akand noticing Ak=0fork≥T,
we have
M−1=T−1X
k=0
0
P10
......
PT−10
k
.
Taking operator norm on both sides, we obtain
∥M−1∥op≤T−1X
k=0(T−1X
t=1∥Pt∥op)k. (39)
Since Dt=∂ψ(u)
∂u
u=y−Xbbtandψis 1-Lipschitz, we have ∥Dt∥op≤1. By the definition that
St=P
i∈Iteie⊤
i, we know ∥St∥op≤1. Since |It| ≥c0nandηt≤ηmaxfor any t∈[T], we have
∥Pt∥op≤1 +ηt
|It|∥XIt∥2
op≤1 +ηmax
c0n∥X∥2
opdef= 1 + ξ.
Plugging this inequality into (39) gives
∥M−1∥op≤T−1X
k=0(T(1 +ξ))k≤C(T)(1 + ξ)T.
Lemma D.4. Under the same conditions as Lemma D.3, we have
∥Γ∥op≤n−1C(T, ηmax, c0)(1 + ξ)T,
where ξ=ηmax
c0n∥X∥2
op.
26Proof of Lemma D.4. By the definition of Γin Lemma B.1, we have Γ=M−1L(Λ⊗Ip)eD. Notice
thatΛ=PT
t=1ηt
|It|ete⊤
t, we have ∥Λ∥op= max t∈[T]ηt
|It|≤n−1ηmax
c0using|It| ≥c0nand
ηt≤ηmax. Since ϕis 1-Lipschitz, we have ∥eD∥op≤1. By definition of Lin Lemma B.1, we have
∥L∥op= 1. Using these upper bounds of ∥L∥op,∥Λ∥op,∥eD∥opand the upper bound of ∥M−1∥op
in Lemma D.3, we obtain
∥Γ∥op≤ ∥M−1∥op∥L∥op∥Λ⊗Ip∥op∥eD∥op
≤n−1C(T, ηmax, c0)(1 + ξ)T.
Lemma D.5 (Moment bounds for derivative of H,F,eF).Under Assumptions 3.1, 3.3 and 3.5 and
Σ=Ip, we have for any finite integer k,
EhnX
i=1pX
j=1∂H
∂xij2
Fkεi
≤C(T, γ, η max, c0)(δ2+∥b∗∥2)2k,
EhnX
i=1pX
j=1∂F/√n
∂xij2
Fkεi
≤EhnX
i=1pX
j=1∂eF/√n
∂xij2
Fkεi
≤C(T, γ, η max, c0)(δ2+∥b∗∥2)2k.
Proof of Lemma D.5. We first prove the first bound. By Lemma B.1, we have
∂bbt
∂xij= (e⊤
t⊗Ip)Γ[((F⊤ei)⊗ej)−(IT⊗X⊤)SD((H⊤ej)⊗ei)].
Hence, using∂e⊤
kHet
∂xij=∂e⊤
kbbt
∂xij, we have
∂e⊤
kHet
∂xij= (e⊤
t⊗e⊤
k)Γ[((F⊤ei)⊗ej)−(IT⊗X⊤)SD((H⊤ej)⊗ei)]
= (e⊤
t⊗e⊤
k)Γ[(F⊤⊗Ip)(ei⊗ej)−(IT⊗X⊤)SD(H⊤⊗In)(ej⊗ei)].
Using the above equality,P
i,j,t,k[(e⊤
t⊗e⊤
k)A(ej⊗ei)]2=∥A∥2
FforA∈RpT×np, and the
triangle inequality, we have
nX
i=1pX
j=1∂H
∂xij2
F=nX
i=1pX
j=1pX
k=1TX
t=1∂e⊤
kHet
∂xij2
≲∥Γ(F⊤⊗Ip)∥2
F+∥Γ(IT⊗X⊤)SD(H⊤⊗In)∥2
F
≤p∥Γ∥2
op∥F∥2
F+n∥Γ∥2
op∥X∥2
op∥S∥2
op∥D∥2
op∥H∥2
F
≤p∥Γ∥2
op∥F∥2
F+n∥Γ∥2
op∥X∥2
op∥H∥2
F
≤C(T, γ, η max, c0)(1 + ξ)2T∥F∥2
F/n+C(T, γ, η max, c0)(1 + ξ)2T∥X∥2
op/n∥H∥2
F,
where the last inequality uses Lemma D.4. Taking the conditional expectation on both sides given ε,
the desired moment bound follows from the moment bounds of X,H,Fin Lemma D.1.
Now we prove the second bound. By definition, the t-th column of FisFt=Stψ(y−Xbbt), it can
be written using the t-th column of eFasFt=St˜Ft. Since ∥St∥op≤1, we have
∥∂F
∂xij∥2
F=X
t∥∂Ft
∂xij∥2≤X
t∥∂˜Ft
∂xij∥2=∥∂eF
∂xij∥2
F.
By Lemma B.3, we have∂e⊤
leFet
∂xij=˜Dlt
ij+˜∆lt
ijwhere
˜Dlt
ij=−e⊤
lDteie⊤
jHet+ ((e⊤
jH)⊗e⊤
i)DS(IT⊗X)Γ⊤(IT⊗X⊤)D(et⊗el),
= ((e⊤
jH)⊗e⊤
i)[−IpT+DS(IT⊗X)Γ⊤(IT⊗X⊤)]D(et⊗el),
˜∆lt
ij=−((e⊤
iF)⊗e⊤
j)Γ⊤(IT⊗X⊤)D(et⊗el).
27UsingP
i,j,t,k[(e⊤
j⊗e⊤
i)A(et⊗el)]2=∥A∥2
FforA∈Rnp×nTand the triangle inequality, we
have
nX
i=1pX
j=1∥∂eF
∂xij∥2
F
=nX
i=1pX
j=1nX
l=1TX
t=1(˜Dlt
ij+˜∆lt
ij)2
≲∥(H⊗In)[−IpT+DS(IT⊗X)Γ⊤(IT⊗X⊤)]D∥2
F+∥(F⊗Ip)Γ⊤(IT⊗X⊤)D∥2
F
≲n∥H∥2
F(1 +∥X∥4
op∥Γ∥2
op) +∥F∥2
F∥Γ∥2
op∥X∥2
op,
where the last inequality uses ∥D∥ op≤1and∥S∥ op≤1. Taking the conditional expectation on
both sides given ε, the desired moment bound follows from the bound of Γin Lemma D.4 and the
moment bounds of X,H,Fin Lemma D.1.
D.6 Proof of Lemma B.5
Bound of Υ1.By the expression for the matrix Υ1∈Rp×Tobtained in Appendix D.4,
Υ1=nX
i=1((e⊤
iF)⊗Ip)Γ⊤(IT⊗X⊤)DS(IT⊗ei)
=nX
i=1TX
t=1((e⊤
iFete⊤
t)⊗Ip)Γ⊤(IT⊗X⊤)DS(IT⊗ei)
=nX
i=1TX
t=1(e⊤
t⊗Ip)Γ⊤(IT⊗X⊤)DS(IT⊗ei)e⊤
iFet
=TX
t=1(e⊤
t⊗Ip)Γ⊤(IT⊗X⊤)DS(IT⊗(Fet)).
By the triangle inequality and ∥D∥ op∨ ∥S∥ op≤1,∥Υ1∥op≤T∥Γ∥op∥X∥op∥F∥F. Using the
bound of ∥Γ∥opin Lemma D.4, the moment bound of ∥X∥op,∥F∥Fin Lemma D.1 gives
E[∥Υ1∥2
op|ε]≤C(T, γ, η max, c0)(δ2+∥b∗∥2).
Bound of Υ2.By the expression for the matrix Υ2∈Rn×Tobtained in Appendix D.4, we have
Υ2=pX
j=1((e⊤
jH)⊗In)DS(IT⊗X)Γ⊤(IT⊗ej)
=pX
j=1TX
t=1((e⊤
jHete⊤
t)⊗In)DS(IT⊗X)Γ⊤(IT⊗ej)
=pX
j=1TX
t=1(e⊤
t⊗In)DS(IT⊗X)Γ⊤(IT⊗ej)e⊤
jHet
=TX
t=1(e⊤
t⊗In)DS(IT⊗X)Γ⊤(IT⊗(Het)).
By the triangle inequality and ∥D∥ op∨ ∥S∥ op≤1,∥Υ2∥op≤T∥Γ∥op∥X∥op∥H∥F.Similar to the
moment bound of ∥Υ1∥op, we obtain
E[∥Υ2∥2
op|ε]≤C(T, γ, η max, c0)n−1(δ2+∥b∗∥2).
28Bound of Υ3.By the expression for the matrix Υ3∈RT×Tobtained in Appendix D.4, we have
Υ3= (Υ⊤
1H+F⊤Υ2). It directly follows that
∥Υ3∥op≤ ∥Υ1∥op∥H∥F+∥F∥F∥Υ2∥op.
Using the triangle inequality and the moment bounds of ∥H∥F,∥F∥Fin Lemma D.1 and the moment
bounds of ∥Υ1∥op,∥Υ2∥opwe just obtained, we have
E[∥Υ3∥2
op|ε]≤C(T, γ, η max, c0)(δ2+∥b∗∥2).
Bound of Υ4.By the expression for the matrix Υ4∈RT×Tobtained in Appendix D.4, we have
Υ4=H⊤X⊤Υ2−eΥ1,
whereeΥ1=P
i(IT⊗e⊤
iX)Γ((F⊤ei)⊗Ip)H. We can rewrite eΥ1as
eΥ1=nX
i=1(IT⊗e⊤
iX)Γ((F⊤ei)⊗Ip)H
=nX
i=1TX
t=1(IT⊗e⊤
iX)Γ((ete⊤
tF⊤ei)⊗Ip)H
=nX
i=1TX
t=1(IT⊗(e⊤
tF⊤eie⊤
iX))Γ(et⊗Ip)H
=TX
t=1(IT⊗(e⊤
tF⊤X))Γ(et⊗Ip)H.
We have by the triangle inequality,
∥eΥ1∥op≤T∥Γ∥op∥X∥op∥F∥F∥H∥F.
By the triangle inequality and the upper bound of ∥Υ2∥op, we have
∥Υ4∥op≤ ∥Υ2∥op∥X∥op∥H∥F+∥eΥ1∥op≤T∥Γ∥op∥X∥2
op∥H∥2
F+T∥Γ∥op∥X∥op∥F∥F∥H∥F.
Squaring both sides and taking conditional expectation, we have
E[∥Υ4∥2
op|ε]≤C(T, γ, η max, c0)(δ2+∥b∗∥2),
thanks to the upper bound of ∥Γ∥opin Lemma D.4 and the moment bounds of ∥X∥op,∥F∥F,∥H∥F
in Lemma D.1.
Bound of Υ5.By the expression for the matrix Υ5∈RT×Tobtained in Appendix D.4, we have
Υ5=Υ⊤
1X⊤eF−eΥ2,where
eΥ2=−TX
t=1F⊤DtXHe t+nX
l=1(e⊤
lXH⊗F⊤)DS(IT⊗X)Γ⊤(IT⊗X⊤)D(IT⊗el).
By the triangle inequality,
∥eΥ2∥op≤T∥X∥op∥F∥F∥H∥F+∥X∥3
op∥Γ∥op∥F∥F∥H∥F.
Using the moment bounds of ∥Υ1∥op,∥X∥op,∥F∥F,∥eF∥F,∥H∥F, we have
E[∥Υ5∥2
op|ε]≤n2C(T, γ, η max, c0)(δ2+∥b∗∥2).
D.7 Proof of Lemma B.6
We first state three useful lemmas.
29Lemma D.6 (Adopted from Lemma E.10 of [ 26]).LetU,V:Rn×p→Rn×Tbe two locally
Lipschitz functions of Zwith i.i.d. N(0,1)entries, then
EhU⊤ZV−pX
j=1nX
i=1∂
∂zij
U⊤eie⊤
jV2
Fi
≤E∥U∥2
F∥V∥2
F+EX
ijh
2∥V∥2
F∂U
∂zij2
F+ 2∥U∥2
F∂V
∂zij2
Fi
.
Lemma D.7 (Adopted from Lemma F.5 of [ 5]).LetU,V:Rn×p→Rn×Tbe two locally Lipschitz
functions of Zwith i.i.d. N(0,1)entries. Provided the following expectations are finite, we have
EhpU⊤V−pX
j=1nX
i=1∂ijU⊤ei−U⊤ZejnX
i=1∂ije⊤
iV−e⊤
jZ⊤V
Fi
≤(1 + 2√p) 
E[∥U∥4
F]1/2+E[∥V∥4
F]1/2+E[∥U∥4
∂]1/2+E[∥V∥4
∂]1/2
,
where ∂ijU=∂U/∂zijand∥U∥∂= (Pn
i=1Pp
j=1∥∂ijU∥2
F)1/2.
We will use the above two lemmas, conditionally on ε, to bound the conditional moments of
Θ1,Θ2,Θ3,Θ4andΘ5givenε.
Bound of Θ1.By the definition of Θ1, we have
F⊤XH−X
i,j∂F⊤eie⊤
jH
∂xij=F⊤XH +fKH⊤H−F⊤FW⊤+Υ3 by (20)
=Θ1+Υ3.
Applying Lemma D.6 conditionally on εto(Z,U,V) = (X,F,H)gives
E[∥Θ1∥2
F|ε]≲EhF⊤XH−X
i,j∂F⊤eie⊤
jH
∂xij2
|εi
+E[∥Υ3∥2
F|ε]
≲E[∥F∥2
F∥H∥2
F|ε] +EX
ijh
∥H∥2
F∥∂F
∂xij∥2
F+∥F∥2
F∥∂H
∂xij∥2
F|εi
+E[∥Υ3∥2
F|ε]
≤nC(T, γ, η max, c0)(δ2+∥b∗∥2),
where the last line uses the moment bounds of ∥F∥F,∥H∥Fin Lemma D.1, the moment bounds of
∥∂H
∂xij∥F,∥∂F
∂xij∥Fin Lemma D.5, the moment bound of ∥Υ3∥opin Lemma B.5.
Bound of Θ2.By the definition of Θ2, we have by (21)
F⊤XX⊤eF−X
i,j∂F⊤eie⊤
jX⊤eF
∂xij=F⊤XX⊤eF+fKH⊤X⊤eF−pF⊤eF+F⊤FbA⊤+Υ5
=nΘ2+Υ5.
Applying Lemma D.6 conditionally on εto(Z,U,V) = (X,F,X⊤eF)gives
n2E[∥Θ2∥2
F|ε]≲EhF⊤XX⊤eF−X
i,j∂F⊤eie⊤
jX⊤eF
∂xij2
|εi
+E[∥Υ5∥2
F|ε]
≲E[∥F∥2
F∥X⊤eF∥2
F|ε] +EX
ijh
∥X⊤eF∥2
F∥∂F
∂xij∥2
F+∥F∥2
F∥∂X⊤eF
∂xij∥2
F|εi
+E[∥Υ5∥2
F|ε]
≲E[∥eF∥4
F∥X∥2
op|ε] +Eh
(1 +∥X∥2
op)∥eF∥2
FX
ij∥∂eF
∂xij∥2
F|εi
+TE[∥Υ5∥2
op|ε]
≤n3C(T, γ, η max, c0)(δ2+∥b∗∥2).
30Here, the penultimate line uses ∥F∥F≤ ∥eF∥F,∥∂F
∂xij∥F≤ ∥∂eF
∂xij∥F, and ∥∂X⊤eF
∂xij∥F=
∥e⊤
je⊤
i∂eF
∂xij+X⊤∂eF
∂xij∥F≤ ∥∂eF
∂xij∥F+∥X∥op∥∂eF
∂xij∥F. The last line uses the moment bounds of
∥X∥op,∥eF∥Fin Lemma D.1, the moment bound of ∥∂eF
∂xij∥Fin Lemma D.5, the moment bound of
∥Υ5∥opin Lemma B.5.
Bound of Θ3.By the definition of Θ3, we have
H⊤X⊤XH−X
i,j∂H⊤X⊤eie⊤
jH
∂xij
=H⊤X⊤XH−(nIT−eA)H⊤H−H⊤X⊤FW⊤+Υ4 by (21)
=Θ3+Υ4.
Applying Lemma D.6 conditionally on εto(Z,U,V) = (X,XH,H)gives
E[∥Θ3∥2
F|ε]≲EhH⊤X⊤XH−X
i,j∂H⊤X⊤eie⊤
jH
∂xij2
|εi
+E[∥Υ4∥2
F|ε]
≲E[∥XH∥2
F∥H∥2
F|ε] +EX
ijh
∥XH∥2
F∥∂H
∂xij∥2
F+∥H∥2
F∥∂XH
∂xij∥2
F|εi
+E[∥Υ4∥2
F|ε]
≲E[∥X∥2
op∥H∥4
F|ε] +Eh
(1 +∥X∥2
op)∥H∥2
FX
ij∥∂H
∂xij∥2
F|εi
+TE[∥Υ4∥2
op|ε]
≤nC(T, γ, η max, c0)(δ2+∥b∗∥2).
Here, the penultimate line uses ∥∂XH
∂xij∥F=∥eie⊤
j∂H
∂xij+X∂H
∂xij∥F≤(1+∥X∥op)∥∂H
∂xij∥F,and the
last line uses the moment bounds of ∥X∥op,∥H∥Fin Lemma D.1, the moment bounds of ∥∂H
∂xij∥F
in Lemma D.5, the moment bound of ∥Υ4∥opin Lemma B.5.
Bound of Θ4.By definition, we have
nX
i=1∂F⊤ei
∂xij=−(fKH⊤+Υ⊤
1)ejandnX
i=1∂eF⊤ei
∂xij=−(cKH⊤+eΥ⊤
1)ej.
UsingPp
j=1eje⊤
j=Ip, we find
pX
j=1 nX
i=1∂F⊤ei
∂xij−F⊤Xej nX
i=1∂eF⊤ei
∂xij−eF⊤Xej⊤
= (fKH⊤+F⊤X+Υ⊤
1)(cKH⊤+eF⊤X+eΥ⊤
1).
This further implies
pF⊤eF−pX
j=1 nX
i=1∂F⊤ei
∂xij−F⊤Xej nX
i=1∂eF⊤ei
∂xij−eF⊤Xej⊤
=nΘ4+Υ⊤
1(cKH⊤+eF⊤X) + (fKH⊤+F⊤X)eΥ⊤
1+Υ⊤
1eΥ⊤
1| {z }
eΥ4.
Applying Lemma D.7 conditionally on εto(Z,U,V) = (X,F,eF),
nE[∥Θ4∥F|ε]≲EhpF⊤eF−pX
j=1 nX
i=1∂F⊤ei
∂xij−F⊤Xej nX
i=1∂eF⊤ei
∂xij−eF⊤Xej⊤
F|εi
+E[∥eΥ4∥F|ε]
≲(1 + 2√p) 
E[∥F∥4
F|ε]1/2+E[∥eF∥4
F|ε]1/2+E[∥F∥4
∂|ε]1/2+E[∥eF∥4
∂|ε]1/2
+TE[∥eΥ4∥2
op|ε]
≤n3/2C(T, γ, η max, c0)(δ2+∥b∗∥2).
Here, the last inequality uses the moment bounds of ∥F∥F,∥eF∥Fin Lemma D.1, and the moment
bounds of ∥F∥2
∂,∥eF∥2
∂in Lemma D.5, and the moment bound of ∥eΥ4∥opin Lemma B.5.
31Bound of Θ5.By the identity (19), we have
nX
i=1 pX
j=1∂H⊤ej
∂xij−H⊤X⊤ei pX
j=1∂H⊤ej
∂xij−H⊤X⊤ei⊤
= (WF⊤−H⊤X⊤−Υ⊤
2)(WF⊤−H⊤X⊤−Υ⊤
2)⊤.
By the definition of Θ5, we have
nH⊤H−nX
i=1 pX
j=1∂H⊤ej
∂xij−H⊤X⊤ei pX
j=1∂H⊤ej
∂xij−H⊤X⊤ei⊤
=Θ5+Υ⊤
2(WF⊤−H⊤X⊤)⊤+ (WF⊤−H⊤X⊤)Υ2−Υ⊤
2Υ2| {z }
eΥ5.
HereΥ2=P
j((e⊤
jH)⊗In)DS(IT⊗X)Γ⊤(IT⊗ej).
Applying Lemma D.7 conditionally on εto(Z,U,V) = (X⊤,H,H)(i.e., consider the mapping
fromRp×ntoRp×T:X⊤7→H) gives
E[∥Θ5∥F|ε]
≤EhnH⊤H−nX
i=1 pX
j=1∂H⊤ej
∂xij−H⊤X⊤ei pX
j=1∂H⊤ej
∂xij−H⊤X⊤ei⊤
F|εi
+E[∥eΥ5∥F|ε]
≲(1 + 2√p) 
E[∥H∥4
F|ε]1/2+E[∥H∥4
∂|ε]1/2
+TE[∥eΥ5∥2
op|ε]
≤n1/2C(T, γ, η max, c0)(δ2+∥b∗∥2).
Here, the last line use the moment bounds of ∥H∥Fin Lemma D.1, the moment bound of ∥H∥2
∂in
Lemma D.5, and the moment bound of ∥eΥ5∥opin Lemma B.5.
Bound of Θ6.Using (19), we have
nX
i=1pX
j=1∂E⊤eie⊤
jH
∂xij=E⊤(FW⊤−Υ2).
It follows that
E⊤XH−nX
i=1pX
j=1∂E⊤eie⊤
jH
∂xij=E⊤XH−E⊤(FW⊤−Υ2)
=∥E∥FΘ6+E⊤Υ2.
Thus, using eE=E/∥E∥F, we have
Θ6=eE⊤XH−nX
i=1pX
j=1∂eE⊤eie⊤
jH
∂xij−eE⊤Υ2.
Applying Lemma D.6 conditionally on εto(Z,U,V) = (X,eE,H)gives
E[∥Θ6∥2
F|ε]≲EheE⊤XH−nX
i=1pX
j=1∂eE⊤eie⊤
jH
∂xij2
|εi
+E[∥eE⊤Υ2∥2
F|ε]
≲E[∥eE∥2
F∥H∥2
F|ε] +Eh
∥eE∥2
F∥∂H
∂xij∥2
F|εi
+E[∥eE⊤Υ2∥2
F|ε]
≤E[∥H∥2
F|ε] +Eh
∥∂H
∂xij∥2
F|εi
+E[∥Υ2∥2
op|ε]
≤C(T, γ, η max, c0)(δ2+∥b∗∥2).
Here, the last line uses the moment bound of ∥H∥Fin Lemma D.1, the moment bounds of ∥∂H
∂xij∥Fin
Lemma D.5, and the moment bound of ∥Υ2∥opin Lemma B.5. This finishes the proof of Lemma B.6.
32NeurIPS Paper Checklist
1.Claims
Question: Do the main claims made in the abstract and introduction accurately reflect the
paper’s contributions and scope?
Answer: [Yes]
Justification: The abstract and introduction clearly state the claims made in the paper.
Guidelines:
•The answer NA means that the abstract and introduction do not include the claims
made in the paper.
•The abstract and/or introduction should clearly state the claims made, including the
contributions made in the paper and important assumptions and limitations. A No or
NA answer to this question will not be perceived well by the reviewers.
•The claims made should match theoretical and experimental results, and reflect how
much the results can be expected to generalize to other settings.
•It is fine to include aspirational goals as motivation as long as it is clear that these goals
are not attained by the paper.
2.Limitations
Question: Does the paper discuss the limitations of the work performed by the authors?
Answer: [Yes]
Justification: Our results only holds under several assumptions discussed in the paper.
Guidelines:
•The answer NA means that the paper has no limitation while the answer No means that
the paper has limitations, but those are not discussed in the paper.
• The authors are encouraged to create a separate "Limitations" section in their paper.
•The paper should point out any strong assumptions and how robust the results are to
violations of these assumptions (e.g., independence assumptions, noiseless settings,
model well-specification, asymptotic approximations only holding locally). The authors
should reflect on how these assumptions might be violated in practice and what the
implications would be.
•The authors should reflect on the scope of the claims made, e.g., if the approach was
only tested on a few datasets or with a few runs. In general, empirical results often
depend on implicit assumptions, which should be articulated.
•The authors should reflect on the factors that influence the performance of the approach.
For example, a facial recognition algorithm may perform poorly when image resolution
is low or images are taken in low lighting. Or a speech-to-text system might not be
used reliably to provide closed captions for online lectures because it fails to handle
technical jargon.
•The authors should discuss the computational efficiency of the proposed algorithms
and how they scale with dataset size.
•If applicable, the authors should discuss possible limitations of their approach to
address problems of privacy and fairness.
•While the authors might fear that complete honesty about limitations might be used by
reviewers as grounds for rejection, a worse outcome might be that reviewers discover
limitations that aren’t acknowledged in the paper. The authors should use their best
judgment and recognize that individual actions in favor of transparency play an impor-
tant role in developing norms that preserve the integrity of the community. Reviewers
will be specifically instructed to not penalize honesty concerning limitations.
3.Theory Assumptions and Proofs
Question: For each theoretical result, does the paper provide the full set of assumptions and
a complete (and correct) proof?
Answer: [Yes]
33Justification: All the proofs are provided in the supplemental material.
Guidelines:
• The answer NA means that the paper does not include theoretical results.
•All the theorems, formulas, and proofs in the paper should be numbered and cross-
referenced.
•All assumptions should be clearly stated or referenced in the statement of any theorems.
•The proofs can either appear in the main paper or the supplemental material, but if
they appear in the supplemental material, the authors are encouraged to provide a short
proof sketch to provide intuition.
•Inversely, any informal proof provided in the core of the paper should be complemented
by formal proofs provided in appendix or supplemental material.
• Theorems and Lemmas that the proof relies upon should be properly referenced.
4.Experimental Result Reproducibility
Question: Does the paper fully disclose all the information needed to reproduce the main ex-
perimental results of the paper to the extent that it affects the main claims and/or conclusions
of the paper (regardless of whether the code and data are provided or not)?
Answer: [Yes]
Justification: All the code needed to reproduce the results is in the supplemental material.
Guidelines:
• The answer NA means that the paper does not include experiments.
•If the paper includes experiments, a No answer to this question will not be perceived
well by the reviewers: Making the paper reproducible is important, regardless of
whether the code and data are provided or not.
•If the contribution is a dataset and/or model, the authors should describe the steps taken
to make their results reproducible or verifiable.
•Depending on the contribution, reproducibility can be accomplished in various ways.
For example, if the contribution is a novel architecture, describing the architecture fully
might suffice, or if the contribution is a specific model and empirical evaluation, it may
be necessary to either make it possible for others to replicate the model with the same
dataset, or provide access to the model. In general. releasing code and data is often
one good way to accomplish this, but reproducibility can also be provided via detailed
instructions for how to replicate the results, access to a hosted model (e.g., in the case
of a large language model), releasing of a model checkpoint, or other means that are
appropriate to the research performed.
•While NeurIPS does not require releasing code, the conference does require all submis-
sions to provide some reasonable avenue for reproducibility, which may depend on the
nature of the contribution. For example
(a)If the contribution is primarily a new algorithm, the paper should make it clear how
to reproduce that algorithm.
(b)If the contribution is primarily a new model architecture, the paper should describe
the architecture clearly and fully.
(c)If the contribution is a new model (e.g., a large language model), then there should
either be a way to access this model for reproducing the results or a way to reproduce
the model (e.g., with an open-source dataset or instructions for how to construct
the dataset).
(d)We recognize that reproducibility may be tricky in some cases, in which case
authors are welcome to describe the particular way they provide for reproducibility.
In the case of closed-source models, it may be that access to the model is limited in
some way (e.g., to registered users), but it should be possible for other researchers
to have some path to reproducing or verifying the results.
5.Open access to data and code
Question: Does the paper provide open access to the data and code, with sufficient instruc-
tions to faithfully reproduce the main experimental results, as described in supplemental
material?
34Answer: [Yes]
Justification: All the code are provided in the supplemental material.
Guidelines:
• The answer NA means that paper does not include experiments requiring code.
•Please see the NeurIPS code and data submission guidelines ( https://nips.cc/
public/guides/CodeSubmissionPolicy ) for more details.
•While we encourage the release of code and data, we understand that this might not be
possible, so “No” is an acceptable answer. Papers cannot be rejected simply for not
including code, unless this is central to the contribution (e.g., for a new open-source
benchmark).
•The instructions should contain the exact command and environment needed to run to
reproduce the results. See the NeurIPS code and data submission guidelines ( https:
//nips.cc/public/guides/CodeSubmissionPolicy ) for more details.
•The authors should provide instructions on data access and preparation, including how
to access the raw data, preprocessed data, intermediate data, and generated data, etc.
•The authors should provide scripts to reproduce all experimental results for the new
proposed method and baselines. If only a subset of experiments are reproducible, they
should state which ones are omitted from the script and why.
•At submission time, to preserve anonymity, the authors should release anonymized
versions (if applicable).
•Providing as much information as possible in supplemental material (appended to the
paper) is recommended, but including URLs to data and code is permitted.
6.Experimental Setting/Details
Question: Does the paper specify all the training and test details (e.g., data splits, hyper-
parameters, how they were chosen, type of optimizer, etc.) necessary to understand the
results?
Answer: [Yes]
Justification: The choices of step size for GD and SGD are provided in Section 4.
Guidelines:
• The answer NA means that the paper does not include experiments.
•The experimental setting should be presented in the core of the paper to a level of detail
that is necessary to appreciate the results and make sense of them.
•The full details can be provided either with the code, in appendix, or as supplemental
material.
7.Experiment Statistical Significance
Question: Does the paper report error bars suitably and correctly defined or other appropriate
information about the statistical significance of the experiments?
Answer: [Yes]
Justification: All the figures include the 2-standard error bars.
Guidelines:
• The answer NA means that the paper does not include experiments.
•The authors should answer "Yes" if the results are accompanied by error bars, confi-
dence intervals, or statistical significance tests, at least for the experiments that support
the main claims of the paper.
•The factors of variability that the error bars are capturing should be clearly stated (for
example, train/test split, initialization, random drawing of some parameter, or overall
run with given experimental conditions).
•The method for calculating the error bars should be explained (closed form formula,
call to a library function, bootstrap, etc.)
• The assumptions made should be given (e.g., Normally distributed errors).
•It should be clear whether the error bar is the standard deviation or the standard error
of the mean.
35•It is OK to report 1-sigma error bars, but one should state it. The authors should
preferably report a 2-sigma error bar than state that they have a 96% CI, if the hypothesis
of Normality of errors is not verified.
•For asymmetric distributions, the authors should be careful not to show in tables or
figures symmetric error bars that would yield results that are out of range (e.g. negative
error rates).
•If error bars are reported in tables or plots, The authors should explain in the text how
they were calculated and reference the corresponding figures or tables in the text.
8.Experiments Compute Resources
Question: For each experiment, does the paper provide sufficient information on the com-
puter resources (type of compute workers, memory, time of execution) needed to reproduce
the experiments?
Answer: [Yes]
Justification: It is provided in the README file of the supplemental material.
Guidelines:
• The answer NA means that the paper does not include experiments.
•The paper should indicate the type of compute workers CPU or GPU, internal cluster,
or cloud provider, including relevant memory and storage.
•The paper should provide the amount of compute required for each of the individual
experimental runs as well as estimate the total compute.
•The paper should disclose whether the full research project required more compute
than the experiments reported in the paper (e.g., preliminary or failed experiments that
didn’t make it into the paper).
9.Code Of Ethics
Question: Does the research conducted in the paper conform, in every respect, with the
NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines ?
Answer: [Yes]
Justification:
Guidelines:
•The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.
•If the authors answer No, they should explain the special circumstances that require a
deviation from the Code of Ethics.
•The authors should make sure to preserve anonymity (e.g., if there is a special consid-
eration due to laws or regulations in their jurisdiction).
10.Broader Impacts
Question: Does the paper discuss both potential positive societal impacts and negative
societal impacts of the work performed?
Answer: [NA]
Justification: Given the theoretical nature of our work, it does not have any negative societal
impact.
Guidelines:
• The answer NA means that there is no societal impact of the work performed.
•If the authors answer NA or No, they should explain why their work has no societal
impact or why the paper does not address societal impact.
•Examples of negative societal impacts include potential malicious or unintended uses
(e.g., disinformation, generating fake profiles, surveillance), fairness considerations
(e.g., deployment of technologies that could make decisions that unfairly impact specific
groups), privacy considerations, and security considerations.
36•The conference expects that many papers will be foundational research and not tied
to particular applications, let alone deployments. However, if there is a direct path to
any negative applications, the authors should point it out. For example, it is legitimate
to point out that an improvement in the quality of generative models could be used to
generate deepfakes for disinformation. On the other hand, it is not needed to point out
that a generic algorithm for optimizing neural networks could enable people to train
models that generate Deepfakes faster.
•The authors should consider possible harms that could arise when the technology is
being used as intended and functioning correctly, harms that could arise when the
technology is being used as intended but gives incorrect results, and harms following
from (intentional or unintentional) misuse of the technology.
•If there are negative societal impacts, the authors could also discuss possible mitigation
strategies (e.g., gated release of models, providing defenses in addition to attacks,
mechanisms for monitoring misuse, mechanisms to monitor how a system learns from
feedback over time, improving the efficiency and accessibility of ML).
11.Safeguards
Question: Does the paper describe safeguards that have been put in place for responsible
release of data or models that have a high risk for misuse (e.g., pretrained language models,
image generators, or scraped datasets)?
Answer: [NA]
Justification: The paper is of the theoretical nature, it does not invent any new models or
datasets.
Guidelines:
• The answer NA means that the paper poses no such risks.
•Released models that have a high risk for misuse or dual-use should be released with
necessary safeguards to allow for controlled use of the model, for example by requiring
that users adhere to usage guidelines or restrictions to access the model or implementing
safety filters.
•Datasets that have been scraped from the Internet could pose safety risks. The authors
should describe how they avoided releasing unsafe images.
•We recognize that providing effective safeguards is challenging, and many papers do
not require this, but we encourage authors to take this into account and make a best
faith effort.
12.Licenses for existing assets
Question: Are the creators or original owners of assets (e.g., code, data, models), used in
the paper, properly credited and are the license and terms of use explicitly mentioned and
properly respected?
Answer: [NA]
Justification: We write all the code by ourselves, and did not use other code or data.
Guidelines:
• The answer NA means that the paper does not use existing assets.
• The authors should cite the original paper that produced the code package or dataset.
•The authors should state which version of the asset is used and, if possible, include a
URL.
• The name of the license (e.g., CC-BY 4.0) should be included for each asset.
•For scraped data from a particular source (e.g., website), the copyright and terms of
service of that source should be provided.
•If assets are released, the license, copyright information, and terms of use in the
package should be provided. For popular datasets, paperswithcode.com/datasets
has curated licenses for some datasets. Their licensing guide can help determine the
license of a dataset.
•For existing datasets that are re-packaged, both the original license and the license of
the derived asset (if it has changed) should be provided.
37•If this information is not available online, the authors are encouraged to reach out to
the asset’s creators.
13.New Assets
Question: Are new assets introduced in the paper well documented and is the documentation
provided alongside the assets?
Answer: [NA]
Justification:
Guidelines:
• The answer NA means that the paper does not release new assets.
•Researchers should communicate the details of the dataset/code/model as part of their
submissions via structured templates. This includes details about training, license,
limitations, etc.
•The paper should discuss whether and how consent was obtained from people whose
asset is used.
•At submission time, remember to anonymize your assets (if applicable). You can either
create an anonymized URL or include an anonymized zip file.
14.Crowdsourcing and Research with Human Subjects
Question: For crowdsourcing experiments and research with human subjects, does the paper
include the full text of instructions given to participants and screenshots, if applicable, as
well as details about compensation (if any)?
Answer: [NA]
Justification:
Guidelines:
•The answer NA means that the paper does not involve crowdsourcing nor research with
human subjects.
•Including this information in the supplemental material is fine, but if the main contribu-
tion of the paper involves human subjects, then as much detail as possible should be
included in the main paper.
•According to the NeurIPS Code of Ethics, workers involved in data collection, curation,
or other labor should be paid at least the minimum wage in the country of the data
collector.
15.Institutional Review Board (IRB) Approvals or Equivalent for Research with Human
Subjects
Question: Does the paper describe potential risks incurred by study participants, whether
such risks were disclosed to the subjects, and whether Institutional Review Board (IRB)
approvals (or an equivalent approval/review based on the requirements of your country or
institution) were obtained?
Answer: [NA]
Justification:
Guidelines:
•The answer NA means that the paper does not involve crowdsourcing nor research with
human subjects.
•Depending on the country in which research is conducted, IRB approval (or equivalent)
may be required for any human subjects research. If you obtained IRB approval, you
should clearly state this in the paper.
•We recognize that the procedures for this may vary significantly between institutions
and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the
guidelines for their institution.
•For initial submissions, do not include any information that would break anonymity (if
applicable), such as the institution conducting the review.
38