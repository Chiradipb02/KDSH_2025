Achieving Domain-Independent
Certified Robustness via Knowledge Continuity
Alan Sun1,2, Chiyu Ma2, Kenneth Ge1, Soroush Vosoughi2
1Carnegie Mellon University,2Dartmouth College
{alansun, kkge}@andrew.cmu.edu ,
{chiyu.ma.gr, soroush.vosoughi}@dartmouth.edu
Abstract
Wepresent knowledgecontinuity ,anoveldefinitioninspiredbyLipschitzcontinuity
which aims to certify the robustness of neural networks across input domains (such
as continuous and discrete domains in vision and language, respectively). Most
existing approaches that seek to certify robustness, especially Lipschitz continuity,
lie within the continuous domain with norm and distribution-dependent guarantees.
In contrast, our proposed definition yields certification guarantees that depend only
onthelossfunctionandtheintermediatelearnedmetricspacesoftheneuralnet-
work. These bounds are independent of domain modality, norms, and distribution.
We further demonstrate that the expressiveness of a model class is not at odds with
its knowledge continuity. This implies that achieving robustness by maximizing
knowledgecontinuityshouldnottheoreticallyhinderinferentialperformance. Fi-
nally, to complement our theoretical results, we present several applications of
knowledgecontinuitysuchasregularization,acertificationalgorithm,andshow
thatknowledgecontinuitycanbeusedtolocalizevulnerablecomponentsofaneural
network1.
1 Introduction
Deepneuralnetworks(DNNs)havedemonstratedremarkablegeneralizationcapabilities. Theirrobust-
ness,however,hasbeenconsiderablymoredifficulttoachieve. Robustness referstothepreservationof
modelperformanceundernaturaloradversarialalterationsoftheinput[ 18]. DNNs‚Äôlackofrobustness,
highlightedbyseminalworkssuchas[ 24,66]andrecently[ 7,5],posessignificantchallengestotheir
adoptionincriticalapplications,underscoringconcernsforAIsafetyandtrustworthiness[ 20,30,9,7].
Thoughissuesofrobustnessemergedfromcomputervisionapplications,theyhavesincespanned
multipledomains[ 1,35,72,75,7]. Thisresearchtrajectoryhasnotonlypromptedsignificantadvance-
ments in robustness improvements through architectural, training, and dataset augmentations, but
also unveiled the sophistication of adversarial attacks ‚Äîthe process through which counterexamples
to robustness are generated [ 1,35,72,75,7]. Along the progress made in these parallel directions, a
greatdealofworkhasgoneinto certifiedrobustness whichseekstoprovidetheoreticalrobustness
guarantees. Certification is desirable as it generally transcends any particular task, dataset, or model.
As a result, Lipschitz continuity has emerged, promising certified robustness by essentially bounding
the derivative of a neural network‚Äôs output with respect to its input. In this way, Lipschitz continuity
directly capturesthe volatilityof amodel‚Äôs performance,getting atthe heartof robustness. Such an
approachhasprovenitsmeritincomputervision,facilitatingrobustnessundernormanddistributional
assumptions[ 29,59,78,76]. Itsinherenteaseandinterpretabilityhasleadtowidespreadadoptionas
a means to measure and regulate robustness among practitioners as well [71, 12, 21, 68, 54].
1Codebase for our experiments can be found at https://github.com/alansun17904/kc
38th Conference on Neural Information Processing Systems (NeurIPS 2024).Despite these successes in computer vision, there are fundamental obstacles when one tries to
apply Lipschitz continuity into discrete or non-metrizable domains such as natural language. Firstly,
characterizingdistanceinthisinput-outputspaceishighlynontrivial,aslanguagedoesnothavea
naturally-endoweddistancemetric. Additionally,supposeweimposesomedistancemetriconthe
input-output space [ 49,16]. For such a metric to meaningfully characterize adversarial perturbations,
itcannotbeuniversallytask-invariant. Considerthetwosentences(a)‚ÄúIamhappy,‚Äù(b)‚ÄúIamsad.‚Äù
Theground-truthlabelof(a)isinvarianttotheperturbation(a) ‚Üí(b),ifthetaskissentence-structure
identification, but it would not be preserved for a task like sentiment classification. Lastly, key
architectures such as the Transformer [ 70] are provably notLipschitz continuous [ 36].Most of these
challenges are not unique to language, and they represent a strong divide of our understanding of
robustness in discrete/non-metrizable and continuous domains [22, 46].
Toaddresstheseissues,weproposeanewconceptualframeworkwhichwecall knowledgecontinuity .
At its core, we adopt the following axiom:
Robustness is the stability of a model‚Äôs performance
with respect to its perceived knowledge of input-output relations.
Concretely,ourframeworkisgroundedonthepremisethatrobustnessisbetterachievedbyfocusingon
thevariabilityofamodel‚Äôslosswithrespecttoitshiddenrepresentations,ratherthanforcingarbitrary
metrics on its inputs and outputs. Our approach results in certification guarantees independent of
domain modality, norms, and distribution. We demonstrate that the expressiveness of a model class
is not at odds with its knowledge continuity. In other words, achieving robustness by improving
knowledge continuity should not theoretically hinder inferential performance. We show that in
continuous settings (i.e. computer vision) knowledge continuity generalizes Lipschitz continuity
andinheritsits tightrobustnessbounds. Finally,we presentanarrayof practicalapplicationsusing
knowledgecontinuitybothasanindicatortopredictandcharacterizerobustnessaswellasanadditional
term in the loss function to train robust classifiers. In sum, our contributions are threefold:
‚Ä¢Introduction of knowledge continuity , a new concept that frames robustness as variability of a
model‚Äôs loss with respect to its hidden representations.
‚Ä¢We theoretically show that knowledge continuity results in certified robustness guarantees that
generalize across modalities (continuous, discrete, and non-metrizable). Moreover, this robustness
does not come at the expense of inferential performance.
‚Ä¢Wepresentseveralpracticalapplicationsofknowledgecontinuitysuchasusingittrainmorerobust
models,inbothlanguage processingandvision,identifyproblematichiddenlayers, andusingits
theoretical guarantees to formulate a novel certification algorithm.
Althoughourresultsapplytoalldiscrete/non-metrizableandcontinuousspaces,throughoutthepaper
weinvokeexamplesfromnaturallanguageasitculminatestheaforementionedchallenges. Further,
the ubiquity of large language models make their robustness a timely focus.
2 Related Works
There have been extensive studies on developing robust neural networks with theoretical guarantees.
With respect to our contributions, they can be organized into the following categories.
Certified robustness with Lipschitz continuity. The exploration of Lipschitz continuity as a
cornerstoneforimprovingmodelrobustnesshasyieldedsignificantinsights,particularlyinthedomain
ofcomputervision. Thisprinciple,whichensuresboundedderivativesofthemodel‚Äôsoutputwith
respecttoitsinput,facilitatesasmoothermodelbehaviorandinherentlyencouragesrobustnessagainst
adversarialperturbations. Thismethodology,initiallysuggestedby[ 24],hassincebeenrigorously
analyzed and expanded upon. Most theoretical results in this area focus on certifying robustness
with respect to the ùìÅ2-norm [11,86,25,2,38,29,4]. A recent push, fueled by new architectural
developments, has also expanded these results into ùìÅ‚àû-norm perturbations [ 89,88,90]. Further,
Lipschitzcontinuity-inspiredalgorithmsalsoservepractitionersasacomputationallyeffectiveway
totrainmorerobustmodels[ 68,78,69,13]. Thisstandsincontrastto(virtual)adversarialtraining
methodswhichbrute-forcethesetofadversarialexamples,theniterativelyretrainonthem[ 50,63,80].
Though Lipschitz continuity has seen much success in continuous domains, it does not apply to non-
metrizabledomains suchas language. Further, architecturallimitations ofprevalent modelssuch as
2the Transformer [ 70,36] exacerbate this problem. These challenges highlight a critical need for a
new approach that can accommodate the specificities of discrete and non-metrizable domains while
providing robustness guarantees.
Achieving robustness in discrete/non-metrizable spaces. Non-metrizable spaces, where it is non-
trivial to construct a distance metric on the input/output domains, pose a unique challenge to certified
robustness. Instead of focusing on point-wise perturbations, many studies have opted to examine
howtheoutputprobabilitydistributionofamodelchangeswithrespecttoinputdistributionshifts
byleveraginginformationbottleneckmethods[ 67,73,53](seealsoout-of-distributiongeneraliza-
tion: [42,83,60]). Most of these bounds lack granularity and cannot be expressed in closed-form.
In contrast to these theoretical approaches, recent efforts have refocused on directly adapting the
principles underlying Lipschitz continuity to language. Virtual adversarial training methods such
as [43,85] mimic the measurement of Lipschitz continuity by comparing changes in the textual
embeddings with the KL-divergence of the output logits. Along these lines, techniques akin to those
used in adversarial training in vision have also been translated to language, reflecting a shift towards
robustness centered around the learned representation space [ 40,23,35]. Though these approaches
have seen empirical success, they lack theoretical guarantees. As a result, their implementations
and success rate is heavily task-dependent [ 43,85]. There have also been attempts to mitigate the
non-LipschitznessofTransformers[ 87,82]bymodifyingitsarchitecture. Thesechanges,however,
add significant computational overhead.
Other robustness approaches. In parallel, other certified robustness approaches such as randomized
smoothing[ 12,39,37]givestate-of-the-artcertificationfor ùìÅ2-basedperturbations. Notableworks
suchas[34,74]havesoughttogeneralizethesetechniquesintolanguage,buttheirguaranteesstrongly
depend on the type of perturbation being performed. On the other hand, analytic approaches through
convexrelaxationinductivelyboundtheoutputofneuronsinaReLUnetworkacrosslayers[ 79,81,77].
These works, however, are difficult to scale and also do not transfer easily to discrete/non-metrizable
domains.
Our approach, inspired by Lipschitz continuity, distills the empirical intuitions from the works
of[43,85]andprovidestheoreticalcertificationguaranteesindependentofperturbation-type[ 34,74]
and domain modality. We demonstrate that knowledge continuity yields many practical applications
analogous to Lipschitz continuity which are easy to implement and are computationally competitive.
3 Preliminaries
Notations. Let‚Ñù‚â•0‚à∂= [0,‚àû). For any function ùëì‚à∂ÓâÑ‚ÜíÓâÖ, we denote graph(ùëì)‚à∂= {(ùë•,ùë¶) ‚àà
ÓâÑ√óÓâÖ‚à∂ùëì(ùë•) =ùë¶}. Forùëõ‚àà‚Ñï, let[ùëõ]denote the set {1,2,‚Ä¶,ùëõ}.(ÓâÑ,Óà≤ÓâÑ,‚ÑôÓâÑ),(ÓâÖ,Óà≤ÓâÖ,‚ÑôÓâÖ)
are probability spaces and (ÓâÑ√óÓâÖ,Óà≤ÓâÑ‚äóÓà≤ÓâÖ,‚ÑôÓâÑ√ó‚ÑôÓâÖ)denotes the product measurable space of
theprobabilityspaces ÓâÑ,ÓâÖ. Sinceourcontributionfocusesonthesupervisedlearningregime,we
colloquially refer to ÓâÑ,ÓâÖas the input and labels, respectively. We call any probability measure
‚ÑôÓâÑ√óÓâÖabsolutely continuous to ‚ÑôÓâÑ√ó‚ÑôÓâÖ(i.e.(‚ÑôÓâÑ√ó‚ÑôÓâÖ)(ùê∏) = 0 ‚áí‚ÑôÓâÑ√óÓâÖ(ùê∏) = 0) adata
distribution and denote it as Óà∞ÓâÑ,ÓâÖ. If(ÓâÜ,ùëëÓâÜ)is a metric space with metric ùëëÓâÜandùê¥ ‚äÇÓâÜ, then
for anyùëß‚ààÓâÜ,ùëëÓâÜ(ùëß,ùê¥) = infùëé‚ààùê¥ùëëÓâÜ(ùëé,ùëß). We say that a metric space, (ÓâÜ,ùëëÓâÜ), is bounded by
someùêµ‚àà‚Ñù‚â•0, ifsupùëß‚Ä≤,ùëß‚ààÓâÜùëë(ùëß,ùëß‚Ä≤)<ùêµ. Denote by IdÓâÜ‚à∂ÓâÜ‚ÜíÓâÜthe identity function on ÓâÜ. Let
Óà∏‚à∂ÓâÖ√óÓâÖ‚Üí‚Ñù‚â•0bealossfunctionwhere Óà∏(ùë¶,ùë¶‚Ä≤)=0ifandonlyif ùë¶=ùë¶‚Ä≤. Foranyùëì‚à∂ÓâÑ‚ÜíÓâÖ
and(ùë•,ùë¶),(ùë•‚Ä≤,ùë¶‚Ä≤)‚ààÓâÑ√óÓâÖ, we denoteŒîÓà∏(ùë•,ùë¶)
ùëì(ùë•‚Ä≤,ùë¶‚Ä≤)‚à∂=|Óà∏(ùëì(ùë•),ùë¶)‚àíÓà∏(ùëì(ùë•‚Ä≤),ùë¶‚Ä≤)|, essentially the
absolute difference in loss between (ùë•,ùë¶)and(ùë•‚Ä≤,ùë¶‚Ä≤). Unless otherwise specified, it will be assumed
thatùëìis a measurable function from ÓâÑtoÓâÖwith a metric decomposition (see Def. 1).
Lipschitzcontinuity. Giventwometricspaces (ÓâÑ,ùëëÓâÑ),(ÓâÖ,ùëëÓâÖ)afunctionùëì‚à∂ÓâÑ‚ÜíÓâÖisùêæ-Lipschitz
continuous if there exists ùêæ‚àà‚Ñù‚â•0such that for all ùë•,ùë•‚Ä≤‚ààÓâÑ,ùëëÓâÖ(ùëì(ùë•),ùëì(ùë•‚Ä≤))‚â§ùêæùëëÓâÑ(ùë•,ùë•‚Ä≤).
4 Knowledge Continuity
In this section, we provide the formal definition of knowlege continuity and explore its theoretical
properties.
We start by defining a model‚Äôs perceived knowledge through a rigorous treatment of its hidden
representationspaces. Byconsideringthedistancebetweeninputsinsomerepresentationspacein
conjunctionwithchangesinloss,weresultinameasureof volatilityanalogoustoLipschitzcontinuity.
3Boundingthisvolatilityinexpectationthendirectlyleadstoournotionofknowledgecontinuity. With
these tools, we demonstrate a host of theoretical properties of knowledge continuity including its
certification ofrobustness, guarantees ofexpressiveness,and connections toLipschitz continuity in
continuous settings. We summarize our theoretical contributions as follows:
‚Ä¢Wedefinetheperceivedknowledgeofamodelaswellasvolatilityandknowledgecontinuitywithin
a model‚Äôs representation space (see Def. 1, 2, 3, 4, respectively).
‚Ä¢Weprovethatknowledgecontinuityimplies probabilistic certifiedrobustnessunderperturbationsin
therepresentationspaceandconstrainingknowledgecontinuityshouldnothindertheexpressiveness
of the class of neural networks (see Thm. 4.1 and Prop. 4.3, 4.4, respectively).
‚Ä¢Weprovethat in some cases knowledge continuity is equivalent (in expectation) to Lipschitz
continuity. This shows that our axiomization of robustness aligns with existing results when
perturbation with respect to the input is well-defined (see Prop. 4.6, 4.8).
4.1 Defining Perceived Knowledge
Knowledgeisgenerallyunderstoodasarelationalconcept: itarisesfromtheconnectionswemake
between ideas, experiences, and stimuli [ 26]. Herein, we capture the perceived knowledge of a model
byfocusingontherelationsitassignstoinput-inputpairs. Specifically, theserelationsareexposedby
decomposing a function ùëì‚à∂ÓâÑ‚ÜíÓâÖinto projections to intermediate metric spaces. Formally,
Definition1 (MetricDecomposition) .Wesaythatùëìadmitsametricdecompositionifthereexists
metric spaces (ÓâÜ1,ùëë1),‚Ä¶,(ÓâÜùëõ,ùëëùëõ)with metrics ùëëùëòforùëò‚àà[ùëõ]such that
1.(ÓâÜùëò,ùëëùëò)is endowed with its Borel ùúé-algebra.
2.Thereexistsmeasurablemappings ‚Ñé0,‚Ñé1,‚Ä¶,‚Ñéùëõwhere‚Ñé0‚à∂ÓâÑ‚ÜíÓâÜ1,‚Ñéùëò‚à∂ÓâÜùëò‚ÜíÓâÜùëò+1for
ùëò‚àà[ùëõ‚àí1], and‚Ñéùëõ‚à∂ÓâÜùëõ‚ÜíÓâÖ.
3.ùëì=‚Ñéùëõ‚ó¶‚Ñéùëõ‚àí1‚ó¶‚Ä¶‚ó¶‚Ñé1‚ó¶‚Ñé0.
Remark1.IfÓâÑisametricspacewithmetric ùëëÓâÑandÓà≤ÓâÑisitsBorelùúé-algebra,thenforanymeasurable
mappingùëì‚à∂ÓâÑ‚ÜíÓâÖthere exists the trivial metric decomposition
ùëì=ùëì‚ó¶IdÓâÑ. (4.1)
Therefore, in computer vision applications where (ÓâÑ,ùëëÓâÑ)=(‚Ñùùëõ,ùìÅùëù)for someùëõ‚àà‚Ñ§+, we can apply
this trivial decomposition to yield bounds which mirror the certification guarantees of Lipschitz
continuity. This is discussed in detail in Section 4.5.
To the best of our knowledge, all deep learning architectures admit metric decompositions, since
their activations are generally real-valued. So, for all subsequent functions from ÓâÑtoÓâÖ, unless
otherwisespecified,weassumetheyaremeasurableandpossessametricdecomposition. Further,
we denoteùëìùëò=‚Ñéùëò‚ó¶‚Ñéùëò‚àí1‚ó¶‚Ä¶‚ó¶‚Ñé1‚ó¶‚Ñé0and adopt the convention of calling ‚Ñéùëòtheùëòthhidden layer. In
Appendix A, we present several metric decompositions for a variety of architectures.
For any metric-decomposible function, an immediate consequence of our definition is that its metric
decomposition may not be unique. However, in the context of neural networks, this is a desirable
property. Seminal works from an array of deep learning subfields such as semi-supervised learn-
ing[57],manifoldlearning[ 51],andinterpretability[ 10,47]placegreatemphasisonthequalityof
learnedrepresentationspacesbyexaminingtheinduced-topologyoftheirmetrics. Thisoftendoes
not affect the typical performance of the estimator, but has strong robustness implications [ 33]. Our
results,which aredependentonparticularmetricdecompositions, capturethistrend. InSection 4.4,
we discuss in detail the effects of various metric decompositions on our theoretical results.
4.2 Defining Knowledge Continuity
We first introduce what it means for a model‚Äôs performance to be volatile at a data point relative to its
metricdecomposition. Then,wecontrastknowledgecontinuitywithLipschitzcontinuity,pointing
out key differences that will allow us to prove more general bounds.
Definition2 (ùëò-Volatility) .Letùëì‚à∂ÓâÑ‚ÜíÓâÖandÓà∏beanylossfunction. The ùëò-volatilityofapoint
(ùë•,ùë¶)‚ààÓâÑ√óÓâÖwhich we denote as ùúéùëò
ùëì(ùë•,ùë¶)is given by
ùúéùëò
ùëì(ùë•,ùë¶)‚à∂=ùîº(ùë•‚Ä≤,ùë¶‚Ä≤)‚àºÓà∞ÓâÑ,ÓâÖ
ùëì(ùë•)‚â†ùëì(ùë•‚Ä≤)‚é°
‚é¢
‚é¢‚é£ŒîÓà∏(ùë•,ùë¶)
ùëì(ùë•‚Ä≤,ùë¶‚Ä≤)
ùëëùëò(ùëìùëò(ùë•),ùëìùëò(ùë•‚Ä≤))‚é§
‚é•
‚é•‚é¶, (4.2)
4Sparse Knowledge Continuity Knowledge Continuity Knowledge Discontinuity
Figure1: Examplesofknowledge(dis)continuities. ùëì‚à∂ÓâÑ‚ÜíÓâÖisameasurablemap,and (ÓâÜùëò,ùëëùëò)
is one of its hidden representations. The color of the points indicates loss. ‚ô¶denotes knowledge
continuityinducedbysparsity: anisolatedconceptwithnoknowledgerelationsclosetoit. So,any
perturbation moves ‚ô¶far away with high probability. Smooth changes in loss around ‚òÖimplies
knowledge continuity. Finally, ‚≠ìis notknowledge continuous dueto drastic changesin loss nearby.
Notice that the classification of points is independent of input/output clustering behavior since ÓâÑ,ÓâÖ
may not be endowed with a metric.
whereùëëùëòis the distance metric associated with ùëì‚Äôsùëòthhidden layer.
By performing some algebra on the definition, we see that it decomposes nicely into two distinct
terms:sparsityof the representation and variation in loss.
ùúéùëò
ùëì(ùë•,ùë¶)=ùîº(ùë•‚Ä≤,ùë¶‚Ä≤)‚àºÓà∞ÓâÑ,ÓâÖ[|Óà∏(ùëì(ùë•),ùë¶)‚àíÓà∏(ùëì(ùë•‚Ä≤),ùë¶‚Ä≤)|
ùëëùëò(ùëìùëò(ùë•),ùëìùëò(ùë•‚Ä≤))]
,
=Óà∏(ùëì(ùë•),ùë¶)ùîº(ùë•‚Ä≤,ùë¶‚Ä≤)‚àºÓà∞ÓâÑ,ÓâÖ[
1
ùëëùëò(ùëìùëò(ùë•),ùëìùëò(ùë•‚Ä≤))
‚èü‚èû‚èû‚èû‚èû‚èû‚èû‚èû‚èû‚èû‚èü‚èû‚èû‚èû‚èû‚èû‚èû‚èû‚èû‚èû‚èü
sparsity‚ãÖ||||1‚àíÓà∏(ùëì(ùë•‚Ä≤),ùë¶‚Ä≤)
Óà∏(ùëì(ùë•),ùë¶)||||‚èü‚èû‚èû‚èû‚èû‚èû‚èû‚èû‚èû‚èû‚èü‚èû‚èû‚èû‚èû‚èû‚èû‚èû‚èû‚èû‚èü
variation in loss]
,(4.3)
Our notion of volatility essentially measures the change in performance with respect to perturbations
to a model‚Äôs perceived knowledge. In particular, Eq. 4.3 reveals that there are two interactions
in play which we illustrate in Fig. 1. Informally, we say that (ùë•,ùë¶)is highly volatile if there is a
large discrepancy in performance between it and points that are perceived to be conceptually similar.
Therefore,highlyvolatilepointscaptureinaccurateinput-inputknowledgerelations. Additionally,
(ùë•,ùë¶)experiences low volatility if the space around it is sparse with respect to Óà∞ÓâÑ,ÓâÖ. In other words,
any set of perturbations applied in ÓâÜùëòwould push(ùë•,ùë¶)far away, with high probability. This makes
(ùë•,ùë¶)an isolated concept with little knowledge relationships associated with it.
SimilartoLipschitzcontinuity, theboundedness ofthe ùëò-volatility of ùëìacrossthe datadistribution is
crucial and we denote this class of functions as knowledge continuous .
Definition 3 (Pointwiseùúñ-Knowledge Continuity) .We say that ùëìisùúñ-knowledge continuous at
(ùë•,ùë¶)‚ààÓâÑ√óÓâÖwith respect to a function ùëì, loss function Óà∏, and hidden layer ùëòifùúéùëò
ùëì(ùë•,ùë¶)<ùúñ.
Conversely, we say that (ùë•,ùë¶)isùúñ-knowledge discontinuous if the previous inequality does not hold.
Further,(ùë•,ùë¶)is simply knowledge discontinuous if ùúéùëò
ùëì(ùë•,ùë¶)is unbounded. Now, we extend this
definition globally by considering the ùëò-volatility between all pairs of points.
5Definition 4 (Expectedùúñ-Knowledge Continuity) .We say that ùëìisùúñ-knowledge continuous with
respect to a loss function Óà∏and hidden layer ùëòif
ùîº(ùë•,ùë¶)‚àºÓà∞[ùúéùëò
ùëì(ùë•,ùë¶)]<ùúñ. (4.4)
Though thefunctional forms ofLipschitz continuity andknowledge continuityare similar, thereare
important differences that allow us to prove more general results. Firstly, unlike Lipschitz continuity
which is an analytical property of the model ùëì, knowledge continuity is a statistical one. In this
way, non-typical data points, even if they are volatile, are ignored, whereas Lipschitz continuity
treatsallpointsequally. Thisisnecessaryinmanydiscreteapplications,asprojectingacountable
input space onto a non-countable metric space inevitably results in a lack of correspondence thereof.
Moreover,ground-truthrelationsfrom ÓâÑ‚ÜíÓâÖmaynotbewell-definedon allofÓâÑ: considersentiment
classification of an alpha-numeric UUID string or dog-cat classification of Gaussian noise. Secondly,
the knowledge continuity of an estimator is measured with respect to the loss function rather than
itsoutput. ThispropertyallowsustoachievetheexpressivenessguaranteesinSection4.4,sinceit
places no restrictions on the function class of estimators. Lastly, knowledge continuity measures the
distancebetweeninputswiththeendowedmetricinitshiddenlayers. Thisflexibilityallowsusto
define knowledge continuity even when the input domain is not a metric space.
4.3 Certification of Robustness
Our first main result demonstrates that ùúñ-knowledge continuity implies probabilistic certified robust-
nessinthehiddenrepresentationspace. InTheorem4.1,givensomereferenceset ùê¥‚äÇÓâÑ√óÓâÖ,we
bound the probability that a ùõø-sized perturbation in the representation space away from ùê¥will result
in an expected ùúÇchange in loss. In other words, knowledge continuity is able to characterize the
robustness of any subset of data points with positive measure.
Theorem 4.1. Letùê¥ ‚äÇ ÓâÑ√óÓâÖsuch that ‚ÑôÓà∞ÓâÑ,ÓâÖ[ùê¥]>0andùõø,ùúÇ >0. Letùê¥‚Ä≤={
(ùë•‚Ä≤,ùë¶‚Ä≤)‚ààÓâÑ√óÓâÖ‚à∂ùîº(ùë•,ùë¶)‚àºÓà∞ÓâÑ,ÓâÖ
(ùë•,ùë¶)‚ààùê¥ŒîÓà∏(ùë•,ùë¶)
ùëì(ùë•‚Ä≤,ùë¶‚Ä≤)>ùúÇ}
. Ifùëì‚à∂ÓâÑ‚ÜíÓâÖisùúñ-knowledge continuous
with respect to the hidden layer indexed by ùëòand(ÓâÜùëò,ùëëùëò)is bounded by ùêµ>0, then
‚Ñô(ùë•,ùë¶)‚àºÓà∞ÓâÑ,ÓâÖ[ùê¥‚Ä≤‚à£ùëëùëò(ùëìùëò(ùë•),ùëìùëò(ùê¥))<ùõø]‚â§ùúñùõø
ùúÇ(
1‚àíexp[
‚àíŒ©(
ùõø
ùêµ‚àí‚àö
log1
‚Ñô[ùê¥])2]).(4.5)
Proof sketch. We apply the definition of conditional probability ùëÉ(ùê¥|ùêµ) =ùëÉ(ùê¥‚à©ùêµ)‚àïùëÉ(ùêµ)and
boundùëÉ(ùê¥‚à©ùêµ),ùëÉ(ùêµ),separately. Thenumerator, ‚Ñô[ùê¥‚Ä≤andùëëùëò(ùëìùëò(ùë•),ùëìùëò(ùê¥))<ùõø],isupper-bounded
through an application of Markov‚Äôs Inequality. On the other hand, we apply known concentration
inequalities to lower bound ‚Ñô[ùëëùëò(ùëìùëò(ùë•),ùëìùëò(ùê¥))<ùõø], combining these results in the theorem. We
present the proof in its entirety in Appendix B. ‚ñ†
This demonstrates that knowledge continuity results in certification of robustness, independent of
distancemetricanddomainmodality. Theassumptionofboundednessandrequirementtoknow ‚Ñô[ùê¥]
canbelostbytakinglimitsofEq.4.5withrespectto ùêµand‚Ñô[ùê¥]. Thisyieldsthefollowingcorollary.
Corollary 4.2. If(ÓâÜùëò,ùëëùëò)is unbounded, then
‚Ñô(ùë•,ùë¶)‚àºÓà∞ÓâÑ,ÓâÖ[ùê¥‚Ä≤‚à£ùëëùëò(ùëìùëò(ùë•),ùëìùëò(ùê¥))<ùõø]‚â§ùúñùõø
ùúÇ(1‚àí‚Ñô[ùê¥]). (4.6)
If‚Ñô[ùê¥]=0, then
‚Ñô(ùë•,ùë¶)‚àºÓà∞ÓâÑ,ÓâÖ[ùê¥‚Ä≤‚à£ùëëùëò(ùëìùëò(ùë•),ùëìùëò(ùê¥))<ùõø]‚â§ùúñùõø
ùúÇ. (4.7)
Proof.Theseresultsfollowfromdirectlytakingthelimitas ùêµ‚Üí‚àûandapplyingsomeofthebounds
acquired in the proof of Thm. 4.1. This yields Eq. 4.6. Next, jointly taking the limit as ‚Ñô[ùê¥]‚Üí0and
ùêµ‚Üí‚àûresults in Eq. 4.7. ‚ñ†
InbothThm.4.1andCor.4.7,weyieldprobabilisticguaranteeslike[ 12],ratherthandeterministic
ones. Though deterministic bounds are desirable, the stochasticity of our framework is necessary
6for its generalization across different domains. For most continuous, metrizable applications (like
computer vision), models learn a hidden representation space where most minute changes in this
spacecorrespondtotangibleinputs. Thesamecannotbesaidformanydiscreteornon-metrizable
applications. In natural language processing, the correspondence between the learned representation
space and the input is sparse, resulting in lots of ‚Äúdead space‚Äù: portions of the hidden representation
space that do not correspond to any input [ 3,19]. And so, by incorporating the data distribution into
our bounds, we implicitly adjust for this: assigning zero-measure to the aforementioned ‚Äúdead space.‚Äù
4.4 Expressiveness
Oursecondmainresultdemonstratesthat ùúñ-knowledgecontinuitycanbeachievedwithouttheoretically
compromising the accuracy of the model. In other words, universal function approximation is an
invariantpropertywithrespectto ùúñ-knowledgecontinuity. Universalapproximationresultshaveseena
greatdealoftheoreticalwork,astheyputlimitsonwhatneuralnetworkscanrepresent[ 15,31,45]. As
discussedinSection2,Lipschitzcontinuousfunctionsdonotachieveuniversalfunctionapproximation
withrespecttothesetofallfunctions,inparticular,non-continuousones. However,weshowthat
under strong conditions this is achievable with knowledge continuity.
First, let us formally define a universal function approximator .
Definition 5 (Universal Function Approximator) .Suppose that Óà∏is Lebesgue-integrable in both
coordinates. Let Óà≤‚äÇÓâÖÓâÑbeasetofmeasurablefunctionsfrom ÓâÑ‚ÜíÓâÖsuchthatforany ùëì‚ààÓà≤,there
existsùúáùëì‚â™Óà∞ÓâÑ,ÓâÖsuchthatùúáùëì(graph(ùëì))=1. Then, ÓâÅ‚äÇÓà≤isauniversalfunctionapproximator
ofÓà≤if for everyùëì‚ààÓà≤and everyùúñ>0, there exists ÃÇùëì‚ààÓâÅsuch that
‚à´Óà∏(ÃÇùëì(ùë•),ùë¶)ùëëùúáùëì<ùúñ. (4.8)
We now show any universal function approximator can be made robust through the trivial metric
decomposition.
Proposition 4.3. LetÓâÅ‚äÇÓâÖÓâÑbe a universal function approximator of ÓâÖÓâÑwith respect to some loss
function Óà∏. Then,forany ùëì‚ààÓâÖÓâÑandsequence ùúñ1,ùúñ2,‚Ä¶suchthatùúñùëõ‚Üí0thereare asequenceof
ùúñùëõ-knowledge continuous functions in ÓâÅsuch that ‚à´Óà∏(ùëìùëõ(ùë•),ùë¶)ùëëùúáùëì<ùúñùëõ, forùëõ‚àà‚Ñï.
Proof.Chooseùëìùëõ‚ààÓâÅsuch that ‚à´Óà∏(ùëìùëõ(ùë•),ùë¶)ùëëùúáùëì<1
2ùúñùëõ. Consider the 1-layer metric decomposi-
tion ofùëì,‚Ñé1‚à∂ÓâÑ‚ÜíÓâÜ1where ÓâÜ1=ÓâÑequipped with the trivial metric ( ùëë1(ùë•,ùë¶)=1ifùë•‚â†ùë¶and 0
otherwise). Then, ùëìùëõ=ùëìùëõ‚ó¶‚Ñé1. So, it follows that
ùîºùúé1
ùëìùëõ(ùë•,ùë¶)=‚à´ŒîÓà∏(ùë•,ùë¶)
ùëìùëõ(ùë•‚Ä≤,ùë¶‚Ä≤)
ùëë1(‚Ñé1(ùë•),‚Ñé1(ùë•‚Ä≤))ùëëùúáùëì,
‚â§‚à´ŒîÓà∏(ùë•,ùë¶)
ùëìùëõ(ùë•‚Ä≤,ùë¶‚Ä≤)ùëëùúáùëì,
‚â§ùúñùëõ.
and by the construction of ùëìùëõ, the proof is completed. ‚ñ†
In other words, if our estimator was given ‚Äúinfinite representational capacity,‚Äù robustness can be
trivially achieved by isolating every point as its own concept (as discussed in Section 4.2). More
generally, if we instead considered a generalized discrete metric (fix ùëê‚àà[0,‚àû],ùëë(ùë•,ùë¶)=ùëêif and
onlyifùë•=ùë¶andùëë(ùë•,ùë¶)=0,otherwise),thenas ùëê‚Üí‚àû,ùëò-volatilityconvergespointwiseto0almost
everywhere assuming that the loss is finite almost everywhere. In practice, we find these degenerate
decompositions tobe unreasonableas they alsotrivializerobustness. Forexample, if ùëê=‚àû, then
robustnessisnotwell-definedasanyperturbationwouldleadtoapointthatisperceivedtobeinfinitely
far away. In this sense, our framework accounts for different notions of robustness, strong and
weak.The next result builds on Prop. 4.3 and demonstrates how a stronger notion of robustness
will affect expressiveness. These added constraints make it so that trivial metric decompositions
arenolongerpossibleunlessthemetricin ÓâÑisalsotrivial. Westatethisformallybelow,notethe
highlighted differences between this and Prop. 4.3.
Proposition4.4. Suppose(ÓâÑ,ùëëÓâÑ),(ÓâÖ,ùëëÓâÖ)‚à∂=(ÓâÑ,ùëëÓâÑ)arecompactmetricspaces, Óà≤‚äÇÓâÖÓâÑisthe
set of all continuous functions fromÓâÑtoÓâÖsuch that ‚à´ùëëÓâÑ(ùë•,ùë•‚Ä≤)‚àí1ùëëùúáùëì<‚àûandÓà∏be Lipschitz
continuous in both coordinates. Then, there exists a universal function approximator ÓâÅofÓà≤that is
knowledge continuous (i.e. ùîºùúéùëò
ùëì(ùë•,ùë¶)<‚àûfor someùëò).
7Proof sketch. We show an outline of the proof here and defer the full proof to Appendix C. By
the Stone-Weierstrass Theorem, the set of Lipschitz continuous functions is dense in the set of all
continuousfunctionsfrom ÓâÑtoÓâÖ. Since Óà∏isLipschitzcontinuousinbothcoordinates,throughsome
algebra, ùîºùúé1
ùëì(ùë•,ùë¶)<‚àû, where‚Ñé1=IdÓâÑand we yield the statement of the theorem. ‚ñ†
The additional constraint ‚à´ùëëÓâÑ(ùë•,ùë•‚Ä≤)‚àí1ùëëùúáùëìrequires data points to be sparsely layed out in the
representationspace. Asdiscussedpreviously,thisassumptionisgenerallyreasonablefordiscrete
applications. InconjunctionwithProp.4.3,wehaveshownthattheclassofknowledgecontinuous
functionsis strictlylarger thantheclassofLipschitzcontinuousones. Thoughweshowthatuniversal
approximationbyknowledgecontinuousnetworksisachievable,itisunclearwhethertheseresults
stillholdifthe‚Äútightness‚Äùofthemetricdecompositionsisbounded. Specifically,theconstruction
in Prop. 4.3 results in a metric decomposition with infinite Hausdorff dimension. Is it possible to
achieve Prop. 4.3 in its most general form if we only consider the set of all knowledge continuous
functions with metric decompositions with finite Hausdorff dimension? Based on the theoretical and
empirical results of [ 62,33], respectively, we conjecture in the negative and leave its resolution open.
Conjecture 4.5. IfÓâÅ‚äÇÓâÖÓâÑis a universal function approximator with respect to some Lebesgue-
integrablelossfunction Óà∏. Then,forany ùëì‚ààÓâÖÓâÑ,theredoesnotexist asequenceof functionswith
metricdecompositionsof finiteHausdorffdimension thatachievearbitrarilysmallapproximation
error (i.e. ‚à´Óà∏(ÃÇùëì(ùë•),ùë¶)ùëëùúáùëì) and knowledge continuity.
4.5 Connections to Lipschitz Continuity
WenowdemonstratethatouraxiomizationofrobustnesspresentedinSection1alignswiththenotion
of robustness2commonly prescribed in vision [ 18]. This unifies the certified robustness bounds with
respect to the representation space derived in Thm. 4.1 with existing work certifying robustness with
respect to the input space in continuous applications such as vision.
Our first result identifies conditions under which knowledge continuity, implies Lipschitz continuity.
Proposition 4.6. Suppose that (ÓâÑ,ùëëÓâÑ),(ÓâÖ,ùëëÓâÖ)are metric spaces. Let the first ùëõmetric decompo-
sitionsofùëì‚à∂ÓâÑ‚ÜíÓâÖbeùêæùëñ-Lipschitzcontinuous,for ùëñ‚àà[ùëõ]. Ifùëìisùúñ-knowledgecontinuouswith
respectto the ùëõthhidden layerand ùëëÓâÖ(ùëì(ùë•),ùëì(ùë•‚Ä≤))‚â§ùúÇŒîÓà∏(ùë•,ùë¶)
ùëì(ùë•‚Ä≤,ùë¶)for allùë•,ùë•‚Ä≤‚ààÓâÑ,ùë¶‚ààÓâÖ, and
someùúÇ>0, thenùëìis Lipschitz continuous in expectation. That is,
ùîº(ùë•,ùë¶),(ùë•‚Ä≤,ùë¶‚Ä≤)‚àºÓà∞ÓâÑ,ÓâÖùëëÓâÖ(ùëì(ùë•),ùëì(ùë•‚Ä≤))
ùëëÓâÑ(ùë•,ùë•‚Ä≤)‚â§ùúñùúÇùëõ‚àè
ùëó=1ùêæùëó. (4.9)
Theproof ispresented inAppendix Dand follows easilythrough somealgebriac manipulation. Itis
easytoseethatif ùëìisknowledgecontinuouswithrespecttosomeidentity(orcontractive)metric
decomposition, then we can loose the repeated product. Analogous to Remark 1, the concepts of
Lipschitz continuity and knowledge continuity become similar when we can assign metrics to the
input-output spaces. Next, combining this proposition with an auxiliary result from [ 89], we directly
yield a certification on the input space.
Corollary 4.7. Suppose that assumptions of Prop. 4.6 are true. And also assume that (ÓâÑ,ùëëÓâÑ) =
(‚Ñùùëõ,ùìÅùëù),(ÓâÖ,ùëëÓâÖ) = (‚Ñùùëö,ùìÅùëù), for1‚â§ùëù‚â§‚àû. Define a classifier from ùëì‚à∂‚Ñùùëõ‚Üí‚Ñùùëö,ùëî, where
ùëî(ùë•)‚à∂=argmaxùëò‚àà[ùëö]ùëìùëò(ùë•)foranyùë•‚àà‚Ñùùëõ. Then,withprobability 1‚àíùúñùúÇ
ùë°‚àèùëõ
ùëó=1ùêæùëó,ùëî(ùë•)=ùëî(ùë•+ùõø)
forall‚Äñùõø‚Äñùëù<(21‚àïùëù‚àï2ùë°)margin(ùëì(ùë•))andùë°>0.ùëìùëò(ùë•)istheùëòthcoordinateof ùëì(ùë•)andmargin(ùëì(ùë•))
denotes the difference between the largest and second-largest output logits.
WepresenttheproofinAppendixD.OursecondresultidentifiesconditionsunderwhichLipschitz
continuity, implies knowledge continuity.
Proposition 4.8. Let(ÓâÑ,ùëëÓâÑ),(ÓâÖ,ùëëÓâÖ)be a metric spaces. Let ùëì‚à∂ÓâÑ‚ÜíÓâÖbeùúñ-Lipschitz continuous
andÓà∏(ùëì(ùë•),ùë¶)beùúÇ-Lipschitz continuous with respect to both coordinates. If the first ùëõmetric
decompositions of ùëìareùêæùëñ-Lipschitz continuous, then ùëìis knowledge continuous with respect to the
ùëõthhidden layer. That is,
ùîº(ùë•,ùë¶)‚àºÓà∞ÓâÑ,ÓâÖùúéùëõ
ùëì(ùë•,ùë¶)‚â§ùúñùúÇùëõ‚àè
ùëó=11
ùêæùëó. (4.10)
2Small perturbations on the input result in small changes in performance which implies small changes in
output when the loss function is Lipschitz continuous.
81.0
0.5
0.0
0.5
1.0
Normalized n1n
k= 1k
0.15
0.20
0.25
0.30
0.35
0.40
0.45% of Successful Adversarial Attacks
y= 0.0589x+ 0.3236
2.5
0.0
bert-large-uncased
bert-base-uncased
2.5
0.0
roberta-base
roberta-large
2.5
0.0Normalized k
gpt2
0.0
0.2
0.4
0.6
0.8
1.0
Relative Depth
2.5
0.0
t5-base
t5-small
0.0
0.2
0.4
0.6
0.8
Relative Depth(c)(b) (a)
0.20
0.22
0.24
0.26
0.28
0.30
0.32R2
y= 0.0919x+ 0.2011Figure 2: (a)The averagepercentage ofsuccessful adversarial attacksby TextFooler [ 35] ona host of
models[58,57,16,44]andtheIMDB[ 48]datasetregressedwiththeaverageofknowledgecontinuity
coefficients across all hidden layers ( ùëÖ2= 0.35). (b)ùëò-Volatility as ùëòis varied across a model‚Äôs
relative depth. (c) Correlation between ùëò-volatility and adversarial vulnerability (averaged across all
models shown in (b)) with respect to TextFooler [35] as ùëòvaries.
We detail theproof of this proposition in Appendix D.We note that in continuous applicationssuch
as computer vision, the assumptions of both propositions are generally met (i.e. our input-output
spaces are metric spaces, all hidden layers are Lipschitz, and loss functions are locally Lipschitz).
Furthermore, commonarchitecturessuchasfullyconnectednetworks, CNNs, RNNs, andevenvision
transformers are Lipschitz continuous [ 71,55].This implies that our notion of robustness is indeed
an appropriate generalization that transcends domain modality since in continuous settings we
can recover the strong bounds of Lipschitz continuity while expanding into new discrete and
non-metrizable territory.
5 Practical Applications
In addition to the theoretical guarantees given by knowledge continuity in Section 4, we also demon-
strate that knowledge continuity can be easily applied in practice. First, we find that knowledge
continuity, similar to Lipschitz continuity, can be used to gauge adversarial robustness. Along these
lines, our measure of volatility (see Def. 2) can be used to isolate particularly vulnerable hidden
representations. Theseapplicationsthendirectlymotivateregulationofknowledgecontinuityasa
means to enforce robustness.
Unless otherwise specified, we run all of our experiments on the IMDB dataset [ 48] (a sentiment
classification task) using a host of language models from different model families (encoder, decoder,
encoder-decoder). We also present additional experiments on vision tasks. These experiments can be
found in the Appendix G.
Knowledgecontinuitycanpredictadversarialrobustness. Foragivenmodel, ùëì,withùëõhidden
representations, choose some ùëò‚àà [ùëõ]. Then, consider the hidden representation index by ùëò. For
this fixedùëò, we determine its ùëò-volatility by directly estimating Def. 2 through a naive Monte-Carlo
algorithm (see Appendix G for more details). Repeating this for all ùëò‚àà[ùëõ], we yield a collection of
ùëò-volatilitieswhichwedenoteas {ùúñ1,‚Ä¶,ùúñùëõ},oneforeachhiddenlayer. Whenweregressasimple
average of these coefficients, ùëõ‚àí1‚àëùëõ
ùëò=1ùúñùëò, with the empirical adversarial robustness (estimated using
TextFooler[ 35]),astrongcorrelationisobserved. ThisisshowninFig.2(a). Inparticular,knowledge
continuityaloneisabletoexplain35%ofthevarianceinadversarialattacksuccessrate. Whenwe
combineùëò-volatility with other model properties like size, model family, even more variance can
beexplained( ùëÖ2=0.48). Thus,knowledgecontinuitymaybeusedasacomputationallyefficient
method to estimate adversarial vulnerability with respect to the input space as compared to iteratively
applying real adversarial attacks. Moreover, when the adversary is unknown a priori, knowledge
continuitycanalsobeusedinthiswayasadiagnostictool. Adetaileddiscussionoftheseexperiments
are presented in Appendix E.
Knowledgecontinuitycanlocalizevulnerablehiddenrepresentations. Weplottherelationship
between the ùëò-volatility,ùúñùëò, and the relative depth of the model (i.e. ùëò‚àïùëõ). We find that language
models belonging to different model families (encoder, decoder, encoder-decoder) admit different ùëò-
volatilitytrajectories. ThisisshowninFig.2(b). Inthisway,knowledgecontinuitymayprovideamore
9Table 1: Comparison of our knowledge continuity algorithm to existing works across various model
families and adversarial attack methods. TF, BA, ANLI denote adversarial attacks [ 35], [40], and
[52],respectively. Regulatingknowledgecontinuitytoimproverobustnessissuperioracrossalmost
all tasks and attacks.
Arch. Method IMDB IMDBTFIMDBBAANLIR1ANLIR2ANLIR3
Base 93.6 47.9 45.2 44.5 45.6 33.8
BERT [16] TF [35] 93.3 69.2 62.5 ‚úó ‚úó ‚úó
‚àº110M params ALUM [43] 93.5 56.9 47.8 45.2 46.7 46.3
KCReg (ours) 94.8 75.1 84.9 45.6 46.9 45.3
Base 93.6 63.9 54.9 42.7 44.9 43.4
GPT2 [57] TF [35] 92.0 64.5 51.3 ‚úó ‚úó ‚úó
‚àº1.5B params ALUM [43] 94.9 49.4 27.5 43.8 45.2 44.6
KCReg (ours) 94.9 87.8 90.6 47.1 48.1 44.7
Base 93.7 53.9 39.3 46.1 44.7 46.0
T5 [58] TF [35] 96.8 77.8 60.6 ‚úó ‚úó ‚úó
‚àº220M params ALUM [43] 95.1 67.1 51.9 44.5 44.8 44.4
KCReg (ours) 94.9 89.3 91.3 48.2 45.0 44.3
nuancedpictureofamodel‚Äôsinductivebiasesandrobustnessbeyondascalarvaluelike‚Äúaccuracyunder
adversarialattack.‚Äù WepresentadetailedanalysisofthisinAppendixF.Further,thesedynamicsmay
actasadiagnostictoolandofferastartingpointfordesigning model-specific robustnessinterventions
oradversarialdefenses. Forexample,wheninsightsfromFig.2(b)arecombinedwithaknowledge
continuityregularizationalgorithm,thisyieldssuperiorempiricalrobustnesscomparedtoexisting
methods. This is shown in the next subsection and in Appendix G. In addition, knowledge continuity
can also quantitatively characterize an adversarial attack against a host of models which is useful for
online or adaptive defenses [ 84,64,14]. This is shown in in Fig. 2(c), where TextFooler [ 35] largely
exploits the knowledge continuities in middle/final layers of the model to decrease performance.
Regulating knowledge continuity. Motivated by the theoretical results in Section 4, we augment the
loss function during training to mitigate knowledge continuity. Specifically, on each training iteration
(batch), we start by choosing a hidden layer at random according to a Beta distribution determined a
priori:ùëã‚àºBeta(ùõº,ùõΩ)and letùëò=‚åäùëõùëã‚åã. Here,ùõº,ùõΩare chosen according to Fig. 2(b,c). We assign
larger sampling probability to layers where both ùëò-volatility is high and where knowledge continuity
is highly correlated with adversarial robustness. In this way, our regularization objective is both
modelandattackspecific(iftheattackmethodisunknown,thenweonlyapplytheformer). Then,
we devise a Monte-Carlo algorithm to estimate this layer‚Äôs ùëò-volatility,ùúñùëò, (see Appendix G) on this
minibatch. And so, the augmented loss function becomes Óà∏‚Ä≤(ùëì(ùë•),ùë¶)=Óà∏(ùëì(ùë•),ùë¶)+ùúÜùúñùëòwithùúÜ‚â•0
asahyperparameter,controllingtheregularizationstrength. Incontrasttoexistingadversarialtraining
methods that perform inner-optimization steps [ 50,43,85], our method requires only additional
zeroth-order computations. As a result, it outperforms existing works in training speed (up to 2√ófor
TextFooler [ 35] and3√ófor ALUM [ 43]), while improving robustness. We present a discussion of the
results, ablation studies, and training details in Appendix G.
Certifying robustness withknowledgecontinuity. We present analgorithm based on Thm. 4.1 to
certifyrobustnessduringtest-time. Similarto[ 12],weestimatetheprobabilityofthereexistingan
adversarial example within some fixed radius (in the representation space, according to a pre-defiend
distancemetric)throughbootstrappingaone-sideconfidenceinterval. Applyingthesemethodsto
our regularization results, we show that regularizing knowledge continuity increases the certified
robustness. The certification algorithm, its proof of correctness, and certifications of our regularized
models are presented in Appendix H.
6 Conclusion
Inthispaper,wepropose anoveldefinition, knowledgecontinuity ,whichaddressessomeofthe key
limitations of Lipschitz robustness. We demonstrate that our definition certifies robustness across
domainmodality,distribution,andnorms. Wealsoshowthatknowledgecontinuity,incontrastto
Lipschitzcontinuity,doesnotaffecttheuniversalapproximationpropertyofneuralnetworks. We
also establish conditions under which knowledge continuity and Lipschitz continuity are equivalent.
Lastly, we present several practical applications that directly benefit the practitioner. The broader
impacts, reproducibility, and limitations of our work can be found in Appendix I, J, K, respectively.
107 Acknowledgements
Alan Sun thanks Fengwen Sun for the helpful feedback on early drafts of the work as well as Jeffrey
Jiang and Andrew Koulogeorge for thoughtful discussions.
References
[1]M. Alzantot, Y. Sharma, A. Elgohary, B.-J. Ho, M. Srivastava, and K.-W. Chang. Generating natural
language adversarial examples. In E. Riloff, D. Chiang, J. Hockenmaier, and J. Tsujii, editors, Proceedings
ofthe2018ConferenceonEmpiricalMethodsinNaturalLanguageProcessing ,pages2890‚Äì2896,Brussels,
Belgium, Oct.-Nov. 2018. Association for Computational Linguistics.
[2]C.Anil,J.Lucas,andR.Grosse. Sortingoutlipschitzfunctionapproximation. In InternationalConference
on Machine Learning , pages 291‚Äì301. PMLR, 2019.
[3]S. Arora, Y. Li, Y. Liang, T. Ma, and A. Risteski. A Latent Variable Model Approach to PMI-based Word
Embeddings. Transactions of the Association for Computational Linguistics , 4:385‚Äì399, 07 2016.
[4]P. L. Bartlett, D. J. Foster, and M. J. Telgarsky. Spectrally-normalized margin bounds for neural networks.
Advances in Neural Information Processing Systems , 30, 2017.
[5]S.Biderman,U.PRASHANTH,L.Sutawika,H.Schoelkopf,Q.Anthony,S.Purohit,andE.Raff. Emergent
and predictable memorization in large language models. Advances in Neural Information Processing
Systems, 36, 2023.
[6]D.Blackwell. Conditionalexpectationandunbiasedsequentialestimation. TheAnnalsofMathematical
Statistics, pages 105‚Äì110, 1947.
[7]N. Carlini, M. Nasr, C. A. Choquette-Choo, M. Jagielski, I. Gao, P. W. W. Koh, D. Ippolito, F. Tramer, and
L. Schmidt. Are aligned neural networks adversarially aligned? In A. Oh, T. Naumann, A. Globerson,
K.Saenko,M.Hardt,andS.Levine,editors, AdvancesinNeuralInformationProcessingSystems ,volume36,
pages 61478‚Äì61500. Curran Associates, Inc., 2023.
[8] G. Casella and R. Berger. Statistical inference . CRC Press, 2024.
[9]P. Chao, A. Robey, E. Dobriban, H. Hassani, G. J. Pappas, and E. Wong. Jailbreaking black box large
language models in twenty queries. In R0-FoMo:Robustness of Few-shot and Zero-shot Learning in Large
Foundation Models , 2023.
[10]C. Chen, O. Li, D. Tao, A. Barnett, C. Rudin, and J. K. Su. This looks like that: deep learning for
interpretable image recognition. Advances in Neural Information Processing Systems , 32, 2019.
[11]M. Cisse, P. Bojanowski, E. Grave, Y. Dauphin, and N. Usunier. Parseval networks: Improving robustness
to adversarial examples. In International Conference on Machine Learning , pages 854‚Äì863. PMLR, 2017.
[12]J. Cohen, E. Rosenfeld, and Z. Kolter. Certified adversarial robustness via randomized smoothing. In
K. Chaudhuri and R. Salakhutdinov, editors, Proceedings of the 36th International Conference on Machine
Learning, volume 97 of Proceedings of Machine Learning Research , pages 1310‚Äì1320. PMLR, 09‚Äì15 Jun
2019.
[13]Z. Cranko, Z. Shi, X. Zhang, R. Nock, and S. Kornblith. Generalised lipschitz regularisation equals
distributionalrobustness. In InternationalConferenceonMachineLearning ,pages2178‚Äì2188.PMLR,
2021.
[14]F. Croce, S. Gowal, T. Brunner, E. Shelhamer, M. Hein, and T. Cemgil. Evaluating the adversarial
robustnessofadaptivetest-timedefenses. InK.Chaudhuri, S.Jegelka, L.Song, C.Szepesvari, G.Niu, and
S. Sabato, editors, Proceedings of the 39th International Conference on Machine Learning , volume 162 of
Proceedings of Machine Learning Research , pages 4421‚Äì4435. PMLR, 17‚Äì23 Jul 2022.
[15] G. Cybenko. Approximation by superpositions of a sigmoidal function. Mathematics of Control, Signals
and Systems , 2(4):303‚Äì314, 1989.
[16]J. Devlin, M.-W. Chang, K. Lee, and K. Toutanova. BERT: Pre-training of deep bidirectional transformers
for language understanding. In J. Burstein, C. Doran, and T. Solorio, editors, Proceedings of the 2019
Conference of the North American Chapter of the Association for Computational Linguistics: Human
LanguageTechnologies,Volume1(LongandShortPapers) ,pages4171‚Äì4186,Minneapolis,Minnesota,
June 2019. Association for Computational Linguistics.
11[17]A. Dosovitskiy, L. Beyer, A. Kolesnikov, D. Weissenborn, X. Zhai, T. Unterthiner, M. Dehghani, M. Min-
derer, G. Heigold, S. Gelly, J. Uszkoreit, and N. Houlsby. An image is worth 16x16 words: Transformers
for image recognition at scale. In International Conference on Learning Representations , 2021.
[18]N. Drenkow, N. Sani, I. Shpitser, and M. Unberath. A systematic review of robustness in deep learning for
computer vision: Mind the gap?, 2022.
[19]N. Elhage, T. Hume, C. Olsson, N. Schiefer, T. Henighan, S. Kravec, Z. Hatfield-Dodds, R. Lasenby,
D. Drain, C. Chen, et al. Toy models of superposition. arXiv preprint arXiv:2209.10652 , 2022.
[20]K. Eykholt, I. Evtimov, E. Fernandes, B. Li, A. Rahmati, C. Xiao, A. Prakash, T. Kohno, and D. Song.
Robustphysical-worldattacksondeeplearningvisualclassification. In ProceedingsoftheIEEEConference
on Computer Vision and Pattern Recognition (CVPR) , June 2018.
[21]M.Fazlyab,A.Robey,H.Hassani,M.Morari,andG.Pappas. Efficientandaccurateestimationoflipschitz
constants for deep neural networks. Advances in Neural Information Processing Systems , 32, 2019.
[22]F.Gama,J.Bruna,andA.Ribeiro. Stabilitypropertiesofgraphneuralnetworks. IEEETransactionson
Signal Processing , 68:5680‚Äì5695, 2020.
[23]S.GargandG.Ramakrishnan. BAE:BERT-basedadversarialexamplesfortextclassification. InB.Webber,
T. Cohn, Y. He, and Y. Liu, editors, Proceedings of the 2020 Conference on Empirical Methods in Natural
Language Processing (EMNLP) , pages 6174‚Äì6181, Online, Nov. 2020. Association for Computational
Linguistics.
[24]I. J. Goodfellow, J. Shlens, and C. Szegedy. Explaining and harnessing adversarial examples. Proceedings
of 3rd International Conference on Learning Representations , 2014.
[25]H. Gouk, E. Frank, B. Pfahringer, and M. J. Cree. Regularisation of neural networks by enforcing lipschitz
continuity. Machine Learning , 110:393‚Äì416, 2021.
[26]G.S.Halford,W.H.Wilson,andS.Phillips. Relationalknowledge: thefoundationofhighercognition.
Trends in Cognitive Sciences , 14(11):497‚Äì505, 2010.
[27]K. He, X. Zhang, S. Ren, and J. Sun. Deep residual learning for image recognition. In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recognition (CVPR) , June 2016.
[28]K. He, X. Zhang, S. Ren, and J. Sun. Deep residual learning for image recognition. In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recognition , pages 770‚Äì778, 2016.
[29]M.HeinandM.Andriushchenko. Formalguaranteesontherobustnessofaclassifieragainstadversarial
manipulation. In I. Guyon, U. V. Luxburg, S. Bengio, H. Wallach, R. Fergus, S. Vishwanathan, and
R.Garnett,editors, AdvancesinNeuralInformationProcessingSystems ,volume30.CurranAssociates,
Inc., 2017.
[30]D.Hendrycks,K.Zhao,S.Basart,J.Steinhardt,andD.Song. Naturaladversarialexamples. In Proceedings
oftheIEEE/CVFConference onComputerVisionandPatternRecognition(CVPR) ,pages15262‚Äì15271,
June 2021.
[31]K. Hornik, M. Stinchcombe, and H. White. Multilayer feedforward networks are universal approximators.
Neural Networks , 2(5):359‚Äì366, 1989.
[32]Y. Huang, H. Zhang, Y. Shi, J. Z. Kolter, and A. Anandkumar. Training certifiably robust neural networks
withefficientlocallipschitzbounds. AdvancesinNeuralInformationProcessingSystems ,34:22745‚Äì22757,
2021.
[33]A. Ilyas, S. Santurkar, D. Tsipras, L. Engstrom, B. Tran, and A. Madry. Adversarial examples are not bugs,
they are features. Advances in Neural Information Processing Systems , 32, 2019.
[34]R. Jia, A. Raghunathan, K. G√∂ksel, and P. Liang. Certified robustness to adversarial word substitutions. In
K.Inui,J.Jiang,V.Ng,andX.Wan,editors, Proceedingsofthe2019ConferenceonEmpiricalMethodsin
Natural Language Processing and the 9th International Joint Conference on Natural Language Processing
(EMNLP-IJCNLP) , pages 4129‚Äì4142, Hong Kong, China, Nov. 2019. Association for Computational
Linguistics.
[35]D.Jin,Z.Jin,J.T.Zhou,andP.Szolovits. IsBERTreallyrobust? astrongbaselinefornaturallanguage
attackontextclassificationandentailment. In ProceedingsoftheAAAIconferenceonartificialintelligence ,
volume 34, pages 8018‚Äì8025, 2020.
12[36]H.Kim,G.Papamakarios,andA.Mnih. Thelipschitzconstantofself-attention. InM.MeilaandT.Zhang,
editors,Proceedingsofthe38thInternationalConferenceonMachineLearning ,volume139of Proceedings
of Machine Learning Research , pages 5562‚Äì5571. PMLR, 18‚Äì24 Jul 2021.
[37]M. Lecuyer, V. Atlidakis, R. Geambasu, D. Hsu, and S. Jana. Certified robustness to adversarial examples
withdifferential privacy. In 2019IEEE SymposiumonSecurity andPrivacy (SP) ,pages 656‚Äì672.IEEE,
2019.
[38]K. Leino, Z. Wang, and M. Fredrikson. Globally-robust neural networks. In International Conference on
Machine Learning , pages 6212‚Äì6222. PMLR, 2021.
[39]B. Li, C. Chen, W. Wang, and L. Carin. Certified adversarial robustness with additive noise. Advances in
Neural Information Processing Systems , 32, 2019.
[40]L.Li,R.Ma,Q.Guo,X.Xue,andX.Qiu. BERT-ATTACK:AdversarialattackagainstBERTusingBERT.
In B. Webber, T. Cohn, Y. He, and Y. Liu, editors, Proceedings of the 2020 Conference on Empirical
Methods in Natural Language Processing (EMNLP) , pages 6193‚Äì6202, Online, Nov. 2020. Association for
Computational Linguistics.
[41]J. Lin, C. Song, K. He, L. Wang, and J. E. Hopcroft. Nesterov accelerated gradient and scale invariance for
adversarial attacks. In International Conference on Learning Representations , 2020.
[42]J. Liu, Z. Shen, Y. He, X. Zhang, R. Xu, H. Yu, and P. Cui. Towards out-of-distribution generalization: A
survey, 2023.
[43]X. Liu, H. Cheng, P. He, W. Chen, Y. Wang, H. Poon, and J. Gao. Adversarial training for large neural
language models. arXiv preprint arXiv:2004.08994 , 2020.
[44]Y.Liu,M.Ott,N.Goyal,J.Du,M.Joshi,D.Chen,O.Levy,M.Lewis,L.Zettlemoyer,andV.Stoyanov.
RoBERTa: A robustly optimized BERT pretraining approach, 2020.
[45]Z.Lu,H.Pu,F.Wang,Z.Hu,andL.Wang. Theexpressivepowerofneuralnetworks: Aviewfromthe
width.Advances in Neural Information Processing Systems , 30, 2017.
[46]B. L√ºtjens, M. Everett, and J. P. How. Certified adversarial robustness for deep reinforcement learning. In
L. P. Kaelbling, D. Kragic, and K. Sugiura, editors, Proceedings of the Conference on Robot Learning ,
volume 100 of Proceedings of Machine Learning Research , pages 1328‚Äì1337. PMLR, 30 Oct‚Äì01 Nov
2020.
[47]C.Ma,B.Zhao,C.Chen,andC.Rudin. ThisLooksLikeThose: IlluminatingPrototypicalConceptsUsing
Multiple Visualizations. Advances in Neural Information Processing Systems , 36, 2024.
[48]A.L.Maas,R.E.Daly,P.T.Pham,D.Huang,A.Y.Ng,andC.Potts. Learningwordvectorsforsentiment
analysis. In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics:
Human Language Technologies , pages 142‚Äì150, Portland, Oregon, USA, June 2011. Association for
Computational Linguistics.
[49]T.Mikolov,I.Sutskever,K.Chen,G.S.Corrado,andJ.Dean. Distributedrepresentationsofwordsand
phrasesandtheircompositionality. InC.Burges,L.Bottou,M.Welling,Z.Ghahramani,andK.Weinberger,
editors,Advances in Neural Information Processing Systems , volume 26. Curran Associates, Inc., 2013.
[50]T. Miyato, S.-i. Maeda, M. Koyama, and S. Ishii. Virtual adversarial training: a regularization method for
supervisedandsemi-supervisedlearning. IEEETransactionsonPatternAnalysisandMachineIntelligence ,
41(8):1979‚Äì1993, 2018.
[51]M. Moor, M. Horn, B. Rieck, andK. Borgwardt. Topological autoencoders. In International Conference
on Machine Learning , pages 7045‚Äì7054. PMLR, 2020.
[52]Y.Nie,A.Williams,E.Dinan,M.Bansal,J.Weston,andD.Kiela. AdversarialNLI:Anewbenchmarkfor
natural language understanding. In D. Jurafsky, J. Chai, N. Schluter, and J. Tetreault, editors, Proceedings
ofthe58thAnnualMeetingoftheAssociationforComputationalLinguistics ,pages4885‚Äì4901,Online,
July 2020. Association for Computational Linguistics.
[53]Y. Oren, S. Sagawa, T. B. Hashimoto, and P. Liang. Distributionally robust language modeling. In
K.Inui,J.Jiang,V.Ng,andX.Wan,editors, Proceedingsofthe2019ConferenceonEmpiricalMethodsin
Natural Language Processing and the 9th International Joint Conference on Natural Language Processing
(EMNLP-IJCNLP) , pages 4227‚Äì4237, Hong Kong, China, Nov. 2019. Association for Computational
Linguistics.
13[54]P. Pauli, A. Koch, J. Berberich, P. Kohler, and F. Allg√∂wer. Training robust neural networks using lipschitz
bounds.IEEE Control Systems Letters , 6:121‚Äì126, 2021.
[55]X. Qi, J. Wang, Y. Chen, Y. Shi, and L. Zhang. Lipsformer: Introducing lipschitz continuity to vision
transformers. In The Eleventh International Conference on Learning Representations , 2022.
[56]A. Radford, J. W. Kim, C. Hallacy, A. Ramesh, G. Goh, S. Agarwal, G. Sastry, A. Askell, P. Mishkin,
J.Clark, etal. Learningtransferablevisualmodelsfromnaturallanguagesupervision. In International
conference on machine learning , pages 8748‚Äì8763. PMLR, 2021.
[57]A.Radford,K.Narasimhan,T.Salimans,I.Sutskever,etal.Improvinglanguageunderstandingbygenerative
pre-training, 2018.
[58]C. Raffel, N. Shazeer, A. Roberts, K. Lee, S. Narang, M. Matena, Y. Zhou, W. Li, and P. J. Liu. Exploring
thelimitsoftransferlearningwithaunifiedtext-to-texttransformer. JournalofMachineLearningResearch ,
21(140):1‚Äì67, 2020.
[59]W.Ruan,X.Huang,andM.Kwiatkowska. Reachabilityanalysisofdeepneuralnetworkswithprovable
guarantees. In Proceedings of the 27th International Joint Conference on Artificial Intelligence , IJCAI‚Äô18,
page 2651‚Äì2659. AAAI Press, 2018.
[60]M.Salehi,H.Mirzaei,D.Hendrycks,Y.Li,M.H.Rohban,andM.Sabokrou. Aunifiedsurveyonanomaly,
novelty, open-set, and out of-distribution detection: Solutions and future challenges. Transactions on
Machine Learning Research , 2022.
[61]M. Sandler, A. Howard, M. Zhu, A. Zhmoginov, and L.-C. Chen. Mobilenetv2: Inverted residuals and
linearbottlenecks. In ProceedingsoftheIEEEConferenceonComputerVision andPatternRecognition ,
pages 4510‚Äì4520, 2018.
[62]A.Shafahi,W.R.Huang,C.Studer,S.Feizi,andT.Goldstein. Areadversarialexamplesinevitable? In
International Conference on Learning Representations , 2019.
[63]A.Shafahi,M.Najibi,M.A.Ghiasi,Z.Xu,J.Dickerson,C.Studer,L.S.Davis,G.Taylor,andT.Goldstein.
Adversarial training for free! Advances in Neural Information Processing Systems , 32, 2019.
[64]C. Shi, C. Holtz, and G. Mishne. Online adversarial purification based on self-supervised learning. In
International Conference on Learning Representations , 2021.
[65]M. H. Stone. The generalized weierstrass approximation theorem. Mathematics Magazine , 21(5):237‚Äì254,
1948.
[66]C. Szegedy, W. Zaremba, I. Sutskever, J. Bruna, D. Erhan, I. Goodfellow, and R. Fergus. Intriguing
properties of neural networks, 2014.
[67]N.Tishby,F.C.Pereira,andW.Bialek.Theinformationbottleneckmethod. arXivpreprintphysics/0004057 ,
2000.
[68]Y.Tsuzuku,I.Sato,andM.Sugiyama. Lipschitz-margintraining: Scalablecertificationofperturbation
invariancefordeepneuralnetworks. InS.Bengio,H.Wallach,H.Larochelle,K.Grauman,N.Cesa-Bianchi,
andR.Garnett,editors, AdvancesinNeuralInformationProcessingSystems ,volume31.CurranAssociates,
Inc., 2018.
[69]M.UsamaandD.E.Chang. Towardsrobustneuralnetworkswithlipschitzcontinuity. In DigitalForensics
andWatermarking: 17thInternationalWorkshop,IWDW2018,JejuIsland,Korea,October22-24,2018,
Proceedings 17 , pages 373‚Äì389. Springer, 2019.
[70]A. Vaswani, N. Shazeer, N. Parmar, J. Uszkoreit, L. Jones, A. N. Gomez, ≈Å. Kaiser, and I. Polosukhin.
Attention is all you need. Advances in Neural Information Processing Systems , 30, 2017.
[71]A.VirmauxandK.Scaman. Lipschitzregularityofdeepneuralnetworks: analysisandefficientestimation.
Advances in Neural Information Processing Systems , 31, 2018.
[72]E.Wallace,S.Feng,N.Kandpal,M.Gardner,andS.Singh. Universaladversarialtriggersforattackingand
analyzingNLP. InK.Inui,J.Jiang,V.Ng,andX.Wan,editors, Proceedingsofthe2019Conferenceon
EmpiricalMethodsinNaturalLanguageProcessingandthe9thInternationalJointConferenceonNatural
Language Processing(EMNLP-IJCNLP) ,pages 2153‚Äì2162,Hong Kong,China, Nov. 2019.Association
for Computational Linguistics.
14[73]B. Wang, S. Wang, Y. Cheng, Z. Gan, R. Jia, B. Li, and J. Liu. Info{bert}: Improving robustness of
language models from an information theoretic perspective. In International Conference on Learning
Representations , 2021.
[74]W. Wang, P. Tang, J. Lou, and L. Xiong. Certified robustness to word substitution attack with differential
privacy.InK.Toutanova,A.Rumshisky,L.Zettlemoyer,D.Hakkani-Tur,I.Beltagy,S.Bethard,R.Cotterell,
T.Chakraborty,andY.Zhou,editors, Proceedingsofthe2021ConferenceoftheNorthAmericanChapterof
the Association for Computational Linguistics: Human Language Technologies , pages 1102‚Äì1112, Online,
June 2021. Association for Computational Linguistics.
[75]A. Wei, N. Haghtalab, and J. Steinhardt. Jailbroken: How does llm safety training fail? In A. Oh,
T. Naumann, A. Globerson, K. Saenko, M. Hardt, and S. Levine, editors, Advances in Neural Information
Processing Systems , volume 36, pages 80079‚Äì80110. Curran Associates, Inc., 2023.
[76]L. Weng, H. Zhang, H. Chen, Z. Song, C.-J. Hsieh, L. Daniel, D. Boning, and I. Dhillon. Towards fast
computationofcertifiedrobustnessforReLUnetworks. InJ.DyandA.Krause,editors, Proceedingsof
the 35th International Conference on Machine Learning , volume 80 of Proceedings of Machine Learning
Research, pages 5276‚Äì5285. PMLR, 10‚Äì15 Jul 2018.
[77]L. Weng, H. Zhang, H. Chen, Z. Song, C.-J. Hsieh, L. Daniel, D. Boning, and I. Dhillon. Towards fast
computation of certified robustness for relu networks. In International Conference on Machine Learning ,
pages 5276‚Äì5285. PMLR, 2018.
[78]T.-W. Weng, H. Zhang, P.-Y. Chen, J. Yi, D. Su, Y. Gao, C.-J. Hsieh, and L. Daniel. Evaluating the
robustnessofneuralnetworks: Anextremevaluetheoryapproach. In InternationalConferenceonLearning
Representations , 2018.
[79]E.WongandZ.Kolter. Provabledefensesagainstadversarialexamplesviatheconvexouteradversarial
polytope. In International Conference on Machine Learning , pages 5286‚Äì5295. PMLR, 2018.
[80]E. Wong, L. Rice, and J. Z. Kolter. Fast is better than free: Revisiting adversarial training. In International
Conference on Learning Representations , 2020.
[81]E.Wong,F.Schmidt,J.H.Metzen,andJ.Z.Kolter. Scalingprovableadversarialdefenses. Advancesin
Neural Information Processing Systems , 31, 2018.
[82]X.Xu,L.Li,Y.Cheng,S.Mukherjee,A.H.Awadallah,andB.Li. Certifiablyrobusttransformerswith
1-lipschitz self-attention, 2023.
[83]J. Yang, K. Zhou, Y. Li, and Z. Liu. Generalized out-of-distribution detection: A survey. International
Journal of Computer Vision , pages 1‚Äì28, 2024.
[84]C. Yao, P. Bielik, P. Tsankov, and M. Vechev. Automated discovery of adaptive attacks on adversarial
defenses. In M. Ranzato, A. Beygelzimer, Y. Dauphin, P. Liang, and J. W. Vaughan, editors, Advances in
Neural Information Processing Systems , volume 34, pages 26858‚Äì26870. Curran Associates, Inc., 2021.
[85]J. Y. Yoo and Y. Qi. Towards improvingadversarial training of NLP models. In M.-F. Moens, X.Huang,
L.Specia,andS.W.-t.Yih,editors, FindingsoftheAssociationforComputationalLinguistics: EMNLP
2021, pages 945‚Äì956, Punta Cana, Dominican Republic, Nov. 2021. Association for Computational
Linguistics.
[86]Y.YoshidaandT.Miyato. Spectralnormregularizationforimprovingthegeneralizabilityofdeeplearning.
arXiv preprint arXiv:1705.10941 , 2017.
[87]A.Zhang,A.Chan,Y.Tay,J.Fu,S.Wang,S.Zhang,H.Shao,S.Yao,andR.K.-W.Lee. Onorthogonality
constraints for transformers. In C. Zong, F. Xia, W. Li, and R. Navigli, editors, Proceedings of the
59thAnnualMeetingoftheAssociationforComputationalLinguisticsandthe11thInternationalJoint
ConferenceonNaturalLanguageProcessing(Volume2: ShortPapers) ,pages375‚Äì382,Online,Aug.2021.
Association for Computational Linguistics.
[88]B.Zhang,D.Jiang,D.He,andL.Wang. Boostingthecertifiedrobustnessofl-infinitydistancenets. In
International Conference on Learning Representations , 2022.
[89]B.Zhang,D.Jiang,D.He,andL.Wang. Rethinkinglipschitzneuralnetworksandcertifiedrobustness:
Abooleanfunctionperspective. AdvancesinNeuralInformationProcessingSystems ,35:19398‚Äì19413,
2022.
15[90]H.Zhang,H.Chen,C.Xiao,S.Gowal,R.Stanforth,B.Li,D.Boning,andC.-J.Hsieh. Towardsstable
and efficient training of verifiably robust neural networks. In International Conference on Learning
Representations , 2020.
[91]A.Zou,Z.Wang,N.Carlini,M.Nasr,J.Z.Kolter,andM.Fredrikson. Universalandtransferableadversarial
attacks on aligned language models, 2023.
16Table of Contents
1 Introduction 1
2 Related Works 2
3 Preliminaries 3
4 Knowledge Continuity 3
4.1 Defining Perceived Knowledge . . . . . . . . . . . . . . . . . . . . . . . . . . . . 4
4.2 Defining Knowledge Continuity . . . . . . . . . . . . . . . . . . . . . . . . . . . 4
4.3 Certification of Robustness . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 6
4.4 Expressiveness . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 7
4.5 Connections to Lipschitz Continuity . . . . . . . . . . . . . . . . . . . . . . . . . 8
5 Practical Applications 9
6 Conclusion 10
7 Acknowledgements 11
A More on Metric Decompositions 18
A.1 Metric Decompositions of Common Neural Architectures . . . . . . . . . . . . . . 18
A.2 Beyond Neural Networks: Inducing Metric Decompositions . . . . . . . . . . . . 19
B Proof of Robustness 20
B.1 Technical Lemmas . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 21
C Proof of Expressiveness 22
C.1 Technical Lemmas . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 23
D Proof of Equivalence Between Lipschitz Continuity and Knowledge Continuity 23
E Predicting Adversarial Robustness with Volatility 25
F Localizing Volatile Hidden Representations 26
F.1 Layerwise Volatility . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 26
F.2 Model-Specific Volatility . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 27
G Regularizing Knowledge Continuity 27
G.1 Estimating Knowledge Continuity Algorithmically . . . . . . . . . . . . . . . . . 27
G.2 Theoretical Guarantees of ùëò-Volatility Estimation . . . . . . . . . . . . . . . . . . 28
G.3 Computer Vision Results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29
G.4 Ablation Studies . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29
G.5 Training Details . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31
H Certifying Robustness at Test-Time 32
I Broader Impacts 33
J Reproducibility 33
K Limitations 33
L NeurIPS Paper Checklist 34
17A More on Metric Decompositions
InSection4.1,weintroducedthenotionofa metricdecomposition torigorouslydefinethehidden
representations of a neural network. Herein, we show that our notion of a metric decomposition
well-describesahostofneuralarchitecturesandalsopointtopossibleapplicationsofthisconcept
beyondjustdeeplearning. Letusfirstconsiderpossiblemetricdecompositionsofcommonneural
architectures.
A.1 Metric Decompositions of Common Neural Architectures
Fully-Connected Neural Network. Suppose that ùëì‚à∂‚Ñùùëë‚Üí‚Ñùùëöis a fully-connected neural network
withùëõhiddenlayers. Eachhiddenlayerindexedby ùëñ‚àà[ùëõ]hasaweightmatrix ùëäùëñ‚àà‚Ñùùëëùëñ+1√óùëëùëñ,bias
ùëèùëñ‚àà‚Ñùùëëùëñ+1, and activation function ùúéùëñ‚à∂‚Ñùùëëùëñ+1‚Üí‚Ñùùëëùëñ+1, whereùëëùëñ‚àà‚Ñï,ùëë1=ùëë,ùëëùëõ=ùëö. Define the
hidden layers as
‚Ñéùëò(ùë•)=ùúéùëò(ùëäùëòùë•+ùëèùëò),
for allùëò‚àà[ùëõ]. Clearly,ùëì=‚Ñéùëõ‚ó¶‚Ñéùëõ‚àí1‚ó¶‚Ä¶‚ó¶‚Ñé1. Andour intermediatespaces aresimply {‚Ñùùëëùëñ}ùëõ
ùëñ=1. It
remains to define a metric on these hidden spaces. There are many ways of doing this. For example,
‚Ä¢For any1‚â§ùëù‚â§‚àû, endow each intermediate space with the ùìÅùëù-norm.
‚Ä¢Defineùëë(ùë•,ùë¶)=1‚àícos(ùúÉùë•,ùë¶)whereùúÉùë•,ùë¶istheanglebetween ùë•,ùë¶. Then,ifwechoose ùúéùëñto
restricttheimageof ‚Ñéùëñtobetheunitsphere,wemayendoweachintermediatespacewith
thiscosine distance .
Note here that there are two steps here: we first identify what the intermediate spaces are, then assign
metrics to them. The process of identfying these intermediate spaces may be independent of the
metrics we end of assigning them.
ConvolutionalNeuralNetwork. Forsimplicity,weonlyconsiderthecaseofasingle2d-convolution
layer, a convolutional network with higher dimensions or more layers can be derived inductively.
Letùëì‚à∂‚Ñùùëê√ó‚Ñé√óùë§‚Üí‚Ñùùëê‚Ä≤√ó‚Ñé‚Ä≤√óùë§‚Ä≤. Suppose that this layer is parameterized by kernels ùëäùëñ‚àà‚Ñùùëò√óùëòfor
ùëñ‚àà[ùëê‚Ä≤]and someùëò‚àà‚Ñïas well as a bias ùëè‚àà‚Ñùùëê‚Ä≤. Then, it follows that
ùëì(ùë•)ùëó=(
ùüè‚Ñé‚Ä≤√óùë§‚Ä≤ùëèùëó+ùëê‚àë
ùëñ=1ùëäùëó‚àóùë•[ùëñ,‚à∂,‚à∂])
,
forùëó‚àà[ùëê‚Ä≤]whereùëì(ùë•)ùëó‚àà‚Ñù‚Ñé‚Ä≤√óùë§‚Ä≤for‚Ñé‚Ä≤,ùë§‚Ä≤being the resulting dimension after convolution with a
ùëò√óùëòkernel. Here, ùüè‚Ñé‚Ä≤√óùë§‚Ä≤‚àà‚Ñù‚Ñé‚Ä≤√óùë§‚Ä≤isaonematrix. Toinduceadistancemetriconthisoutputspace,
we can simply define a matrix norm on each of the output channels and sum them. Let {‚Äñ‚ãÖ‚Äñùëñ}ùëê‚Ä≤
ùëñ=1be a
collection of matrix norms. Then, we define
ùëë(ùëì(ùë•),ùëì(ùë•‚Ä≤))=ùëê‚Ä≤‚àë
ùëñ=1‚Äñ‚Äñùëì(ùë•)ùëñ‚àíùëì(ùë•‚Ä≤)ùëñ‚Äñ‚Äñùëñ.
Itiseasytoverifythatthisisametric. Thus,theavailabilityofametricdecompositionisnotaffected
by parameter sharing.
Insteadofincorporatingeveryindividualchannelintoourmetric,wemayalsoconsiderapplyinga
pooling operation before passing the result through a single matrix norm, ‚Äñ‚ãÖ‚Äñ. For example,
ùëë(ùëì(ùë•),ùëì(ùë•‚Ä≤))=1
ùëê‚Ä≤‚Äñ‚Äñ‚Äñ‚Äñ‚Äñ‚Äñùëê‚Ä≤‚àë
ùëñ=1ùëì(ùë•)ùëñ‚àíùëê‚Ä≤‚àë
ùëñ=1ùëì(ùë•‚Ä≤)ùëñ‚Äñ‚Äñ‚Äñ‚Äñ‚Äñ‚Äñ.
This,however,isnolongerametric,asdefinitenessisnotpreserved. Thatis,thereexists ùëì(ùë•)‚â†ùëì(ùë•‚Ä≤)
whereùëë(ùëì(ùë•),ùëì(ùë•‚Ä≤))=0. This issue can be easily resolved by having ùëë(‚ãÖ,‚ãÖ)operate on a quotient
space with respect to the equivalence relation ùëì(ùë•)‚àºùëì(ùë•‚Ä≤)if and only if‚àëùëê‚Ä≤
ùëñ=1ùëì(ùë•)ùëñ=‚àëùëê‚Ä≤
ùëñ=1ùëì(ùë•‚Ä≤)ùëñ.
This technique is further explored in the next subsection.
ResidualConnections. Wepresenttwodistinctmetricdecompositionsofaresidualnetwork. Consider
two fully-connected layers with one residual connection. This is visualized below.
18ùë• ùê¥(ùë•) ùêµ(ùê¥(ùë•)) ùêµ(ùê¥(ùë•))+ùë• ùê¥(‚ãÖ) ùêµ(‚ãÖ)
+ùë•
Let us assume that ùê¥‚à∂‚Ñùùëë1‚Üí‚Ñùùëë2andùêµ‚à∂‚Ñùùëë2‚Üí‚Ñùùëë1. Here, the input ùë•feeds back into the output
layerùêµcreating a residual block (the set of layers between the input and the residual connection).
Trivially, we can aggregate the entire residual block as one metric decomposition. That is, let
‚Ñé(ùë•) =ùêµ(ùê¥(ùë•))+ùë•be our metric decomposition. Then, define a metric on the image of ‚Ñé,‚Ñùùëë1,
analogous to the hidden layers of a fully-connected neural network. This is the approach we use
throughout our practical applications section (Section 5), and it is the standard way to counter layers
in computer vision [27] and natural langauge processing [16].
To operate at a finer lever of granularity, we can also represent each layer within the residual block as
a part of a metric decomposition. Let us redefine the residual block such that at every layer, we keep
track of the input. The computational graph for this is shown below.
ùë• (ùê¥(ùë•),ùë•) (ùêµ(ùê¥(ùë•)),ùë•) (ùêµ(ùê¥(ùë•))+ùë•,ùë•) ùê¥(‚ãÖ)‚äïùë• ùêµ(‚ãÖ) +ùë•
Defineùê¥‚Ä≤‚à∂ùë•‚Ü¶(ùê¥(ùë•),ùë•),ùêµ‚Ä≤‚à∂(ùê¥(ùë•),ùë•)‚Ü¶(ùêµ(ùê¥(ùë•)),ùë•)andùë•‚Ä≤‚à∂(ùêµ(ùê¥(ùë•)),ùë•)‚Ü¶(ùêµ(ùê¥(ùë•))+ùë•,ùë•).
Then, it follows that ùë•‚Üíùê¥‚Ä≤‚Üíùêµ‚Ä≤‚Üíùë•‚Ä≤forms a metric decomposition. Here, the metric in each
layeriswithrespecttothequotientspacewhere (ùëé,ùëé‚Ä≤)‚àº(ùëè,ùëè‚Ä≤)ifandonlyif ùëé=ùëè. Therefore,we
also recover the same vector space structure.
Transformers. By chaining our metric decompositions for the residual blocks with our metric
decompositions for the fully-connected networks we can easily create a metric decomposition for any
transformer. Throughout the paper, we use two distinct methods to generate representations of its
hidden layers:
‚Ä¢After each attention block which consists of multiheaded attention and multilayered percep-
trons, we retrieve the last token.
‚Ä¢We average all of the tokens together.
Inbothofthesemethods,wearesignificantlyreducingthedimensionofthehiddenlayer. Thus,to
formalizethesemetrics,weneedtoquotientoutpointsthatbreakthedefinitenessofourmetric,as
we have done before with the residual block.
A.2 Beyond Neural Networks: Inducing Metric Decompositions
We have shown that our notion of a metric decomposition can well-describe many deep learning
architectures,butwhataboutmodelsthatarenotneuralnetworks(likeadecisiontree)? Herein,we
demonstrate that we can induce metric decompositions even when the model itself does not have
explicit hidden layers.
Let us now consider an arbitrary function ùëì‚à∂ÓâÑ‚ÜíÓâÖ. We can induce a metric decomposition on
ùëìthrough an auxiliary function ùëì‚Ä≤‚à∂ÓâÑ‚ÜíÓâÑ, for a metric-decomposable ùëì‚Ä≤. Ifùëì‚Ä≤=IdÓâÑ, then,
ùëì=ùëì‚ó¶ùëì‚Ä≤and the metric decomposition of ùëìwould be exactly the metric decomposition of ùëì‚Ä≤. This
is visualized below.
ÓâÑ(ÓâÜ1,ùëë1)
‚Ä¶(ÓâÜùëõ,ùëëùëõ) ÓâÑ ÓâÖùëì‚Ä≤
0ùëì‚Ä≤
1ùëì‚Ä≤
ùëõ‚àí1ùëì‚Ä≤
ùëõ ùëì
Metric Decomposition of ùëì‚Ä≤
Essentially, we have created an autoencoder for ÓâÑ. This is common in many applications where a
neural network or some other method is used as a feature extractor. In this way, we can simply define
our metric with respect to these extracted features. However, this requires that either the autoencoder
19to be exact or that our function ùëìis invariant under representations that collide. Thus, this would
allow models such as decision trees to also be metric decomposed.
B Proof of Robustness
Theorem (SeeThm.4.1) .Letùê¥‚äÇÓâÑ√óÓâÖsuchthat ‚ÑôÓà∞ÓâÑ,ÓâÖ[ùê¥]>0andùõø,ùúÇ>0. Letùê¥‚Ä≤={(ùë•‚Ä≤,ùë¶‚Ä≤)‚àà
ÓâÑ√óÓâÖ‚à∂ùîº(ùë•,ùë¶)‚àºÓà∞ÓâÑ,ÓâÖ
(ùë•,ùë¶)‚ààùê¥ŒîÓà∏(ùë•,ùë¶)
ùëì(ùë•‚Ä≤,ùë¶‚Ä≤)>ùúÇ}. Ifùëì‚à∂ÓâÑ‚ÜíÓâÖisùúñ-knowledge continuous with respect to
the hidden layer indexed by ùëòand(ÓâÜùëò,ùëëùëò)is bounded by ùêµ>0, then
‚Ñô(ùë•,ùë¶)‚àºÓà∞ÓâÑ,ÓâÖ[ùê¥‚Ä≤‚à£ùëëùëò(ùëìùëò(ùë•),ùëìùëò(ùê¥))<ùõø]‚â§ùúñùõø
ùúÇ(
1‚àíexp[
‚àíŒ©(
ùõø
ùêµ‚àí‚àö
log1
‚Ñô[ùê¥])2]),(B.1)
whereùëìùëò(ùê¥)={ùëìùëò(ùëé)‚à∂ùëé‚ààùê¥}.
Proof.
‚Ñô(ùë•,ùë¶)‚àºÓà∞ÓâÑ,ÓâÖ[ùê¥‚Ä≤‚à£ùëëùëò(ùëìùëò(ùë•),ùëìùëò(ùê¥))<ùõø]=‚Ñô(ùë•,ùë¶)‚àºÓà∞ÓâÑ,ÓâÖ[ùê¥‚Ä≤‚à©ùëëùëò(ùëìùëò(ùë•),ùëìùëò(ùê¥))<ùõø]
‚Ñô(ùë•,ùë¶)‚àºÓà∞ÓâÑ,ÓâÖ[ùëëùëò(ùëìùëò(ùë•),ùëìùëò(ùê¥))<ùõø].(B.2)
We bound the numerator and denominator of Eq. B.2 separately. The denominator is given by
Cor. B.3. We upper-bound the numerator using Markov‚Äôs inequality. Firstly, we find the expectation
ofÓà∏(ùë•,ùë¶)
ùëì(ùë•‚Ä≤,ùë¶‚Ä≤)overùê¥‚Ä≤‚à©ùëëùëò(ùëìùëò(ùë•),ùëìùëò(ùê¥))<ùõø:
ùîº(ùë•,ùë¶)‚àºÓà∞ÓâÑ,ÓâÖùúéùëò
ùëì(ùë•,ùë¶)=ùîº(ùë•,ùë¶)‚àºÓà∞ÓâÑ,ÓâÖ‚éõ
‚éú
‚éú‚éùùîº(ùë•‚Ä≤,ùë¶‚Ä≤)‚àºÓà∞ÓâÑ,ÓâÖ‚é°
‚é¢
‚é¢‚é£ŒîÓà∏(ùë•,ùë¶)
ùëì(ùë•‚Ä≤,ùë¶‚Ä≤)
ùëëùëò(ùëìùëò(ùë•),ùëìùëò(ùë•‚Ä≤))‚é§
‚é•
‚é•‚é¶‚éû
‚éü
‚éü‚é†,(B.3)
=ùîº(ùë•,ùë¶),(ùë•‚Ä≤,ùë¶‚Ä≤)‚àº(Óà∞ÓâÑ,ÓâÖ√óÓà∞ÓâÑ,ÓâÖ)‚é°
‚é¢
‚é¢‚é£ŒîÓà∏(ùë•,ùë¶)
ùëì(ùë•‚Ä≤,ùë¶‚Ä≤)
ùëëùëò(ùëìùëò(ùë•),ùëìùëò(ùë•‚Ä≤))‚é§
‚é•
‚é•‚é¶. (B.4)
The previous inequality follows from Fubini‚Äôs theorem, then
ùîº(ùë•,ùë¶)‚àºÓà∞ÓâÑ,ÓâÖùúéùëò
ùëì(ùë•,ùë¶)‚â•ùîº(ùë•,ùë¶),(ùë•‚Ä≤,ùë¶‚Ä≤)‚àº(Óà∞ÓâÑ,ÓâÖ√óÓà∞ÓâÑ,ÓâÖ)
(ùë•‚Ä≤,ùë¶‚Ä≤)‚ààùê¥
ùëëùëò(ùëìùëò(ùë•),ùëìùëò(ùê¥))<ùõø‚é°
‚é¢
‚é¢‚é£ŒîÓà∏(ùë•,ùë¶)
ùëì(ùë•‚Ä≤,ùë¶‚Ä≤)
ùëëùëò(ùëìùëò(ùë•),ùëìùëò(ùë•‚Ä≤))‚é§
‚é•
‚é•‚é¶, (B.5)
‚â•1
ùõøùîº(ùë•,ùë¶),(ùë•‚Ä≤,ùë¶‚Ä≤)‚àº(Óà∞ÓâÑ,ÓâÖ√óÓà∞ÓâÑ,ÓâÖ)
(ùë•‚Ä≤,ùë¶‚Ä≤)‚ààùê¥
ùëëùëò(ùëìùëò(ùë•),ùëìùëò(ùê¥))<ùõø[
ŒîÓà∏(ùë•,ùë¶)
ùëì(ùë•‚Ä≤,ùë¶‚Ä≤)]
, (B.6)
ùõøùîº(ùë•,ùë¶)‚àºÓà∞ÓâÑ,ÓâÖùúéùëò
ùëì(ùë•,ùë¶)‚â•ùîº(ùë•,ùë¶),(ùë•‚Ä≤,ùë¶‚Ä≤)‚àº(Óà∞ÓâÑ,ÓâÖ√óÓà∞ÓâÑ,ÓâÖ)
(ùë•‚Ä≤,ùë¶‚Ä≤)‚ààùê¥
ùëëùëò(ùëìùëò(ùë•),ùëìùëò(ùê¥))<ùõø[
ŒîÓà∏(ùë•,ùë¶)
ùëì(ùë•‚Ä≤,ùë¶‚Ä≤)]
. (B.7)
And byùúñ-knowledge continuity,
ùõøùúñ‚â•ùîº(ùë•,ùë¶),(ùë•‚Ä≤,ùë¶‚Ä≤)‚àº(Óà∞ÓâÑ,ÓâÖ√óÓà∞ÓâÑ,ÓâÖ)
(ùë•‚Ä≤,ùë¶‚Ä≤)‚ààùê¥
ùëëùëò(ùëìùëò(ùë•),ùëìùëò(ùê¥))<ùõø[
ŒîÓà∏(ùë•,ùë¶)
ùëì(ùë•‚Ä≤,ùë¶‚Ä≤)]
. (B.8)
Thisgivesusanupper-boundofexpectationof ŒîÓà∏(ùë•,ùë¶)
ùëì(ùë•‚Ä≤,ùë¶‚Ä≤)overthesetofallpointsthatarewithin
ùõø-radius from ùëìùëò(ùê¥). SinceŒîÓà∏(ùë•,ùë¶)
ùëì(ùë•‚Ä≤,ùë¶‚Ä≤)‚â•0everywhere, by Markov‚Äôs inequality,
‚Ñô(ùë•,ùë¶)‚àºÓà∞ÓâÑ,ÓâÖ[ùê¥‚Ä≤‚à©ùëëùëò(ùëìùëò(ùë•),ùëìùëò(ùê¥))<ùõø]‚â§ùõøùîºùúéùëò
ùëì(ùë•,ùë¶)
ùúÇ, (B.9)
20‚â§ùõøùúñ
ùúÇ. (B.10)
The last inequality follows from ùîº(ùë•,ùë¶)‚àºÓà∞ÓâÑ,ÓâÖùúéùëò
ùëì(ùë•,ùë¶)<ùúñ, by the definition of ùúñ-knowledge continuity.
Now, by applying the complement of Lem. B.2, we lower-bound the denominator and yield the
following
‚Ñô(ùë•‚Ä≤,ùë¶‚Ä≤)‚àºÓà∞[ùê¥‚Ä≤‚à£ùëëùëò(ùëìùëò(ùë•),ùëìùëò(ùë•‚Ä≤))<ùõø]‚â§ùúñùõø
ùúÇ(
1‚àíexp(
‚àí2
ùêµ2(
ùõø‚àíùêµ‚àö
1
2log2
‚Ñô[ùê¥])2)).(B.11)
The proof is concluded by applying Œ©(‚ãÖ)notation to the denominator. ‚ñ†
B.1 Technical Lemmas
Definition6. Afunctionùëì‚à∂ÓâÑ1√ó‚Ä¶√ó ÓâÑùëõ‚Üí‚Ñùhasboundedvariationifthereare ùëê1,‚Ä¶,ùëêùëõ‚àà‚Ñù
such that for all 1‚â§ùëñ‚â§ùëõandùë•1‚ààÓâÑ1,‚Ä¶,ùë•ùëõ‚ààÓâÑùëõ,
sup
ùë•‚Ä≤
ùëñ‚ààÓâÑùëñ|ùëì(ùë•1,‚Ä¶,ùë•ùëñ,‚Ä¶,ùë•ùëõ)‚àíùëì(ùë•1,‚Ä¶,ùë•‚Ä≤
ùëñ,‚Ä¶,ùë•ùëõ)|‚â§ùëêùëñ. (B.12)
Lemma B.1 (McDiarmid‚Äôs Inequality) .Assume that the function ùëì‚à∂ÓâÑ1√ó‚Ä¶√ó ÓâÑùëõ‚Üí‚Ñùsatisfy the
bounded differences property with bounds ùëê1,‚Ä¶,ùëêùëõ. Consider the independent random variables
ùëã1,‚Ä¶,ùëãùëõwhereùëãùëñ‚ààÓâÑùëñfor all1‚â§ùëñ‚â§ùëõ. Then, for any ùúñ>0,
‚Ñô[|ùëì(ùëã1,‚Ä¶,ùëãùëõ)‚àíùîº[ùëì(ùëã1,‚Ä¶,ùëãùëõ)|‚â•ùúñ]‚â§2exp(
‚àí2ùúñ2
‚àëùëõ
ùëñ=1ùëê2
ùëñ)
. (B.13)
Lemma B.2. Suppose that (ÓâÑ,ùëë)is a bounded metric space such that supùë•,ùë•‚Ä≤‚ààÓâÑùëë(ùë•,ùë•‚Ä≤)< ùêµfor
someùêµ>0. Letùê¥‚äÇùëãsuch that ‚Ñô[ùê¥]>0andùúñ>0. Then,
‚Ñô[ùëë(ùë•,ùê¥)‚â•ùúñ]‚â§exp‚éõ
‚éú
‚éú‚éù‚àí2
ùêµ2(
ùúñ‚àíùêµ‚àö
1
2log2
‚Ñô[ùê¥])2‚éû
‚éü
‚éü‚é†.
Proof.Forbrevity,denote ùëìùê¥(ùë•)=ùëë(ùê¥,ùë•)=infùëé‚ààùê¥ùëë(ùë•,ùëé). Since(ÓâÑ,ùëë)isaboundedmetricspace,
by Lem. B.1,
‚Ñô[|ùëìùê¥(ùë•)‚àíùîºùëìùê¥(ùë•)|‚â•ùúñ]=2exp(
‚àí2ùúñ2
ùêµ2)
, (B.14)
‚Ñô[ùëìùê¥(ùë•)‚àíùîºùëìùê¥(ùë•)‚â•ùúñ]+‚Ñô[ùëìùê¥(ùë•)‚àíùîºùëìùê¥(ùë•)‚â§‚àíùúñ]‚â§2exp(
‚àí2ùúñ2
ùêµ2)
,(B.15)
‚Ñô[ùëìùê¥(ùë•)‚àíùîºùëìùê¥(ùë•)‚â§‚àíùúñ]‚â§2exp(
‚àí2ùúñ2
ùêµ2)
, (B.16)
Letùúñ=ùîºùëìùê¥(ùë•). Then,
‚Ñô[ùëìùê¥(ùë•)‚â§0]‚â§2exp(
‚àí2(ùîºùëìùê¥(ùë•))2
ùêµ2)
, (B.17)
‚Ñô[ùê¥]‚â§2exp(
‚àí2(ùîºùëìùê¥(ùë•))2
ùêµ2)
, (B.18)
ùîºùëìùê¥(ùë•)‚â§‚àö
ùêµ2
2log(
2
‚Ñô[ùê¥])
. (B.19)
The second inequality follows from ‚Ñô[ùëìùê¥(ùë•)‚â§0]=‚Ñô[ùëìùê¥(ùë•)=0] ‚â•‚Ñô[ùê¥]. By Eq. B.15,
‚Ñô[ùëìùê¥(ùë•)‚àíùîºùëìùê¥(ùë•)‚â•ùúñ]+‚Ñô[ùëìùê¥(ùë•)‚àíùîºùëìùê¥(ùë•)‚â§‚àíùúñ]‚â§2exp(
‚àí2ùúñ2
ùêµ2)
,
21‚Ñô[ùëìùê¥(ùë•)‚àíùîºùëìùê¥(ùë•)‚â•ùúñ]‚â§2exp(
‚àí2ùúñ2
ùêµ2)
,
‚Ñô[ùëìùê¥(ùë•)‚â•ùúñ+ùîºùëìùê¥(ùë•)]‚â§2exp(
‚àí2ùúñ2
ùêµ2)
,
‚Ñô‚é°
‚é¢
‚é¢‚é£ùëìùê¥(ùë•)‚â•ùúñ+‚àö
ùêµ2
2log(
2
‚Ñô[ùê¥])‚é§
‚é•
‚é•‚é¶‚â§2exp(
‚àí2ùúñ2
ùêµ2)
, (by Eq. B.19,)
for anyùõø>0, letùúñ=ùõø‚àí‚àö
ùêµ2
2log2
‚Ñô[ùê¥]. And so,
‚Ñô[ùëìùê¥(ùë•)‚â•ùõø]‚â§2exp‚éõ
‚éú
‚éú
‚éú‚éù‚àí2
ùêµ2‚éõ
‚éú
‚éú‚éùùõø‚àíùêµ‚àö
1
2log(
2
‚Ñô[ùê¥])‚éû
‚éü
‚éü‚é†2‚éû
‚éü
‚éü
‚éü‚é†,
which is the desired expression. ‚ñ†
Corollary B.3. ‚Ñô[ùëìùê¥(ùë•)<ùõø]‚â•1‚àí2exp‚éõ
‚éú
‚éú‚éù‚àí2
ùêµ2(
ùõø‚àíùêµ‚àö
1
2log(
2
‚Ñô[ùê¥]))2‚éû
‚éü
‚éü‚é†.
C Proof of Expressiveness
Proposition (See Prop. 4.4) .Suppose(ÓâÑ,ùëëÓâÑ),(ÓâÖ,ùëëÓâÖ)‚à∂= (ÓâÑ,ùëëÓâÑ)arecompact metric spaces,
Óà≤‚äÇÓâÖÓâÑis theset of all continuous functions fromÓâÑtoÓâÖsuch that ‚à´ùëëÓâÑ(ùë•,ùë•‚Ä≤)‚àí1ùëëùúáùëì<‚àûandÓà∏
be Lipschitz continuous in both coordinates. Then, there exists a universal function approximator ÓâÅ
ofÓà≤that is knowledge continuous (i.e. ùîºùúéùëò
ùëì(ùë•,ùë¶)<‚àûfor someùëò).
Proof.By Lem. C.3, the set of Lipschitz continuous functions ‚Ñíis dense in the set of all contin-
uous functions ùíûwith respect to the uniform metric. By Lem. C.1, since |Óà∏(ùë•,ùë¶)|‚â§ùêæùëë(ùë•,ùë¶), if
supùë•‚ààÓâÑùëë(ùëì(ùë•),ùëî(ùë•))<ùúñ, then for any probability measure ‚ÑôoverÓâÑ,
‚à´Óà∏(ùëì(ùë•),ùëî(ùë•))ùëë‚Ñô‚â§‚à´|Óà∏(ùëì(ùë•),ùëî(ùë•))|ùëë‚Ñô‚â§ùêæùúñ,
whereùêæis the Lipschitz constant of Óà∏. This implies that for any sequence ùúñ1,ùúñ2,‚Ä¶we can
choose Lipschitz continuous functions ùëì1,ùëì2,‚Ä¶with Lipschitz constants ùê∂1,ùê∂2,‚Ä¶such that
‚à´Óà∏(ùëìùëõ(ùë•),ùë¶)ùëëùúáùëì< ùúñùëõ. It remains to show that each of these functions are in fact knowledge
continuous. Since ÓâÑis a metric space, we consider the trivial metric decomposition of our sequence
of functions (see Remark 1). Specifically, we denote ‚Ñé1=IdÓâÑand proceed to bound ùîºùúé1
ùëì(ùë•,ùë¶).
ùîºùúé1
ùëìùëõ(ùë•,ùë¶)=‚à¨ŒîÓà∏(ùë•,ùë¶)
ùëìùëõ(ùë•‚Ä≤,ùë¶‚Ä≤)
ùëëÓâÑ(ùë•,ùë•‚Ä≤)(ùëëùúáùëì√óùëëùúáùëì), (C.1)
‚â§‚à¨|Óà∏(ùëìùëõ(ùë•),ùë¶)‚àíÓà∏(ùëìùëõ(ùë•‚Ä≤),ùë¶)+Óà∏(ùëìùëõ(ùë•‚Ä≤),ùë¶)‚àíÓà∏(ùëìùëõ(ùë•‚Ä≤),ùë¶‚Ä≤)|
ùëëÓâÑ(ùë•,ùë•‚Ä≤)(ùëëùúáùëì√óùëëùúáùëì),(C.2)
‚â§‚à¨|Óà∏(ùëìùëõ(ùë•),ùë¶)‚àíÓà∏(ùëìùëõ(ùë•‚Ä≤),ùë¶)|
ùëëÓâÑ(ùë•,ùë•‚Ä≤)ùëë(ùúáùëì√óùúáùëì) (C.3)
+‚à¨|Óà∏(ùëìùëõ(ùë•‚Ä≤),ùë¶)‚àíÓà∏(ùëìùëõ(ùë•‚Ä≤),ùë¶‚Ä≤)|
ùëë(ùë•,ùë•‚Ä≤)(ùëëùúáùëì√óùëëùúáùëì), (C.4)
‚â§‚à¨ùêæùëëÓâÑ(ùëì(ùë•),ùëì(ùë•‚Ä≤))
ùëëÓâÑ(ùë•,ùë•‚Ä≤)ùëë(ùúáùëì√óùúáùëì)+‚à¨ùêæùëëÓâÑ(ùë¶,ùë¶‚Ä≤)
ùëëÓâÑ(ùë•,ùë•‚Ä≤)ùëë(ùúáùëì√óùúáùëì), (C.5)
ByLem.C.4,anycompactmetricspaceisbounded. So,let (ÓâÑ,ùëë)beboundedby ùëè>0. Itfollows
thatùëëÓâÑ(ùë¶,ùë¶‚Ä≤)‚â§ùëèand
‚â§‚à¨ùêæùê∂ùëõùëë(ùúáùëì√óùúáùëì)+ùêæùëè‚à´1
ùëëÓâÑ(ùë•,ùë•‚Ä≤)ùëëùúáùëì, (C.6)
22=ùêæùê∂ùëõ+ùêæùëè‚à´ùëëÓâÑ(ùë•,ùë•‚Ä≤)‚àí1ùëëùúáùëì, (C.7)
By assumption ‚à´ùëëÓâÑ(ùë•,ùë•‚Ä≤)‚àí1ùëëùúáùëì<‚àûand the statement of the proposition follows. ‚ñ†
C.1 Technical Lemmas
LemmaC.1. IfÓà∏(‚ãÖ,‚ãÖ)isLipschitzcontinuousinbothcoordinates,thenforany ùë•,ùë•‚Ä≤‚ààÓâÑ,|Óà∏(ùë•,ùë•‚Ä≤)|‚â§
ùêæùëë(ùë•,ùë•‚Ä≤), whereùêæis the Lipschitz constant of Óà∏.
Proof.By Lipschitz continuity,
|Óà∏(ùë•,ùë•‚Ä≤)‚àíÓà∏(ùë•,ùë•)|‚â§ùêæùëë(ùë•,ùë•‚Ä≤),
|Óà∏(ùë•,ùë•‚Ä≤)|‚â§ùêæùëë(ùë•,ùë•‚Ä≤).
‚ñ†
Lemma C.2. The set of all Lipschitz continuous functions from ÓâÑ‚ÜíÓâÑseparates all points in ÓâÑ.
Proof.The identity function is 1-Lipschitz continuous and it also separates all points in ÓâÑ.‚ñ†
Corollary C.3. Letùíû‚äÇÓâÑÓâÑbe the set of all continuous functions from ÓâÑ‚ÜíÓâÑand‚Ñí‚äÇÓâÑÓâÑbe the
set of all Lipschitz continuous functions from ÓâÑ‚ÜíÓâÑ. IfÓâÑis compact, then ‚Ñíis dense inùíûwith
respect to the uniform metric: ùëë‚Ä≤(ùëì,ùëî)=supùë•‚ààÓâÑùëë(ùëì(ùë•),ùëî(ùë•)).
Proof.This follows directly from Lem. C.2 and the Stone-Weierstrass theorem [65]. ‚ñ†
Lemma C.4. Any compact metric space (ÓâÑ,ùëë)is also bounded.
Proof.Bywayofcontrapositionsupposethat (ÓâÑ,ùëë)isnotbounded. Then, supùë•,ùë•‚Ä≤‚ààÓâÑùëë(ùë•,ùë•‚Ä≤)=‚àû.
Pickùë•1‚ààÓâÑarbitrarily and pick ùë•ùëõforùëõ‚àà‚Ñ§+,ùëõ>1such thatùëë(ùë•ùëõ,ùë•1)>ùëõ. Clearly, there does
not exist a convergent subsequence of the sequence ùë•1,ùë•2,‚Ä¶. Thus,(ÓâÑ,ùëë)cannot be compact. ‚ñ†
D Proof of Equivalence Between Lipschitz Continuity and Knowledge
Continuity
Proposition. (See Prop. 4.6) Suppose that (ÓâÑ,ùëëÓâÑ),(ÓâÖ,ùëëÓâÖ)are metric spaces. Let the first ùëõmetric
decompositionsof ùëì‚à∂ÓâÑ‚ÜíÓâÖbeùêæùëñ-Lipschitzcontinuous,for ùëñ‚àà[ùëõ]. Ifùëìisùúñ-knowledgecontinuous
withrespecttothe ùëõthhiddenlayerand ùëëÓâÖ(ùëì(ùë•),ùëì(ùë•‚Ä≤))‚â§ùúÇŒîÓà∏(ùë•,ùë¶)
ùëì(ùë•‚Ä≤,ùë¶)forallùë•,ùë•‚Ä≤‚ààÓâÑ,ùë¶‚ààÓâÖ,
and someùúÇ>0, thenùëìis Lipschitz continuous in expectation. That is,
ùîº(ùë•,ùë¶),(ùë•‚Ä≤,ùë¶‚Ä≤)‚àºÓà∞ÓâÑ,ÓâÖùëëÓâÖ(ùëì(ùë•),ùëì(ùë•‚Ä≤))
ùëëÓâÑ(ùë•,ùë•‚Ä≤)‚â§ùúñùúÇùëõ‚àè
ùëó=1ùêæùëó. (D.1)
Proof.We proceed to bound the knowledge continuity of ùëìfrom below.
ùîºùúéùëò
ùëì(ùë•,ùë¶)‚â•ùîº(ùë•,ùë¶)‚àºÓà∞ÓâÑ,ÓâÖùîº(ùë•‚Ä≤,ùë¶‚Ä≤)‚àºÓà∞ÓâÑ,ÓâÖ
ùë¶‚Ä≤=ùë¶ŒîÓà∏(ùë•,ùë¶)
ùëì(ùë•‚Ä≤,ùë¶)
ùëëùëò(ùëìùëò(ùë•),ùëìùëò(ùë•‚Ä≤)), (D.2)
‚â•ùîº(ùë•,ùë¶)‚àºÓà∞ÓâÑ,ÓâÖùîº(ùë•‚Ä≤,ùë¶‚Ä≤)‚àºÓà∞
ùë¶‚Ä≤=ùë¶ŒîÓà∏(ùë•,ùë¶)
ùëì(ùë•‚Ä≤,ùë¶)
‚àèùëõ
ùëó=1ùêæùëóùëëÓâÑ(ùë•‚Ä≤,ùë•), (D.3)
‚â•ùîº(ùë•,ùë¶)‚àºÓà∞ÓâÑ,ÓâÖùîº(ùë•‚Ä≤,ùë¶‚Ä≤)‚àºÓà∞
ùë¶‚Ä≤=ùë¶1
ùúÇùëëÓâÖ(ùëì(ùë•),ùëì(ùë•‚Ä≤))
‚àèùëõ
ùëó=1ùêæùëóùëëÓâÑ(ùë•,ùë•‚Ä≤), (D.4)
=ùîº(ùë•,ùë¶),(ùë•‚Ä≤,ùë¶‚Ä≤)‚àºÓà∞ÓâÑ,ÓâÖ1
ùúÇùëëÓâÖ(ùëì(ùë•),ùëì(ùë•‚Ä≤))
‚àèùëõ
ùëó=1ùêæùëóùëëÓâÑ(ùë•,ùë•‚Ä≤). (D.5)
23Eq. D.2 comes from the fact that we take the expectation only over pairs of points (ùë•,ùë¶),(ùë•‚Ä≤,ùë¶‚Ä≤)
whereùë¶=ùë¶‚Ä≤andalso becausethe summandisalways nonnegative. Then, weinductively applythe
definitionof ùêæùëñ-Lipschitzcontinuityto yieldEq.D.3. Eq.D.4followsdirectly fromtheassumption
inthestatementoftheproposition. SincetheexpressioninEq.D.4nowhasnodependenceonthe
labeldistribution,wemay expandtheexpectationwhichresultsinEq.D.5. Lastly,bythedefinition
ofùúñ-knowledge continuity,
ùúñ‚â•ùîº(ùë•,ùë¶),(ùë•‚Ä≤,ùë¶‚Ä≤)‚àºÓà∞ÓâÑ,ÓâÖ1
ùúÇùëëÓâÖ(ùëì(ùë•),ùëì(ùë•‚Ä≤))
‚àèùëõ
ùëó=1ùêæùëóùëëÓâÑ(ùë•,ùë•‚Ä≤),
ùúñùúÇùëõ‚àè
ùëó=1ùêæùëó‚â•ùîº(ùë•,ùë¶),(ùë•‚Ä≤,ùë¶‚Ä≤)‚àºÓà∞ÓâÑ,ÓâÖùëëÓâÖ(ùëì(ùë•),ùëì(ùë•‚Ä≤))
ùëëÓâÑ(ùë•,ùë•‚Ä≤),
and this concludes the proof of the proposition. ‚ñ†
To prove Cor. 4.7, we need the following auxiliary result from [89].
PropositionD.1 (See[89]).Foraneuralnetwork ùëì‚à∂‚Ñùùëõ‚Üí‚ÑùùêæwithLipschitzconstant ùêøunder
ùìÅùëù-norm, definetheresultingclassifier ùëîasùëî(ùë•)‚à∂=argmaxùëò‚àà[ùêæ]ùëìùëò(ùë•)for aninput ùë•. Then,ùëîis
provably robust under perturbations ‚Äñùõø‚Äñùëù<ùëù‚àö
2
2ùêømargin(ùëì(ùë•)), i.e.
ùëî(ùë•+ùõø)=ùëî(ùë•)for all‚Äñùõø‚Äñùëù<ùëù‚àö
2
2ùêømargin(ùëì(ùë•)). (D.6)
Here, margin (ùëì(ùë•))is the difference between the largest and second largeset output logit.
Corollary (See Cor. 4.7) .Suppose that assumptions of Prop. 4.6 are true. And also assume that
(ÓâÑ,ùëëÓâÑ) = (‚Ñùùëõ,ùìÅùëù),(ÓâÖ,ùëëÓâÖ) = (‚Ñùùëö,ùìÅùëù), for1‚â§ùëù‚â§‚àû. Define a classifier from ùëì‚à∂‚Ñùùëõ‚Üí‚Ñùùëö,
ùëî, whereùëî(ùë•)‚à∂= argmaxùëò‚àà[ùëö]ùëìùëò(ùë•)for anyùë•‚àà‚Ñùùëõ. Then, with probability 1‚àíùúñùúÇ
ùë°‚àèùëõ
ùëó=1ùêæùëó,
ùëî(ùë•)=ùëî(ùë•+ùõø)forall‚Äñùõø‚Äñùëù<ùëù‚àö
2
2ùë°margin(ùëì(ùë•))andùë°>0.ùëìùëò(ùë•)istheùëòthcoordinateof ùëì(ùë•)and
margin(ùëì(ùë•))denotes the difference between the largest and second-largest output logits.
Proof.By Prop. 4.6, we have that
ùîº(ùë•,ùë¶),(ùë•‚Ä≤,ùë¶‚Ä≤)‚àºÓà∞ÓâÑ,ÓâÖùëëÓâÖ(ùëì(ùë•),ùëì(ùë•‚Ä≤))
ùëëÓâÑ(ùë•,ùë•‚Ä≤)‚â§ùúñùúÇùëõ‚àè
ùëó=1ùêæùëó. (D.7)
By Markov‚Äôs inequality,
‚Ñô(ùë•,ùë¶),(ùë•‚Ä≤,ùë¶‚Ä≤)‚àºÓà∞ÓâÑ,ÓâÖ[ùëëÓâÖ(ùëì(ùë•),ùëì(ùë•‚Ä≤))
ùëëÓâÑ(ùë•,ùë•‚Ä≤)‚â•ùë°]
‚â§ùúñùúÇ
ùë°ùëõ‚àè
ùëó=1ùêæùëó. (D.8)
We yield the corollary by directly applying Prop. D.1 assuming that ùëìisùë°-Lipschitz continuous. ‚ñ†
Next, we establish conditions under which Lipschitz continuity implies knowledge continuity.
Proposition (Prop. 4.8) .Let(ÓâÑ,ùëëÓâÑ),(ÓâÖ,ùëëÓâÖ)be a metric spaces. Let ùëì‚à∂ÓâÑ‚ÜíÓâÖbeùúñ-Lipschitz
continuousand Óà∏(ùëì(ùë•),ùë¶)beùúÇ-Lipschitzcontinuouswithrespecttobothcoordinates. Ifthefirst ùëõ
metricdecompositionsof ùëìareùêæùëñ-Lipschitzcontinuous,then ùëìisknowledgecontinuouswithrespect
to theùëõthhidden layer. That is,
ùîº(ùë•,ùë¶)‚àºÓà∞ÓâÑ,ÓâÖùúéùëõ
ùëì(ùë•,ùë¶)‚â§ùúñùúÇùëõ‚àè
ùëó=11
ùêæùëó. (D.9)
Proof.Let us start with the definition of ùúñ-Lipschitz continuity and lower-bound it. For any
(ùë•,ùë¶),(ùë•‚Ä≤,ùë¶‚Ä≤)‚ààÓâÑ√óÓâÖ,
ùëëÓâÖ(ùëì(ùë•),ùëì(ùë•‚Ä≤))
ùëëÓâÑ(ùë•,ùë•‚Ä≤)‚â§ùúñ, (D.10)
24ùëëÓâÖ(ùëì(ùë•),ùëì(ùë•‚Ä≤))
‚àèùëõ
ùëó=11
ùêæùëóùëëùëò(ùëìùëò(ùë•),ùëìùëò(ùë•‚Ä≤))‚â§ùúñ, (D.11)
1
ùúÇ|Óà∏(ùë•,ùë¶)‚àíÓà∏(ùë•‚Ä≤,ùë¶‚Ä≤)|
‚àèùëõ
ùëó=11
ùêæùëóùëëùëò(ùëìùëò(ùë•),ùëìùëò(ùë•‚Ä≤))‚â§ùúñ, (D.12)
|Óà∏(ùë•,ùë¶)‚àíÓà∏(ùë•‚Ä≤,ùë¶‚Ä≤)|
ùëëùëò(ùëìùëò(ùë•),ùëìùëò(ùë•‚Ä≤))‚â§ùúñùúÇùëõ‚àè
ùëó=11
ùêæùëó. (D.13)
Eq.D.11followsfrominductivelyapplyingthedefinitionofLipschitzcontinuityonthemetricdecom-
positions of ùëì. Specifically, ùëëùëñ+1(ùëìùëñ+1(ùë•),ùëìùëñ+1(ùë•‚Ä≤))‚â§ùêæùëñùëëùëñ(ùëìùëñ(ùë•),ùëìùëñ(ùë•)). Then, by the Lipschitz
continuity of Óà∏in both coordinateswe yield Eq. D.12. Since the Lebesgueintegral preserves order,
Eq. D.13 directly implies the statement of the proposition and this concludes the proof. ‚ñ†
E Predicting Adversarial Robustness with Volatility
In this section, we detail the experimental methods and results that use knowledge continuity to
predict adversarial vulnerability, briefly discussed in Section 5. We focus on langauge models of
varioussizesandtheirabilitytoperformsentimentclassificationontheIMDBdataset[ 48]. Before
computinganystatistics ofthemodel, wefinetuneitagainst theIMDBdatasetand reserveatestset
on which we compute a vulnerability score and estimate the model‚Äôs adversarial vulnerability.
Vulnerability Score. As described in the main text, given a model with ùëõhidden layers, we compute
allofitsùëò-volatilityscores. ThisisdonewithanaiveMonto-Carloalgorithmwhichwepresentin
Appendix G. This results in a list of ùëò-volatility scores {ùúñ1,‚Ä¶,ùúñùëõ}, one for each hidden layer. Then,
we perform a simple average ùëõ‚àí1‚àëùëõ
ùëò=1ùúñùëò. Let us denote this quantity as the vulnarability score .
Estimating Adversarial Robustness. It remains to estimate the adversarial vulnerability of a
givenmodel. Wedothisempiricallybyapplyinganout-of-the-boxadversarialattack(specifically,
TextFooler[ 35])onthegivenmodelwithrespecttothereservedtestset. Wethenmeasurethenumber
of successful adversarial attacks defined as
‚ôØSuccessful Adversarial Attacks =|ÓâÑadversarial‚à©ÓâÑcorrect)
|ÓâÑcorrect|,
where ÓâÑcorrectis the set of examples in the test set that are correctly classified by the model (after
finetuning) without any intervention. And, ÓâÑadversarialare the set of examples that are incorrectly
classified after an adversarial attack is applied. In other words, we only consider points where a
perturbation will worsenperformance. In expectation, this estimate of adversarial robustness should
bea1‚àï2factorofthenotionofvulnerabilitywepresentinThm.4.1,wherewealsoconsiderapointto
be vulnerable if perturbation increases its performance.
We then perform a linear regression using vulnerability score and a host of other model properties to
predict the number of successful adversarial attacks. Concretely, we seek to learn the relationship:
‚ôØSuccessful Adversarial Attacks =ùëöùëá(
ùëõ‚àí1ùëõ‚àë
ùëò=1ùúñùëò‚äï ‚Ä¶‚èü‚èü‚èü
additional architectural variables)
+ùëè,
whereùëö‚àà‚Ñùùëëandùëè‚àà‚Ñùarethelearnableregressionparameters. Wealsoincorporate ùëë‚àí1sizeand
architecturalvariablesintoourregressionaswefoundthatsignificantlyincreasesitspredictiveness.
And so, the input variables to our regression and their types are:
Feature Type
Encoder Only {0,1}
Decoder Only {0,1}
Encoder-Decoder {0,1}
log(‚ôØParameters )‚Ñù
ùëõ‚àí1‚àëùëõ
ùëò=1ùúñùëò ‚Ñù
25Variables(1) (2) (3)
Coefficients ŒîùëÖ2Coefficients ŒîùëÖ2Coefficients ŒîùëÖ2
Encoder Only ‚úó ‚úó 1485 0.40 ‚àí548 0 .07
Decoder Only ‚úó ‚úó ‚àí2816 0.71 ‚àí557 0 .02
Encoder-Decoder ‚úó ‚úó 1332 0.29 1105 0 .18
log(‚ôØParameters ) ‚úó ‚úó 66 ‚àí6 .1√ó10‚àí5‚àí363 0 .04
ùëõ‚àí1‚àëùëõ
ùëò=1ùúñùëò 49 0.35 96 2 .57 ‚úó ‚úó
ùëÖ20.35 0.48 0.28
Table2: Regressionresultsfromourthreepreviouslydescribedexperimentalsettings. Weregress
the number of successful adversarial attacks against (1) only the vulnerability score (2) vulnerability
score and model characteristics (3) only model characteristics. The coefficients for each of these
regressions results are shown in the column Coefficients . We also run permutation tests for each
coefficient and the change in ùëÖ2is shown in the column ŒîùëÖ2(higher the better).
For the regression itself, we perform a Ridge regression with ùõº= 1. We test three experimental
conditions where we regress the model‚Äôs adversarial robustness against: (1) only vulnerability score,
(2) vulnerability score and model characteristics, (3) only model characteristics. We experiment
with seven models: RoBERTa (Base/Large) [ 44],BERT-Uncased (Base/Large) [ 16],GPT2, and T5
(Small/Base) [58]. Our regression results are shown in Table. 2.
After yielding an initial line-of-best fit (see Fig. 2(a)), we run permutation tests to determine the
contribution of each feature to the explained variance. Specifically, for each feature, keeping all else
constant,wepermuteitsvalues. Ifthisfeatureisasignificantcontributortotheexplainedvariance,
intuitively, we should see a large decrease in ùëÖ2after this intervention. If ùë†is theùëÖ2without any
intervention and ùë†ùúéùëñ(ùëë)is theùëÖ2after permuting the data by ùúéùëñ(‚ãÖ)‚à∂[ùëõ]‚Üí[ùëõ](for a dataset of ùëõdata
points). Then, we define
ŒîùëÖ2=ùë†‚àí1
ùëÅùëÅ‚àë
ùëò=1ùë†ùúéùëò(ùëë),
whereùëÅcontrolsthenumberofpermutationsthatweapply. Forallexperimentswechoose ùëÅ=100.
For formal theory on permutation tests, see [8].
We find that when our vulnerability score is added to the regression, it contributes significantly to
the explained variance. Moreover, in (2), we see that vulnerability score has the highest feature
importance among all regression variables.
F Localizing Volatile Hidden Representations
Inthissection,welocalizeadversariallyvulnerablehiddenrepresentationsintwoways. Firstly,we
useùëò-volatility to gauge which layers are vulnerable across a selection of models. Then, we focus on
model-specificcharacterizationsofrobustnesswithrespectto ùëò-volatility. Wepresentexperimentson
the same selection of models in Appendix E, the same dataset (IMDB [ 48]), and the same adversarial
attack (TextFooler [35]) to empirically measure adversarial vulnerability.
F.1 Layerwise Volatility
As mentioned in the previous section (Section E), for a given model with ùëõhidden layers, we can
measure its ùëò-volatility for ùëò‚àà [ùëõ]through a Monte-Carlo algorithm. For each model, we then
plot itsùëò-volatility against its relative depth which is defined as ‚åäùëò‚àïùëõ‚åã. These curves are shown
in Fig. 2(b). We see that models which have different architectures independent of size have very
differentùëò-volatility curves.
We have already shown in the previous section that there is a positive correlation between ùëò-volatility
andadversarialvulnerability. However,thiscorrelationisderivedfromthesimpleaverageofall ùëò-
volatilityscores. Arethe ùëò-volatilityscoresinsomelayersmorepredictiveofadversarialvulnerability
26thanothers? Ifthe ùëò-volatilityinsomelayersismorecorrelatedwith ùëò-volatilityinothers,thenit
shouldsufficetominimize ùëò-volatilityintheseformerlayers. Thiswouldalsospeedupregularization
and training.
Werepeattheexperimentsintheprevioussettings. But,insteadofcollating ùëò-volatilitythrougha
simple average, we run one regression for each relative depth across all models (which we discretize
into 9 bins). This result is shown in Fig. 2(c). Surprisingly, we find that the magnitude of ùëò-volatility
is not necessarily predictive of adversarial vulnerability. Forexample, inFig.2(b), almost all of the
modelsexhibitlowaverage ùëò-volatilityinthelatterlayers. However,the ùëò-volatilityoflatterlayers
predict adversarial vulnerability the best.
F.2 Model-Specific Volatility
We start by exploring the ùëò-volatility across each of our test models. We notice that ùëò-volatility
cannot be predicted by surface-level features such as size or model type alone. This is shown clearly
inFig.3. Yet,asdiscussedinAppendixE,itisstillabletopredictactualadversarialvulnerability
with moderate power. Thus, we conjecture that ùëò-volatility captures a complex aspect of the model‚Äôs
vulnerability which cannot be solely attributed to its size or type.
18.0 18.5 19.0 19.5
log(Parameters)
0.30.40.50.60.70.80.91.0Scaled n1n
k=1k
t5-small
bert-base
gpt2
roberta-base
t5-base
bert-largeroberta-large
18.0 18.5 19.0 19.5
log(Parameters)
Encoder-Decoder
Encoder
Decoder
Figure3: Average ùëò-volatility plottedagainst thelogofnumberof modelparameters (left). We see
that although there isa strongnegativecorrelation, theexactlyrelationship isnontrivial. Moreover,
this negative correlation is also consistently observed across model families (right).
G Regularizing Knowledge Continuity
In this section, we provide a comprehensive overview of regulating knowledge continuity to achieve
robustness. Wefirstshowasimplealgorithmthatestimates ùëò-volatility. Then,wedemonstratehow
this can incorporated into anyloss function as a regularization term. We then prove guarantees that
revolvearoundtheunbiasednessofourestimationalgorithm. Lastly,wepresentdetaileddiscussionof
the results shown in Table 1 including training details and ablation studies over the hyperparameters.
G.1 Estimating Knowledge Continuity Algorithmically
Wefirstpresentamethodforestimating ùëò-volatility. ThisisshowninAlg.1( ESTKVOL). Intheory,
oneshouldchoose ùëÄ=ùëÅ,asthiswillleadtoamostaccurateestimate. Thisissimilartocontrastive
learningmethodswhereitisdesirabletomaketheminibatchsizesaslargeaspossible[ 56]. However,
ifùëÅ ‚â´1,thiscanbecomequicklyintractable. Inpractice,duringregularizationwekeep ùëÅtobe
thesameasifweweredoingnormalfinetuning(i.e. 32/64)andset ùëÄ=ùëÅ. Thisworkswell,and,
anecdotally, we find that in contrast to contrastive learning increasing ùëÅorùëÄpast this threshold
yields marginal returns. Further work could examine this relationship in more detail.
As discussed in the main text, the choice of metric (or representation space) which we enforce
knowledge continuity against is crucial as it determines the type of robustness we will achieve.
Therefore, in Alg. 1( KCREG), we incorporate this detail by sampling a hidden layer of interest using
a Beta distribution specified by hyperparameters ùõº,ùõΩ. Then, on that minibatch, regularize ùëò-volatility
27Algorithm 1 A Monte-Carlo algorithm for estimating ùëò-volatility of some metric decomposable
functionùëìwithùëõhidden layers (left). Augmenting any loss function to regularize ùëò-volatility (right),
given some Beta distribution parameterized by ùõº,ùõΩand regularization strength ùúÜ‚â•0.
procedure ESTKVOL({(ùë•ùëñ,ùë¶ùëñ)}ùëÅ
ùëñ=1,ùëÄ,ùëì,ùëò)
Sample{ùëõ1,‚Ä¶,ùëõùëÄ}‚äÇ[ùëÅ]uniformly
ùúéùëò
ùëì‚Üê0
Losses ‚Üê{Óà∏(ùëì(ùë•ùëõùëñ),ùë¶ùëõùëñ)}ùëÄ
ùëñ=1
for(ùëñ,ùëó)‚àà[ùëÄ]√ó[ùëÄ]do
Dist‚Üêùëëùëò(ùëìùëò(ùë•ùëõùëñ),ùëìùëò(ùë•ùëõùëó))
ùúéùëò
ùëì‚Üêùúéùëò
ùëì+|Lossesùëñ‚àíLossesùëó|‚àïDIST
returnùúéùëò
ùëìprocedure KCREG(ùõº,ùõΩ,ùëÄ,ùúÜ )
ùëã‚àºBeta(ùõº,ùõΩ)
ùëò‚Üêmax(‚åäùëãùëõ‚åã,1)
ùúéùëò
ùëì‚ÜêESTKVOL({(ùë•ùëñ,ùë¶ùëñ)}ùëÅ
ùëñ=1,ùëì,ùëÄ,ùëò)
return1
ùëÅ‚àëùëÅ
ùëñ=1Óà∏(ùëì(ùë•ùëñ),ùë¶ùëñ)+1
ùëÄ2ùúÜùúéùëò
ùëì
with respect to that sampled layer. Note that we choose the Beta distribution for simplicity, however,
it can be replaced by any distribution like a mixture of Gaussians.
In contrast to existing adversarial trainingmethods such as [ 32] and [63] which only use the embed-
dings, our algorithm gives the practitioner more control over which hidden layer (or distance metric)
toenforce smoothness. Inthisway, ifthe practitionerhassome knowledge aprioriofthe attacker‚Äôs
strategy,theymaychoosetooptimizeagainstthemostsuitablemetricdecomposition. Wepresent
abriefdiscussionofthevarioustradeoffswhenchoosing ùõº,ùõΩinthefollowingsectionaswellasa
detailed empirical analysis in the following subsections.
ùúÜis the weight we put on the regularizer in relation to the loss function Óà∏. We provide a detailed
ablationstudyoftheeffectsof ùúÜinthefollowingsubsections. Wesurprisinglyfindthatevenfor ùúÜ‚â™1
wecanachievesignificantedgeintermsofrobustnessoverexistingmethods. Thisisincontrastto
virtualadversarialtrainingmethodssuchas[ 43]whichrequiresapplyinga ùúÜ-valuemagnitudeslarger.
Moreover, for larger ùúÜ, we find that the accuracy of the model is not compromised. This provides
some empirical support for Theorem 4.3.
G.2 Theoretical Guarantees of ùëò-Volatility Estimation
In this subsection, we show that our Monte-Carlo algorithm presented in Alg. 1( ESTKVOL) is an
unbiased estimator. The proof is simple and follows from some bookkeeping.
PropositionG.1 (Alg.1(ESTKVOL)isanUnbiasedEstimator) .Assumingthateachdatapointinthe
batch,{(ùë•ùëñ,ùë¶ùëñ)}ùëÅ
ùëñ=1‚àºÓà∞ÓâÑ,ÓâÖ, is sampled i.i.d., then Alg. 1( ESTKVOL) is an unbiased estimator for
ùîºùúéùëò
ùëì(ùë•,ùë¶).
Proof.LetÃÇùúÉbe the random variable representing the output of Alg. 1. It suffices to show that
ùîº[ÃÇùúÉ]=ùîºùúéùëò
ùëì(ùë•,ùë¶),
wheretheexpectationontheleft-handsideistakenoverthesetofallbatches. Bythedefinitionof
Alg. 1(E STKVOL),
ùîº[ÃÇùúÉ]=ùîº‚éõ
‚éú
‚éú
‚éú‚éùùëÄ‚àë
ùëñ=1ùëÄ‚àë
ùëó=11
ùëÄ2ŒîÓà∏(ùë•ùëõùëó,ùë¶ùëõùëó)
ùëì(ùë•ùëõùëñ,ùë¶ùëõùëñ)
ùëëùëò(ùëìùëò(ùë•ùëõùëñ),ùëìùëò(ùë•ùëõùëó))‚éû
‚éü
‚éü
‚éü‚é†, (G.1)
=ùëÄ‚àë
ùëñ=1ùëÄ‚àë
ùëó=11
ùëÄ2ùîº‚éõ
‚éú
‚éú
‚éú‚éùŒîÓà∏(ùë•ùëõùëó,ùë¶ùëõùëó)
ùëì(ùë•ùëõùëñ,ùë¶ùëõùëñ)
ùëëùëò(ùëìùëò(ùë•ùëõùëñ),ùëìùëò(ùë•ùëõùëó))‚éû
‚éü
‚éü
‚éü‚é†, (G.2)
=ùîºùúéùëò
ùëì(ùë•,ùë¶). (G.3)
The second equality follows from the linearity of expectation. ‚ñ†
Weemphasizethatourestimatorisverynaive. Improvingitsefficiencycouldformthebasisofpossible
future work. For example, Rao-Blackwellizing [ 6] Alg. 1(ESTKVOL) to yield an estimator with
280.0
0.2
0.4
0.6
0.8
1.0
0.6
0.7
0.8
0.9
1.0
resnet50
0.0
0.2
0.4
0.6
0.8
1.0
0.5
0.6
0.7
0.8
0.9
1.0
mobilenet
0.0
0.2
0.4
0.6
0.8
1.0
0.2
0.4
0.6
0.8
1.0
vit16Ours Base
0.0
0.2
0.4
0.6
0.8
1.0
0.5
0.6
0.7
0.8
0.9
1.0Macro F1
resnet50
0.0
0.2
0.4
0.6
0.8
1.0
0.0
0.2
0.4
0.6
0.8
1.0
mobilenet
0.0
0.2
0.4
0.6
0.8
1.0
.88
.90
.92
.94
.96
.98
1.0
vit16
Attack StrengthGoodfellow et al. (2014)
Lin et al. (2020)
0.3
0.2
0.1
0.00.10.20.3
CNN-Based CNN-Based Transformer-BasedFigure4: Regularization ùëò-volatilityforahostofvisionmodels. Weapplytwoadversarialattacks
FGSM [24] (top row) and SI-NI-FGSM [ 41] (bottom row) with various attack strengths. Attack
strength is measured in terms of maximum ùìÅ2-norm of the applied perturbation to the image.
smaller variance, applying rejection sampling to deal with the potential sparsity of the representation
space discussed in Section 4.4, or adapting the regularization weight based on some bootstrapped
confidenceinterval(iftheestimatehashighervariancethendecreaseweightonregularizationandvice
versa). However, we see that even with this naive algorithm we achieve improvements in robustness
as well as training speed.
G.3 Computer Vision Results
Inadditiontoregulatinglanguagemodels,wealsodemonstratethat KCREGiseffectiveforvision
tasks. This provides empirical support for the equivalences we proved in Section 4.5. The exact
same method of ùëò-volatility estimation and loss augmentation is applied. We finetune threemodels
ResNet50 [ 28], MobileNetV2 [ 61], and ViT16 [ 17] on the MNIST dataset both with and without our
regularization algorithm. We then apply two different adversarial attacks: FGSM [ 24] and SI-NI-
FGSM [41]. We find that in both cases, regularization ùëò-volatility improves/stabilizes robustness
across attack strengths (see Fig. 4).
G.4 Ablation Studies
Herein,wepresentablationstudiesforthecrucialhyperparametersinourregularizationalgorithm
(across the natural language tasks that we explored in the main text), Alg. 1( KCREG):ùúÜwhich is the
weight we assign the knowledge continuity regulation loss and (ùõº,ùõΩ)which determines the sampling
behavior of the index of the hidden representation space.
Ablation Study of ùúÜ(Fig. 5(right)). The weight given to the regularizer ( ùúÜ) is ablated over, with the
resultsshowninFig.5. Foranypositive ùúÜ,thereisanimmediatelargeimprovementinadversarial
robustness. Next, as ùúÜis systematically increased by factors of 10, we do not see a significant change
in the accuracy (not under attack). This corroborates Theorem. 4.3, as it demonstrates that regulating
knowledge discontinuities (no matter how strongly) is not at odds with minimizing the empirical risk
ofourmodel. Ontheotherhand,wealsodonotseeasignificantincreaseinadversarialrobustness
asùúÜincreases. Thismayimplythatwehavereachedthethresholdofadversarialrobustnessunder
TextFooler [ 35]. Specifically, the adversarial attacks generated by TextFooler may not be valid in
thattheyhaveflippedtheground-truthlabel. Therefore,webelievethatagood ùúÜforthisparticular
application should lie somewhere between 0and1√ó10‚àí4.
290.00.20.40.60.8Attack Strength0.000.050.100.150.200.25Attack Success Rate0104103102101100Regularization Strength65707580859095Test AccuracyIMDBIMDB+TextFooler1011e-11e-21e-31e-40Figure 5: Ablation over the strength of regularization and its effect on the attack strength-attack
successratecurves(left). Ablationovertheregularizationstrength(forfixedattackstrength=0.3)
and its effect on test accuracy (right). We see that moderate regularization significantly improves
robustnessacrossallattackstrengths. Thisimprovementdoesnotcomeattheexpenseoftestaccuracy.
The attack-strength is measured using the minimum angular similarity between the perturbed and
original text. Both ablations are done with respect to GPT2 on the IMDB [ 48] dataset with respect to
the TextFooler attack [35].
AblationStudyofAdversarialAttackStrength(Fig.5(left)). Foreveryvalueof ùúÜ,wealsovary
the strength of the adversarial attack. The adversarial attack strength is measured through the angular
similarity of the embeddings between the original text and the perturbed text. Intuitively, if this
constraint is loosened the adversary is allowed to find text that is semantically very different and vice
versa. We see that moderate ùëò-volatility regulation achieves the best adversarial robustness across all
attack strengths.
Ablation Study of (ùõº,ùõΩ)In this subsection, we brieflydiscuss how the ùõº,ùõΩhyperparameters which
determine the shape of the Beta distribution in Alg. 1( KCREG) affect the final performance and
robustnessofourmodelontheIMDBdataset. RecallthattheshapeoftheBetadistributiondetermines
the index of the hidden layers we are using the compute the knowledge continuity. Thus, they are
crucial in determining the behavior of our regularizer.
We finetune {BERT, T5, GPT2} models on the IMDB dataset with the hyperparameters described in
the next subsection. The results are displayed in Table 3. Across all models we observe a decrease in
robustness for ùõº=1,ùõΩ=2. These values correspond to a right-skewed distribution which places
high sampling probability on the earlier (closer to the input) hidden layers. Intuitively, perturbations
in the early layers should correspond to proportional textual perturbations in the input text. Pure
textualperturbationswithrespecttosomemetricliketheLevenshteindistanceshouldbeonlyloosely
ifnotcompletely(un)correlatedwiththeactuallabelsoftheseinputs. Therefore,enforcingknowledge
continuitywithrespecttothismetricshouldnotseeincreaserobustness. Moreover,wealsoobservea
largerdecreaseinaccuracy(notunderattack)withthesameparameters. Thissuggeststhatmaintaining
this sort of knowledge continuity in the earlier layers is harder to converge on and there may be a
‚Äúpush-and-pull‚Äù behavior between optimizing knowledge continuity and accuracy (not under attack).
Surprisingly, we observe no significant difference between the other ùõº,ùõΩvalues shown in the table.
We did not formally benchmark other configurations of ùõº,ùõΩsuch as increasing their magnitude to
imposeasharperdistribution. Anecdotally,duringtraining,wenoticedthatusingthesesharper
distributionsbothsignificantlyslowedthemodel‚Äôsconvergenceanddecreasedthemodel‚Äôsaccuracy
(notunderattack). Itcouldbethatthoughknowledgecontinuityitselfisalocalpropertyandthe
enforcement ofthis localproperty requireschangeon aglobal scale. Inother words, onecannot
simplyreducetheknowledgediscontinuitiesoruniformlyconvergewithrespecttoonelayerwithout
participationfromotherlayers. Theextenttowhichotherlayersareinvolvedintheregularizationof
a specific one is an interesting question that we leave for future research.
30Model IMDB IMDBTF
BERTBASE 93.6 47.9
BERTBASE+Reg(2,1)94.8 75.1
BERTBASE+Reg(2,2)89.2 74.1
BERTBASE+Reg(1,2)87.0 68.2
GPT2 93.6 63.9
GPT2+Reg(2,1) 94.6 85.0
GPT2+Reg(2,2) 94.9 87.8
GPT2+Reg(1,2) 93.1 84.9
T5BASE 93.7 53.9
T5BASE+Reg(2,1) 95.0 88.9
T5BASE+Reg(2,2) 94.9 89.3
T5BASE+Reg(1,2) 94.6 88.1
Table3: Wetrainfinetune{BERT,T5,GPT2}usingknowledgecontinuityregularization,asdescribed
in Alg. 1( KCREG). We varied the ùõº,ùõΩhyperparameters for the Beta distribution as to determine the
effectoftheseparametersonmodelperformanceandrobustness. Therowsofthetablearelabeled
with the format: Model+Reg(ùõº,ùõΩ). The bolded entries of the table correspond to the best performing
metrics out of the knowledge continuity regulated models.
Hyperparameter Value
Optimizer Adam
AdamùõΩ1 0.9
AdamùõΩ2 0.999
Adamùúñ 1√ó10‚àí8
Max Gradient Norm 1.0
Learning Rate Scheduler Linear
Epochs 20
Batch Size 32
Learning Rate 5√ó10‚àí5
Weight Decay 1√ó10‚àí9
Table4: Traininghyperparametersandoptimizerconfigurationsforfinetuningmodels{BERT,GPT2,
T5} on IMDB without any form of regularization or adversarial training.
G.5 Training Details
In this section, we describe in detail the training objectives, procedures, algorithms, and hyperparme-
ters that we used in the main text and further experiments done in the appendix.
Brute-Force Adversarial Training. For all models undergoing adversarial training, we first finetune
the model against the training set. Then, attack it using the TextFooler [ 35] algorithm with examples
from the training set. After the attacks are concluded, we then incorporate the text of successful
adversarial attacks back into the training set and proceed to finetune again. This procedure iteratively
continues. Forthesakeofcomputationalefficiency,forallmodelsweappliedthisprocedureonce.
Theparametersweareusingduringtheadversarialattackisthesamehyperparametersweactually
use at test-time. Specifically, we impose a query budget of 300 queries.
Plain Finetuning on IMDB. The IMDB dataset consist of 50,000 examples with 25,000 for training
and 25,000 for testing. We split the test set 40%-60% to create a validation and test set of 10,000
and 15,000 examples, respectively. Examples were sampled uniformly at random during the splitting
process. Sinceadversarialattackswerecostly,weuniformlysubsampled5,000examplesfromthis
15,000 to benchmark robustness in the experiments related to the regularizer. However, for the
experimentsestimatingtheknowledgevulnerabilityscore,weperformedadversarialattacksonall
15,000datapointsinthetestset. Wefoundnosignificantdifferencebetweenrobustnessestimationon
this 5,000 subsample versus and the entire 15,000 dataset.
We train all models using the hyperparameter and optimizer configurations shown in Table 4.
31Knowledge Discontinuity Regulation on IMDB. To enforce the knowledge discontinuity on IMDB,
weuseaconstant ùúÜ=1√ó10‚àí2forallmodels. AsshowninTable3, wevaried ùõº,ùõΩ‚àà{1,2}√ó{1,2}
and displayed the best models in terms of robustness in Table. 1 in the main text. We train all models
for 50 epochs. Other than that all the other hyperparameters and optimizer configurations are the
same as regular finetuning (see Table 4).
KnowledgeDiscontinuityRegulationonANLI. OptimizingovertheANLIdatasetwassignificantly
harderthanonIMDB.Asaresult,foreachmodelclass{BERT,GPT2,T5}weperformedaquick
hyperparametersearchover ùúÜ(1√ó10‚àí4),thelearningrate( 5√ó10‚àí5),andweightdecay( 1√ó10‚àí9)
fixingtheparameterizationoftheBetadistributiontobethebestvaluesontheIMDBdataset. That
is, for T5:ùõº=2,ùõΩ=1; BERT-Base-Uncased: ùõº=2,ùõΩ=1; GPT2:ùõº=2,ùõΩ=2.
ALUM on IMDB and ANLI. We train all ALUM models for 50 epochs (the same as knowledge
discontinuity regularized models). For hyperpararmeters specific to the ALUM algorithm we choose
all of the same ones as its authors, [ 43], with the exception of ùõº(analogous to the ùúÜin our algorithm,
essentiallytheweightputonthevirtualadversarialtraininglossterm). Theauthorsoftheoriginal
paper choose ùõº=10. We, however, found that this applied to finetuning does not converge at all.
Thus, with a rough grid search in the parameter space we found ùõº=1√ó10‚àí3to be the best with
respect to both performance and robustness.
We keep the same hyperparameters on ANLI, however, we impose early stopping during the training
process. That is, we choose the best model with respect to its performance on the devset.
H Certifying Robustness at Test-Time
Herein, we present a certification algorithm using Thm. 4.1 and our Monte-Carlo estimate of ùëò-
volatility1( ESTKVOL). Ouralgorithm(showninAlg.2)isbasedontheworkof[ 12]. Weupperbound
theùëò-volatility by bootstrapping a 1‚àíùõºconfidence interval. Then, directly apply Thm. 4.1 using
the 0-1 loss function. Thus, Cor. H.1 follows. We emphasize here that this certification algorithm
may not be directlyinformative, especially in the discrete/non-metrizable setting, unless we have an
inversemap fromtherepresentationspaceback totheinputspace. Thisis discussedfurtherin[ 82].
Nonetheless,itcanbeusedasamethodtoverifywhetherornotcertaininterventiontechniquesare
successful before deploying them in the wild.
Corollary H.1. Letùê¥={(ùë•ùëñ,ùë¶ùëñ)ùëõ
ùëñ=1}andùê¥‚Ä≤={(ùë•‚Ä≤,ùë¶‚Ä≤)‚ààÓâÑ√óÓâÖ‚à∂ùîº(ùë•,ùë¶)‚àºÓà∞ÓâÑ,ÓâÖ
(ùë•,ùë¶)‚ààùê¥ŒîÓà∏(ùë•,ùë¶)
ùëì(ùë•‚Ä≤,ùë¶‚Ä≤)>ùúÇ}.
Then, with probability 1‚àíùõº, the output of Alg. 2 bounds ‚Ñô[ùê¥‚Ä≤|ùëëùëó(ùëìùëó(ùë•),ùëìùëó(ùê¥))]where Óà∏is the 0-1
loss.
Algorithm 2 Certifying robustness of a metric decomposable function ùëìwith respect to one hidden
representation using Alg. 1(E STKVOL) and Thm. 4.1.
procedure CERTIFY(ùëì,{(ùë•ùëñ,ùë¶ùëñ)}ùëõ
ùëñ=1,ùëò,ùëó,ùõº,ùõø,ùúÇ )
LetÓà∏be the 0-1 loss function
ùúñùëà‚ÜêUPPERCONFBOUND(ùëì,Óà∏,{(ùë•ùëñ,ùë¶ùëñ)}ùëõ
ùëñ=1,ùëò,ùëó,ùõº)
ùêµ‚Üêmax1‚â§ùëé,ùëè‚â§ùëõùëëùëó(ùëìùëó(ùë•ùëé),ùëìùëó(ùë•ùëè))
ùëâ‚ÜêùúÇ(
1‚àíexp(
‚àí2‚àïùêµ2(
ùõø‚àíùêµ‚àö
1
2log2ùëõ)2))
returnCLIP(1‚àíùúñùëàùõø‚àïùëâ,0,1)
procedure UPPERCONFBOUND(ùëì,Óà∏,{(ùë•ùëñ,ùë¶ùëñ)}ùëõ
ùëñ=1,ùëò,ùëó,ùõº)
ùëà‚Üêùüéùëò
forùëñ‚Üê1‚Ä¶ùëòdo
ùëÜ‚Üêsample w/ replacement ùëõpoints from{(ùë•ùëñ,ùë¶ùëñ)}ùëõ
ùëñ=1
ùëàùëñ‚ÜêESTKVOL(ùëÜ,Óà∏,ùëì,ùëó)
return1
ùëò‚àëùëò
ùìÅ=1ùëàùëò+Œ¶‚àí1(ùõº)std(ùëà)‚àï‚àö
ùëò
Alongtheselines,weapplyourcertificationalgorithmtoourregularizedmodelstoverifythatthe
certified robustness has indeed improved. These results are shown in Fig. 6.
32Change in Absolute Accuracy
0.00.20.40.60.81.0
0.0
11.2
22.4
33.6
44.8
56.0
67.2
0.0
0.2
0.4
0.6
0.8
1.0
Base
0.0
11.2
22.4
33.6
44.8
56.0
67.2
KCReg (Ours)Certified Robustness
Perturbation DistanceFigure 6: Certification of robustness for GPT2, layer=6. We apply Alg. 2 to certify robustness of the
model before andafter regularization with Alg.1( KDREG). Each line correspondsto the change in
absoluteaccuracyforasetofexamplestobeconsiderednon-robust. The ùë¶-axiscorrespondstothe
certified probability measure of the set of non-robust examples under this criterion and the ùë•-axis
corresponds to the maximum perturbation distance in the representation space.
I Broader Impacts
Thiscontributionisconcernedwithrobustdeeplearningmodels. Asdeeplearningbecomesubiquitous
astheprimarymethodforcreatingartificialintelligence,theirapplicationsinincreasinglycriticalareas
to the lay and corporations alike demand not only both high inferential accuracy and confidence but
also safety andtrustworthiness guarantees. Robustnessaddresses thislatter point. Morespecifically,
our contribution unifies separate robustness efforts from continuous and discrete domains.
J Reproducibility
All of our experiments were conducted on four NVIDIA RTX A6000 GPUs as well as four NVIDIA
Quadro RTX 6000 GPUs. The rest of our codebase including implementations of the algorithms and
figures described in the manuscript can be found at https://github.com/alansun17904/kc .
K Limitations
Thecertificationguaranteesofourdefinitionknowledgecontinuityisaprobabilisticone. Specifically,
thisrandomnessisoverthedatadistribution. However,thisdoesnotprotectagainstout-of-distribution
attacksthatplaguelargelanguagemodelssuchas[ 72,91]. Moreworkisneededtoyielddeterministic
resultsthatdonotbecomevacuousindiscretesettings. AsmentionedinSection4.4,ourexpressiveness
boundsonlyapplyunderlittlerestrictionstothemetricdecompositionsoftheestimator ùëì. Though
we see some empirical verification for this in Appendix G, it remains unclear whether or not we can
tighten these bounds.
33L NeurIPS Paper Checklist
1.Claims
Question: Do the main claims made in the abstract and introduction accurately reflect the paper‚Äôs
contributions and scope?
Answer: [Yes]
Justification:
Guidelines:
‚Ä¢TheanswerNAmeansthattheabstractandintroductiondonotincludetheclaimsmadeinthe
paper.
‚Ä¢Theabstractand/orintroductionshouldclearlystatetheclaimsmade,includingthecontributions
madeinthepaperandimportantassumptionsandlimitations. ANoorNAanswertothisquestion
will not be perceived well by the reviewers.
‚Ä¢Theclaimsmadeshouldmatchtheoreticalandexperimentalresults,andreflecthowmuchthe
results can be expected to generalize to other settings.
‚Ä¢It is fine to includeaspirational goals as motivation as long as itis clear that these goals are not
attained by the paper.
2.Limitations
Question: Does the paper discuss the limitations of the work performed by the authors?
Answer: [Yes]
Justification: We present a detailed discussion of the limitations in Section K.
Guidelines:
‚Ä¢TheanswerNAmeansthatthepaper hasnolimitationwhilethe answerNomeansthatthepaper
has limitations, but those are not discussed in the paper.
‚Ä¢The authors are encouraged to create a separate "Limitations" section in their paper.
‚Ä¢Thepapershouldpointoutanystrongassumptionsandhowrobusttheresultsaretoviolationsof
these assumptions (e.g., independence assumptions, noiseless settings, model well-specification,
asymptotic approximations only holding locally). The authors should reflect on how these
assumptions might be violated in practice and what the implications would be.
‚Ä¢The authors should reflect on the scope of the claims made, e.g., if the approach was only tested
on a few datasets or with a few runs. In general, empirical results often depend on implicit
assumptions, which should be articulated.
‚Ä¢The authors should reflect on the factors that influence the performance of the approach. For
example, a facial recognition algorithm may perform poorly when image resolution is low or
imagesaretakeninlowlighting. Oraspeech-to-textsystemmightnotbeusedreliablytoprovide
closed captions for online lectures because it fails to handle technical jargon.
‚Ä¢The authors should discuss the computational efficiency of the proposed algorithms and how
they scale with dataset size.
‚Ä¢Ifapplicable,theauthorsshoulddiscusspossiblelimitationsoftheirapproachtoaddressproblems
of privacy and fairness.
‚Ä¢While the authors might fear that complete honesty about limitations might be used by reviewers
as grounds for rejection, a worse outcome might be that reviewers discover limitations that
aren‚Äôt acknowledged in the paper. The authors should use their best judgment and recognize
thatindividual actionsinfavor oftransparencyplay animportantrole indevelopingnorms that
preserve the integrity of the community. Reviewers will be specifically instructed to not penalize
honesty concerning limitations.
3.Theory Assumptions and Proofs
Question: Foreachtheoreticalresult,doesthepaperprovidethefullsetofassumptionsandacomplete
(and correct) proof?
Answer: [Yes]
Justification: For all of the theoretical results in the paper, we include all of its assumptions. We
include full proofs of each theoretical resultin Appendices A, B,C, G. To thebest of our knowledge,
the proofs are correct.
Guidelines:
‚Ä¢The answer NA means that the paper does not include theoretical results.
‚Ä¢All the theorems, formulas, and proofs in the paper should be numbered and cross-referenced.
34‚Ä¢All assumptions should be clearly stated or referenced in the statement of any theorems.
‚Ä¢Theproofscaneitherappearinthemainpaperorthesupplementalmaterial,butiftheyappearin
the supplemental material, the authors are encouraged to provide a short proof sketch to provide
intuition.
‚Ä¢Inversely,anyinformalproofprovidedinthecoreofthepapershouldbecomplementedbyformal
proofs provided in appendix or supplemental material.
‚Ä¢Theorems and Lemmas that the proof relies upon should be properly referenced.
4.Experimental Result Reproducibility
Question: Doesthepaperfullydisclosealltheinformationneededtoreproducethemainexperimental
results of the paper to the extent that it affects the main claims and/or conclusions of the paper
(regardless of whether the code and data are provided or not)?
Answer: [Yes]
Justification: We present all of the hyperparameters in the experiments that require training in Ap-
pendix G. Additionally, our compute resources are detailed in Appendix J.
Guidelines:
‚Ä¢The answer NA means that the paper does not include experiments.
‚Ä¢If the paper includes experiments, a No answer to this question will not be perceived well by the
reviewers: Making the paper reproducible is important, regardless of whether the code and data
are provided or not.
‚Ä¢If the contribution is a dataset and/or model, the authors should describe the steps taken to make
their results reproducible or verifiable.
‚Ä¢Dependingonthecontribution,reproducibilitycanbeaccomplishedinvariousways. Forexample,
if the contribution is a novel architecture, describing the architecture fully might suffice, or if the
contributionisaspecificmodelandempiricalevaluation,itmaybenecessarytoeithermakeit
possible for others to replicate the model with the same dataset, or provide access to the model.
In general. releasing code and data is often one good way to accomplish this, but reproducibility
can also be providedvia detailed instructions for how toreplicate the results, access to a hosted
model (e.g., in the case of a large language model), releasing of a model checkpoint, or other
means that are appropriate to the research performed.
‚Ä¢While NeurIPS does not require releasing code, the conference does require all submissions
toprovidesomereasonableavenueforreproducibility,whichmaydependonthenatureofthe
contribution. For example
(a)If the contribution is primarily a new algorithm, the paper should make it clear how to
reproduce that algorithm.
(b)If the contribution is primarily a new model architecture, the paper should describe the
architecture clearly and fully.
(c)If the contribution is a new model (e.g., a large language model), then there should either be
a way to access this model for reproducing the results or a way to reproduce the model (e.g.,
with an open-source dataset or instructions for how to construct the dataset).
(d)We recognize that reproducibility may be tricky in some cases, in which case authors are
welcometodescribetheparticularwaytheyprovideforreproducibility. Inthecaseofclosed-
source models, it may be that access to the model is limited in some way (e.g., to registered
users),butitshouldbepossibleforotherresearcherstohavesomepathtoreproducingor
verifying the results.
5.Open access to data and code
Question: Does the paper provide open access to the data and code, with sufficient instructions to
faithfully reproduce the main experimental results, as described in supplemental material?
Answer: [Yes]
Justification: We attach all of the code used to generate the figures and the experimental results in the
supplementary materials.
Guidelines:
‚Ä¢The answer NA means that paper does not include experiments requiring code.
‚Ä¢Please see the NeurIPS code and data submission guidelines ( https://nips.cc/public/
guides/CodeSubmissionPolicy ) for more details.
‚Ä¢While we encourage the release of code and data, we understand that this might not be possible,
so ‚ÄúNo‚Äù is an acceptable answer. Papers cannot be rejected simply for not including code, unless
this is central to the contribution (e.g., for a new open-source benchmark).
35‚Ä¢The instructions should contain the exact command and environment needed to run to reproduce
theresults. SeetheNeurIPScodeanddatasubmissionguidelines( https://nips.cc/public/
guides/CodeSubmissionPolicy ) for more details.
‚Ä¢The authors should provide instructions on data access and preparation, including how to access
the raw data, preprocessed data, intermediate data, and generated data, etc.
‚Ä¢Theauthorsshouldprovidescriptstoreproduceallexperimentalresultsforthenewproposed
method and baselines. If only a subset of experiments are reproducible, they should state which
ones are omitted from the script and why.
‚Ä¢At submission time, to preserve anonymity, the authors should release anonymized versions (if
applicable).
‚Ä¢Providingas muchinformation aspossible insupplementalmaterial (appendedtothe paper)is
recommended, but including URLs to data and code is permitted.
6.Experimental Setting/Details
Question: Doesthepaperspecifyallthetrainingandtestdetails(e.g.,datasplits,hyperparameters,
how they were chosen, type of optimizer, etc.) necessary to understand the results?
Answer: [Yes]
Justification: For the experiments that require training, we discuss in detail the hyperparameters
in Appendix G. Moreover, we also attach the code used to generate all results and figures in the
supplementary materials of the submission.
Guidelines:
‚Ä¢The answer NA means that the paper does not include experiments.
‚Ä¢Theexperimentalsettingshouldbepresentedinthecoreofthepapertoalevelofdetailthatis
necessary to appreciate the results and make sense of them.
‚Ä¢The full details can be provided either with the code, in appendix, or as supplemental material.
7.Experiment Statistical Significance
Question: Does the paper report error bars suitably and correctly defined or other appropriate informa-
tion about the statistical significance of the experiments?
Answer: [No]
Justification: The experimentsinourpaperserveasa typeofsanitycheckanddemonstratepossible
explorations rather than a benchmark against existing state-of-the-art methods.
Guidelines:
‚Ä¢The answer NA means that the paper does not include experiments.
‚Ä¢Theauthorsshouldanswer"Yes"iftheresultsareaccompaniedbyerrorbars,confidenceintervals,
orstatisticalsignificancetests,atleastfortheexperimentsthatsupportthemainclaimsofthe
paper.
‚Ä¢Thefactors ofvariability thatthe errorbarsare capturingshould beclearly stated(for example,
train/test split, initialization, random drawing of some parameter, or overall run with given
experimental conditions).
‚Ä¢The method for calculating the error bars should be explained (closed form formula, call to a
library function, bootstrap, etc.)
‚Ä¢The assumptions made should be given (e.g., Normally distributed errors).
‚Ä¢Itshouldbeclearwhethertheerrorbaristhestandarddeviationorthestandarderrorofthemean.
‚Ä¢ItisOKtoreport1-sigmaerrorbars,butoneshouldstateit. Theauthorsshouldpreferablyreport
a 2-sigma error bar than state that they have a 96% CI, if the hypothesis of Normality of errors is
not verified.
‚Ä¢For asymmetric distributions, the authors should be careful not to show in tables or figures
symmetric error bars that would yield results that are out of range (e.g. negative error rates).
‚Ä¢If error bars are reported in tables or plots, The authors should explain in the text how they were
calculated and reference the corresponding figures or tables in the text.
8.Experiments Compute Resources
Question: Foreachexperiment,doesthepaperprovidesufficientinformationonthecomputerresources
(type of compute workers, memory, time of execution) needed to reproduce the experiments?
Answer: [Yes]
Justification: We provide details on the compute resources we use in Appendix J.
Guidelines:
36‚Ä¢The answer NA means that the paper does not include experiments.
‚Ä¢ThepapershouldindicatethetypeofcomputeworkersCPUorGPU,internalcluster,orcloud
provider, including relevant memory and storage.
‚Ä¢Thepapershouldprovidetheamountofcomputerequiredforeachoftheindividualexperimental
runs as well as estimate the total compute.
‚Ä¢The paper should disclose whether the full research project required more compute than the
experimentsreportedinthepaper (e.g., preliminary orfailed experimentsthatdidn‚Äôtmakeitinto
the paper).
9.Code Of Ethics
Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code
of Ethics https://neurips.cc/public/EthicsGuidelines ?
Answer: [Yes]
Justification: The authors have reviewed the NeurIPS Code of Ethics and to the best of our knowledge
it does conform to this in every respect.
Guidelines:
‚Ä¢The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.
‚Ä¢If theauthors answer No, they should explain the specialcircumstances that requirea deviation
from the Code of Ethics.
‚Ä¢The authors should make sure to preserve anonymity (e.g., if there is a special consideration due
to laws or regulations in their jurisdiction).
10.Broader Impacts
Question: Doesthepaperdiscussbothpotentialpositivesocietalimpactsandnegativesocietalimpacts
of the work performed?
Answer: [Yes]
Justification: We discuss the broader impacts of the work in Appendix I.
Guidelines:
‚Ä¢The answer NA means that there is no societal impact of the work performed.
‚Ä¢IftheauthorsanswerNAorNo,theyshouldexplainwhytheirworkhasnosocietalimpactor
why the paper does not address societal impact.
‚Ä¢Examples of negative societal impacts include potential malicious or unintended uses (e.g.,
disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deploy-
ment of technologies that could make decisions that unfairly impact specific groups), privacy
considerations, and security considerations.
‚Ä¢The conference expects that many papers will be foundational research and not tied to particular
applications,letalonedeployments. However,ifthereisadirectpathtoanynegativeapplications,
the authors should point it out. For example, it is legitimate to point out that an improvement in
the quality of generative models could be used to generate deepfakes for disinformation. On the
other hand, it is not needed to point out that a generic algorithm for optimizing neural networks
could enable people to train models that generate Deepfakes faster.
‚Ä¢Theauthorsshouldconsiderpossibleharmsthatcouldarisewhen thetechnologyisbeingused
as intended and functioning correctly, harms that could arise when the technology is being used
asintendedbutgivesincorrectresults,andharmsfollowingfrom(intentionalorunintentional)
misuse of the technology.
‚Ä¢Iftherearenegativesocietalimpacts,theauthorscouldalsodiscusspossiblemitigationstrategies
(e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitor-
ing misuse, mechanisms to monitor how a system learns from feedback over time, improving the
efficiency and accessibility of ML).
11.Safeguards
Question: Doesthepaperdescribesafeguardsthathavebeenputinplaceforresponsiblereleaseof
data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or
scraped datasets)?
Answer: [NA]
Justification: Thispaper isconcerned withtraining morerobust deeplearningmodels. Thus, itdoes
not pose such risks.
Guidelines:
‚Ä¢The answer NA means that the paper poses no such risks.
37‚Ä¢Releasedmodelsthat have ahighriskformisuse ordual-useshouldbereleasedwithnecessary
safeguards to allow for controlled use of the model, for example by requiring that users adhere to
usage guidelines or restrictions to access the model or implementing safety filters.
‚Ä¢DatasetsthathavebeenscrapedfromtheInternetcouldposesafetyrisks. Theauthorsshould
describe how they avoided releasing unsafe images.
‚Ä¢We recognize that providing effective safeguards is challenging, and many papers do not require
this, but we encourage authors to take this into account and make a best faith effort.
12.Licenses for existing assets
Question: Arethecreatorsororiginalownersofassets(e.g.,code,data,models),usedinthepaper,
properly credited and are the license and terms of use explicitly mentioned and properly respected?
Answer: [NA]
Justification: The paper does not use existing assets.
Guidelines:
‚Ä¢The answer NA means that the paper does not use existing assets.
‚Ä¢The authors should cite the original paper that produced the code package or dataset.
‚Ä¢The authors should state which version of the asset is used and, if possible, include a URL.
‚Ä¢The name of the license (e.g., CC-BY 4.0) should be included for each asset.
‚Ä¢Forscrapeddatafromaparticularsource(e.g.,website),thecopyrightandtermsofserviceof
that source should be provided.
‚Ä¢If assets are released, the license, copyright information, and terms of use in the package should
beprovided. Forpopulardatasets, paperswithcode.com/datasets hascuratedlicensesfor
some datasets. Their licensing guide can help determine the license of a dataset.
‚Ä¢For existing datasets that are re-packaged, both the original license and the license of the derived
asset (if it has changed) should be provided.
‚Ä¢Ifthisinformationisnotavailableonline,theauthorsareencouragedtoreachouttotheasset‚Äôs
creators.
13.New Assets
Question: Are new assets introduced in the paper well documented and is the documentation provided
alongside the assets?
Answer: [NA]
Justification: We do not introduce any new assets in the paper.
Guidelines:
‚Ä¢The answer NA means that the paper does not release new assets.
‚Ä¢Researchersshouldcommunicatethedetailsofthedataset/code/modelaspartoftheirsubmissions
via structured templates. This includes details about training, license, limitations, etc.
‚Ä¢The paper should discuss whether and how consent was obtained from people whose asset is
used.
‚Ä¢At submission time, remember to anonymize your assets (if applicable). You can either create an
anonymized URL or include an anonymized zip file.
14.Crowdsourcing and Research with Human Subjects
Question: For crowdsourcing experiments and research with human subjects, does the paper include
the full text of instructions given to participants and screenshots, if applicable, as well as details about
compensation (if any)?
Answer: [NA]
Justification: We do not perform any crowdsourcing experiments nor research with human subjects.
Guidelines:
‚Ä¢TheanswerNAmeansthatthepaperdoesnotinvolvecrowdsourcingnorresearchwithhuman
subjects.
‚Ä¢Includingthisinformationinthesupplementalmaterialisfine,butifthemaincontributionofthe
paperinvolveshumansubjects,thenasmuchdetailaspossibleshouldbeincludedinthemain
paper.
‚Ä¢According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other
labor should be paid at least the minimum wage in the country of the data collector.
15.Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects
38Question: Doesthepaperdescribepotentialrisksincurredbystudyparticipants,whethersuchrisks
weredisclosedtothesubjects,andwhetherInstitutionalReviewBoard(IRB)approvals(oranequivalent
approval/review based on the requirements of your country or institution) were obtained?
Answer: [NA]
Justification: Wedonotperformanyexperimentsthatinvolvecrowdsourcingnorresearchwithhuman
subjects.
Guidelines:
‚Ä¢TheanswerNAmeansthatthepaperdoesnotinvolvecrowdsourcingnorresearchwithhuman
subjects.
‚Ä¢Depending on the country in which research is conducted, IRB approval (or equivalent) may be
required for any human subjects research. If you obtained IRB approval, you should clearly state
this in the paper.
‚Ä¢Werecognizethattheproceduresforthismayvarysignificantlybetweeninstitutionsandlocations,
and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their
institution.
‚Ä¢Forinitialsubmissions,donotincludeanyinformationthatwouldbreakanonymity(ifapplicable),
such as the institution conducting the review.
39