Piecewise-Stationary Bandits with Knapsacks
Xilin Zhang
Department of ISEM
National University of Singapore
Singapore, 117578
zhangxilin@u.nus.eduCheung Wang Chi
Department of ISEM
National University of Singapore
Singapore, 117578
isecwc@nus.edu.sg
Abstract
We propose a novel inventory reserving algorithm which draws new insights into
Bandits with Knapsacks (Bwk) problems in piecewise-stationary environments.
Suppose parameters ηmin, ηmaxPp0,1srespectively lower and upper bound the
ratio between the reward earned and the resources consumed in a round. Our algo-
rithm achieves a provably near-optimal competitive ratio of Oplogpηmax{ηminqq,
with a matching lower bound provided. Our performance guarantee is based on a
dynamic benchmark that upper bounds the optimum, different from existing works
on adversarial Bwk Immorlica et al. (2019); Kesselheim and Singla (2020) who
compare with the stationary benchmark. Different from existing non-stationary
Bwk work Liu et al. (2022), we do not require a bounded global variation.
1 Introduction
In a bandits with knapsack (Bwk) problem, each action ain the action set Kis associated with a
latent and random amount of reward earned, Rtpaq, and resource consumed, Ctpaq, in each round
t“1, . . . , T . A decision maker (DM) selects an action atPKin round t, and observes bandit
feedbackpRtpatq, Ctpatqq. The DM targets at maximizing the total rewardřT
t“1Rtpatq, while
satisfying the hard capacity constraintřT
t“1Ctpatq ďB. Bwk has many real-life applications
such as dynamic pricing Babaioff et al. (2015), resource allocation Zhalechian et al. (2022), online
auction Balseiro and Gur (2019) and assortment planning Agrawal et al. (2019). Stochastic Bwk
is first introduced by Badanidiyuru et al. (2018), followed by generalizations to concave reward
with convex constraints Agrawal and Devanur (2014), combinatorial bandits Sankararaman and
Slivkins (2018) and contextual bandits Badanidiyuru et al. (2014); Agrawal and Devanur (2016). In
stochastic Bwk problems, the expected feedback ErpRtpaq, Ctpaqqs“p rpaq, cpaqqis stationary for
allaPK, tPt1, . . . , Tu, and a sublinear-in- Tregret is achievable. Nevertheless, the stationary
model could be too ideal in many applications.
Adversarial Bwk is firstly considered in Immorlica et al. (2019) where prt, ctq“tp rtpaq, ctpaqquaPK
can change arbitrarily over the horizon. They achieve a competitive ratio (CR) of OpdlogpTqqwith
respect to a static benchmark when there are dbudget constraints. A static benchmark picks a fixed
optimal action (or a fixed optimal distribution over arms), and applies the same action (or distribution)
in all Trounds. Kesselheim and Singla (2020) further improve the CR to OplogpdqlogpTqq. Other
papers consider different regimes such as unlimited rounds (Rangi et al. (2018)), large budget
B“ΩpTq(Castiglioni et al. (2022a)), strict feasibility (Castiglioni et al. (2022b)) and approximate
stationarity (Fikioris and Tardos (2023)). All these works compare with static benchmarks (see
Appendix A.1). Moreover, adversarial Bwk could be too conservative in certain real-life scenarios.
For instance, sales patterns could be stationary for a duration of time, but only change during periods
of hot seasons/promotions/new trends, which fits into our piecewise-stationary Bwk regime.
38th Conference on Neural Information Processing Systems (NeurIPS 2024).An abundance of existing works explore adversarial online knapsack problems with full feedback,
whereprt, ctqcan change arbitrarily but their realized value of tpRtpaq, CtpaqquaPKis observed
before choosing at(Karp et al. (1990); Mehta et al. (2007); Zhou et al. (2008)). Many of these works
compare their accrued rewards with dynamic benchmarks (stronger than the static benchmarks used
in adversarial Bwk), where the DM picks different optimal actions a˚
tin different rounds. However,
the dynamic benchmarks considered in the above papers are best single arm benchmark, which only
allows pulling a single arm in each round; while our benchmark is a best distribution over arms
benchmark (see Appendix A.2 for a more detailed elaboration). Further, the ability of observing
tpRtpaq, CtpaqquaPKbefore selecting atis crucial in the algorithm designs in Karp et al. (1990);
Mehta et al. (2007); Zhou et al. (2008). Their algorithm design cannot be readily generalized to the
bandit setting, where the DM only observes pRtpatq, Ctpatqqafter selecting at.
Another line of recent research investigates non-stationary online knapsack problems with either
full feedback Jiang et al. (2020); Balseiro et al. (2022) or bandit feedback Liu et al. (2022).
These works quantify the scale of non-stationarity in terms of both the local variation loc“řT´1
t“1distpprt`1, ct`1q,prt, ctqqand the global variation glo“řT
t“1distpřT
t“1prt, ctq{T,prt, ctqq,
where distis a certain metric. Assuming maxtloc,glougrows sublinearly in T, they achieve sublinear-
in-Tregret bounds compared to the dynamic benchmark. However, glogrowing sublinearly in Tis
rather strong assumption. We could have glolinear in T, even with one change point (see Remark
A.3 for more detail). In this work, we consider piece-wise stationary models that allow a higher
degree of non-stationarity, which is yet to be studied in all aforementioned works.
Our contributions. Firstly, on modeling (see Section 2), the DM does not know the number of change
points and when changes happen. We formulate our model as a single-resource problem, and extend
tod-resource problems in Appendix B.5 with an extra multiplicative factor of don the competitve
ratio. Secondly, on algorithm design (see Sections 3.1 and 4.1), we propose novel algorithms which
are natural, intuitive and easy to implement. Our idea of reserving inventory based on the reward-
consumption ratio provides new insights into the problem. Thirdly, on performance guarantee
(see Sections 3.2 and 4.2), we achieve a provably near-optimal competitive ratio with respect to a
best distribution over arms benchmark without requiring a bounded glo, which distinguishes our
work from the existing literature. Specifically, suppose there exists parameters ηmin, ηmaxPp0,1s
such that ηminďrtpaq, ctpaq ďηmaxfor all t, a. Our algorithms achieve a competitive ratio of
Oplogpηmax{ηminqq, which requires a novel analysis. We prove the tightness of our competitive ratio
by providing a matching lower bound (see Section 4.4). We also run some illustrative numerical
experiments (see Section 5) to compare our algorithm performance with Immorlica et al. (2019) and
Zhou et al. (2008) under the piecewise-stationary settings.
2 Model
2.1 Problem formulation
Problem dynamics. The online model involves Trounds, indexed as tPT“t1,2, . . . , Tu. We
index an arm as aPK. Additionally, we define the null arm anull, where no allocation is made
when anullis chosen. In round tPT, the DM chooses an arm atPKŤtanullu, and observes a noisy
outcome vector pRtpatq, CtpatqqPr 0,1s2as the bandit feedback, where RtpatqandCtpatqare the
reward and the resource consumption in round trespectively. We set Rtpanullq“Ctpanullq“0with
certainty for all tPT. The DM is endowed with BďTunits of the resource. The DM’s goal is to
maximize the total reward, with the constraint that the total resource consumption is at most Bwith
certainty. Denote rt“trtpaquaPK“tErRtpaqsuaPKandct“tctpaquaPK“tErCtpaqsuaPK. We
consider a piece-wise stationary setting, where the planning horizon Tis partitioned into Lstationary
piecestt0“1, . . . , t 1u,tt1`1, . . . , t 2u, . . . ,ttL´1`1, . . . , t L“Tu. On each stationary piece l,
we haveprt, ctq“prplq, cplqqfor all tPttl´1`1, . . . , t lu.
The DM does notknow the number of rounds T, the number of stationary pieces L, the rounds
t1, . . . , t L´1where changes happen, the values of tprplq, cplqqulPt1,...,Luand their realized outcomes.
Goal and benchmark. Our goal is to develop an online algorithm that maximize the expected total
reward ErřT
t“1Rtpatqswhile satisfying the inventory constraintřT
t“1CtpatqďB, which can be
formulated as the following dynamic program DP. In DP, Xt“tXtpaquaPKis a binary decision vari-
2able indicating whether to pick arm ain round t(i.e.,Xtpaq“1) or not (i.e., Xtpaq“0). An online
algorithm is non-anticipatory in the sense that Xtdepends only on BandtpRspasq, Cspasq, Xsqut´1
s“1.
DP:“max
XtE«Tÿ
t“1ÿ
aPKRtpaqXtpaqff
s.t.Tÿ
t“1ÿ
aPKCtpaqXtpaqďB
ÿ
aPKXtpaqď1@tPT
XtpaqPt0,1u @ aPK, tPT.FA:“maxLÿ
l“1ptl´tl´1qÿ
aPKrplqpaqxlpaq
s.t.Lÿ
l“1ptl´tl´1qÿ
aPKcplqpaqxlpaqďB
ÿ
aPKxlpaqď1@l“1, . . . , L
xlpaqě0@aPK, l“1, . . . , L.
In non-stationary bandits without resource constraints, the performance bound of an online algorithm
is in the form ofřT
t“1RtpatqěřT
t“1rtpa˚
tq´Reg, whereřT
t“1rtpa˚
tqis the optimal expected
reward obtained by choosing the best arm in each round, and Reg is a sublinear-in- Tregret character-
izing the reward loss. In our Bwk setting, due to the inventory constraint, achieving a sublinear-in- T
regret is impossible without assuming a bounded global variation (see Appendix A.3). We denote
optpPqas the optimum of an optimization problem P. We aim for a performance guarantee of the
formřT
t“1Rtpatqě1
CR¨opt(DP)´Reg, where opt(DP) is the optimum of DP, CR is a competitive
ratio, and Reg is a sublinear-in- Tregret. Unfortunately, DP is hard to solve. Therefore, we define a
fluid approximation FA of DP, where RtandCtare replaced by their respective expectations, and the
decision variables are fractional. In the following Lemma 2.1 (proved in Appendix C.1), we justify
that opt(FA) can serve as a benchmark for our algorithms’ performance since
Tÿ
t“1Rtpatqě1
CR¨optpFAq´Regě1
CR¨opt(DP)´Reg,
and we aim to derive performance guarantees of the formřT
t“1Rtpatqě1
CR¨optpFAq´Reg.
Lemma 2.1. opt(FA)ěopt(DP).
2.2 Assumptions, limitations and discussions
Compared with the adversarial Bwk literature, our piecewise-stationary setting has two limitations.
The first is on L, the number of change points. When Lis not known, our result is meaningful only
when L“op?T¨ηminq. When Lis known, our result is meaningful when L“opT¨ηminq(see
Theorem 4.2). In contrast, existing works on adversarial Bwk generally allow L“T. The second is
on the value range of non-null actions:
Assumption 2.2. For all aPK, lPt1, . . . , Lu, there exists known constants ηmin, ηmaxPp0,1s
such that ηminďrplqpaq, cplqpaqďηmax.
While ηmincan be as small as 0generally, we argue that this assumption is mild. Assumption 2.2
holds in many real-life scenarios. For instance, in portfolio management, an investor allocates a
limited budget among different investment options (arms) to maximize the overall return. The investor
has assessments on lower and upper ranges of the expected returns for each investment option. The
lower range is usually strictly positive, since the investor would not consider investment options
with0or negative expected return. In applications such as dynamic pricing, assortment planning,
network resource allocation and energy management, expected profits and consumer demands are
usually within a known positive value range. We further justify that Assumption 2.2 theoretically in
the following Lemma 2.3 (proved in Appendix C.5).
Lemma 2.3. For any online algorithm, there exist an instance for which 0ďrtpaq, ctpaqď1for all
aPK, tPT, and that CRąΩplogpηmax{ηminqq.
Additionally, in Appendix C.5 we demonstrate that knowing the values of ηmin, ηmaxisnecessary
for achieving CR “Oplogpηmax{ηminqq.
32.3 High-level idea of our algorithm
Decomposing opt(FA) in terms of reward-consumption ratios. Throughout our paper, we fix an
optimal solution tx˚
luL
l“1to FA. We define the set L“tlPt1, . . . , Lu:ř
aPKx˚
lpaqą0u, which
indexes stationary pieces where non-null allocations are made under the optimal solution tx˚
luL
l“1to
FA . For each lPL, we define
Ratioplq˚“ř
aPKrplqpaqx˚
lpaqř
aPKcplqpaqx˚
lpaqP„ηmin
ηmax,ηmax
ηminȷ
, B˚
l“ptl´tl´1qÿ
aPKcplqpaqx˚
lpaq.(1)
Ratioplq˚, whose value range follows from Assumption 2.2, is the optimal expected reward earned
per unit of consumed resource under tx˚
luL
l“1. We call Ratioplq˚the optimal expected reward-
consumption ratio of stationary piece l.B˚
lrepresents the optimal expected amount of resources
assigned for stationary piece l. To aid our algorithm design, we define the following linear program:
LPp˜r,˜c,˜Bq:“maxÿ
aPK˜rpaqxpaq
s.t.ÿ
aPK˜cpaqxpaqď˜B
ÿ
aPKxpaqď1
xpaqě0@aPK.
Then, we can express opt pFAqin terms of LPp˜r,˜c,˜Bqand Ratioplq˚, B˚
las follows:
opt(FA)“ÿ
lPLptl´tl´1q¨opt´
LP´
rplq, cplq, B˚
l{ptl´tl´1q¯¯
“ÿ
lPLRatioplq˚¨B˚
l.(2)
The first equation in (2) can be verified by noting that x˚
lis feasible to LPprplq, cplq, B˚
l{ptl´tl´1qq
for each lPt1, . . . , Lu, and the concatenation of the optimal solutions of tLPprplq, cplq, B˚
l{ptl´
tl´1qulPLforms a feasible solution to FA. The second equation in (2) holds, by the definitions of
Ratioplq˚, B˚
land the fact that opt pLPprplq, cplq, B˚
l{ptl´tl´1qqq“ř
aPKrplqpaqx˚
lpaq.
Algorithm design. Fix an arbitrary constant αą1(we set α“eby default, but our results hold
for any constant αą1). We define M“rlogαpηmax{ηminqsand partitionrηmin{ηmax, ηmax{ηmins
into2Mintervalsrα´M, α´M`1sŤtpαm, αm`1suM´1
m“´M`1. For each stationary piece lPL,
we denote m˚
lP t´M, . . . , M´1uas the interval such that Ratioplq˚P pαm˚
l, αm˚
l`1s. In the
forthcoming discussion, with some abuse of notation, we sometimes write interval rα´M, α´M`1s
aspα´M, α´M`1s, and we refer to interval pαm, αm`1sas reward-consumption ratio interval m, or
“interval m” in short. Then we can decompose opt(FA) regarding reward-consumption ratio intervals:
opt(FA)“p2q“M´1ÿ
m“´Mÿ
lPLRatioplq˚¨1pRatioplq˚Ppαm, αm`1sq¨B˚
l
“M´1ÿ
m“´Mÿ
lPLRatioplq˚¨1pm˚
l“mq¨B˚
l. (3)
Thekey intuition of our algorithm is to achieve a reward guarantee for each interval mregarding
the reward-consumption ratio 1pm˚
l“mq¨Ratioplq˚and the resource consumptionř
lPL1pm˚
l“
mq¨B˚
l, which is done by performing two tasks: (a) for each lPL, we guess the value of msuch
thatRatioplq˚Ppαm, αm`1s. We guarantee that for at least 1{pM`1qfraction of requests on each l,
our guessed ratio interval are close to the correct interval m˚
l; (b) for each interval m, we “reserve”
B{2Mresource units. That is, we reserve an inventory of B{2Mresource units to satisfy requests
with a guessed reward-consumption ratio interval m. When the inventory reserved for interval mis
depleted, the DM rejects (by choosing anull) all future requests with a guessed interval m.
By accomplishing task (a), we ensure that for each lPL, at least 1pm˚
l“mq¨B˚
l{pM`1qrequested
resources are served by resources reserved for interval m, generating reward at a ratio of at least
4αm. Then, by accomplishing task (b), if the reserved inventory for interval mare not depleted by
round T, our algorithm earns a reward of at least αm¨1pm˚
l“mq¨B˚
l{pM`1qduring stationary
piece l. Else, if the reserved B{2Mresource units for interval mare depleted by round T, then the
DM earns a reward of at least αm¨B{p2Mqěαm¨ř
lPL1pm˚
l“mq¨B˚
l{p2Mqfrom resources
reserved for interval m, sinceř
lPL1pm˚
l“mq¨B˚
lďB. By judiciously analyzing the relationship
between stationary pieces and reward-consumption ratio intervals, for each interval m, we ensure
that a reward of1
OpMq¨ÿ
lPLαm¨1pm˚
l“mq¨B˚
l
is accrued, which is 1{OpMqof the benchmark resources consumed on all stationary pieces lPL
whose Ratioplq˚Ppαm, αm`1s. By summing over mPt´M, . . . , M´1u, we achieve 1{OpMq
fraction of reward (3).
3 Warm-up: Full-feedback deterministic outcome setting
In this section, we introduce the main idea of our algorithm on the bandit model by relaxing the
model uncertainty assumptions and specializing to the full-feedback deterministic setting: pRt, Ctq“
prplq, cplqqwith certainty for each tPttl´1`1, . . . , t lu. Thus,prplq, cplqqis observed at the start
of the stationary piece l. The DM does not know Landtt1, . . . , t L´1ubefore the online process
begins. The DM’s decision can be fractional, which means on each stationary piece l, a decision can
take the form of xlPtxPr0,1s|K|:ř
aPKxpaqď1, xpaqě0@aPKu, resulting in a reward ofř
aPKrplqpaqxlpaqand resource consumption ofř
aPKcplqpaqxlpaqin a round.
3.1 Inventory REServing (IRES) algorithm
Upon observing pRt, Ctq“prplq, cplqq, guessing Ratioplq˚(see Section 2.3) is equivalent to guess-
ingx˚
l, which is equivalent to guessing B˚
l{ptl´tl´1q, sincetx˚
luL
l“1is an optimal solution to
LPprplq, cplq, B˚
l{ptl´tl´1qq. In this section, when we say “Line xx”, we refer to a line of Algorithm
1, which displays IRES. At the start, the IRES reserves B{2Munits of resource to each interval
mPt´M, . . . , M´1u, and each resource unit is reserved by exactly one interval. In Line 5, for
each stationary piece l, we firstly solve LPprplq, cplq, ηmin¨αqqfor each qPt0, . . . , Mu, and get
an optimal solution xpqq˚
l“txpqq˚
lpaquaPK. Each ηmin¨αqis a guess of B˚
l{ptl´tl´1q. For each
qPt0, . . . , Mu, we define
Ratiopqq
l:“ř
aPKrplqpaqxpqq˚
lpaq
ř
aPKcplqpaqxpqq˚
lpaq
as a guess of Ratioplq˚. Claim 3 in Appendix B.3 shows that, by guessing a qsuch that ηmin¨αq
is within a factor of αfrom B˚
l{ptl´tl´1q, we also have Ratiopqq
lto be at most a factor of αfrom
Ratioplq˚. As time progresses on l, we go round-robin on the choices of qtPt0, . . . , Mufor each
round t(Lines 7, 15). In round tPttl´1`1, . . . , t lu, we identify mtPt´M, . . . , M´1usuch that
Ratiopqtq
lPpαmt, αmt`1s(Line 8). If there remains enough reserved resource units for interval mt
(Line 10), the DM fulfils the t-th request by selecting fractional action xt“xpqtq˚
l(Line 11), which
consumes resources reserved for mt(Lines 9, 11). Otherwise, the DM selects anulland rejects the
request (Line 13). By Line 9, we have Tpmq
t“tsPt1, . . . , tu:ms“mu, which consists of rounds
int1, . . . , tuwhen the DM attempts to fulfil a request with resources reserved for interval m.
3.2 Performance guarantee of IRES
We provide a performance guarantee to IRES in Theorem 3.1.
Theorem 3.1. For any given αą1, IRES achieves a reward of at least´
1´2 logαpηmax{ηminq`1
B¯
¨opt(FA)
6α2¨logαpηmax{ηminq,
under mild requirements that tl´tl´1ěM`1@lPL. In particular, IRES achieves a competitive
ratio of Oplogαpηmax{ηminqqifBěΩplogαpηmax{ηminqq.
5Algorithm 1 Inventory REServing with deterministic input (IRES)
1:Input: resource capacity B,ηmin,ηmax.
2:Initialize l“0,t“1,q1“0,Tpmq
t“H for all m, t.
3:while tďTdo
4: Setl“l`1.
5: Solve LPprplq, cplq, ηmin¨αqq@qPt0,1, . . . , Mufor optimal xpqq˚
l“txpqq˚
lpaquaPK.
6: while stationary piece lnot end do
7: Letprt, ctq“prplq, cplqq,xt“xpqtq˚
l.
8: FindmtPt´M, . . . , M´1usuch that Ratiopqtq
lPpαmt, αmt`1s.
9: SetTpmtq
t“Tpmtq
t´1Ťttu.
10: ifř
sPTpmtq
t´1ř
aPKcspaqxspaqďB
2M´1then
11: Pick fractional arms xt.
12: else
13: Pick arm at“anull.
14: end if
15: ifqtďM´1then setqt`1“qt`1elsesetqt`1“0.
16: Sett“t`1.
17: end while
18:end while
Remark 3.2 (Comparing with online knapsack problems) .Our deterministic setting resembles online
knapsack problems with adversarial prt, ctqrevealed in each round Zhou et al. (2008), but our prt, ctq
remains the same for an unknown number of rounds. Assuming BěΩpηmaxq, Zhou et al. (2008)
achieve a competitive ratio of 2 logpηmax{ηminq`1and they provide a nearly-matching lower bound.
We recover their competitive ratio with an extra 3α2multiplicative factor in a piece-wise stationary
setting and a stricter requirement on B.
3.3 Analysis
Denote Tpmq
T“tτpmqp1q, τpmqp2q, . . .uwhere τpmqp1qăτpmqp2qă. . ., and ˜Tpmqis the prefix of
Tpmq
T satisfying
˜Tpmq“#
τpmqpnqPTpmq
T:nÿ
s“1ÿ
aPKcτpmqpsqpaqxτpmqpsqpaqďB
2M´1+
.
That is, ˜Tpmqconsist up to the last round assigned to interval msuch that the reserved inventory is
not fully consumed. It is evident that ifř
sPTpmq
TcspasqďB{p2Mq´1, then ˜Tpmq“Tpmq
T.
Define Jl“ttl´1`1, . . . , t lu, the time interval of the l-th piece. The reward achieved by IRES is
REW“ř
tPTř
aPKrtpaqxtpaq, which can be decomposed as REW “řM´1
m“´MREWpmqwhere
REWpmq“ÿ
lPL1pm˚
l“mqÿ
tPpŤM´1
n“´M˜TpnqqŞJlÿ
aPKrtpaqxtpaq.
The setpŤM´1
n“´M˜TpnqqŞJlconsists of rounds in stationary piece l, which requests are not rejected
due to shortage in reserved resource units. The summationř
lPL1pm˚
l“mqyields the reward
accrued on pieces where m˚
l“m. By the summationřM´1
m“´MREWpmq, we obtain the total reward
accrued with resources reserved for 2Mintervals.
Similarly, we decompose the benchmark opt(FA) “řM´1
m“´Mopt(FA)pmqwhere
opt(FA)pmq“ÿ
lPL1pm˚
l“mq¨Ratioplq˚¨B˚
l,
To prove Theorem 3.1, it suffices to show REWpmqě1´p2M`1q{B
6α2M¨opt(FA)pmqfor each interval m,
as in the following Claim 1 and Claim 2. Then Theorem 3.1 can be established by summing over
mPt´M, . . . , M´1u.
6Claim 1. For any interval mPt´M, . . . , M´1u, if for all nPtmaxtm´1,´Mu, muwe have
˜Tpnq“Tpnq
T, then REWpmqě1
2αM¨opt(FA)pmq.
Claim 2. For any interval mP t´M, . . . , M´1u, if for at least one element nP tmaxtm´
1,´Mu, muwe have ˜TpnqĹTpnq
T, then REWpmqě1´p2M`1q{B
6α2M¨opt(FA)pmq.
Sketch proofs of Claims 1, 2. Claims 1, 2 are proved in Appendices C.2, C.3 respectively. We
first show in Claim 3 in Appendix B.3 that on a stationary piece lPL, there exists a “correct”
q˚
lP t0, . . . , Mu, such that when selecting decision xt“xpq˚
lq˚
l (the optimal solution to the
LPprplq, cplq, ηmin¨αq˚
lq), our guess Ratiopq˚
lq
lon the ground-truth Ratioplq˚Ppαm˚
l, αm˚
l`1ssatisfies
Ratiopq˚
lq
lPpαm˚
l´1, αm˚
l`1s“pαm˚
l´1, αm˚
lsYpαm˚
l, αm˚
l`1s. (4)
When taking fractional action xpq˚
lq˚
l, we consume resources reserved for reward-consumption ratio
intervals m˚
l´1orm˚
l. Therefore by our round-robin design, on each stationary piece lsuch that
m˚
l“m, at leastptl´tl´1q{pM`1qrequests are assigned to intervals m´1orm, under decision
xpq˚
lq˚
l . It remains to analyze how many requests are fulfilled by resources reserved for the correct
interval m˚
l“mat the correct reward-consumption ratio Ratiopq˚
lq
l, as discussed in Section 2.3.
For an interval mwhere ˜Tpmq“Tpmq
T,˜Tpm´1q“Tpm´1q
T (Claim 1 case), there are still remaining
resources reserved for intervals m´1, mat the end of the horizon. Hence, for each stationary
piece lsuch that m˚
l“m, at leastptl´tl´1q{pM`1qrequests (consuming B˚
l{pM`1qresource
units) are indeed fulfilled by resources reserved for interval m´1orm, accruing reward at the
reward-consumption ratio of at least Ratioplq˚{αaccording to (4). Summing over all lsuch that
m˚
l“m, we have REWpmqěř
lPLpRatioplq˚{αq¨1pm˚
l“mq¨B˚
l{pM`1qand Claim 1
is validated. For an interval mwhere there exists some nP tmaxtm´1,´Mu, musuch that
˜TpnqĹTpnq
T(Claim 2 case), the B{2Mresource units reserved for interval nare depleted before
the end of the horizon. In this case, some requests on stationary piece lwhere m˚
l“mmay be
rejected, but the B{p2Mqresource units reserved for interval nhave been consumed, generating
reward at a reward-consumption ratio of at least αněαm´1. Since the total resources that should be
consumed w.r.t. interval munder the optimal FA solution isř
lPL1pm˚
l“mq¨B˚
lďB, we have
REWpmqěαm´1¨B{p2Mqěř
lPLpRatioplq˚{α2q¨1pm˚
l“mq¨B˚
l, and Claim 2 is validated.
4 Bandit-feedback stochastic outcome setting
In this section, we consider the original piece-wise stationary Bwk model, where the DM receives
bandit feedback on outcomes pRt, Ctq, and decisions are randomized.
4.1 Inventory REServing with change monitoring (IRES-CM) Algorithm
In this section, when we say “Line xx”, we refer to a line of Algorithm 2, which displays IRES-
CM. In the bandit-feedback setting, guessing Ratioplq˚requires estimating prplq, cplqq. To do so, we
adaptively partition Tinto exploration rounds and exploitation rounds. In each round t, we conduct
exploration with probability γt“Ma
|K|logp1{δqplogp|K|q`1q{?
Nt(reflected in a Bernoulli
random variable Uptqin Line 7), where δPp0,1qis a confidence parameter and Nis defined in
(5). In an exploration round t(Lines 9-13), we uniformly sample an arm aPKand pull it for
Nconsecutive rounds. We update an estimate pˆrtpaq,ˆctpaqqonprtpaq, ctpaqq“p rplqpaq, cplqpaqq
using thetpRspaq, CspaqqusPTS
tpaqinformation, where TS
tpaqdenotes the set of the most recent N
exploration rounds before round twhen arm ais pulled. That is, we set TS
tpaq“tτPtt´st, . . . , t´
1u:aτ“auwhere st“arg max střt´1
τ“t´s1paτ“aq“Nu. We define
N“27 logp2{δq
p1´1{?αq2¨ηmin,ˆrtpaq“ř
sPTS
tpaqRspaq
N,ˆctpaq“ř
sPTS
tpaqCspaq
N. (5)
The estimates ˆrt,ˆcthave two sources of error: error due to random noise, which decreases with N;
and error due to non-stationarity, which increases with N. We set Naccording to (5) to balance these
two errors. We let TR
tdenote the set of exploration rounds.
7In an exploitation round t(Lines 17-25), we take turns to pull arms according to decision ˆxpqtq˚
t,
which is very similar to Algorithm 1 with pˆrt,ˆctqin place ofprt, ctq. We define
zRatiopqq
t“ř
aPKˆrtpaqˆxpqq˚
tpaq
ř
aPKˆctpaqˆxpqq˚
tpaq,p:qt“max"
min"
zRatiopqtq
t, αM*
, α´M*
,
which can both be interpreted as a guess of Ratioplq˚at any round tduring stationary piece l. We
reserve B{p2Mqunits of resources for each interval mPt´M, . . . , M´1u. In round t, we serve
request tusing resources reserved for interval ˆmtsuch thatp:qtPpαˆmt, αˆmt`1s. If interval ˆmthas
remaining reserved inventory, then we pull arm at“awith probability ˆxpqtq˚
tpaq, orat„ˆxpqtq˚
t
in short. We let TIpmq
t denote the set of exploitation rounds using resources reserved for interval m.
We finally highlight that the major performance difference between IRES and IRES-CM is due to
estimatingprt, ctqbypˆrt,ˆctq, which is detailed in Section 4.3.
Algorithm 2 Inventory REServing with Change Monitoring (IRES-CM)
1:Input: resource capacity B, rate γ, bounding parameters ηmin, ηmax.
2:SetTR
t“H for all tandTIpmq
t“H for all m, t.
3:Pull each arm aPKforNtimes, get ˆrtpaq,ˆctpaqas in (5).
4:Sett“N|K|`1.
5:while tďTdo
6: Solve LPpˆrt,ˆct, ηmin¨αqq@qPt0,1, . . . , Mufor optimal ˆxpqq˚
t“tˆxpqq˚
tpaquaPK.
7: Sample Uptq„Bernpγtq.
8: ifUptq“1then
9: Pick arm a„UnipKq, pull arm as“a.
10: SetUpsq“1forsPtt, . . . , t`N´1u.
11: SetTR
s“TR
t´1Ťtt, . . . , suforsPtt, . . . , t`N´1u.
12: Sett“t`N,pˆrt,ˆctq“p ˆrt´N,ˆct´Nq.
13: Update ˆctpaq,ˆrtpaqas in (5).
14: else
15: forq“0, . . . , M do
16: Setqt“q.
17: Determine ˆmtPt´M, . . . , M´1usuch thatp:qtPpαˆmt, αˆmt`1s.
18: SetTIpˆmtq
t“TIpˆmtq
t´1Ťttu.
19: ifř
sPTIpˆmtq
t´1CspasqďB
2M´1then
20: Pick arm at„ˆxpqtq˚
t.
21: else
22: Pick arm at“anull.
23: end if
24: Sett“t`1,pˆrt,ˆctq“p ˆrt´1,ˆct´1q.
25: end for
26: end if
27:end while
4.2 Performance guarantee of IRES-CM
We impose the following assumption on the ranges of B, opt(FA).
Assumption 4.1. mintB,opt(FA)uě˜ΩpLa
|K|NTq,where ˜Ωp¨qhides multiplicative factors in
terms of logαpηmax{ηminq,logp1{δq,plogp|K|q`1q.
The performance of IRES-CM is as follows:
Theorem 4.2. For any given αą1, with probability at least 1´2|K|¨plogαpηmax{ηminqL`Tqδ,
IRES-CM achieves a reward of at least
1´op1q
10α4¨logαpηmax{ηminq¨´
opt(FA)´˜O´
La
|K|NT¯¯
8under Assumption 4.1, where op¨qhides multiplicative factors in terms ofa
M{Band˜Op¨qhides
multiplicative factors in terms of logαpηmax{ηminq,logp1{δq,plogp|K|q`1q. In particular, IRES-CM
achieves a competitive ratio of Oplogαpηmax{ηminqqas long as L“op?T¨ηminq.
The proof of Theorem 4.2 can be found in Appendix C.4. We provide a thorough comparison of our
performance guarantee with existing works on adversarial and non-stationary Bwk in Appendix A.
Remark 4.3 (Improved performance with known L).If the DM knows L, Assumption 4.1 can be
relaxed to
mintB,opt(FA)uě˜Ωpa
L|K|NTq.
Furthermore, in our performance guarantee in Theorem 4.2, the deductive term ˜OpLa
|K|NTq
from opt(FA) can be improved to ˜Opa
L|K|NTqby setting the exploration parameter γt“
Ma
L|K|logp1{δqplogp|K|q`1q{?
Ntin IRES-CM. Without prior knowledge of L, the deduc-
tive term ˜OpLa
|K|NTq“opTqifL“op?T¨ηminq; with prior information of L, the deductive
term ˜Opa
L|K|NTq“opTqifL“opT¨ηminq.
Remark 4.4 (Deterministic setting with bandit feedback) .In our full-feedback deterministic setting,
sinceprplq, cplqqis given at the beginning of each stationary piece, our performance guarantee is
independent on |K|, L. In a bandit-feedback deterministic setting, IRES-CM can be applied by setting
N“1. In this case, under Assumption 4.1, IRES-CM achieves a reward of at least
1´op1q
6α2¨logαpηmax{ηminq¨´
opt(FA)´˜OpLa
|K|Tq¯
.
4.3 Analysis
We denote σtpaq“mints:sPTS
tpaquas the 1st element in TS
tpaq. We partition the exploitation
round set TIpmq
T into two sets qTIpmqandpTIpmq, i.e.,TIpmq
T“qTIpmqŤpTIpmq,qTIpmqŞpTIpmq“H .
A time index tPTIpmq
T belongs to the set qTIpmq(referred to as “successful exploitation rounds
regarding interval m”) if and only if the following condition is satisfied for all aPK:
tprspaq, cspaqquaPK“tprσtpaqpaq, cσtpaqpaqquaPK,@sPtσtpaq, . . . , tu. (6)
FortPpTIpmq(referred to as “failed exploitation rounds regarding interval m”), inequality (6) is
violated for at least one aPK. We denote pTIpmq“tτIpmqp1q, τIpmqp2q, . . .uwhere τIpmqp1qă
τIpmqp2qă. . .. We let ˜TIpmqbe a prefix of pTIpmqsatisfying
˜TIpmq“#
τIpmqpnqPqTIpmq:nÿ
s“1ÿ
aPKCτIpmqpsq`
aτIpmqpsq˘
ďB
2M´1+
which consists up to the last exploitation round satisfying (6) for interval m, such that the reserved
resource is adequate. Ifř
sPTIpmq
TCspasqďB{p2Mq´1, then ˜TIpmq“qTIpmq.
Sketch proof of Theorem 4.2. Recall that the performance guarantee of our algorithms is in the form
ofřT
t“1Rtpatqě1
CR¨optpFAq´Reg. The proof consists of mainly two steps: (a) we derive the
CR“OpMqby bounding two different cases of interval min a similar manner to Claim 1 and Claim
2 (see Appendix C.4), with qTIpmq(successful exploitation rounds in IRES-CM) in place of Tpmq
T (all
rounds in IRES); (b) we derive the Reg “˜OpLa
|K|NTqby bounding the number of exploration
rounds|TR
T|and failed exploitation rounds |ŤM
m“´M´2pTIpmq|(see Appendix B.7).
Comparing performance of IRES and IRES-CM. We highlight that the major performance
difference between IRES and IRES-CM is the loss caused by estimating prt, ctq, reflected in the
following aspects: (i) reward loss caused by exploration (upper bounding |TR
T|); (ii)TS
tpaqcontains
change points, causing failed estimation of prt, ctq(upper bounding |ŤM
m“´M´2pTIpmq|); (iii)TS
tpaq
does not contain change points, but the discrepancy between prt, ctqandpˆrt,ˆctqresults in assigning
Ratioplq˚(estimated by zRatiopqq
t) to the wrong interval. We remark that the losses due to (i, ii) are
accounted for in Reg, while (iii) is accounted for in the CR.
94.4 A lower bound on competitive ratio
We complement our analysis by showing the tightness of our CR (see Appendix C.6 for proof).
Theorem 4.5. Consider a fixed but arbitrary αą1, and set ηmin“α´3ν, ηmax“1for an arbitrary
νPZą0. For any online algorithm, there exist an instance for which ηminďrtpaq, ctpaqďηmaxfor
allaPK, tPT, and thatřT
t“1Rtpatq{opt(FA)ďΘp1{logαpηmax{ηminqq.
5 Numerical Experiments
We run numerical experiments on a single-resource problem where L“2,T“20000 (each
stationary piece has 10000 rounds), K“t1,2u,B“9360 and we set α“efor our algorithms.
The rewards and resource consumption in all rounds are uniformly distributed within a r´0.2,`0.2s
range from their mean values. We compare the performance of IRES-CM with Immorlica et al.
(2019)’s algorithm and Zhou et al. (2008)’s algorithm. Recall that Immorlica et al. (2019) focus on
an adversarial Bwk problem and achieves a CR w.r.t. a static benchmark. Zhou et al. (2008) study a
full-feedback adversarial setting and achieves a CR w.r.t. a single best arm benchmark. In Figure 1,
each curve represents the average cumulative reward over 10simulations, and the shaded area around
each curve marks the variance over the simulations. We provide Zhou et al. (2008)’s algorithm with
extra information of prt, ctqbefore making decisions in each round, and compare the performance of
algorithms with the linear program benchmark FA (dotted curves in Figure 1).
(a) FA optimal solution: single arm
 (b) FA optimal solution: mixed arms
Figure 1: Performance comparison of algorithms for piecewise-stationary Bwk
In Figure 1(a), we set rp1qp1q“rp1qp2q“0.5, cp1qp1q“cp1qp2q“1for stationary piece 1; and
setrp2qp1q “1, rp2qp2q “0.5, cp2qp1q “0.5, cp2qp2q “1for stationary piece 2. In Figure 1(b),
we switch the values of rp2qp1qandrp2qp2q. i.e., setting rp2qp1q“0.5, rp2qp2q“1. Observe that
IRES-CM outperforms Immorlica et al. (2019)’s algorithm in both cases. This is mainly because
Immorlica et al. (2019)’s algorithm is designed for a more general adversarial Bwk setting. In contrast,
we utilize the extra information that ηmin“0.5. Therefore, Immorlica et al. (2019)’s algorithm is
significantly more conservative than IRES-CM in reserving inventories for future customers. Zhou
et al. (2008)’s algorithm outperforms IRES-CM in Figure 1(a), but performs worse than IRES-CM in
Figure 1(b). This is because that in Figure 1(a), the optimal solution of the benchmark FA chooses a
single arm on each stationary piece, which aligns with Zhou et al. (2008)’s single best arm benchmark.
Zhou et al. (2008)’s algorithm performs well with the extra information of prt, ctqbefore making
decisions. In Figure 1(b), the optimal solution of the benchmark FA chooses mixed arms on the
second stationary piece, where x˚
2p1q“0.128, x˚
2p2q“0.872. The numerical results are consistent
with the theoretical results that Zhou et al. (2008) achieve sub-optimal rewards compared with a best
distribution over arms benchmark, while our IRES-CM performs well. Finally, our experiments are
run on a Surface Pro 7 with an i5-1035G4 processor. All results can be produced within 30 minutes.
10Acknowledgement
We would like to acknowledge the support from the Singapore Ministry of Education AcRF Tier 2
Grant (Grant number: T2EP20121-0035).
References
Agrawal, S., Avadhanula, V ., Goyal, V ., and Zeevi, A. (2019). Mnl-bandit: A dynamic learning
approach to assortment selection. Operations Research , 67(5):1453–1485.
Agrawal, S. and Devanur, N. (2016). Linear contextual bandits with knapsacks. Advances in Neural
Information Processing Systems , 29.
Agrawal, S. and Devanur, N. R. (2014). Bandits with concave rewards and convex knapsacks. In
Proceedings of the fifteenth ACM conference on Economics and computation , pages 989–1006.
Babaioff, M., Dughmi, S., Kleinberg, R., and Slivkins, A. (2015). Dynamic pricing with limited
supply.
Badanidiyuru, A., Kleinberg, R., and Slivkins, A. (2018). Bandits with knapsacks. Journal of the
ACM (JACM) , 65(3):1–55.
Badanidiyuru, A., Langford, J., and Slivkins, A. (2014). Resourceful contextual bandits. In Confer-
ence on Learning Theory , pages 1109–1134. PMLR.
Balseiro, S. R. and Gur, Y . (2019). Learning in repeated auctions with budgets: Regret minimization
and equilibrium. Management Science , 65(9):3952–3968.
Balseiro, S. R., Lu, H., and Mirrokni, V . (2022). The best of many worlds: Dual mirror descent for
online allocation problems. Operations Research .
Castiglioni, M., Celli, A., and Kroer, C. (2022a). Online learning with knapsacks: the best of both
worlds. In International Conference on Machine Learning , pages 2767–2783. PMLR.
Castiglioni, M., Celli, A., Marchesi, A., Romano, G., and Gatti, N. (2022b). A unifying framework
for online optimization with long-term constraints. Advances in Neural Information Processing
Systems , 35:33589–33602.
Fikioris, G. and Tardos, É. (2023). Approximately stationary bandits with knapsacks. arXiv preprint
arXiv:2302.14686 .
Immorlica, N., Sankararaman, K. A., Schapire, R., and Slivkins, A. (2019). Adversarial bandits with
knapsacks. In 2019 IEEE 60th Annual Symposium on Foundations of Computer Science (FOCS) ,
pages 202–219. IEEE.
Jiang, J., Li, X., and Zhang, J. (2020). Online stochastic optimization with wasserstein based
non-stationarity. arXiv preprint arXiv:2012.06961 .
Karp, R. M., Vazirani, U. V ., and Vazirani, V . V . (1990). An optimal algorithm for on-line bipartite
matching. In Proceedings of the twenty-second annual ACM symposium on Theory of computing ,
pages 352–358.
Kesselheim, T. and Singla, S. (2020). Online learning with vector costs and bandits with knapsacks.
InConference on Learning Theory , pages 2286–2305. PMLR.
Kim, W., Iyengar, G., and Zeevi, A. (2023). Improved algorithms for multi-period multi-class
packing problems with bandit feedback. In International Conference on Machine Learning , pages
16458–16501. PMLR.
Kuszmaul, W. and Qi, Q. (2021). The multiplicative version of azuma’s inequality, with an application
to contention analysis. arXiv preprint arXiv:2102.05077 .
Liu, S., Jiang, J., and Li, X. (2022). Non-stationary bandits with knapsacks. Advances in Neural
Information Processing Systems , 35:16522–16532.
11Mehta, A., Saberi, A., Vazirani, U., and Vazirani, V . (2007). Adwords and generalized online
matching. Journal of the ACM (JACM) , 54(5):22–es.
Rangi, A., Franceschetti, M., and Tran-Thanh, L. (2018). Unifying the stochastic and the adversarial
bandits with knapsack. arXiv preprint arXiv:1811.12253 .
Sankararaman, K. A. and Slivkins, A. (2018). Combinatorial semi-bandits with knapsacks. In
International Conference on Artificial Intelligence and Statistics , pages 1760–1770. PMLR.
Sivakumar, V ., Zuo, S., and Banerjee, A. (2022). Smoothed adversarial linear contextual bandits with
knapsacks. In International Conference on Machine Learning , pages 20253–20277. PMLR.
Yao, A. C.-C. (1977). Probabilistic computations: Toward a unified measure of complexity. In
18th Annual Symposium on Foundations of Computer Science (sfcs 1977) , pages 222–227. IEEE
Computer Society.
Zhalechian, M., Keyvanshokooh, E., Shi, C., and Van Oyen, M. P. (2022). Online resource allocation
with personalized learning. Operations Research , 70(4):2138–2161.
Zhou, Y ., Chakrabarty, D., and Lukose, R. (2008). Budget constrained bidding in keyword auctions
and online knapsack problems. In Proceedings of the 17th international conference on world wide
web, pages 1243–1244.
12A Comparing our performance guarantee with existing literature
A.1 Comparing with adversarial BwKs
Immorlica et al. (2019) (achieving OpdlogpTqqcompetitive ratio) and Kesselheim and Singla (2020)
(achieving Oplogpdq¨logpTqqcompetitive ratio) study the adversarial BwKs, where the adversarial
bandit feedback prtpatq, ctpatqqis revealed in each time step after pulling arm at. Their setting
is more general than ours, since they require no boundedness assumption or piece-wise stationary
assumption on their outcomes. Note that if our ηmincan be expressed as a function of T, i.e.,
ηmin“T´βfor aβPp0,1q, our result can extend to multiple resources and achieve a competitive
ratio of OpdlogpTqq(see Appendix B.5). However, we highlight that their result do notimply our
result, due to the following two reasons.
Firstly, they consider a static benchmark, dubbed FD, which is FA with the additional constraint that
x˚
l“x˚for all lPL; while we compare our result with the dynamic benchmark FA. Specifically,
Immorlica et al. (2019) prove that no algorithm can achieve a competitive ratio smaller than T{B2
w.r.t. the dynamic benchmark. We further improve this lower bound to ΘpT{Bqin Lemma 2.3(a) by
setting L“T{B, and provide a matching lower bound of ΩplogpTqqcomparing with opt(FA) when
ηminą0. Secondly, they have more restrictive assumptions on the value ranges of Band opt(FD).
Specifically, Immorlica et al. (2019) assume opt(FD)¨B{|K|ą˜ΩpT7{4q, which is strictly stronger
than our Assumption 4.1.
Some research works consider more specific regimes, including Rangi et al. (2018); Castiglioni
et al. (2022a); Fikioris and Tardos (2023). We highlight that all these works still compare with
static benchmarks. Castiglioni et al. (2022a) focus on the regime where B“ΩpTqand achieves
a competitive ratio of T{B. Fikioris and Tardos (2023) provides a competitive ratio depending on
pmax ttrtu{minttrtu,max ttctu{minttctuq. Rangi et al. (2018) achieves a sublinear-in- Tregret in
a different setting with no round limit (sales stop when the inventory is depleted). Therefore, their
result is incomparable with ours.
Some recent papers focus on linear contextual Bwk with adversarial contextual vectors Sivakumar
et al. (2022) (achieving OpdlogpTqqcompetitive ratio) or with multiple but stationary customer
classes Kim et al. (2023) (achieving sublinear in Tregret). We highlight that contextual vectors for
each arm are observable before making decision in each round, while our model only observe bandit
feedback after an arm is chosen. Therefore their results do not generalize to our setting.
A.2 Comparing with adversarial online knapsack problems with full feedback
In our Section 3, we discuss a warm-up setting where tRtpaq, CtpaquaPKis observable upon the
arrival of the round tcustomer, which is similar with adversarial online knapsack with full feedback
(Karp et al. (1990); Mehta et al. (2007); Zhou et al. (2008)). Zhou et al. (2008) is the most closely
related to our work, where they start off from an online matching problem and extends the results to
the online knapsack problem. They define LB“mina,ttrtpaq{ctpaqu,UB“max a,ttrtpaq{ctpaqu
and achieves a competitive ratio of logpUB{LBqw.r.t. a dynamic best single arm benchmark, which
differs from our FA by setting xlpaq P t 0,1ufor each a, l. Our FA, on the other hand, is a best
distribution over arms benchmark. In fact, for stationary Bwk, Badanidiyuru et al. (2018) show (see
their Appendix A) that the best single arm benchmark is strictly weaker than best distribution over
arms , which could noticably affect the achievable CR. It is evident that in the picewise-stationary
setting, this is also the case.
Additionally, this line of works crucially require knowing tpRtpaq, CtpaqquaPKbefore making
decisions. By contrast, we take a different approach in algorithm design in Section 3 allows a natural
generalization from full to bandit feedback shown in Section 4.
A.3 Comparing with non-stationary bandit/full-feedback online optimization with knapsacks
In Balseiro et al. (2022); Jiang et al. (2020); Liu et al. (2022), they measure the non-stationarity of a
time-varying knapsack model with a quantity called the global variation
glo“Tÿ
t“1dist˜Tÿ
t“1prt, ctq{T,prt, ctq¸
.
13While dist can be any metric, to give a more concrete idea, we highlight an example form Liu et al.
(2022) being
distppr, cq,pr1, c1qq“max
aPKt|r1paq´rpaq|u` max
aPKt|c1paq´cpaq|u.
They all have boundedness assumption on glo. In our setting ( glounbounded), their algorithms incur
a linear-in- Tregret even when L“1, and no non-trivial competitive ratio is established in their work.
To see the case of L“1butglo“ΘpTq, consider the case of K“t1u, and we have
pr1p1q, c1p1qq“. . .“prT{2p1q, cT{2p1qq“p 1,0.5q,
but
prT{2`1p1q, cT{2`1p1qq“. . .“prTp1q, cTp1qq“p 0.5,1q.
In this case, we can verify that
dist˜Tÿ
t“1prt, ctq{T,pr1, c1q¸
“dist˜Tÿ
t“1prt, ctq{T,prT{2`1, cT{2`1q¸
“0.5,
so we have glo“0.5Tdespite L“1.
B Auxiliary results
B.1 Notation
For functions fpxq:Rě0ÑRě0andgpxq:Rě0ÑRě0, we say fpxqisOpgpxqq(resp. Ωpgpxqq) if
there exist positive constants Candn, such that for all xěn,fpxqďC¨gpxq(resp. fpxqěC¨gpxq).
We use ˜Opgpxqq(resp. ˜Ωpgpxqq) to hide logarithmic terms in xother than gpxq.
B.2 Concentration inequalities
Lemma B.1 (Multiplicative Azuma-Hoeffding Inequality (Kuszmaul and Qi (2021))) .X1, . . . , X nP
r0, csare real-valued random variables, and tFnun
i“0is a filtration. Let µ“řn
i“1aiwhere aiare
real-valued constants.
(i) Suppose ErXi|Fi´1sďaiholds for all iPt1, . . . , nualmost surely. Then for any δPp0,1q,
Pr«nÿ
i“1Xiď˜
1`d
3c
µlogˆ1
δ˙¸
µff
ě1´δ.
(ii) Suppose ErXi|Fi´1sěaiholds for all iPt1, . . . , nualmost surely. Then for any δPp0,1q,
Pr«nÿ
i“1Xiě˜
1´d
2c
µlogˆ1
δ˙¸
µff
ě1´δ.
Lemma B.2 (Lemma 2.1, Badanidiyuru et al. (2018)) .LetX1, . . . , X NPr0,1sbe random variables.
LetX“řN
i“1Xibe the sample average, and let µ“řN
i“1ErXi|X1, . . . , X Ns. Then, for any
δPp0,1q,
Pr´
|X´µ|ďa
2Xlogp1{δq`4 logp1{δq¯
ě1´3δ.
B.3 Main claim on reward-consumption ratio
Recall that xpqq˚
lis an optimal solution to LPprplq, cplq, ηmin¨αqqq, and x˚
lis an optimal solution
ofLPprplq, cplq, B˚
l{ptl´tl´1qqwhich is an optimal solution of our benchmark. In the following
Claim 3, we show that the round-robin technique in IRES ensures that, on each stationary piece l,
xpqq˚
lfor at least one qPt0, . . . , Muis close to x˚
lin terms of both the resource consumption and
the reward-consumption ratio. This leads to the important result that for all tPttl´1`1, . . . , t lu,
mtPtm˚
l´1, m˚
lu.
14Claim 3. On stationary piece lPL, there exists q˚
lPt0,1, . . . , Muthat satisfies both
#
ηmin¨αq˚
l´1ăř
aPKcplqpaqx˚
lpaqďř
aPKcplqpaqxpq˚
lq˚
lpaqďηmin¨αq˚
lq˚
lą0
0ăř
aPKcplqpaqx˚
lpaqďř
aPKcplqpaqxpq˚
lq˚
lpaqďηmin¨αq˚
l q˚
l“0,(7)
and
ř
aPKrplqpaqxpq˚
lq˚
lpaq
ř
aPKcplqpaqxpq˚
lq˚
lpaqďř
aPKrplqpaqx˚
lpaqř
aPKcplqpaqx˚
lpaqďα¨ř
aPKrplqpaqxpq˚
lq˚
lpaq
ř
aPKcplqpaqxpq˚
lq˚
lpaq. (8)
Proof of Claim 3. The existence of q˚
lsatisfying (7) is evident, since ηmin¨α0“ηminandηmin¨
αM“ηmax. To show that q˚
lalso satisfy (8), we define
dplq“ř
aPKcplqpaqxpq˚
lq˚
lpaqř
aPKcplqpaqx˚
lpaq, (9)
and claim that
ÿ
aPKrplqpaqx˚
lpaqďÿ
aPKrplqpaqxpq˚
lq˚
lpaqďdplqÿ
aPKrplqpaqx˚
lpaq. (10)
The first inequality in (10) holds since B˚
l{ptl´tl´1q“ř
aPKcplqpaqx˚
lpaqďηmin¨αq˚
l. Therefore,
the resource constraint in LPprplq, cplq, B˚
l{ptl´tl´1qqis tighter than LPprplq, cplq, ηmin¨αq˚
lq.
We prove the second inequality in (10) by contradiction. Supposeř
aPKrplqpaqxpq˚
lq˚
lpaq ą
dplqř
aPKrplqpaqx˚
lpaq. Then we set xl“xpq˚
lq˚
l{dplqand have
ÿ
aPKcplqpaqxlpaq“1
dplqÿ
aPKcplqpaqxpq˚
lq˚
l“ÿ
aPKcplqpaqx˚
lpaq“B˚
l{ptl´tl´1q.
In this case, xlis a feasible solution to LP prplq, cplq, B˚
l{ptl´tl´1qqand we have
ÿ
aPKrplqpaqxlpaq“1
dplqÿ
aPKrplqpaqxpq˚
lq˚
ląÿ
aPKrplqpaqx˚
lpaq,
contradicting the fact that x˚
lis an optimal solution of LPprplq, cplq, B˚
l{ptl´tl´1qq. Therefore,
combining (9) and (10), we establish
ř
aPKrplqpaqxpq˚
lq˚
lpaq
ř
aPKcplqpaqxpq˚
lq˚
lpaqďř
aPKrplqpaqx˚
lpaqř
aPKcplqpaqx˚
lpaqďdplq¨ř
aPKrplqpaqxpq˚
lq˚
lpaq
ř
aPKcplqpaqxpq˚
lq˚
lpaq.
To establish (8), it suffices to show dplqďα. By (7) and (9), it is evident that dplqďαwhen
q˚
lą0. Ifq˚
l“0, then constraintsř
aPKx˚
lpaqď1andř
aPKxpq˚
lq˚
lpaqď1are not tight in both
LPprplq, cplq, B˚
l{ptl´tl´1qqandLPprplq, cplq, ηminq. In this case, both LPs are knapsack problems
and have closed-form solutions of
x˚
lpaq“#B˚
l
ptl´tl´1qcplqpaqa“arg max aPK!
rplqpaq
cplqpaq)
0 otherwise, xpq˚
lq˚
lpaq“#
ηmin
cplqpaqa“arg max aPK!
rplqpaq
cplqpaq)
0 otherwise.
Therefore, we have
ř
aPKrplqpaqxpq˚
lq˚
lpaq
ř
aPKcplqpaqxpq˚
lq˚
lpaq“ř
aPKrplqpaqx˚
lpaqř
aPKcplqpaqx˚
lpaq,
which shows that dplq“1ăαwhen q˚
l“0.
15B.4 Decomposing ratio of REW to opt(FA) in deterministic setting
Recall
˜Tpmq“#
τpmqpnq:nÿ
s“1ÿ
aPKcτpmqpsqpaqxτpmqpsqpaqďB
2M+
andJl“ttl´1`1, . . . , t lu. Then for the reward achieved by IRES, we have
REW“ÿ
tPTÿ
aPKrtpaqxtpaq
“ÿ
lPLÿ
tPTŞJlÿ
aPKrtpaqxtpaq
ěÿ
lPLÿ
tPpŤM´1
n“´M˜TpnqqŞJlÿ
aPKrtpaqxtpaq
ěM´1ÿ
m“´Mÿ
lPL1pm˚
l“mqÿ
tPpŤM´1
n“´M˜TpnqqŞJlÿ
aPKrtpaqxtpaq
“M´1ÿ
m“´MREWpmq
ě1
3M´1ÿ
m“´Mmintm`1,M´1uÿ
w“maxtm´1,´Muÿ
lPL1pm˚
l“wqÿ
tPpŤM´1
n“´M˜TpnqqŞJlÿ
aPKrtpaqxtpaq. (11)
Inequality (11) holds since by summing over wPtmaxtm´1,´Mu, m,mintm`1, M´1uufor
eachmPt´M, . . . , M´1u, we repeat the sum for at most 3times.
For the reward achieved by FA, we have
opt(FA)“ÿ
lPLř
aPKrplqpaqx˚
lpaqř
aPKcplqpaqx˚
lpaq¨B˚
l (12)
“M´1ÿ
m“´Mÿ
lPL1pm˚
l“mq¨ř
aPKrplqpaqx˚
lpaqř
aPKcplqpaqx˚
lpaq¨B˚
l
“M´1ÿ
m“´Mopt(FA)pmq.
Inequality (12) follows from (2).
Therefore, the ratio of the reward achieved by IRES to opt(FA) can be decomposed as:
ř
tPTř
aPKrtpaqxtpaq
opt(FA)
ěřM´1
m“´MREWpmq
řM´1
m“´Mopt(FA)pmq
ě1
3řM´1
m“´Mřmintm`1,M´1u
w“m´1ř
lPL1pm˚
l“wqř
tPpŤM´1
n“´M˜TpnqqŞJlř
aPKrtpaqxtpaq
řM´1
m“´Mř
lPL1pm˚
l“mq¨ř
aPKrplqpaqx˚
lpaqř
aPKcplqpaqx˚
lpaq¨B˚
l.(13)
Then, to prove Theorem 3.1, it suffices to show
řM´1
m“´MREWpmq
řM´1
m“´Mopt(FA)pmqěp13qě1´p2M`1q{B
6α2M. (14)
16To prove (14), we focus on showing in Claims 1 and 2.
REWpmq
opt(FA)pmqě1
3¨řmintm`1,M´1u
w“m´1ř
lPL1pm˚
l“wqř
tPŤM´1
m“´M˜TpmqŞJlř
aPKrtpaqxtpaq
ř
lPL1pm˚
l“mq¨ř
aPKrplqpaqx˚
lpaqř
aPKcplqpaqx˚
lpaq¨B˚
l
ě1´p2M`1q{B
6α2M
for each mPt´M, . . . , M´1u.
B.5 Extending results to multiple resources
Our results can be readily extend to the multiple-resource case, with |I| “dresources indexed
byiPI. An upper bound for a multi-resource allocation problem (corresponding to FA in the
single-resource setting) can be formulated as:
FAMUL:“maxLÿ
l“1ptl´tl´1qÿ
aPKrplqpaqxlpaq
s.t.Lÿ
l“1ptl´tl´1qÿ
aPKcplq
ipaqxlpaqďB@iPI
ÿ
aPKxlpaqď1 @l“1, . . . , L
xlpaqě0 @aPK, l“1, . . . , L.
which is evidently upper bounded by the following LP:
FAMUL-U:“maxLÿ
l“1ptl´tl´1qÿ
aPKrplqpaqxlpaq
s.t.Lÿ
l“1ptl´tl´1qÿ
aPK˜ÿ
iPIcplq
ipaq¸
xlpaqď|I|B
ÿ
aPKxlpaqď1 @l“1, . . . , L
xlpaqě0 @aPK, l“1, . . . , L.
It is evident that the LP below achieves a reward of at least 1{dfraction of opt(FAMUL-Uq.
FAMUL-F:“maxLÿ
l“1ptl´tl´1qÿ
aPKrplqpaqxlpaq
s.t.Lÿ
l“1ptl´tl´1qÿ
aPK˜ÿ
iPIcplq
ipaq¸
xlpaqďB
ÿ
aPKxlpaqď1 @l“1, . . . , L
xlpaqě0 @aPK, l“1, . . . , L.
Therefore, FAMULis transformed into a single-resource allocation problem FAMUL-F, with an extra
multiplicative factor din the competitive ratio.
B.6 Core lemma on reward-consumption ratio in general setting
Recall that set TS
tpaq“tτPtt´st, . . . , t´1u:aτ“auwhere st“arg max střt´1
τ“t´s1paτ“
aq “ Nuconsists of the most recent Nrounds where arm ais sampled by exploration; and
σtpaq“mints:sPTS
tpaquis the 1-st element in TS
tpaq. Recall that
ˆctpaq“ř
sPTS
tpaqCspaq
N,ˆrtpaq“ř
sPTS
tpaqRspaq
N
17are the average resource consumption and the reward earned for the most recent Npulls of arm a.
Additionally, recall that we define ˆxpqq
t“tˆxpqq
tpaquaPKas a solution to LPpˆrt,ˆct, ηmin¨αqq(ˆxpqq˚
t
being the optimal solution) for q“0,1, . . . , M´1.
We further define
¯ctpaq“ř
sPTS
tpaqcspaq
N,¯rtpaq“ř
sPTS
tpaqrspaq
N
as the average mean resource consumption and the reward earned for the most recent Npulls of arm
a. Note that when condition (6)
tprspaq, cspaqquaPK“tprσtpaqpaq, cσtpaqpaqquaPK,@sPtσt, . . . , tu
is satisfied for all aPK, then rounds sPtσt, . . . , tuare on the same stationary piece and we have
¯ctpaq“ctpaq,¯rtpaq“rtpaq. We let ¯xpqq
t“t¯xpqq
tpaquaPKbe a solution to LPprt, ct, ηmin¨αqq
(¯xpqq˚
tbeing the optimal solution) for q“0,1, . . . , M´1. By Claim 3, we know that there exists
q˚
lPt0,1, . . . , Musuch that for all tPJl,
#
ηmin¨αq˚
l´1ăř
aPKcplqpaqx˚
lpaqďř
aPKctpaq¯xpq˚
lq˚
tpaqďηmin¨αq˚
lq˚
lą0
0ăř
aPKcplqpaqx˚
lpaqďř
aPKctpaq¯xpq˚
lq˚
tpaqďηmin¨αq˚
l q˚
l“0. (15)
We show in the following Lemma B.3 that when condition (6) is satisfied for all aPK, our decisions
have several nice properties which facilitate our proofs.
Lemma B.3. Fix an arbitrary αPp0,1s. For any těσtpaq, if
tprspaq, cspaqquaPK“tprσtpaqpaq, cσtpaqpaqquaPK,@sPtσt, . . . , tu,
then with probability at least 1´2|K|δ, then all the following inequalities are satisfied for all tPJl:
1?α¨ř
aPKˆrtpaqˆxpq˚
lq˚
tpaq
ř
aPKˆctpaqˆxpq˚
lq˚
tpaqďř
aPKrtpaqˆxpq˚
lq˚
tpaq
ř
aPKctpaqˆxpq˚
lq˚
tpaqď?α¨ř
aPKˆrtpaqˆxpq˚
lq˚
tpaq
ř
aPKˆctpaqˆxpq˚
lq˚
tpaq, (16)
1
α?α¨ÿ
aPKrtpaqˆxpq˚
lq˚
tpaqďÿ
aPKrplqpaqx˚
lpaqďα¨ÿ
aPKrtpaqˆxpq˚
lq˚
tpaq, (17)
1
α?α¨ř
aPKˆrtpaqˆxpq˚
lq˚
tpaq
ř
aPKˆctpaqˆxpq˚
lq˚
tpaqďř
aPKrplqpaqx˚
lpaqř
aPKcplqpaqx˚
lpaqďα?α¨ř
aPKˆrtpaqˆxpq˚
lq˚
tpaq
ř
aPKˆctpaqˆxpq˚
lq˚
tpaqifq˚
l“0
(18)
Proof of Lemma B.3. We define
ϵ“d
3
N¨ηminlogˆ2
δ˙
ěmax#d
3
N¨ηmaxlogˆ2
δ˙
,d
2
N¨ηminlogˆ2
δ˙+
.
Then by the multiplicative Azuma-Hoeffding inequality (Lemma B.1), for any aPKwe have
Prrp1´ϵqctpaqďˆctpaqďp1`ϵqctpaqsě1´δ (19)
Prrp1´ϵqrtpaqďˆrtpaqďp1`ϵqrtpaqsě1´δ. (20)
The above probability bounds (19) and (20) hold since
N¨ηminďÿ
sPTS
tpaqctpaq,ÿ
sPTS
tpaqrtpaqďN¨ηmax.
We setp1´3ϵq2“1{α, and therefore
N“27 logp2{δq
p1´1{?αq2¨ηmin.
Our following discussion is conditioned on the good event that both (19) and (20) hold for all aPK.
This good event holds with probability 1´2|K|δ.
18Validating (16). Given that (19) and (20) hold, we have
1´ϵ
1`ϵ¨ř
aPKˆrtpaqˆxpq˚
lq˚
tpaq
ř
aPKˆctpaqˆxpq˚
lq˚
tpaqďř
aPKrtpaqˆxpq˚
lq˚
tpaq
ř
aPKctpaqˆxpq˚
lq˚
tpaqď1`ϵ
1´ϵ¨ř
aPKˆrtpaqˆxpq˚
lq˚
tpaq
ř
aPKˆctpaqˆxpq˚
lq˚
tpaq
ñp1´2ϵq¨ř
aPKˆrtpaqˆxpq˚
lq˚
tpaq
ř
aPKˆctpaqˆxpq˚
lq˚
tpaqďř
aPKrtpaqˆxpq˚
lq˚
tpaq
ř
aPKctpaqˆxpq˚
lq˚
tpaqď1
1´2ϵ¨ř
aPKˆrtpaqˆxpq˚
lq˚
tpaq
ř
aPKˆctpaqˆxpq˚
lq˚
tpaq.
(21)
Since 1´2ϵě1´3ϵ“1{α, (21) indicates (16).
Validating (17). It is evident that by letting ˆxpq˚
lq
tpaq“¯xpq˚
lq˚
tpaq{p1`ϵq, we have
ÿ
aPKˆctpaqˆxpq˚
lq
tpaq“ÿ
aPKˆctpaq¨¯xpq˚
lq˚
tpaq
1`ϵ
ďÿ
aPKp1`ϵqctpaq¨¯xpq˚
lq˚
tpaq
1`ϵ(22)
“ÿ
aPKctpaq¯xpq˚
lq˚
tpaq
ďηmin¨αq.
Inequality (22) follows from inequalities (19). Since ˆxpq˚
lq
tpaq“¯xpq˚
lq˚
tpaq{p1`ϵqis a feasible
solution to LPpˆrt,ˆct, ηmin¨αq˚
lq, we have
ÿ
aPKrtpaqˆxpq˚
lq˚
tpaqěÿ
aPKˆrtpaq¨ˆxpq˚
lq˚
tpaq
1`ϵ
ěÿ
aPKˆrtpaq¨¯xpq˚
lq˚
tpaq
p1`ϵq2
ěp1´2ϵqÿ
aPKˆrtpaq¯xpq˚
lq˚
tpaq
ěp1´3ϵqÿ
aPKrtpaq¯xpq˚
lq˚
tpaq. (23)
Similarly, by letting ¯xpq˚
lq
tpaq“p1´ϵqˆxpq˚
lq˚
tpaq, we have
ÿ
aPKctpaq¯xpq˚
lq
tpaq“ÿ
aPKctpaq¨p1´ϵqˆxpq˚
lq˚
tpaq
ďÿ
aPKˆctpaq
1´ϵ¨p1´ϵqˆxpq˚
lq˚
tpaq
“ÿ
aPKˆctpaqˆxpq˚
lq˚
tpaq
ďηmin¨αq.
Since ¯xpq˚
lq
tpaq“p1´ϵqˆxpq˚
lq˚
tpaqis a feasible solution to LP prt, ct, ηmin¨αq˚
lq, we have
ÿ
aPKˆrtpaqˆxpq˚
lq˚
tpaqďp1`ϵq¨ÿ
aPKrtpaqˆxpq˚
lq˚
tpaqďÿ
aPKrtpaq¨¯xpq˚
lq˚
tpaq
1´ϵď1
1´2ϵÿ
aPKrtpaq¯xpq˚
lq˚
tpaq.
(24)
Sincep1´3ϵq2“1{α, putting (23) and (24) together, we have
1?α¨ÿ
aPKrtpaq¯xpq˚
lq˚
tpaqďÿ
aPKrtpaqˆxpq˚
lq˚
tpaqď?α¨ÿ
aPKrtpaq¯xpq˚
lq˚
tpaq. (25)
19By (10) in Claim 3, we have
1
α¨ÿ
aPKrtpaq¯xpq˚
lq˚
tpaqďÿ
aPKrplqpaqx˚
lpaqďÿ
aPKrtpaq¯xpq˚
lq˚
tpaq. (26)
Given (25) and (26), we prove (17).
Validating (18). ForlPLsuch that q˚
l“0, we haveř
aPKctpaq¯xpq˚
lq˚
tpaq“ηmin. Given (19), for
alltPJl,
1?α¨ÿ
aPKctpaq¯xpq˚
lq˚
tpaq“1?α¨ηminďÿ
aPKˆctpaqˆxpq˚
lq˚
tpaqďηmin“ÿ
aPKctpaq¯xpq˚
lq˚
tpaq.
(27)
Putting (23) and (24) together, we have
1?α¨ÿ
aPKrtpaq¯xpq˚
lq˚
tpaqďÿ
aPKˆrtpaqˆxpq˚
lq˚
tpaqď?α¨ÿ
aPKrtpaq¯xpq˚
lq˚
tpaq. (28)
Inequality (27) and (28) gives
1
α?α¨ř
aPKˆrtpaqˆxpq˚
lq˚
tpaq
ř
aPKˆctpaqˆxpq˚
lq˚
tpaqďř
aPKrtpaq¯xpq˚
lq˚
tpaq
ř
aPKctpaq¯xpq˚
lq˚
tpaqď?α¨ř
aPKˆrtpaqˆxpq˚
lq˚
tpaq
ř
aPKˆctpaqˆxpq˚
lq˚
tpaq. (29)
Recall from (8) in Claim 3, for all tPJlwe have
ř
aPKrtpaq¯xpq˚
lq˚
tpaq
ř
aPKctpaq¯xpq˚
lq˚
tpaqďř
aPKrplqpaqx˚
lpaqř
aPKcplqpaqx˚
lpaqďα¨ř
aPKrtpaq¯xpq˚
lq˚
tpaq
ř
aPKctpaq¯xpq˚
lq˚
tpaq. (30)
Putting (27) and (30) together, we establish (18).
B.7 Bounding exploration rounds and failed exploitation rounds
To upper bound |TR
TŤpŤM
m“´M´2pTIpmqq|, it suffices to upper bound |TR
T|(forthcoming Claim 4)
and|ŤM`1
m“´M´2pTIpmq|(forthcoming Claim 5).
Claim 4. For any δPp0,1q,|TR
T|ďTNγ T`Nb
3TγTlog`2
δ˘
with probability at least 1´δ.
Proof of Claim 4. Define the event ER
t“ t Conduct exploration in round tu “ ERp1q
tŤERp2q
t,
where ERp1q
t“ tD aPKs.t.t“σtpaquandERp2q
t“ tD aPKs.t.tPTS
tpaqzσtpaqu. We
define random variables YR
t“1pER
tq,YRp1q
t“1pERp1q
tqandYRp2q
t“1pERp2q
tq. Define
event EI
t“ tConduct exploitation in round tu “ EIp1q
tŤEIp2q
t, where EIp1q
t“ tqt“0uand
EIp2q
t“tqtą0u. We define random variables YI
t“1pEI
tq,YIp1q
t“1pEIp1q
tqandYIp2q
t“1pEIp2q
tq.
We further define random variables Zt, where Zt“YRp1q
t„Bernpγtqfor all tsuch that YRp1q
t“1
orYIp1q
t“1andZt„Bernpγtqotherwise. It is evident that in each round t,Ztfollows a Bernoulli
distribution with mean γtandZtěYRp1q
t. Therefore, the total rounds of forced exploration over the
planning horizon can be upper bounded as
Tÿ
t“1YR
t“Tÿ
t“1YRp1q
t`YRp2q
t“N¨Tÿ
t“1YRp1q
tďN¨Tÿ
t“1Zt.
Since Ztare independent and ErřT
t“1Zts“řT
t“1γtď2TγT, we can apply the Chernoff bound
(which is a subcase of Lemma B.1) on Zt,
Pr«Tÿ
t“1Ztą2TγT`d
6TγTlogˆ2
δ˙ff
ăδ.
Hence we have |TR
T|“řT
t“1YR
tď2TNγ T`Na
6TγTlogp2{δqwith probability at least 1´δ.
20Claim 5. Fix any δPp0,1q,|pTIpmq|ďL|K|logp1{δqplogp|K|q`1q{γTwith probability at most
1´|K|Lδ.
Proof of Claim 5. If round tis a change point, i.e., prt, ctq‰prt´1, ct´1q, we define set KptqĂK
such thatprtpaq, ctpaqq‰p rt´1paq, ct´1paqqfor all aPKptq. Notice that after a change happens,
some exploitation rounds could run with condition (6) violated, resulting in consuming resources
from the wrong reward-consumption interval m. Hence,|pTIpmq|can be upper bounded by the total
number of exploitation rounds run before all arms are updated after each change point. After all arms
are updated after a change point, (6) is satisfied again. In the following Claim 6, we suppose round t
is a change point, and upper bound the number of exploitation rounds run before all arms aPKptq
are updated.
Claim 6. Suppose round tis a change point. With probability 1´|Kptq|δ, IRES-CM run at most
|K|logp1{δqplogp|Kptq|q` 1q{γTexploitation rounds (Algorithm 2, Lines 17-25) before updating
the change in exploration rounds (Algorithm 2, Lines 9-13).
Proof of Claim 6. For some set K1ĂK, let random variable YpK1qdenote the number of exploitation
samples (i.e., line 6 of Algorithm 2 giving Uptq “0) between two nearest exploration samples
(i.e., line 6 of Algorithm 2 giving Uptq “ 1) applied for arms aPK1. We denote Kptqpjqas
thej-th arm explored from set Kptq. After each exploitation sample, IRES-CM runs for each
qPt´M, . . . , M´1u. Therefore, the number of exploitation rounds run before all aPKptqare
updated is 2M¨pYpKptqq`ř|Kptq|
j“2YpKptqzŤj´1
h“1Kptqphqqq. For any subset K1PKptq, we further
denote random variable ZpK1qasYpK1qplus the number of times that exploration is triggered for
anyaPKzK1between two nearest exploration rounds applied for arms aPK1.
It is evident that ZpK1qis a geometric random variable with time-varying probability pt“γt|K1|{|K|
of success in each round. Therefore, we have PrpZpK1q ěnq “śt`n´1
s“tp1´psq. Since for
anyxPr0,1s, it holds that 1´xďe´x, by requiring e´n¨pTďδ, we haveśt`n´1
s“tp1´psqď
p1´pTqnďe´n¨pTďδ. In this case,
e´n¨pTďδô´n¨pTď´logp1{δqônělogp1{δq
pT“|K|logp1{δq
γT|K1|.
Therefore, we have
Prˆ
YpK1qě|K|logp1{δq
γT|K1|˙
ďPrˆ
ZpK1qě|K|logp1{δq
γT|K1|˙
ďδ,
which suggests that with probability at least δ, we run at most |K|logp1{δq{pγT|K1|qexploitation
rounds before updating pˆrtpaq,ˆctpaqqfor each arm aPK1.
Plugging KptqzŤj´1
h“1KptqphqinK1, with probability 1´|Kptq|δ,
YpKptqq`|Kptq|ÿ
j“2YpKptqzj´1ď
h“1Kptqphqqď|Kptq|ÿ
j“1|K|logp1{δq
γT¨j
ď|K|logp1{δq
γT|Kptq|ÿ
j“11
j
ď|K|logp1{δq
γTplogp|Kptq|q` 1q. (31)
Inequality (31) holds since
|Kptq|ÿ
j“11
jď1`ż|Kptq|
j“11
jď1`logp|Kptq|q´ logp1q. (32)
Notice that there are at most Lchange points over the entire planning horizon, contributing to pTIpmq
for at most 2ML|K|logp1{δqplogp|K|q`1q{γTrounds, with probability at most 1´|K|Lδ.
21Combining Claim 4 and 5, with probability at least 1´2M|K|Lδ,
ˇˇˇˇˇTR
Tď˜M´1ď
m“´MpTIpmq¸ˇˇˇˇˇď2TNγ T`Nd
6TγTlogˆ2
δ˙
`4M2L|K|logp1{δqplogp|K|q`1q
γT
ď4TNγ T`4M2L|K|logp1{δqplogp|K|q`1q
γT.
Recall that N“27 logp2{δq{pp1´1{αq2¨ηminqandγt“Ma
|K|logp1{δqplogp|K|q`1q{?
Nt,
we further haveˇˇˇˇˇTR
Tď˜M´1ď
m“´MpTIpmq¸ˇˇˇˇˇď8MLa
|K|NTlogp1{δqplogp|K|q`1q“˜OpLa
|K|NTq.(33)
Note that if the DM knows La priori, then we can set γt“Ma
L|K|logp1{δqplogp|K|q`1q{?
Nt,
which results in |TR
TŤpŤM´1
m“´MpTIpmqq|ď ˜Opa
L|K|NTq.
C Proofs
C.1 Proof of Lemma 2.1
Letπbe a non-anticipatory feasible policy that achieves the expected optimum opt(DP) in DP, i.e.
ErřT
t“1ř
aPKRtpaqXπ
tpaqs“Eropt(DP)swhere Xπ
tis the decision variable under algorithm π.
We let
xlpaq“1
tl´tl´1E«tlÿ
t“tl´1`1ÿ
aPKXπ
tpaqff
for each l“1, . . . , L in FA. We claim that txluL
l“1is feasible to FA, with objective value equal to
ErřT
t“1ř
aPKRtpaqXπ
tpaqs“Eropt(DP)s, which indicates that under tx˚
luL
l“1we have opt(FA)ě
Eropt(DP)s. Thus, verifying the claims about the feasibility and the objective value proves the claim.
We first verify the feasibility to FA. Since the policy πsatisfies the resource constraints, the inequalityřT
t“1ř
aPKCtpaqXπ
tpaq ďBholds. Taking expectation over Xπ
tpaqandCtpaqfort“tl´1`
1, . . . , t lgives
E«Tÿ
t“1ÿ
aPKCtpaqXπ
tpaqff
“Lÿ
l“1tlÿ
t“tl´1`1ÿ
aPKcplqpaqErXπ
tpaqs
“Lÿ
l“1ptl´tl´1qÿ
aPKcplqpaqxlpaq
ďB.
Similarly, by taking expectation over each of the reward constraints, we have
ErřT
t“1ř
aPKRtpaqXπ
tpaqs “řL
l“1ptl´tl´1qř
aPKrplqpaqxlpaq “ Eropt(DP)s. Hence,
the claim about the objective value is shown, and the Lemma is proved. ˝
C.2 Proof of Claim 1
Recall that in Algorithm 1, we try each qPt0,1, . . . , Muin a round-robin manner. Then we know
that on each stationary piece l, for at leastptl´tl´1q{M´1rounds, we choose q“q˚
land take
fractional decision xpq˚
lq˚
lsuch that (7) and (8) hold. By Claim 3 inequality (8), resources consumed
under decision xpq˚
lq˚
lare assigned with resources reserved for intervals tmaxtm˚
l´1,´Mu, m˚
lu.
Therefore, for interval mwhere m˚
l“m,
ÿ
tPŤm
n“maxtm´1,´Mu˜TpnqŞttl´1`1,...,tlu1pqt“q˚
lqětl´tl´1
M`1´1. (34)
22Recall that if we choose the optimal decision x˚
lon stationary piece l,B˚
lunits of resources would
be consumed, i.e. ptl´tl´1qř
aPKcplqpaqx˚
lpaq“B˚
l. Hence by Claim 3 inequality (7), we have
ÿ
aPKcplqpaqxpq˚
lq˚
lpaqěÿ
aPKcplqpaqx˚
lpaqěB˚
l
tl´tl´1. (35)
Putting everything together, we have
ÿ
tPŤM´1
m“´M˜TpmqŞttl´1`1,...,tluÿ
aPKrtpaqxtpaq
ěÿ
tPŤm
n“maxtm´1,´Mu˜TpnqŞttl´1`1,...,tluÿ
aPKrtpaqxtpaq
ěÿ
tPŤm
n“maxtm´1,´Mu˜TpnqŞttl´1`1,...,tlu1pqt“q˚
lqÿ
aPKrplqpaqxpq˚
lq˚
lpaq
ěÿ
tPŤm
n“maxtm´1,´Mu˜TpnqŞttl´1`1,...,tlu1pqt“q˚
lq¨ÿ
aPKcplqpaqxpq˚
lq˚
lpaq¨ř
aPKrplqpaqxpq˚
lq˚
lpaq
ř
aPKcplqpaqxpq˚
lq˚
lpaq
ěÿ
tPŤm
n“maxtm´1,´Mu˜TpnqŞttl´1`1,...,tlu1pqt“q˚
lq¨B˚
l
tl´tl´1¨ř
aPKrplqpaqx˚
lpaq
α¨ř
aPKcplqpaqx˚
lpaq(36)
ěˆtl´tl´1
M`1´1˙
¨B˚
l
αptl´tl´1q¨ř
aPKrplqpaqx˚
lpaqř
aPKcplqpaqx˚
lpaq(37)
ěB˚
l
2αpM`1q¨ř
aPKrplqpaqx˚
lpaqř
aPKcplqpaqx˚
lpaq. (38)
Inequality (36) holds by plugging in (35) and (8). Inequality (37) holds by plugging in (34). Inequality
(38) stands since we can assume tl´tl´1ě2pM`1qwithout loss of generality. Because otherwise
we can ignore the stationary pieces where tl´tl´1ď2pM`1q, causing a reward loss of at most
OpMq. Following (38), we have
mintm`1,M´1uÿ
w“maxtm´1,´Muÿ
lPL1pm˚
l“wqÿ
tPŤM´1
m“´M˜TpmqŞttl´1`1,...,tluÿ
aPKrtpaqxtpaq
ěÿ
lPL1pm˚
l“mqÿ
tPŤM´1
m“´M˜TpmqŞttl´1`1,...,tluÿ
aPKrtpaqxtpaq
ě1
2αpM`1q¨ÿ
lPL1pm˚
l“mq¨ř
aPKrplqpaqx˚
lpaqř
aPKcplqpaqx˚
lpaq¨B˚
l.
Therefore, for mPt´M, . . . , M´1usuch that ˜Tpnq“Tpnq
TfornPtmaxtm´1,´Mu, mu, we
have
řmintm`1,M´1u
w“maxtm´1,´Muř
lPL1pm˚
l“wqř
tPŤM´1
m“´M˜TpmqŞttl´1`1,...,tluř
aPKrtpaqxtpaq
ř
lPL1pm˚
l“mq¨ř
aPKrplqpaqx˚
lpaqř
aPKcplqpaqx˚
lpaq¨B˚
lě1
2αpM`1q.
(39)
˝
23C.3 Proof of Claim 2
We let ˜m“minntnPtmaxtm´1,´Mu, mu,˜TpnqĹTpnq
Tu. Then we have
ÿ
tP˜Tp˜mqÿ
aPKrtpaqxtpaq“ÿ
tP˜Tp˜mqř
aPKrtpaqxtpaqř
aPKctpaqxtpaq¨ÿ
aPKctpaqxtpaq
ěα˜mÿ
tP˜Tp˜mqÿ
aPKctpaqxtpaq (40)
ěα˜m¨ˆB´1
2M´1˙
. (41)
Inequality (40) stands since in rounds tP˜Tp˜mq, we haveř
aPKrtpaqxtpaq{ř
aPKctpaqxtpaq P
rα˜m, α˜m`1s. Inequality (41) holds sinceř
tP˜Tp˜mqř
aPKctpaqxtpaqěpB´T¨ηminq{p2Mq´1“
pB´1q{p2Mq´1by the definition of ˜Tp˜mq. Then we have
mintm`1,M´1uÿ
w“tmaxtm´1,´Muÿ
lPL1pm˚
l“wqÿ
tPŤM´1
m“´M˜TpmqŞttl´1`1,...,tluÿ
aPKrtpaqxtpaq
ěmintm`1,M´1uÿ
w“tmaxtm´1,´Muÿ
lPL1pm˚
l“wqÿ
tP˜Tp˜mqŞttl´1`1,...,tluÿ
aPKrtpaqxtpaq
ěÿ
tP˜Tp˜mqÿ
aPKrtpaqxtpaq (42)
ěα˜m¨ˆB´1
2M´1˙
.
Inequality (42) holds since mtPttmaxtm˚
l´1,´Mu, m˚
lufor all tPttl´1`1, . . . , t lu. Therefore,
it is possible to consume resources reserved for interval ˜mPtmaxtm´1,´Mu, muunder xpq˚
lq˚
lonly when
m˚
lPtmaxtm´1,´Mu, m´1`1uď
tm,mintm`1, M´1uu“t maxtm´1,´Mu, m,mintm`1, M´1uu.
We also have
ÿ
lPL1pm˚
l“mq¨ř
aPKrplqpaqx˚
lpaqř
aPKcplqpaqx˚
lpaq¨B˚
lďαm`1¨Lÿ
lPLB˚
lďαm`1B. (43)
Putting together (42) and (43), we know that for mPt´M, . . . , M´1usatisfying case (ii), we have
řmintm`1,M´1u
w“maxtm´1,´Muř
lPL1pm˚
l“wqř
tP˜Tp˜mqŞttl´1`1,...,tluř
aPKrtpaqxtpaq
ř
lPL1pm˚
l“mq¨ř
aPKrplqpaqx˚
lpaqř
aPKcplqpaqx˚
lpaq¨B˚
l
ěα˜m¨ppB´1q{p2Mq´1q
αm`1B
ě1´2M`1
B
2α2M
ě1´op1q
2α2M. (44)
Inequality (44) holds since we require BěΩpMq(see Theorem 3.1). Combining (39) and (44), we
show that
p14qě1´op1q
6α2M. (45)
24C.4 Proof of Theorem 4.2
Note that for reward-consumption ratio intervals nPt´M, . . . , M´1uwhere ˜TIpnq“qTIpnq, not
all requests assigned to these intervals are necessarily satisfied. This is because resources could run
out due to exploration beforeř
sPqTIpnqCspasqąB{p2Mq´1, i.e., when
˜TIpnqč#
tPT:tÿ
s“1CspasqďB´1+
Ĺ˜TIpnqč
T.
It can be seen that requests in rounds pŤM´1
n“´M˜TIpnqqŞttPT:řt
s“1Cspasq ďB´1uare
satisfied. Therefore, we decompose the ratio of the IRES-CM reward to opt(FA) as follows:
ř
tPTRtpatq
opt(FA)“ř
tPpŤM´1
n“´M˜TIpnqqŞttPT:řt
s“1CspasqďB´1uř
aPKrtpaqˆxpqtq˚
tpaq
opt(FA)loooooooooooooooooooooooooooooooooooooooomoooooooooooooooooooooooooooooooooooooooon
H(1)
¨ř
tPTRtpatq
ř
tPpŤM´1
n“´M˜TIpnqqŞttPT:řt
s“1CspasqďB´1uř
aPKrtpaqˆxpqtq˚
tpaqloooooooooooooooooooooooooooooooooooooooomoooooooooooooooooooooooooooooooooooooooon
H(2).
To establish Theorem 4.2, it suffices to show H(1)ě p 1´op1qq ¨ p opt(FA)´
˜Opa
L|K|NTqq{p10α4M¨opt(FA)q(see the forthcoming Section C.4.1) and H(2)ě1´op1q
(see the forthcoming Section C.4.2).
C.4.1 Bounding H(1)
Recall thatř
aPKˆrtpaqˆxpqtq˚
tpaq{ř
aPKˆctpaqˆxpqtq˚
tpaq P rαˆmt, αˆmt`1s. We further define ˆmplq˚
t
such thatř
aPKˆrtpaqˆxpq˚
lq˚
tpaq{ř
aPKˆctpaqˆxpq˚
lq˚
tpaqPrαˆmplq˚
t, αˆmplq˚
t`1s. Likewise, we define
mplq˚
tsuch thatř
aPKrtpaqˆxpq˚
lq˚
tpaq{ř
aPKctpaqˆxpq˚
lq˚
tpaqPrαmplq˚
t, αmplq˚
t`1s. We define
˜Jl“Jlč#
tPT:tÿ
s“1CspasqďB´1+
.
Then H(1) can be further decomposed as:
H(1)“ř
tPpŤM´1
n“´M˜TIpnqqŞttPT:řt
s“1CspasqďB´1uř
aPKrtpaqˆxpqtq˚
tpaq
opt(FA)
“ř
lPLř
tPpŤM´1
n“´M˜TIpnqqŞ˜Jlř
aPKrtpaqˆxpqtq˚
tpaq
ř
lPLř
tPJlř
aPKrplqpaqx˚
lpaq
“řM´1
m“´Mř
lPLř
tPpŤM´1
n“´M˜TIpnqqŞ˜Jl1pmplq˚
t“mq¨ř
aPKrtpaqˆxpqtq˚
tpaq
řM´1
m“´Mř
lPLř
tPJl1pmplq˚
t“mq¨ř
aPKrplqpaqx˚
lpaq(46)
ě1
5¨řM´1
m“´Mř
lPLř
tPpŤM´1
n“´M˜TIpnqqŞ˜Jlřmintm`2,M´1u
w“maxtm´2,´Mu1pmplq˚
t“wq¨ř
aPKrtpaqˆxpqtq˚
tpaq
řM´1
m“´Mř
lPLř
tPJl1pmplq˚
t“mq¨ř
aPKrplqpaqx˚
lpaq.
(47)
Inequality (47) holds since by summing over wPtmaxtm´2,´Mu, . . . , mintm`2, M´1uu,
we repeat the numerator of (46) for at most 5times.
We partition set t´M, . . . , M´1uinto two disjoint sets M1,M2. An interval mPM1if for all
nPtmaxtm´1,´Mu, m,mintm`1, M´1uu, we have ˜TIpnq“qTIpnq, i.e.ř
sPqTIpnqCspasqď
B{p2Mq´1. An interval mPM2if for some nPtmaxtm´1,´Mu, m,mintm`1, M´1uu,
we have ˜TIpnqĹqTIpnq.
25Regarding mPM1.In the following analysis, we focus on the good event that (16), (17), (18)
in Lemma B.3 hold for all tPT. We know that with probability at least 1´2|K|Tδ, the good
event holds. On each stationary piece lPLand all tPJl, for all rounds tPpŤM´1
n“´M˜TIpnqqŞJl
such that mplq˚
t“m, we know that ˆmplq˚
tP tmaxtm´1,´Mu, m,mintm`1, M´1uu(see
(16) in Lemma B.3). Due to the round-robin technique, at least 1{pM`1qfraction of all rounds
tP´ŤM´1
n“´M˜TIpnq¯ŞJl, lPLsuch that mplq˚
t“mare allocated by resources reserved for
intervals nPtmaxtm´1,´Mu, m,mintm`1, M´1uu. Therefore, we have
ÿ
lPLÿ
tPpŤM´1
n“´M˜TIpnqqŞJl1pmplq˚
t“mq¨1pqt“q˚
lqěÿ
lPLÿ
tP´Ťmintm`1,M´1u
n“maxtm´1,´Mu˜TIpnq¯ŞJl1pmplq˚
t“mq¨1pqt“q˚
lq
ěř
lPLř
tP´Ťmintm`1,M´1u
n“maxtm´1,´Mu˜TIpnq¯ŞJl1pmplq˚
t“mq
M`1.
(48)
We ignore the stationary pieces lwhere|Jl|ď2M, since this cause a loss of at most OpMq.
FormPM1, although we haveŤmintm`1,M´1u
n“maxtm´1,´Mu˜TIpnq“Ťmintm`1,M´1u
n“maxtm´1,´MuqTIpnq(i.e.,ř
sPqTIpnqCspasq ďB{p2Mq´1for all nP tmaxtm´1,´Mu, m,mintm`1, M´1uu), it
is not necessary that all requests assigned to intervals tmaxtm´1,´Mu, m,mintm`1, M´1uu
are satisfied. The resource units reserved for these intervals can run out due to exploration, i.e., when
mintm`1,M´1uď
n“maxtm´1,´Mu˜TIpnqč#
tPT:tÿ
s“1CspasqďB´1+
Ĺmintm`1,M´1uď
n“maxtm´1,´Mu˜TIpnqč
T.
We define
p:qpmq“ÿ
lPLÿ
tPpŤM´1
n“´M˜TIpnqqŞJlz˜Jl1pmplq˚
t“mq¨ÿ
aPKrtpaqˆxpqtq˚
tpaq.
Then we have
ÿ
lPLÿ
tPpŤM´1
n“´M˜TIpnqqŞ˜Jlmintm`2,M´1uÿ
w“maxtm´2,´Mu1pmplq˚
t“wq¨ÿ
aPKrtpaqˆxpqtq˚
tpaq
ěÿ
lPLÿ
tPpŤM´1
n“´M˜TIpnqqŞ˜Jl1pmplq˚
t“mq¨ÿ
aPKrtpaqˆxpqtq˚
tpaq
“ÿ
lPLÿ
tPpŤM´1
n“´M˜TIpnqqŞJl1pmplq˚
t“mq¨ÿ
aPKrtpaqˆxpqtq˚
tpaq´p:qpmq
ěÿ
lPLÿ
tPpŤM´1
n“´M˜TIpnqqŞJl1pmplq˚
t“mq¨ÿ
aPKrtpaqˆxpqtq˚
tpaq´p:qpmq
ěÿ
lPLÿ
tP´Ťmintm`1,M´1u
n“maxtm´1,´Mu˜TIpnq¯ŞJl1pmplq˚
t“mq¨1pqt“q˚
lq¨ÿ
aPKrtpaqˆxpq˚
lq˚
tpaq´p:qpmq
ě1
α¨ÿ
lPLÿ
tP´Ťmintm`1,M´1u
n“maxtm´1,´Mu˜TIpnq¯ŞJl1pmplq˚
t“mq¨1pqt“q˚
lq¨ÿ
aPKrplqpaqx˚
lpaq´p:qpmq
(49)
ě1
αpM`1q¨ÿ
lPLÿ
tP´Ťmintm`1,M´1u
n“maxtm´1,´Mu˜TIpnq¯ŞJl1pmplq˚
t“mq¨ÿ
aPKrplqpaqx˚
lpaq´p:qpmq.(50)
26Inequality (49) follows from (17) in Lemma B.3, and inequality (50) follows from inequality (48).
Hence, we have
ř
mPM1ř
lPLř
tPpŤM´1
n“´M˜TIpnqqŞ˜Jl1pmplq˚
t“mq¨ř
aPKrtpaqˆxpqtq˚
tpaq
ř
mPM1ř
lPLř
tPJl1pmplq˚
t“mq¨ř
aPKrplqpaqx˚
lpaq
ěmax$
’&
’%1
αpM`1q¨ř
mPM1řL
l“1ř
tP´Ťmintm`1,M´1u
n“maxtm´1,´Mu˜TIpnq¯ŞJl1pmplq˚
t“mq¨ř
aPKrplqpaqx˚
lpaq´ř
mPM1p:qpmq
ř
mPM1ř
lPLř
tPJl1pmplq˚
t“mq¨ř
aPKrplqpaqx˚
lpaq,0,
/.
/-
ěmax$
’&
’%1
αpM`1q¨ř
mPM1řL
l“1ř
tP´Ťmintm`1,M´1u
n“maxtm´1,´Mu˜TIpnq¯ŞJl1pmplq˚
t“mq¨ř
aPKrplqpaqx˚
lpaq´|TR
T|
ř
mPM1ř
lPLř
tPJl1pmplq˚
t“mq¨ř
aPKrplqpaqx˚
lpaq,0,
/.
/-
(51)
ěmax$
&
%1
αpM`1q¨ř
mPM1ř
lPLř
tPJl1pmplq˚
t“mq¨ř
aPKrplqpaqx˚
lpaq´ˇˇˇTR
TŤ´ŤM´1
m“´MpTIpmq¯ˇˇˇ
ř
mPM1ř
lPLř
tPJl1pmplq˚
t“mq¨ř
aPKrplqpaqx˚
lpaq,0,
.
-
(52)
ěmax#
1
αpM`1q´˜Opa
L|K|NTq
ř
mPM1ř
lPLř
tPJl1pmplq˚
t“mq¨ř
aPKrplqpaqx˚
lpaq,0+
w.p.1´2M|K|Lδ.
(53)
Inequality (51) holds sinceřM´1
m“´Mp:qpmqď|TR
T|. Inequality (52) is valid since
¨
˝mintm`1,M´1uď
n“maxtm´1,´Mu˜TIpnq˛
‚č
Jl“¨
˝mintm`1,M´1uď
n“maxtm´1,´MuqTIpnq˛
‚č
Jl“Jlz¨
˝mintm`1,M´1uď
n“maxtm´1,´MupTIpnq˛
‚.
Regarding mPM2.Suppose in some interval ˆnPtmaxtm´1,´Mu, . . . , mintm`1, M´1uu,
we haveř
tP˜TIpˆnqCspasqąB{p2Mq´1. We aim validate the following two inequalities respectively:
ÿ
lPLÿ
tPpŤM´1
n“´M˜TIpnqqŞ˜Jlmintm`2,M´1uÿ
w“maxtm´2,´Mu1pmplq˚
t“wq¨ÿ
aPKrtpaqˆxpqtq˚
tpaq
ěαˆn´1{2¨˜
B
2M´c
B
M¨logp1{δq´4 logp1{δq´1¸
, (54)
ÿ
lPLÿ
tPJl1pmplq˚
t“mq¨ÿ
aPKrplqpaqx˚
lpaqďαm`5{2¨B, (55)
Since given (54) and (55),for any interval mPM2,
ř
mPM2ř
lPLř
tPpŤM´1
n“´M˜TIpnqqŞ˜Jlřmintm`2,M´1u
w“maxtm´2,´Mu1pmplq˚
t“wq¨ř
aPKrtpaqˆxpqtq˚
tpaq
ř
mPM2ř
lPLř
tPJl1pmplq˚
t“mq¨ř
aPKrplqpaqx˚
lpaq
ěαˆn´1{2
αm`5{2¨˜
1
2M´c
1
BM¨logp1{δq´4 logp1{δq`1
B¸
ěαm´3{2
αm`5{2¨˜
1
2M´c
1
BM¨logp1{δq´4 logp1{δq`1
B¸
ě1´op1q
2α4M. (56)
27Validating (54). In our algorithm, for any tPŤM´1
m“´M˜TIpmq, we have at„ˆxpqtq˚
t, and hence,
ErRtpatq|Ft´1s “ř
aPKrtpaqˆxpqtq˚
tpaq. Therefore, by Lemma B.2, for any δP p0,1q, with
probability at least 1´3δ, we have
ÿ
tP˜TIpˆnqÿ
aPKctpaqˆxpqtq˚
tpaqěÿ
tP˜TIpˆnqCtpatq´d
2ÿ
tP˜TIp˜mqCtpatq¨logp1{δq´4 logp1{δq
ěB
2M´c
B
M¨logp1{δq´4 logp1{δq´1. (57)
Inequality (57) holds since B{p2Mq´1ăř
tP˜TIpˆnqCspasqďB{p2Mq. Then we have
ÿ
tP˜TIpˆnqÿ
aPKrtpaqˆxpqtq˚
tpaq“ÿ
tP˜TIpˆnqř
aPKrtpaqˆxpqtq˚
tpaq
ř
aPKctpaqˆxpqtq˚
tpaq¨ÿ
aPKctpaqˆxpqtq˚
tpaq
ěαˆn´1{2¨ÿ
tP˜TIpˆnqÿ
aPKctpaqˆxpqtq˚
tpaq (58)
ěαˆn´1{2¨˜
B
2M´c
B
M¨logp1{δq´4 logp1{δq´1¸
. (59)
Inequality (58) holds since for all tP˜TIpˆnq, we haveř
aPKˆrtpaqˆxpqtq˚
tpaq{ř
aPKˆctpaqˆxpqtq˚
tpaqě
αˆn. Then by inequality (16) in Lemma B.3, we haveř
aPKrtpaqˆxpqtq˚
tpaq{ř
aPKctpaqˆxpqtq˚
tpaqě
αˆn´1. Inequality (59) follows from inequality (57). We further have
ÿ
lPLÿ
tPpŤM´1
n“´M˜TIpnqqŞ˜Jlmintm`2,M´1uÿ
w“maxtm´2,´Mu1pmplq˚
t“wq¨ÿ
aPKrtpaqˆxpqtq˚
tpaq
ěÿ
lPLÿ
tP˜TIpˆnqŞ˜Jlmintm`2,M´1uÿ
w“maxtm´2,´Mu1pmplq˚
t“wq¨ÿ
aPKrtpaqˆxpqtq˚
tpaq
“ÿ
lPLÿ
tP˜TIpˆnqŞJlmintm`2,M´1uÿ
w“maxtm´2,´Mu1pmplq˚
t“wq¨ÿ
aPKrtpaqˆxpqtq˚
tpaq (60)
ěÿ
lPLÿ
tP˜TIpˆnqŞJlÿ
aPKrtpaqˆxpqtq˚
tpaq (61)
“ÿ
tP˜TIpˆnqÿ
aPKrtpaqˆxpqtq˚
tpaq
ěαˆn´1{2¨˜
B
2M´c
B
M¨logp1{δq´4 logp1{δq´1¸
.
Inequality (60) holds since the total Bresource units have not run out before the reserved B{p2Mq
resource units for interval ˆnrun out, i.e.,
˜TIpˆnqč#
tPT:tÿ
s“1CspasqďB´1+
“˜TIpˆnqč
T.
Inequality (61) is valid since for tP˜TIpˆnq, we have ˆmplq˚
t“ˆn. Hence, we have
mplq˚
tPtmaxtˆn´1,´Mu,ˆn,mintˆn`1, M´1uuPt maxtm´2,´Mu, . . . , mintm`2, M´1uu.
28Validating (55). ForlPLsuch that q˚
l“0, by (18) in Lemma B.3, we have
ÿ
tPJl1pmplq˚
t“mq¨ÿ
aPKrplqpaqx˚
lpaq
“ÿ
tPJl1˜ř
aPKˆrtpaqˆxpq˚
lq˚
tpaq
ř
aPKctpaqˆxpq˚
lq˚
tpaqPrαm, αm`1s¸
¨ÿ
aPKrplqpaqx˚
lpaq
ďÿ
tPJl1˜ř
aPKrplqpaqx˚
lpaqř
aPKcplqpaqx˚
lpaqPrαm´3{2, αm`5{2s¸
¨ÿ
aPKrplqpaqx˚
lpaq
“ÿ
tPJl1˜ř
aPKrplqpaqx˚
lpaqř
aPKcplqpaqx˚
lpaqPrαm´3{2, αm`5{2s¸
¨ř
aPKrplqpaqx˚
lpaqř
aPKcplqpaqx˚
lpaq¨ÿ
aPKcplqpaqx˚
lpaq
ďαm`5{2¨ÿ
tPJlÿ
aPKcplqpaqx˚
lpaq. (62)
ForlPLsuch that q˚
lą0, by (15) we have
ÿ
aPKˆctpaqˆxpq˚
lq˚
tpaqďηmin¨αq˚
lďαÿ
aPKcplqpaqx˚
lpaq.
In this case,ÿ
tPJl1pmplq˚
t“mq¨ÿ
aPKrplqpaqx˚
lpaq
ďα¨ÿ
tPJl1pmplq˚
t“mq¨ÿ
aPKˆrtpaqˆxpq˚
lq˚
tpaq (63)
“α¨1pmplq˚
t“mq¨ř
aPKˆrtpaqˆxpq˚
lq˚
tpaq
ř
aPKˆctpaqˆxpq˚
lq˚
tpaq¨ÿ
aPKˆctpaqˆxpq˚
lq˚
tpaq
ďαm`1¨ÿ
tPJlÿ
aPKˆctpaqˆxpq˚
lq˚
tpaq
ďαm`2¨ÿ
tPJlÿ
aPKcplqpaqx˚
lpaq. (64)
Putting together (62) and (64)we have
ÿ
lPLÿ
tPJl1pmplq˚
t“mq¨ÿ
aPKrplqpaqx˚
lpaqďαm`5{2¨ÿ
lPLÿ
tPJlÿ
aPKcplqpaqx˚
lpaqďαm`5{2¨B.
Finally, let us combine the two cases where mPM1and mPM2. Ifř
mPM1ř
lPLř
tPJl1pmplq˚
t“mq¨ř
aPKrplqpaqx˚
lpaq ď ˜Opa
L|K|NTq, thenp53q “0and
we have
H(1)ě1
5¨ř
mPM2ř
lPLř
tPpŤM´1
n“´M˜TIpnqqŞJl1pmplq˚
t“mq¨ř
aPKrtpaqˆxpqtq˚
tpaq
řM´1
m“´Mř
lPLř
tPJl1pmplq˚
t“mq¨ř
aPKrplqpaqx˚
lpaq
ě1
5ř
mPM2ř
lPLř
tPpŤM´1
n“´M˜TIpnqqŞJl1pmplq˚
t“mq¨ř
aPKrtpaqˆxpqtq˚
tpaq
ř
mPM2ř
lPLř
tPJl1pmplq˚
t“mq¨ř
aPKrplqpaqx˚
lpaq¨opt(FA)´˜Opa
L|K|NTq
opt(FA)
ě1´op1q
10α4M¨opt(FA)´˜Opa
L|K|NTq
opt(FA). (65)
Ifř
mPM1ř
lPLř
tPJl1pmplq˚
t“mq¨ř
aPKrplqpaqx˚
lpaqě˜Ωpa
L|K|NTq, thenp53q“p 1´
op1qq{pαpM`1qq. Then
H(1)ěmin"1´op1q
5αpM`1q,1´op1q
10α4M*
ě1´op1q
10α4M. (66)
29Therefore, we conclude that
H(1)ě1´op1q
10α4M¨opt(FA)´˜Opa
L|K|NTq
opt(FA)
with probability at least 1´2|K|pML`Tqδ.
C.4.2 Bounding H(2)
H(2) is to bound the stochastic reward achieved by randomized decision and the expected re-
ward. In IRES-CM, for tPŤM´1
m“´M˜TIpmq, we have at„ˆxpqtq˚
t, and hence ErRtpatq|Ft´1s“ř
aPKrtpaqˆxpqtq˚
tpaq. Then by Lemma B.1, for any δPp0,1q, with probability at least 1´δ, we
have
ÿ
tPŤM´1
m“´M˜TIpmqRtpatqP
»
—–¨
˚˝1´gffe2
ř
lPLř
tPpŤM´1
n“´M˜TIpnqqŞ˜Jlř
aPKrtpaqˆxpqtq˚
tpaqlogˆ2
δ˙˛
‹‚¨ÿ
lPLÿ
tPpŤM´1
n“´M˜TIpnqqŞ˜Jlÿ
aPKrtpaqˆxpqtq˚
tpaq,
¨
˚˝1`gffe3
ř
lPLř
tPpŤM´1
n“´M˜TIpnqqŞ˜Jlř
aPKrtpaqˆxpqtq˚
tpaqlogˆ2
δ˙˛
‹‚¨ÿ
lPLÿ
tPpŤM´1
n“´M˜TIpnqqŞ˜Jlÿ
aPKrtpaqˆxpqtq˚
tpaqfi
ffifl
“«˜
1´d
2
H(1)¨opt(FA)logˆ2
δ˙¸
¨H(1)¨opt(FA) ,˜
1`d
3
H(1)¨opt(FA)logˆ2
δ˙¸
¨H(1)¨opt(FA)ff
.
Since H(1)¨opt(FA)ě p1´op1qq¨p opt(FA)´˜Opa
L|K|NTqq{p10α4Mq ě Ωpopt(FA)q ě
˜Ωpa
L|K|NTq. Then it is evident that H(2) ě1´op1qwith probability at least 1´δ.
C.5 Proof of Lemma 2.3
C.5.1 Proof of part (a)
The horizon Tis partitioned into L“T{Bpieces with equal length B. We consider Linstances
with two arms K“t1uandanull, and instance nhappen with probability pn. All instances have
deterministic outcomes, and they share the same consumption model Ctp1q“1for all tPT. Their
reward functions are:
Instance 1:Rp1qp1q“¨
˝α´L, . . . , α´Llooooooomooooooon
Piece1, α´L`1, . . . , α´L`1loooooooooomoooooooooon
Piece2, . . . , α´1, . . . , α´1loooooomoooooon
PieceL˛
‚,
Instance 2:Rp2qp1q“¨
˝α´L, . . . , α´Llooooooomooooooon
Piece1, α´L`1, . . . , α´L`1loooooooooomoooooooooon
Piece2, . . . , 0, . . . , 0loomoon
PieceL˛
‚,
. . .
Instance L:RpLqp1q“¨
˝α´L, . . . , α´Llooooooomooooooon
Piece1,0, . . . , 0loomoon
Piece2, . . . , 0, . . . , 0loomoon
PieceL˛
‚.
Denote FApnqas the FA for instance nPt1, . . . , Lu. It is clear that optpFApnqq“Bα´n. Recall
Xtp1q“1pPull 1 in round tq. By the Yao’s principle Yao (1977), the competitive ratio of any online
algorithm is at most
Lÿ
n“1pn¨EpnqrřT
t“1Rpnq
tp1qXtp1qs
optpFApnqq, (67)
30for any pně0withřL
n“1pn“1. The expectation Epnqis over the randomness in Xtin instance n.
The instances are crafted such that during piece jPt1, . . . , Lu, it is impossible to distinguish among
instances j, . . . , L , meaning that the quantity Bpnq
j“Epnqrř
tPpiecejXtp1qsfornP tj, . . . , Lu
are all identical, and equal to a common value Bj. Thus, for instance nP t1, . . . , Luwe have
EpnqrřT
t“1Rpnq
tp1qXtp1qsďřL
j“nBjα´j. Consequently,
p69qďLÿ
n“1pnřL
j“nBj¨α´j
B¨α´nďLÿ
j“1Bj
Bjÿ
n“1pn¨αn´j.
By defining p1“1
Lp1´1{αq`1{α“`
1´1
α˘
pnforn“2, . . . , L , we have for every j“1, . . . , L ,
jÿ
n“1pn¨αn´jď1
Lp1´1{αq`1{α
leading to
Lÿ
j“1Bj
Bjÿ
n“1pn¨αn´jď1
Lp1´1{αq`1{α
by the inventory constraintřL
j“1BjďBon instance 1. Since Lcan generally be larger than
logαpηmax{ηminq, we have shown that the CR can be significantly larger than logαpηmax{ηminqwhen
ηmin“0.
C.5.2 Proof of part (b)
While it is possible to derive a worse bound without ηmaxby setting it to its upper bound of 1,
knowing the lower bound is essential for our algorithm’s functionality. To show that it is necessary to
know ηmin, we suppose the DM be provided with a looser lower range parameter ˜ηminăηminď
rtpaq, ctpaq@a, t, and show that it leads to sub-optimal CR.
A general case construction. We firstly construct a case with N`1instances when ηmin“β´N
for some absolute constant βą1. We consider N`1instances with two arms K“t1uandanull,
and instance nhappen with probability pn. All instances have deterministic outcomes, and they share
the same reward model Rtp1q“1for all t. Their consumption functions are:
Instance 0:Cp0qp1q“¨
˝1, . . . , 1loomoon
Piece 0: Brounds˛
‚,
Instance 1:Cp1qp1q“¨
˚˝1, . . . , 1loomoon
Piece 0: Brounds,1{β, . . . , 1{βloooooomoooooon
Piece 1: B¨βrounds˛
‹‚,
Instance 2:Cp2qp1q“¨
˚˝1, . . . , 1loomoon
Piece 0: Brounds,1{β, . . . , 1{βloooooomoooooon
Piece 1: B¨βrounds,1{β2, . . . , 1{β2looooooomooooooon
Piece 2: B¨β2rounds˛
‹‚,
. . .
Instance N:CpNqp1q“¨
˚˝1, . . . , 1loomoon
Piece 0: Brounds,1{β, . . . , 1{βloooooomoooooon
Piece 1: B¨βrounds, . . . , 1{βN, . . . , 1{βNloooooooomoooooooon
PieceN:B¨βNrounds˛
‹‚.
Denote FApnqas the FA for instance nPt0, . . . , Nu. It is clear that optpFApnqq“Bβn. Recall
Xtp1q“1pPull 1 in round tq. By the Yao’s principle Yao (1977), the competitive ratio of an online
algorithm is at most
Nÿ
n“0pn¨EpnqrřT
t“1Rpnq
tp1qXtp1qs
optpFApnqq, (68)
31for any pně0withřN
n“0pn“1. The expectation Epnqis over the randomness in Xtin instance n.
The instances are crafted such that during piece jPt0, . . . , Nu, it is impossible to distinguish among
instances j, . . . , N , meaning that the quantity Bpnq
j“Epnqrř
tPpiecejCpnq
tXtp1qsfornPtj, . . . , Nu
are all identical, and equal to a common value Bj. Thus, for instance nP t0, . . . , Nuwe have
EpnqrřT
t“1Rpnq
tp1qXtp1qsďřN
j“nBjβj. Consequently,
p68qďNÿ
n“0pnřN
j“nBj¨βj
B¨αnďNÿ
j“0Bj
Bjÿ
n“0pn¨β´n`j.
By defining p0“1
2pN`1qp1´1{βq`1{β“ p1´1{βqpnforn“1, . . . , N , we have for every j“
0, . . . , N ,
jÿ
n“0pn¨β´n`jď1
pN`1qp1´1{βq`1{β
leading to
Nÿ
j“0Bj
Bjÿ
n“0pn¨β´n`jď1
pN`1qp1´1{βq`1{β
by the inventory constraintřN
j“0BjďBon instance N. Therefore, when the DM is provided with
information ηmin“β´Nfor any NPN, a CR“ΘpNqlower bound is derived based on N`1
instances constructed above.
Not knowing ηmin“β´Λbut knowing ˜ηmin“β´κ¨Λ.We suppose the real underlying ηmin“β´Λ
for some constant Λ,ηmax“1, but the DM only has weaker prior information that ˜ηmin“β´κ¨Λ
(κą1can be set arbitrarily large) and ηmax“1. The pattern of pRt, Ctqfollows the above case, and
therefore, different ηminleads to different number of instances N. The DM only knows the number
of instances is no larger than κ¨Λ. Then from the DM’s point of view, the optimal CR she/he could
derive is CR“Θpκ¨Λq; while from the perspective of a clairvoyant who knows the real ηmin“β´Λ,
the optimal CR should be ΘpΛq.
We first show that given ˜ηmin“β´κ¨Λ, the DM will not benefit from tightening the value ranges
by blindly guessing a value of ηmin. We suppose the DM blindly tightens the value range to
rβ´pκ¨Λ´dq,1sfor some dě1, without knowing the real ηmin. Then he/she derives a CR lower
bound with N`1“κ¨Λ´d`1instances based on the above construction. Then the DM can
expect to achieve a total reward of
Tÿ
t“1Rtp1qXTIGHT
tp1q“řN
n“0pn¨opt(FATIGHTpnqq
pN`1qp1´1{βq`1{β“ΘˆB¨βκ¨Λ´d
κ¨Λ´d˙
.
However, since the DM does not know the real ηmin, it is possible that in fact ηmin“β´κ¨Λ. If this
is indeed the case, the optimal reward can be as large as
Nÿ
n“0pn¨opt(FApnqq“ΩpB¨βκ¨Λq
based on the above constructed N“κ¨Λinstances. Hence, from the DM’s perspective, she/he could
achieve a sub-optimal CR ofřN
n“0pn¨opt(FApnqq
řT
t“1Rtp1qXTIGHT
tp1q“Ωˆ
B¨βκ¨Λ¨κ¨Λ´d
B¨βκ¨Λ´d˙
“Ωpβd¨pκ¨Λ´dqq,
if she/he blindly assume ηmin“β´pκ¨Λ´dq. This is significantly worse than the optimal CR “Θpκ¨Λq
(if in fact ηmin“β´κ¨Λ). Thus, the DM has no motivation to assume a lower bound larger than the
provided ˜ηmin.
Therefore, the DM must derive a CR on the full range rβκ¨Λ,1s, which involves N`1“κ¨Λ`1
instances as constructed above. Therefore the DM expects a reward of ΘpB¨βκ¨Λ{pκ¨Λqq. However,
since in fact there are only Λ`1instances, the DM wastes all her/his resources reserved for instance
Λ`2, . . . , κ¨Λ`1and she/he can only achieve a reward of OpB¨βΛ{pκ¨Λqq. Compared with
the actual optimal reward ΩpB¨βΛqwithΛ`1instances, the DM achieves a sub-optimal CR of
Ωpκ¨Λq. Since κcan be arbitrarily large, the CR derived without correct knowledge of ηminis
significantly worse than the optimal CR “ΘpΛq.
32C.6 Proof of Theorem 4.5
We prove Theorem 4.5 by considering 2ν`1instances, which share the same K“t1u,BPZą0
andT“Bp2ν`1q(All instances have the null arm, as stipulated by our model definition). All
instances have deterministic outcomes, and they share the same consumption model Ctp1q“1for
alltPT. By contrast, they differ in the reward model. The horizon Tis partitioned into 2ν`1
pieces with equal length B. Their reward functions are:
Instance´ν:Rp´νqp1q“¨
˝α´2ν, . . . , α´2νloooooooomoooooooon
Piece´ν, α´2ν`1, . . . , α´2ν`1looooooooooomooooooooooon
Piece´ν`1, . . . , α0, . . . , α0loooomoooon
Pieceν˛
‚,
Instance´ν`1:Rp´ν`1qp1q“¨
˝α´2ν, . . . , α´2νloooooooomoooooooon
Piece´ν, α´2ν`1, . . . , α´2ν`1looooooooooomooooooooooon
Piece´ν`1, . . . , ϵ, . . . , ϵloomoon
Pieceν˛
‚,
. . .
Instance ν:Rpνqp1q“¨
˝α´2ν, . . . , α´2νloooooooomoooooooon
Piece´ν, ϵ, . . . , ϵloomoon
Piece´ν`1, . . . , ϵ, . . . , ϵloomoon
Pieceν˛
‚,
where ϵ“α´3ν. Denote FApnqas the FA for instance nPt´ν, . . . , νu. It is clear that optpFApnqq“
Bα´ν´n. Recall Xtp1q“1pPull 1 in round tq. By the Yao’s principle Yao (1977), the competitive
ratio of an online algorithm is at most
νÿ
n“´νpn¨EpnqrřT
t“1Rpnq
tp1qXtp1qs
optpFApnqq, (69)
for any pně0withřν
n“´νpn“1. The expectation Epnqis over the randomness in Xtin
instance n. The instances are crafted such that during piece jPt´ν, . . . , νu, it is impossible to
distinguish among instances ´ν, . . . ,´j, meaning that the quantity Bpnq
j“Epnqrř
tPpiecejXtp1qs
fornP t´ ν, . . . ,´juare all identical, and equal to a common value Bj. Thus, for instance
nP t´ ν, . . . , νuwe have EpnqrřT
t“1Rpnq
tp1qXtp1qs ď Bϵ`ř´n
j“´νBjαj´νďB¨α´3ν`ř´n
j“´νBjαj´ν. Consequently,
p69qďνÿ
n“´νpnB¨α´3ν`ř´n
j“´νBj¨αj´ν
B¨α´ν´nď1
αν¨p1´1{αq`νÿ
j“´νBj
B´jÿ
n“´νpn¨αj`n.
By defining p´ν“1
2νp1´1{αq`1{α“`
1´1
α˘
pnforn“ ´ν`1, . . . , ν , we have for every
j“´ν, . . . , ν ,
´jÿ
n“´νpn¨αj`nď1
2νp1´1{αq`1{α
leading to
νÿ
j“´νBj
B´jÿ
n“´νpn¨αj`nď1
2νp1´1{αq`1{α, (70)
by the inventory constraintřν
j“´νBjďB. Since ν“logαpηmax{ηminq{3, the Theorem is proved.
33NeurIPS Paper Checklist
1.Claims
Question: Do the main claims made in the abstract and introduction accurately reflect the
paper’s contributions and scope?
Answer: [Yes]
Justification: We have clearly stated the contributions made in the paper and important
assumptions and limitations in our abstract and introduction.
Guidelines:
•The answer NA means that the abstract and introduction do not include the claims
made in the paper.
•The abstract and/or introduction should clearly state the claims made, including the
contributions made in the paper and important assumptions and limitations. A No or
NA answer to this question will not be perceived well by the reviewers.
•The claims made should match theoretical and experimental results, and reflect how
much the results can be expected to generalize to other settings.
•It is fine to include aspirational goals as motivation as long as it is clear that these goals
are not attained by the paper.
2.Limitations
Question: Does the paper discuss the limitations of the work performed by the authors?
Answer: [Yes]
Justification: We have discussed the important assumption and limitation of our work, which
isηminą0, in Section 2.2 “Assumption, limitation and discussion”. When we establish
theorems regarding performance guarantees of our algorithms, we also state clearly the
preliminary requirements for them to hold. We promise that we are honest on the limitations
of our algorithm.
Guidelines:
•The answer NA means that the paper has no limitation while the answer No means that
the paper has limitations, but those are not discussed in the paper.
• The authors are encouraged to create a separate "Limitations" section in their paper.
•The paper should point out any strong assumptions and how robust the results are to
violations of these assumptions (e.g., independence assumptions, noiseless settings,
model well-specification, asymptotic approximations only holding locally). The authors
should reflect on how these assumptions might be violated in practice and what the
implications would be.
•The authors should reflect on the scope of the claims made, e.g., if the approach was
only tested on a few datasets or with a few runs. In general, empirical results often
depend on implicit assumptions, which should be articulated.
•The authors should reflect on the factors that influence the performance of the approach.
For example, a facial recognition algorithm may perform poorly when image resolution
is low or images are taken in low lighting. Or a speech-to-text system might not be
used reliably to provide closed captions for online lectures because it fails to handle
technical jargon.
•The authors should discuss the computational efficiency of the proposed algorithms
and how they scale with dataset size.
•If applicable, the authors should discuss possible limitations of their approach to
address problems of privacy and fairness.
•While the authors might fear that complete honesty about limitations might be used by
reviewers as grounds for rejection, a worse outcome might be that reviewers discover
limitations that aren’t acknowledged in the paper. The authors should use their best
judgment and recognize that individual actions in favor of transparency play an impor-
tant role in developing norms that preserve the integrity of the community. Reviewers
will be specifically instructed to not penalize honesty concerning limitations.
3.Theory Assumptions and Proofs
34Question: For each theoretical result, does the paper provide the full set of assumptions and
a complete (and correct) proof?
Answer: [Yes]
Justification: We promise that our paper provides the full set of assumptions and a complete
(and correct) proof. Due to the page limit, our proofs are mostly in appendix. In the main
paper, we provide high-level ideas and sketch proofs of our claims, while pointing to the
locations of formal proofs in the appendix.
Guidelines:
• The answer NA means that the paper does not include theoretical results.
•All the theorems, formulas, and proofs in the paper should be numbered and cross-
referenced.
•All assumptions should be clearly stated or referenced in the statement of any theorems.
•The proofs can either appear in the main paper or the supplemental material, but if
they appear in the supplemental material, the authors are encouraged to provide a short
proof sketch to provide intuition.
•Inversely, any informal proof provided in the core of the paper should be complemented
by formal proofs provided in appendix or supplemental material.
• Theorems and Lemmas that the proof relies upon should be properly referenced.
4.Experimental Result Reproducibility
Question: Does the paper fully disclose all the information needed to reproduce the main ex-
perimental results of the paper to the extent that it affects the main claims and/or conclusions
of the paper (regardless of whether the code and data are provided or not)?
Answer: [Yes]
Justification: We firstly make it clear that our paper is a theoretical paper. We only run
simple experiments for sanity check and drawing insights. We are affirmative that our paper
fully disclose all the information needed to reproduce the main experimental results of the
paper to the extent that it affects the main claims and/or conclusions of the paper.
Guidelines:
• The answer NA means that the paper does not include experiments.
•If the paper includes experiments, a No answer to this question will not be perceived
well by the reviewers: Making the paper reproducible is important, regardless of
whether the code and data are provided or not.
•If the contribution is a dataset and/or model, the authors should describe the steps taken
to make their results reproducible or verifiable.
•Depending on the contribution, reproducibility can be accomplished in various ways.
For example, if the contribution is a novel architecture, describing the architecture fully
might suffice, or if the contribution is a specific model and empirical evaluation, it may
be necessary to either make it possible for others to replicate the model with the same
dataset, or provide access to the model. In general. releasing code and data is often
one good way to accomplish this, but reproducibility can also be provided via detailed
instructions for how to replicate the results, access to a hosted model (e.g., in the case
of a large language model), releasing of a model checkpoint, or other means that are
appropriate to the research performed.
•While NeurIPS does not require releasing code, the conference does require all submis-
sions to provide some reasonable avenue for reproducibility, which may depend on the
nature of the contribution. For example
(a)If the contribution is primarily a new algorithm, the paper should make it clear how
to reproduce that algorithm.
(b)If the contribution is primarily a new model architecture, the paper should describe
the architecture clearly and fully.
(c)If the contribution is a new model (e.g., a large language model), then there should
either be a way to access this model for reproducing the results or a way to reproduce
the model (e.g., with an open-source dataset or instructions for how to construct
the dataset).
35(d)We recognize that reproducibility may be tricky in some cases, in which case
authors are welcome to describe the particular way they provide for reproducibility.
In the case of closed-source models, it may be that access to the model is limited in
some way (e.g., to registered users), but it should be possible for other researchers
to have some path to reproducing or verifying the results.
5.Open access to data and code
Question: Does the paper provide open access to the data and code, with sufficient instruc-
tions to faithfully reproduce the main experimental results, as described in supplemental
material?
Answer: [Yes]
Justification: Our data are numerically generated and codes can be provided.
Guidelines:
• The answer NA means that paper does not include experiments requiring code.
•Please see the NeurIPS code and data submission guidelines ( https://nips.cc/
public/guides/CodeSubmissionPolicy ) for more details.
•While we encourage the release of code and data, we understand that this might not be
possible, so “No” is an acceptable answer. Papers cannot be rejected simply for not
including code, unless this is central to the contribution (e.g., for a new open-source
benchmark).
•The instructions should contain the exact command and environment needed to run to
reproduce the results. See the NeurIPS code and data submission guidelines ( https:
//nips.cc/public/guides/CodeSubmissionPolicy ) for more details.
•The authors should provide instructions on data access and preparation, including how
to access the raw data, preprocessed data, intermediate data, and generated data, etc.
•The authors should provide scripts to reproduce all experimental results for the new
proposed method and baselines. If only a subset of experiments are reproducible, they
should state which ones are omitted from the script and why.
•At submission time, to preserve anonymity, the authors should release anonymized
versions (if applicable).
•Providing as much information as possible in supplemental material (appended to the
paper) is recommended, but including URLs to data and code is permitted.
6.Experimental Setting/Details
Question: Does the paper specify all the training and test details (e.g., data splits, hyper-
parameters, how they were chosen, type of optimizer, etc.) necessary to understand the
results?
Answer: [Yes]
Justification: Our experiment does not involve training data, but we have specified the test
details and settings.
Guidelines:
• The answer NA means that the paper does not include experiments.
•The experimental setting should be presented in the core of the paper to a level of detail
that is necessary to appreciate the results and make sense of them.
•The full details can be provided either with the code, in appendix, or as supplemental
material.
7.Experiment Statistical Significance
Question: Does the paper report error bars suitably and correctly defined or other appropriate
information about the statistical significance of the experiments?
Answer: [Yes]
Justification: Though the experiment is not as important as theory in our paper, we run the
experiment repeatedly and plot variations of all tests.
Guidelines:
36• The answer NA means that the paper does not include experiments.
•The authors should answer "Yes" if the results are accompanied by error bars, confi-
dence intervals, or statistical significance tests, at least for the experiments that support
the main claims of the paper.
•The factors of variability that the error bars are capturing should be clearly stated (for
example, train/test split, initialization, random drawing of some parameter, or overall
run with given experimental conditions).
•The method for calculating the error bars should be explained (closed form formula,
call to a library function, bootstrap, etc.)
• The assumptions made should be given (e.g., Normally distributed errors).
•It should be clear whether the error bar is the standard deviation or the standard error
of the mean.
•It is OK to report 1-sigma error bars, but one should state it. The authors should
preferably report a 2-sigma error bar than state that they have a 96% CI, if the hypothesis
of Normality of errors is not verified.
•For asymmetric distributions, the authors should be careful not to show in tables or
figures symmetric error bars that would yield results that are out of range (e.g. negative
error rates).
•If error bars are reported in tables or plots, The authors should explain in the text how
they were calculated and reference the corresponding figures or tables in the text.
8.Experiments Compute Resources
Question: For each experiment, does the paper provide sufficient information on the com-
puter resources (type of compute workers, memory, time of execution) needed to reproduce
the experiments?
Answer: [Yes]
Justification: Our experiment is very simple and can be run within a few minutes on any
laptop.
Guidelines:
• The answer NA means that the paper does not include experiments.
•The paper should indicate the type of compute workers CPU or GPU, internal cluster,
or cloud provider, including relevant memory and storage.
•The paper should provide the amount of compute required for each of the individual
experimental runs as well as estimate the total compute.
•The paper should disclose whether the full research project required more compute
than the experiments reported in the paper (e.g., preliminary or failed experiments that
didn’t make it into the paper).
9.Code Of Ethics
Question: Does the research conducted in the paper conform, in every respect, with the
NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines ?
Answer: [Yes]
Justification: Our research conducted in the paper conform, in every respect, with the
NeurIPS Code of Ethics.
Guidelines:
•The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.
•If the authors answer No, they should explain the special circumstances that require a
deviation from the Code of Ethics.
•The authors should make sure to preserve anonymity (e.g., if there is a special consid-
eration due to laws or regulations in their jurisdiction).
10.Broader Impacts
Question: Does the paper discuss both potential positive societal impacts and negative
societal impacts of the work performed?
Answer: [NA]
37Justification: This is a theoretical paper. There is no societal impact of the work performed.
Guidelines:
• The answer NA means that there is no societal impact of the work performed.
•If the authors answer NA or No, they should explain why their work has no societal
impact or why the paper does not address societal impact.
•Examples of negative societal impacts include potential malicious or unintended uses
(e.g., disinformation, generating fake profiles, surveillance), fairness considerations
(e.g., deployment of technologies that could make decisions that unfairly impact specific
groups), privacy considerations, and security considerations.
•The conference expects that many papers will be foundational research and not tied
to particular applications, let alone deployments. However, if there is a direct path to
any negative applications, the authors should point it out. For example, it is legitimate
to point out that an improvement in the quality of generative models could be used to
generate deepfakes for disinformation. On the other hand, it is not needed to point out
that a generic algorithm for optimizing neural networks could enable people to train
models that generate Deepfakes faster.
•The authors should consider possible harms that could arise when the technology is
being used as intended and functioning correctly, harms that could arise when the
technology is being used as intended but gives incorrect results, and harms following
from (intentional or unintentional) misuse of the technology.
•If there are negative societal impacts, the authors could also discuss possible mitigation
strategies (e.g., gated release of models, providing defenses in addition to attacks,
mechanisms for monitoring misuse, mechanisms to monitor how a system learns from
feedback over time, improving the efficiency and accessibility of ML).
11.Safeguards
Question: Does the paper describe safeguards that have been put in place for responsible
release of data or models that have a high risk for misuse (e.g., pretrained language models,
image generators, or scraped datasets)?
Answer: [NA]
Justification: The paper poses no such risks
Guidelines:
• The answer NA means that the paper poses no such risks.
•Released models that have a high risk for misuse or dual-use should be released with
necessary safeguards to allow for controlled use of the model, for example by requiring
that users adhere to usage guidelines or restrictions to access the model or implementing
safety filters.
•Datasets that have been scraped from the Internet could pose safety risks. The authors
should describe how they avoided releasing unsafe images.
•We recognize that providing effective safeguards is challenging, and many papers do
not require this, but we encourage authors to take this into account and make a best
faith effort.
12.Licenses for existing assets
Question: Are the creators or original owners of assets (e.g., code, data, models), used in
the paper, properly credited and are the license and terms of use explicitly mentioned and
properly respected?
Answer: [NA]
Justification: The paper does not use existing assets.
Guidelines:
• The answer NA means that the paper does not use existing assets.
• The authors should cite the original paper that produced the code package or dataset.
•The authors should state which version of the asset is used and, if possible, include a
URL.
38• The name of the license (e.g., CC-BY 4.0) should be included for each asset.
•For scraped data from a particular source (e.g., website), the copyright and terms of
service of that source should be provided.
•If assets are released, the license, copyright information, and terms of use in the
package should be provided. For popular datasets, paperswithcode.com/datasets
has curated licenses for some datasets. Their licensing guide can help determine the
license of a dataset.
•For existing datasets that are re-packaged, both the original license and the license of
the derived asset (if it has changed) should be provided.
•If this information is not available online, the authors are encouraged to reach out to
the asset’s creators.
13.New Assets
Question: Are new assets introduced in the paper well documented and is the documentation
provided alongside the assets?
Answer: [NA]
Justification: The paper does not release new assets.
Guidelines:
• The answer NA means that the paper does not release new assets.
•Researchers should communicate the details of the dataset/code/model as part of their
submissions via structured templates. This includes details about training, license,
limitations, etc.
•The paper should discuss whether and how consent was obtained from people whose
asset is used.
•At submission time, remember to anonymize your assets (if applicable). You can either
create an anonymized URL or include an anonymized zip file.
14.Crowdsourcing and Research with Human Subjects
Question: For crowdsourcing experiments and research with human subjects, does the paper
include the full text of instructions given to participants and screenshots, if applicable, as
well as details about compensation (if any)?
Answer: [NA]
Justification: The paper does not involve crowdsourcing nor research with human subjects.
Guidelines:
•The answer NA means that the paper does not involve crowdsourcing nor research with
human subjects.
•Including this information in the supplemental material is fine, but if the main contribu-
tion of the paper involves human subjects, then as much detail as possible should be
included in the main paper.
•According to the NeurIPS Code of Ethics, workers involved in data collection, curation,
or other labor should be paid at least the minimum wage in the country of the data
collector.
15.Institutional Review Board (IRB) Approvals or Equivalent for Research with Human
Subjects
Question: Does the paper describe potential risks incurred by study participants, whether
such risks were disclosed to the subjects, and whether Institutional Review Board (IRB)
approvals (or an equivalent approval/review based on the requirements of your country or
institution) were obtained?
Answer: [NA]
Justification: The paper does no involve human subjects.
Guidelines:
•The answer NA means that the paper does not involve crowdsourcing nor research with
human subjects.
39•Depending on the country in which research is conducted, IRB approval (or equivalent)
may be required for any human subjects research. If you obtained IRB approval, you
should clearly state this in the paper.
•We recognize that the procedures for this may vary significantly between institutions
and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the
guidelines for their institution.
•For initial submissions, do not include any information that would break anonymity (if
applicable), such as the institution conducting the review.
40