Med-Real2Sim: Non-Invasive Medical Digital Twins
using Physics-Informed Self-Supervised Learning
Keying Kuang∗
UC BerkeleyFrances Dean∗
UC Berkeley & UCSFJack B. Jedlicki∗
University of BarcelonaDavid Ouyang
Cedars Sinai
Anthony Philippakis†
Google VenturesDavid Sontag†
MITAhmed Alaa†
UC Berkeley & UCSF
Abstract
A digital twin is a virtual replica of a real-world physical phenomena that uses
mathematical modeling to characterize and simulate its defining features. By con-
structing digital twins for disease processes, we can perform in-silico simulations
that mimic patients’ health conditions and counterfactual outcomes under hypo-
thetical interventions in a virtual setting. This eliminates the need for invasive
procedures or uncertain treatment decisions. In this paper, we propose a method to
identify digital twin model parameters using only noninvasive patient health data.
We approach the digital twin modeling as a composite inverse problem , and observe
that its structure resembles pretraining and finetuning in self-supervised learning
(SSL). Leveraging this, we introduce a physics-informed SSL algorithm that initially
pretrains a neural network on the pretext task of learning a differentiable simulator
of a physiological process. Subsequently, the model is trained to reconstruct physi-
ological measurements from noninvasive modalities while being constrained by the
physical equations learned in pretraining. We apply our method to identify digital
twins of cardiac hemodynamics using noninvasive echocardiogram videos, and
demonstrate its utility in unsupervised disease detection and in-silico clinical trials.
1 Introduction
With increasing health data availability, there is excitement about refining physics-based models of
human body systems to be patient specific, as personalized physical models can provide the basis for
in-silico experiments and timely diagnosis ( 27;31;55;25). This personalized vision of healthcare has
given rise to virtual patients constructed with data-tuned models, known as digital twins . Originally
an engineering concept, digital twins have recently been realized as a resource in healthcare ( 6;4).
The concept combines data-driven approaches with mechanistic or simulation techniques, serving as
a bidirectional map between real data and simulations. Medical digital twins have been applied and
developed broadly in applications ranging from cellular mechanics ( 24) to the development of whole
body and human digital twins ( 50;76), with aims ranging from tailoring cardiovascular interventions
(30) to agent-based trauma care management systems ( 14). Both academic and industry efforts are
prolific with digital twins having been developed for various medical problems ( 9;69;74;13;22;70).
In this paper, we propose a framework for identifying patient-level digital twins using noninvasive
medical images. We focus on scenarios where identifying a patient’s digital twin from noninvasive
data allows us to simulate other physiological parameters that typically require invasive measurement,
such as through catheterization. Such an approach assumes that there is a mapping from rich non-
invasive imaging data to patient-specific mechanistic models of physiology; such a mapping is not
known to scientists humans but can be learned from data. This hypothesis is supported by previous
experimental work ( 2;64;43). However, the challenge lies in the absence of datasets containing both
38th Conference on Neural Information Processing Systems (NeurIPS 2024).noninvasive data and the corresponding parameters of the underlying physics-based physiological
model, hence the problem cannot be solved using standard supervised learning. To this end, we pro-
pose a new class of physics-informed neural networks (PINNs) ( 60) to incorporate inductive biases
informed by mechanistic models of patient physiology into neural network architectures.
Summary of contributions. We study obtaining la-
tent parameters of a physics-based model from image
measurements directly as an inverse problem. Learn-
ing patient specific parameters for a physics-based
model from a complete description of patient physi-
cal states and a known forward model is an inverse
problem. This task can be modeled using, for exam-
ple, a PINN approach ( 71;39;29). The process of
obtaining patient physical states from non-invasive
medical imaging is a second inverse problem with an
unknown forward model. Obtaining patient specific
latent parameters from non-invasive medical imaging
directly combines these two inverse problems and
could be modeled by learning the unknown process
components. Large numbers of labeled data pairs of
Hydraulic Equivalent
Arterial SystemAortic ValveWindkessel Model (Electrical Analog)Cardiac Function
Elastic Arteries
Left VentricleAortic ValveAorta
Left Ventricle
Digital Twin
Physics-informed modelNoninvasive dataFigure 1: Digital twins for cardiac hemodynam-
ics. Left: Illustration of the cardiovascular system.
Right: Digital twin models of cardiac hemodynam-
ics based on hydraulic or electric representations.
images and parameters for the full inverse task would need to be obtained from invasive procedures
to use supervised learning. Instead, we propose a training approach that structurally resembles self-
supervised learning (SSL), and leverages labeled data pairs of images and non-invasively measurable
patient physical states. We first train a neural network using supervised learning with synthetic data to
approximate the forward physics-based model as a pre-text task. We then freeze this network to fine-
tune the learning of a solution to the composite inverse problem from the labeled measurable data pairs.
Our methods are then extendable to include exogenous intervention parameters for the development
of in-silico experiments. We call this framework “Med-Real2Sim” since it learns virtual simulators
of patient phyisology on the basis of real (noninvasive) data.
We apply our methodology in the setting of predicting patient specific cardiac pressure-volume
loops from echocardiography. The relationship between left-ventricle pressure and volume is an
important description of cardiac function ( 36). Pressure-volume catheter measurements are highly
invasive, challenging their routine clinical use ( 8;1;77). Cardiac ejection fraction, the ratio between
left-ventricular stroke volume and end-diastolic volume, while more routinely measured as a proxy
for cardiac function, does not take into account cardiac pressure, preventing diagnosis of many severe
cardiac conditions and providing motivation to develop digital twins for pressure-volume relations
(80;45;59). Cardiovascular pressure and volume are commonly modeled using hydraulic analogy
models, representing the hydraulic system by electronic circuits, characterized by lumped parameters
corresponding to system attributes. Systems of differential equations describe the relationships
between circuit parameters and volume and pressure states. A model developed in ( 66) relates
left-ventricular pressure and volume with and without the addition of a left-ventricular assistance
device (LV AD). We train a neural network to learn to map between parameters and solution states
of this model and use this learning to fine-tune a convolutional neural network that learns patient
specific model parameters using echocardiography frames.
2 Method
2.1 Problem Setup
We consider a physics-based model M: Θ→ X of a physiological process which maps a set of
parameters θ∈Θto a set of states x∈ X. The parameters θdescribe the physiological process in an
individual patient; each patient iis associated with a patient-specific parameter set θiand physical
states xi. We are interested in a setup where the complete set of parameters and states can only
be measured invasively , e.g., through a catheterization procedure. We conceptualize the physics-based
model M(θi)as the “Digital Twin” of patient i. That is, if we have oracle access to the parameters θi
of patient i, then we can simulate their physiological states through the following forward process:
x=M(θ). (1)
The model Mis assumed to be known and would typically be defined by a system of differential
equations written fθ(x) = 0 with a physically interpretable parameter set θ. One can use numerical
2methods to solve fθ(x) = 0 forxand construct the solution M(θi)for each patient parameter set θi
but a closed form solution to define the map Mmay not exist even though the model is known, such
as in the case where fθ= 0has no closed form solution. The level of granularity in simulating the
(true) physiological process depends on the fidelity of the physics-based model M.
In addition to modeling the natural state of the physiological process, we also consider physics-based
models of clinical interventions (e.g., medical devices). To model an interventional process, we
consider an augmented version of the physics-based model fM: Θ× U → X , which maps the
endogenous parameters θ∈Θof the patient and an exogenous intervention u∈ U to a physiological
statex∈ X. The augmented model describes how the intervention ualters the physiological states
of a patient with parameters θ—in the causal inference literature, this class of models is known as
structural causal models (SCMs) (57).
To identify the model M(θ)traditionally and simulate the states x, one would need to conduct a
number of invasive procedures for each patient. Here, we assume that we have access to a measurement
yifor each patient i, which reflects some aspects of the underlying physiological process. We assume
thatyis acquired through a non-invasive procedure that might be conducted routinely in clinical
practice (e.g., an electrocardiogram). The relationship between the physiological state xand the
non-invasive measurement yis given by
y=K(x). (2)
Thus, by combining (1) and (2), we arrive at the following relation between the parameters of the
physics-based model and the non-invasive measurements:
y=K|{z}
Unknown◦ M|{z}
Known(θ) =F(θ). (3)
That is, the relation between the non-invasive measurements and the physical model parameters
is a composition of two functions; an unknown mapKthat describes the relation between the
physiological states and the observed measurements (e.g., the relation between pixels in an imaging
modality and underlying health states), and a known mathematical model Mthat captures the relation
between the physiological states and unknown parameters θ.Our goal is to develop a learning
algorithm to identify the digital twin M(θi)for patient igiven their non-invasive measurement yi.
Digital Twin Modeling as an Inverse Problem. Note that obtaining patient-specific parameters θi
from physical states xiamounts to solving the following inverse problem:
θ=M−1(x). (4)
However, we do not directly observe the state x, but rather a measurement yobtained by passing
xthrough the unknown forward model K. Thus, obtaining the physical parameters from yentails
solving the composite inverse problem given by:
θ=F−1(y) =M−1◦ K−1(y). (5)
Solving this problem entails two challenges. First, we do not know the forward model K. Second,
we cannot directly learn the inverse map F−1using supervised learning since this requires access to
a labeled dataset {(yi, θi)}i. Obtaining such a dataset would require conducting a large number of
invasive procedures, which we seek to avoid.
An alternative way to learn the inverse map F−1is to break down the composite inverse problem
in (5) into separate inverse problems, and only learn the inverse of the unknown map K−1using
examples of the form {(yi,xi)}iby fixing the map M. If we can construct a mapping representative
ofMfrom any patient parameter set θ∈Θto state x∈ X, then as we can write K−1as follows:
K−1:Y →F−1Θ→MX (6)
we can learn F−1using training samples which only train K−1.
As we will ultimately use supervised methods and gradient descent to learn Eq. (6), we need a method
for fixing Mthat allows for mapping any arbitrary parameter set θto corresponding state x. There
are several methods in the literature for solving the forward dynamics of Mthat we might think of
to construct this mapping. These include physics-informed neural networks (PINNs) ( 60), which
train a network to approximate the solution xitofθi(xi) = 0 thereby solving M(θi)for a fixed
patient parameter set θi. Traditional PINNs learn the function xiby incorporating the differential
3equation fθi= 0 as a soft-constraint in the network’s training loss alongside a data loss. In the
setting of a ordinary differential equations, Neural ODEs ( 10) train a network to learn the differential
equation operator fθion the states xito solve for xi=M(θi)using differentiable ODE solvers.
These methods can learn M(θi)for a fixed patient parameter set θiand can be compared to the use
of a numerical differential equation solvers.
These existent approaches for solving M, however, only give the states xfor a single patient at a
time. To learn K−1by training a network through the map M, we need a method that approximates
themap as otherwise, we would need to train infinitely many separate PINNs or Neural ODEs to
cover the entirety of a plausible parameter range potentially traversed in supervised learning of (6).
Non-Invasive Data Acquisition. While we do not have direct access to the patient physiological state
xito train a model to learn K−1, the noninvasive observation yitypically measures physiological
quantities that can also be derived from the true state xi. We assume that ¯xis a physiological
variable that can be derived from both xandy, i.e.,
¯x=m(x) =g(y), (7)
where m(.)is a known function and g(.)is a labeling procedure, typically conducted manually
by a physician or automatically through a built-in algorithm in the data acquisition device. This
physiological variable represents a quantity of interest assessed by the noninvasive modality (e.g.,
breast density in mammography, blood pumping efficiency in ultrasound). These variables estab-
lish a connection between the true state xand the observation y, as they can be both simulated from
the physical model and measured based on y.
Given the setup above, our digital twin modeling problem can be formulated as follows. Given a
dataset of noninvasive measurements for npatients, D={yi}n
i=1, and a physiological variable of in-
terest ¯xi=m(xi) =g(yi), our goal is to train a model that can identify the underlying physics-based
twinM(θn+1)for a new patient n+ 1based solely on their corresponding noninvasive measurement
yn+1. We seek to do this by fixing Mand learning K−1from the data D={(yi,¯xi)}n
i=1.
2.2 Physics-Informed Self-Supervised Learning
Given the training dataset D={(yi,¯xi)}n
i=1, a typical supervised learning task is to train a model
to predict the physiological variable ¯xion the basis of the noninvasive observation yivia standard
empirical risk minimization (ERM):
bf= arg min
f1
nPn
i=1ℓ(f(yi),¯xi). (8)
The motivation for training the model bfis usually to automate the collection of physiological variables
from medical images in a clinical workflow (68). These models follow a fully data-driven approach
and do not incorporate our knowledge of how the physiological processes being measured function
on the biological or physical levels. One could think of the supervised model bfas a data-driven
model of the function g(.)in (7).
Recall that our goal is to recover the latent physical parameters θthat underlie the physiologi-
cal processes that generated the observation y. If we had oracle access to a dataset of the form
D∗={(yi, θi)}n
i=1, then a supervised solution to identifying the digital twin would be:
bf= arg min
f1
nPn
i=1ℓ(f(yi), θi). (9)
The solution to (9) provides an approximate solution to the inverse problem in (5). As we lack access
toD∗, we can only learn the solution to (5) using the observed dataset D. To this end, we propose a
two-step approach for learning the parameters θfrom y, leveraging the structural similarity between
the composite inverse problem in (5) and the pretraining/finetuning paradigm in self-supervised
learning (SSL). An illustration of the two steps is provided in Figure 2(a).
Step 1: Physics-Informed Pretext Task. In this step, we pretrain a neural network to imitate the
forward dynamics of the physics-based model, i.e., x=M(θ). We do so by first sampling ˜nsynthetic
training examples from the physics-based forward dynamics as follows:
˜θj∼Uniform (Θ),˜xj=M(˜θj),1≤j≤˜n. (10)
4We denote this synthetic dataset by eD={(˜θj,˜xj)}j. Next, we use this dataset to train a feed forward
neural network on the pretext task of predicting the patient physiological states from the physical
parameters using ERM as follows:
bϕM= arg min
ϕ1
˜nP˜n
j=1ℓ(ϕ(˜θj),˜xj). (11)
This training process distills the true physics-based model, M(θ), into the weights of a neural network
bϕM. That is, the forward pass of the network will emulate the forward dynamics of the physiological
process, i.e., x≈bϕM(θ).
Step 2: Physics-Guided Finetuning. Given the observed dataset D={(yi,¯xi)}i, we train another
model to predict the physical parameters θfrom the observed measurements yusing the loss function
bϕF= arg min
ϕ1
nPn
i=1ℓ(m(bϕM◦ϕ(yi)),¯xi). (12)
Here, the model pretrained on synthetic data from the physical simulator, bϕM, is frozen and only
the model bϕFis finetuned using real data on yand¯x. The neural network trained in Step 2, bϕF,
represents an approximate solution to the composite inverse problem in (3), i.e., bϕF(.)≈ F−1(.).
For a new patient n+ 1, we discard the pretrained model bϕM, and use the model bϕFto predict the
patient’s digital twin based on their noninvasive measurement yn+1as follows:
bθn+1=bϕF(yn+1),bxn+1=M(bθn+1). (13)
Interpretation of Physics-Informed SSL. Our proposed algorithm structurally resembles the SSL
paradigm, where, akin to SSL, we decompose our model into a “backbone” architecture and a task-
specific “head” ( 47). However, there are fundamental conceptual differences between standard SSL
approaches and ours. In standard SSL, the backbone is a high-capacity model pretrained on a pretext
task using unlabeled data to derive a general-purpose representation transferable to many downstream
tasks, while the low-capacity head is finetuned for the specific task. In our physics-informed approach,
SSL serves to constrain rather than enhance flexibility. We first pretrain the low-capacity head to
distill the laws of physics, and then finetune the high-capacity backbone model to learn a mapping that
aligns with the frozen head to produce the observed physiological variables xwhile respecting the
physical laws. In doing so, we force the backbone model to learn a mapping from the measurement y
to the physical parameters θ.
The concept of distilling a physics-based dynamic model into a data-driven one draws from engi-
neering methodologies that develop surrogate models to simplify computational complexity using
simulated data (e.g., ( 58)). This data-driven approach mirrors other supervised learning generative
strategies for solving inverse problems or system identification with known dynamics in control
theory ( 51;78). Importantly, physics-informed SSL scales efficiently with increasingly complex and
higher fidelity physical models, as its computational requirements involve one offline process (Eq.
(10) and (11)) once the synthetic data is acquired.
3 Digital Twins for Cardiovascular Hemodynamics
We apply our physics-informed SSL method to perform patient-specific Pressure–V olume (PV)
loop analysis in cardiology using echocardiography (cardiac ultrasound). Left ventricular (LV) PV
loops illustrate the LV pressure against LV volume at multiple time points during a single cardiac
cycle, providing a comprehensive view of a patient’s cardiac function and encoding various hemody-
namic parameters like stroke volume, cardiac output, ejection fraction, myocardial contractility, etc.,
which can be used to diagnose cardiovascular diseases ( 7). Traditionally, a full characterization of a
PV loop requires an invasive PV loop catheterization procedure ( 35). Our objective is to utilize a
noninvasive modality (i.e., echocardiography) to identify a digital twin for each patient, allowing us
to simulate their individualized PV loops.
Physics-based model. We utilized a lumped-parameter circuit model of cardiac hemodynamics
(i.e., blood flow), also known as the Windkessel model ( 79), as our underlying physical model M(θ).
Lumped parameter models are based on the analogy between blood flow in arterial systems and the
flow of electric current in a circuit (Figure 1). The model comprises interconnected compartments
that are equivalent to elements of an electric circuit. Resistances represent the resistance of blood flow
5(a) Physics-informed self-supervised learning(b) Augmented cardiovascular and interventional model<latexit sha1_base64="E/Wg8HGH4hZThKUKSydmBjlt0EY=">AAACAHicbVDLSsNAFJ34rPUVdeHCzWARXJVEirosunEjVLAPaEKZTG7aoZMHMxOlhGz8FTcuFHHrZ7jzb5y0WWjrgQuHc+7l3nu8hDOpLOvbWFpeWV1br2xUN7e2d3bNvf2OjFNBoU1jHoueRyRwFkFbMcWhlwggoceh642vC7/7AEKyOLpXkwTckAwjFjBKlJYG5qHzyHxQjPuQOSFRI0p4dpvnA7Nm1a0p8CKxS1JDJVoD88vxY5qGECnKiZR920qUmxGhGOWQV51UQkLomAyhr2lEQpBuNn0gxyda8XEQC12RwlP190RGQiknoac7ixvlvFeI/3n9VAWXbsaiJFUQ0dmiIOVYxbhIA/tMAFV8ogmhgulbMR0RQajSmVV1CPb8y4ukc1a3z+uNu0ateVXGUUFH6BidIhtdoCa6QS3URhTl6Bm9ojfjyXgx3o2PWeuSUc4coD8wPn8At3CXJA==</latexit>fM
Physics-based model Circuit model for LVAD interventionIntervention assignment<latexit sha1_base64="Hc5KjPpcp84dEbQk5SyZa+EQXs0=">AAAB/HicbVDLSsNAFJ3UV62vaJdugkWom5JI0S4LbtwIFewDmlAm00k7dDIJMzdCCPVX3LhQxK0f4s6/cdJmoa0HBg7n3Ms9c/yYMwW2/W2UNja3tnfKu5W9/YPDI/P4pKeiRBLaJRGP5MDHinImaBcYcDqIJcWhz2nfn93kfv+RSsUi8QBpTL0QTwQLGMGgpZFZdUMMU4J5djevuzClgC9GZs1u2AtY68QpSA0V6IzML3cckSSkAgjHSg0dOwYvwxIY4XRecRNFY0xmeEKHmgocUuVli/Bz61wrYyuIpH4CrIX6eyPDoVJp6OvJPKpa9XLxP2+YQNDyMibiBKggy0NBwi2IrLwJa8wkJcBTTTCRTGe1yBRLTED3VdElOKtfXie9y4Zz1WjeN2vtVlFHGZ2iM1RHDrpGbXSLOqiLCErRM3pFb8aT8WK8Gx/L0ZJR7FTRHxifP3/5lKY=</latexit>M(✓)Step 1: Physics-Informed Pretext Task
Step 2: Physics-Guided Finetuning
<latexit sha1_base64="iRqfxvlb2+qWlvhglwvV0mBtpIQ=">AAACA3icbVDLSsNAFJ3UV62vqDvdDBbBVUmkqMuiGzdCBfuAJoTJZNIOnUzCzEQpIeDGX3HjQhG3/oQ7/8ZJm4W2HrhwOOde7r3HTxiVyrK+jcrS8srqWnW9trG5tb1j7u51ZZwKTDo4ZrHo+0gSRjnpKKoY6SeCoMhnpOePrwq/d0+EpDG/U5OEuBEachpSjJSWPPPAeaABGSGVOcmI5p4TITXCiGU3uWfWrYY1BVwkdknqoETbM7+cIMZpRLjCDEk5sK1EuRkSimJG8pqTSpIgPEZDMtCUo4hIN5v+kMNjrQQwjIUuruBU/T2RoUjKSeTrzuJEOe8V4n/eIFXhhZtRnqSKcDxbFKYMqhgWgcCACoIVm2iCsKD6VohHSCCsdGw1HYI9//Ii6Z427LNG87ZZb12WcVTBITgCJ8AG56AFrkEbdAAGj+AZvII348l4Md6Nj1lrxShn9sEfGJ8/A9eYaQ==</latexit>b M<latexit sha1_base64="iRqfxvlb2+qWlvhglwvV0mBtpIQ=">AAACA3icbVDLSsNAFJ3UV62vqDvdDBbBVUmkqMuiGzdCBfuAJoTJZNIOnUzCzEQpIeDGX3HjQhG3/oQ7/8ZJm4W2HrhwOOde7r3HTxiVyrK+jcrS8srqWnW9trG5tb1j7u51ZZwKTDo4ZrHo+0gSRjnpKKoY6SeCoMhnpOePrwq/d0+EpDG/U5OEuBEachpSjJSWPPPAeaABGSGVOcmI5p4TITXCiGU3uWfWrYY1BVwkdknqoETbM7+cIMZpRLjCDEk5sK1EuRkSimJG8pqTSpIgPEZDMtCUo4hIN5v+kMNjrQQwjIUuruBU/T2RoUjKSeTrzuJEOe8V4n/eIFXhhZtRnqSKcDxbFKYMqhgWgcCACoIVm2iCsKD6VohHSCCsdGw1HYI9//Ii6Z427LNG87ZZb12WcVTBITgCJ8AG56AFrkEbdAAGj+AZvII348l4Md6Nj1lrxShn9sEfGJ8/A9eYaQ==</latexit>b MPhysics-informed layersData-driven layers<latexit sha1_base64="OmRh3WFy5asUndKwe/MbwsrnwU0=">AAACA3icbVDLSsNAFJ3UV62vqDvdDBbBVUmkqMuiIC4r2Ac0IUwmk3boZBJmJkoJATf+ihsXirj1J9z5N07aLLT1wIXDOfdy7z1+wqhUlvVtVJaWV1bXquu1jc2t7R1zd68r41Rg0sExi0XfR5IwyklHUcVIPxEERT4jPX98Vfi9eyIkjfmdmiTEjdCQ05BipLTkmQfOAw3ICKnMSUY095wIqRFGLLvOPbNuNawp4CKxS1IHJdqe+eUEMU4jwhVmSMqBbSXKzZBQFDOS15xUkgThMRqSgaYcRUS62fSHHB5rJYBhLHRxBafq74kMRVJOIl93FifKea8Q//MGqQov3IzyJFWE49miMGVQxbAIBAZUEKzYRBOEBdW3QjxCAmGlY6vpEOz5lxdJ97RhnzWat81667KMowoOwRE4ATY4By1wA9qgAzB4BM/gFbwZT8aL8W58zForRjmzD/7A+PwB+SWYYg==</latexit>b F
<latexit sha1_base64="Orsd8Uetr8OD0z/KWA5V57CS7gM=">AAAB8XicbVDLSgMxFL1TX7W+qi7dBIvgqsxIUZdFNy4r2Ae2Q8mkmTY0kwxJRhiG/oUbF4q49W/c+Tdm2llo64HA4Zx7ybkniDnTxnW/ndLa+sbmVnm7srO7t39QPTzqaJkoQttEcql6AdaUM0HbhhlOe7GiOAo47QbT29zvPlGlmRQPJo2pH+GxYCEj2FjpcRBhMwnCLJ0NqzW37s6BVolXkBoUaA2rX4ORJElEhSEca9333Nj4GVaGEU5nlUGiaYzJFI9p31KBI6r9bJ54hs6sMkKhVPYJg+bq740MR1qnUWAn84R62cvF/7x+YsJrP2MiTgwVZPFRmHBkJMrPRyOmKDE8tQQTxWxWRCZYYWJsSRVbgrd88irpXNS9y3rjvlFr3hR1lOEETuEcPLiCJtxBC9pAQMAzvMKbo50X5935WIyWnGLnGP7A+fwBAbuRJg==</latexit>y<latexit sha1_base64="6m6ioqMAVC3YoalH+icgQFJdOJ4=">AAAB+XicbVBNS8NAEN3Ur1q/oh69BIvgqSQi6rHoxWMF+wFNKJvNpFm6+WB3Uimh/8SLB0W8+k+8+W/ctjlo64OBx3szzMzzM8EV2va3UVlb39jcqm7Xdnb39g/Mw6OOSnPJoM1SkcqeTxUInkAbOQroZRJo7Avo+qO7md8dg1Q8TR5xkoEX02HCQ84oamlgmu4TDyCiWLgYAdLpwKzbDXsOa5U4JamTEq2B+eUGKctjSJAJqlTfsTP0CiqRMwHTmpsryCgb0SH0NU1oDMor5pdPrTOtBFaYSl0JWnP190RBY6Umsa87Y4qRWvZm4n9eP8fwxit4kuUICVssCnNhYWrNYrACLoGhmGhCmeT6VotFVFKGOqyaDsFZfnmVdC4azlXj8uGy3rwt46iSE3JKzolDrkmT3JMWaRNGxuSZvJI3ozBejHfjY9FaMcqZY/IHxucPI/iUAA==</latexit>b✓<latexit sha1_base64="WnVjwh0mHQ0xt7NGE74cDSjLSPc=">AAAB+XicbVDLSsNAFL2pr1pfUZduBovgqiQi2mXBjcsK9gFNKJPppB06mYSZSbGE/IkbF4q49U/c+TdO2iy09cDA4Zx7uWdOkHCmtON8W5WNza3tnepubW//4PDIPj7pqjiVhHZIzGPZD7CinAna0Uxz2k8kxVHAaS+Y3hV+b0alYrF41POE+hEeCxYygrWRhrbtBVhmXoT1JAizpzwf2nWn4SyA1olbkjqUaA/tL28UkzSiQhOOlRq4TqL9DEvNCKd5zUsVTTCZ4jEdGCpwRJWfLZLn6MIoIxTG0jyh0UL9vZHhSKl5FJjJIqJa9QrxP2+Q6rDpZ0wkqaaCLA+FKUc6RkUNaMQkJZrPDcFEMpMVkQmWmGhTVs2U4K5+eZ10rxruTeP64breapZ1VOEMzuESXLiFFtxDGzpAYAbP8ApvVma9WO/Wx3K0YpU7p/AH1ucPSWWUEQ==</latexit>¯x
<latexit sha1_base64="NEih1PfbZkvIu98FBUbVpmsNXaY=">AAAB7XicbVBNS8NAEN3Ur1q/qh69LBbBU0mkaI8FLx4r2A9oQ9lsJ+3azSbsToQS+h+8eFDEq//Hm//GbZuDtj4YeLw3w8y8IJHCoOt+O4WNza3tneJuaW//4PCofHzSNnGqObR4LGPdDZgBKRS0UKCEbqKBRYGETjC5nfudJ9BGxOoBpwn4ERspEQrO0ErtPo4B2aBccavuAnSdeDmpkBzNQfmrP4x5GoFCLpkxPc9N0M+YRsElzEr91EDC+ISNoGepYhEYP1tcO6MXVhnSMNa2FNKF+nsiY5Ex0yiwnRHDsVn15uJ/Xi/FsO5nQiUpguLLRWEqKcZ0/jodCg0c5dQSxrWwt1I+ZppxtAGVbAje6svrpH1V9a6rtftapVHP4yiSM3JOLolHbkiD3JEmaRFOHskzeSVvTuy8OO/Ox7K14OQzp+QPnM8fo+OPJw==</latexit>✓<latexit sha1_base64="xNMLo2j2qe7Dwi0xwH6PhyOKzII=">AAAB8XicbVDLSgMxFL1TX7W+qi7dBIvgqsyIaJcFNy4r2Ae2pWTSTBuayQzJHbEM/Qs3LhRx69+482/MtLPQ1gOBwzn3knOPH0th0HW/ncLa+sbmVnG7tLO7t39QPjxqmSjRjDdZJCPd8anhUijeRIGSd2LNaehL3vYnN5nffuTaiEjd4zTm/ZCOlAgEo2ilh15IcewH6dNsUK64VXcOskq8nFQgR2NQ/uoNI5aEXCGT1Jiu58bYT6lGwSSflXqJ4TFlEzriXUsVDbnpp/PEM3JmlSEJIm2fQjJXf2+kNDRmGvp2Mktolr1M/M/rJhjU+qlQcYJcscVHQSIJRiQ7nwyF5gzl1BLKtLBZCRtTTRnakkq2BG/55FXSuqh6V9XLu8tKvZbXUYQTOIVz8OAa6nALDWgCAwXP8ApvjnFenHfnYzFacPKdY/gD5/MH/SWRGw==</latexit>xLV VolumeLV Pressure<latexit sha1_base64="WnVjwh0mHQ0xt7NGE74cDSjLSPc=">AAAB+XicbVDLSsNAFL2pr1pfUZduBovgqiQi2mXBjcsK9gFNKJPppB06mYSZSbGE/IkbF4q49U/c+TdO2iy09cDA4Zx7uWdOkHCmtON8W5WNza3tnepubW//4PDIPj7pqjiVhHZIzGPZD7CinAna0Uxz2k8kxVHAaS+Y3hV+b0alYrF41POE+hEeCxYygrWRhrbtBVhmXoT1JAizpzwf2nWn4SyA1olbkjqUaA/tL28UkzSiQhOOlRq4TqL9DEvNCKd5zUsVTTCZ4jEdGCpwRJWfLZLn6MIoIxTG0jyh0UL9vZHhSKl5FJjJIqJa9QrxP2+Q6rDpZ0wkqaaCLA+FKUc6RkUNaMQkJZrPDcFEMpMVkQmWmGhTVs2U4K5+eZ10rxruTeP64breapZ1VOEMzuESXLiFFtxDGzpAYAbP8ApvVma9WO/Wx3K0YpU7p/AH1ucPSWWUEQ==</latexit>¯xLV ejection fraction
Figure 2: Illustration of Med-Real2Sim digital twins for cardiovascular hemodynamics. (a) Pictorial depic-
tion of the two-step physics-informed SSL algorithm proposed in Section 2.2. (b) Five state lumped-parameter
electric circuit model of cardiac hemodynamics from ( 66). Here x(t) = [x1(t), x2(t), x3(t), x4(t), x5(t)] =
[PLV(t), PLA(t), PA(t), PAo(t), Q(t)]describes the voltages x1, x2, x3, x4or pressures in the left-ventricle,
left atrium, arteries, and aorta, respectively, and total flow x5. The LV AD is modeled through an electric circuit
connected to the digital twin via a switch. An LV AD intervention is applied if the switch is closed.
within the blood vessels, accounting for pressure energy losses in the system; capacitors represent the
amount of stored stressed blood; diodes describe mitral and aortic valves, and inductances describe
the inertial effects due to blood acceleration ( 83). The blood flow within the system follows the
standard Kirchoff’s voltage and current laws. A patient’s digital twin is represented by an electric
circuit with a specific parameter instance θ, where θcorresponds to the components of the electric
circuit. The patient’s physiological state xcorresponds to circuit currents and voltages (i.e., blood
flow and pressures), which enables simulation of the patient’s PV loop in any local heart structure. In
this study, we adopt the five-state electric circuit model from (66), illustrated in Figure 2(b).
The cardiac LV pressure PLV(t)and LV volume VLV(t)are related by the elastance function,
E(t) =PLV(t)/(VLV(t)−Vd),which is modeled using a closed form in Eq. (15) in the Appendix.
Evolution of xover time tis governed by a system of ODEs derived from current conservation laws
(Appendix Eq. (20)). The model is parameterized by a vector θcorresponding to bounds on the
elastance, circuit resistance, capacitance, inductance and initial states (see Appendix A.2). Given the
patient-specific parameters θifor the ODE system and elastance function governing cardiac dynamics,
we have a unique solution for xi, i.e.,Mis injective (Appendix B).
Modeling interventions. A left-ventricular assistance device (LV AD) is a blood pump that helps
improve cardiac function in severely ill patients. The effect of implanting an LV AD is modeled
in with the addition of one state variable describing blood flow through the device and a tuneable
parameter. The impact of LV AD on blood flow can be modeled by attaching an exogenous electric
circuit to M(θ)to form an augmented model fM(θ)(Figure 2(b)). Details on the mathematical model
of LV AD are in Appendix A.
Noninvasive data. For each patient i, we have access to an echocardiogram in the form of ultrasound
video data yiand a physician labeled measurement of the LV ejection fraction ¯xi. Echocardiography
is a widely used noninvasive modality for diagnosing cardiovascular diseases; it can directly provide
volumes but not pressure measurements. Our goal is to use the echocardiography clip for a patient to
predict their entire PV loop through a fully noninvasive process.
4 Experiments
4.1 Echocardiography Data
We test our physics-informed SSL (Med-Real2Sim) approach using two echocardiography datasets:
EchoNet and CAMUS. The CAMUS dataset ( 44) consists of 500 fully annotated cardiac ultrasound
videos in 2-chamber view, each with LV volume labels for end systole and diastole ( VLV(tES)
andVLV(tED)). The videos were processed by spatial and temporal padding, with standardized
30-frame videos with a resolution of 256 ×256 pixels. The EchoNet dataset ( 53) comprises 10,030
apical-4-chamber echocardiography videos from routine clinical care at Stanford University Hospital
6also labeled with VLV(tES)andVLV(tED). These videos were cropped, masked, and down-sampled
to a resolution of 112 ×112 pixels using cubic interpolation. The CAMUS dataset was split into 450
training samples and 50 validation and testing samples. The EchoNet dataset was partitioned into
7,466 training, 1,288 validation, and 1,276 testing samples.
4.2 Simulating individualized PV loops via digital twins
We train a 3D-CNN implemented using Pytorch to output a subset of the model parameters θi. The
network consists of four convolutional layers, each followed by max pooling and concluded by a
convolutional layer with global average pooling and two fully connected layers. We choose seven of
the model parameters listed in Table 3 to be learned in our model: mitral valve resistance RM, aortic
valve resistance RA, maximum elastance Emax, minimum elastance Emin, theoretical LV volume
at zero pressure Vd, start LV volume VLV(0), and heart cycle duration TC. The remainder of the
parameters are fixed to literature values (see Table 3). We enforce restrictions on the parameters
by normalizing values in our activation layer, which scales parameters using a sigmoid function to
ensure parameters fall into realistic bounded ranges (as in Table 3). Parameters θiare then passed
to a separately trained fixed-weight feed forward neural network bϕMto output the labeled values
of¯xifrom which we construct training loss as the mean square difference between predicted and
physician-labeled VLV(tES)andVLV(tED).
The network bϕMis pretrained by generating 3,840 synthetic data points linearly sampled from
realistic parameter ranges mapping parameters θitoVLV(tED)andVLV(tES)using a numerical
ODE solver ( 73). We use two fully connected layers trained to minimize mean square error between
predicted and outputted VLV(tED)andVLV(tES).
Once predicting θi, we can numerically solve for the complete state vector xifor each patient.
The first state in xiis the patient’s estimated LV volume VLV. The elastance function (Eq. (15))
allows us to obtain LV pressure PLV(t)from volume. We plot the two functions PLV,VLVagainst
each other over time to obtain the PV loops. This process is deterministic, as the ODEs/elastance
function are fixed by patient parameters θi. We also use VLV(tED)andVLV(tES)to compute
ejection fraction (EF) as EF= (VLV(tED)−VLV(tES))/VLV(tED).We compare parameters and
patient PV loops across EF, a routine indicator giving information on cardiac function.
Our model has good correlation between labeled
and simulated end-systolic and end-diastolic vol-
umes. Our approach, Med-Real2Sim, achieves a
mean absolute error (MAE) of 6.81% for CAMUS
and 5.40% for EchoNet in predicting EF (Table
1), comparable to a baseline that uses a 3D-CNN
and fully connected layers to directly approximate
F−1using supervised learning without passing the
physics-constrained layers bϕM.DatasetMAE (EF)
Supervised 3DCNN Med-Real2Sim
CAMUS 6.58 6.81
EchoNet 5.62 5.40
Table 1: Mean Absolute Error (MAE) for true and
predicted EF (in %) by supervised learning and
simulated ejection fraction using Med-Real2Sim.
Our model predicts PV loops that vary by labeled EF demonstrating that the model learns variability
in patient physical state from our labels (Figure 4(right)). Predicted parameters also vary across
patient EF in our model, and the relative variation in high- and low-EF patient groups were replicated
across EchoNet and CAMUS (Figure 3). Notably, the relationship between the parameters and patient
groups by EF concur with intuited patterns. Increases in EmaxandEmingive an increased differential
between pressure and volume, which is more plausible at higher EF. RMandRAare the circuit
resistances associated to the mitral valve and aortic valve, respectively. In the mathematical model,
increases in these resistances must either increase pressure or decrease blood flow by Ohm’s law.
Decreases in either resistance clinical is considered a sign of increased hemodynamic burden, but its
diagnostic value for indications including stenosis are controversial and a decrease in resistance is not
necessarily predictive of reduce EF ( 46;32). In mitral regurgitation, valve resistance decreases, but
EF is often increased in the beginning of the disease, which could contribute to the inverse pattern for
predicted RM(52).
4.3 Unsupervised disease diagnosis
The PV loops simulated in patient digital twins can serve as indicators for certain diseases that may
not be directly labeled in the dataset. Variations in PV loops clinically enables the diagnosis of diverse
cardiac abnormalities, which cannot be predicted using EF and LV volumes alone ( 65). We acquired
physician labels for Mitral Stenosis (MS) for a subset of the patients in the EchoNet dataset. These
7(a) Learned parameters of the physics-based models in EchoNet and CAMUS(b) Simulated PV loops in patients diagnosed with mitral stenosis
EchoNetCAMUS
Average simulated PV loops in digital twins of MS vs. non-MS patients (EchoNet)Theoretical PV loops in MS vs. non-MS patients
Mitral StenosisNo Mitral StenosisFigure 3: (a) Learned parameters of the digital twin in high- and low-EF patient groups within the EchoNet an
CAMUS datasets. (b) Comparison of average (simulated) PV loops in digital twins of non-Mitral Stenosis (MS)
patients and MS patients. The plot illustrates differences in simulated hemodynamics in the two groups and
agrees with theoretical PV loops for MS patients ( 48). Depicting of the theoretical PV loop for MS is courtesy
ofhttps://cvphysiology.com/heart-disease/hd009a .
labels were not included in the training data, and are not correlated with the EF measurement used to
train our model (i.e., AUC of EF in predicting MS was 0.5). A total of 263 of 10,024 patients were
identified as having MS. We randomly sampled 100 patients with MS and 100 patients without MS
from the available dataset of 10,024 patients. We computed an average PV-loop for both the MS and
non-MS groups and compared their respective averages to analyze potential differences in Figure
3(b). The model trend captures a distinctive patterns associated with MS: MS reduces LV pre-load
and increases pulmonary venous pressures as illustrated in the right plot of Figure 3(b) ( 3;48), which
aligns with the expected effect of MS on patients’ PV loop patterns.
4.4 In-silico clinical trials
Using a patient’s digital twin, we can simulate their counterfactual PV loops under a hypothetical
intervention in-silico to estimate its effect on the patient or to optimize the treatment parameters (e.g.,
dosage) ( 56;72). Here, we demonstrate the feasibility of in-silico trial simulations under baseline
and intervention conditions with the patient-specific digital twin M(θi)(Figures 4(a)). In our setting,
the lumped-parameter model of ( 66) is extended by the inclusion of one new state variable and five
new parameters to model the addition of an LV AD. Tuning these new parameters and utilizing our
model output allows us to simulate the effect of LV AD on an individual patient in a fully non-invasive
manner.
The LV AD intervention has been shown to increase EF in vivo. We demonstrate the same result
in-silico using the ( 66) model (Figure 4). The average EF for the CAMUS and EchoNet populations
increase by 17.6% and 18.9%, respectively, with the addition of an LV AD, consistent with reported
findings ( 20;18)), with patients having lower pre-LV AD ejection fractions experiencing more sig-
nificant increases. Figures 4(c) illustrates the distributional change of EF before and after LV AD
implantation, indicating a significant right shift in the EF distribution following the procedure.
Furthermore, the influence of rotation speed on the PV loop dynamics is a crucial factor in optimizing
the therapeutic effects of LV ADs. The rotation speed determines the rate at which blood is drawn
from the left ventricle and ejected into the systemic circulation, directly affecting the pressure-volume
relationship. Studies, such as those by Simaan et al. ( 66), have explored the dynamic behavior of
LV ADs under varying conditions, including different initial rotation speeds. It is essential to note that
the choice of rotation speed should be tailored to individual patient needs for optimal therapeutic
outcomes. The impact of initial rotation speed on the PV loop, such as changes in end-diastolic and
end-systolic volumes, should be carefully considered in the calibration process (Figure 4(b)).
4.5 Comparison of physics-informed approaches
Our physics-informed pretext task is a computationally efficient generative approximation of the
dynamics of the map M. We created a second synthetic dataset of 1000 randomly sampled points
to test the out of sample prediction of the physics-constrained layers bϕMand achieve an MAE of
2.30 on EF. The distribution of the loss is uniform across plausible parameter sets suggesting that
our network is not subject to poor approximations in extreme cases (Appendix Figure 9). In contrast,
other approaches to learn the forward dynamics of differential equation models include PINNs and
8(a) Simulated effect of LVAD in one patient
(b) Simulated effect of tuning pump speed
(c) Impact of LVAD on EF in the EchoNet and CAMUS populationsEchoNetCAMUS
LV Volume (mL)
Time (sec)Time (sec)LV Pressure (mmHg)LV Volume (mL)Pressure (mmHg)
LV PAortic PArterial PLeft atrial P
Figure 4: Counterfactual simulations of the LV AD intervention (left): (a),(b),(c). PV loops for patients
with normal, high, and low EF (right).
Neural ODEs. As previously pointed out, these models are trained to learn the dynamics of a single
patient, which is incompatible with our goal of learning Eq. (6) with supervised learning.
We compare the ability of our approach to learn the dynamics of the cardiac hemodynamics model for
patients to PINN and Neural ODE methods and find it learns just as well on fewer data points (Table
2). Separate PINN and Neural ODE models are trained for each of N= 50 sets of patient parameters
θi. We generated using numerical methods a synthetic time series of 60 points for each of the five
states in the cardiac model: D={xi}N
i=1. From these synthetic data, we trained both a PINN and
Neural ODE approach to predict xifor each of the patients computing average MAE on the 20 best
results (Table 2). Recall that our method ϕMis trained with volume labels (one state) only. We found
that only volume labels performed poorly in the Neural ODE settings (Appendix 12). PINNs were
implemented in Tensorflow ( 16). Neural ODEs were implemented in Pytorch using torchdiffeq ( 11).
Architecture MAE Training Time (per Epoch) Cost per ϕF−1Epoch
Model Loss Avg. Pt
EFPt Specific
Model (Avg.
N=20)Population
ModelMemory Time
PINN xi||fθi||+||xi(t)−ˆxi(t)|| 7.67
(N=20)0.16s NA O(N·L)O(N·L)
Neural
ODEfθi||xi(t)−ˆxi(t)|| 3.39 (N =
20)6.12s NA O(N) O(N·L)
bϕM M || xi1(t)−ˆxi1(t)|| 2.30
(N=1000)NA 0.01s O(L) O(L)
Table 2: Comparison of physics informed learning. We show the Mean Absolute Error (MAE) on ejection
fraction (EF). Here Nis the number of patient parameter sets and Lis the number of layers in the network ( bϕM
or PINN) or the implicit layers i.e. function evaluations of a Neural ODE. Pt = patient.
5 Conclusion
We present methodology, Med-Real2Sim, for non-invasive prediction of patient specific physics-
based models directly from imaging that can form the basis for further development of medical
digital twins. Our experiments showcase the ability of these methods to personalize a high fidelity
physics-based model from video data. We demonstrate that information beyond labels is learned in
the setting of echocardiography for cardiac pressure-volume loops. Our work may be extended to
improve mathematical modeling for medical or non-medical applications. Latent parameters in our
experimental setting are clinically informative, and our methodology gives a non-invasive process for
estimating their value. Further development of our methods could contribute new non-invasive direct
ways of computing such parameters and provide the basis for in-silico digital twin studies.
Limitations We highlight that our model experiments are limited in their clinical validation. In using
only publicly available datasets with limited labels, we are not able to compare measurements of heart
resistance or left-ventricular pressure, which would be necessary to fine-tune such a model for clinical
use. While the ability to predict latent states and parameters is the core novelty of our research and
9approach, acquiring further data to on these latent states could improve the model substantially. This
is a critical future direction for work in building digital twins with our methodology.
Acknowledgements
The authors would like to thank Ellen Roche, Caglar Ozturk, Yiling Fan, Luca Rosalia, and Yulun
Wu for the helpful discussions.
This material is based upon work supported by the National Science Foundation Graduate Research
Fellowship under Grant No. DGE 2146752.
References
[1]Abawi, D., Rinaldi, T., Faragli, A., Pieske, B., Morris, D. A., Kelle, S., Tschöpe, C., Zito, C.,
and Alogna, A. The non-invasive assessment of myocardial work by pressure-strain analysis:
clinical applications. Heart Failure Reviews , 27(4):1261–1279, 2022.
[2]Baldock, A., Rockne, R., Boone, A., Neal, M., Bridge, C., Guyman, L., Mrugala, M., Rockhill,
J., Swanson, K., Trister, A., Hawkins-Daarud, A., and Corwin, D. From patient-specific
mathematical neuro-oncology to precision medicine. Frontiers in Oncology , 3, 2013. ISSN
2234-943X. doi: 10.3389/fonc.2013.00062.
[3]Bastos, M. B., Burkhoff, D., Maly, J., Daemen, J., Den Uil, C. A., Ameloot, K., Lenzen, M.,
Mahfoud, F., Zijlstra, F., Schreuder, J. J., et al. Invasive left ventricle pressure–volume analysis:
overview and practical clinical implications. European heart journal , 41(12):1286–1297, 2020.
[4]Björnsson, B., Borrebaeck, C., Elander, N., Gasslander, T., Gawel, D. R., Gustafsson, M.,
Jörnsten, R., Lee, E. J., Li, X., Lilja, S., et al. Digital twins to personalize medicine. Genome
medicine , 12:1–4, 2020.
[5]Bora, A., Price, E., and Dimakis, A. G. AmbientGAN: Generative models from lossy measure-
ments. In International Conference on Learning Representations , 2018.
[6]Bruynseels, K., Santoni de Sio, F., and van den Hoven, J. Digital twins in health care: Ethical
implications of an emerging engineering paradigm. Frontiers in Genetics , 9, 2018. ISSN
1664-8021. doi: 10.3389/fgene.2018.00031.
[7] Burkhoff, D. Pressure-volume loops in clinical research: a contemporary view, 2013.
[8]Burkhoff, D., Mirsky, I., and Suga, H. Assessment of systolic and diastolic ventricular properties
via pressure-volume analysis: a guide for clinical, translational, and basic researchers. American
Journal of Physiology-Heart and Circulatory Physiology , 289(2):H501–H512, 2005. doi:
10.1152/ajpheart.00138.2005. PMID: 16014610.
[9]Canzoneri, M., De Luca, A., and Harttung, J. Digital twins: A general overview of the biopharma
industry. Digital Twins: Applications to the Design and Optimization of Bioprocesses , pp. 167–
184, 2021.
[10] Chen, R. T., Rubanova, Y ., Bettencourt, J., and Duvenaud, D. K. Neural ordinary differential
equations. Advances in neural information processing systems , 31, 2018.
[11] Chen, R. T. Q. torchdiffeq, 2018. URL https://github.com/rtqichen/torchdiffeq .
[12] Choi, S., Boston, J., Thomas, D., and Antaki, J. F. Modeling and identification of an axial flow
blood pump. In Proceedings of the 1997 American Control Conference (Cat. No. 97CH36041) ,
volume 6, pp. 3714–3715. IEEE, 1997.
[13] Corral-Acero, J., Margara, F., Marciniak, M., Rodero, C., Loncaric, F., Feng, Y ., Gilbert, A.,
Fernandes, J. F., Bukhari, H. A., Wajdan, A., et al. The ‘digital twin’to enable the vision of
precision cardiology. European heart journal , 41(48):4556–4564, 2020.
[14] Croatti, A., Gabellini, M., Montagna, S., and Ricci, A. On the integration of agents and digital
twins in healthcare. Journal of Medical Systems , 44:1–8, 2020.
10[15] Cuomo, S., Di Cola, V . S., Giampaolo, F., Rozza, G., Raissi, M., and Piccialli, F. Scientific
machine learning through physics–informed neural networks: Where we are and what’s next.
Journal of Scientific Computing , 92(3):88, 2022.
[16] Deguchi, S., Shibata, Y ., and Asai, M. Unknown parameter estimation using physics-informed
neural networks with noised observation data. Journal of Japan Society of Civil Engineers, Ser.
A2 (Applied Mechanics (AM)) , 77(2), 2021. doi: 10.2208/jscejam.77.2_I_35.
[17] del Álamo, M. Deep learning for inverse problems with unknown operator. Electronic Journal
of Statistics , 17(1):723 – 768, 2023. doi: 10.1214/23-EJS2114.
[18] Drazner, M. H. Left Ventricular Assist Devices in Advanced Heart Failure. Jama , 328(12):
1207–1209, 2022. ISSN 15383598. doi: 10.1001/jama.2022.16348.
[19] Dubois, A., Broadway, D., Stark, A., Tschudin, M., Healey, A., Huber, S., Tetienne, J.-P.,
Greplova, E., and Maletinsky, P. Untrained physically informed neural network for image
reconstruction of magnetic field sources. Physical review applied , 18(6), 2022. ISSN 2331-
7019.
[20] Dunlay, S., Park, S., Chandrasekaran, K., Choi, J.-O., Pereira, N., Joyce, L., Daly, R., Stulak,
J., and Kushwaha, S. Changes in Left Ventricular Ejection Fraction Following Implantation
of Left Ventricular Assist Device as Destination Therapy. The Journal of Heart and Lung
Transplantation , 32(4):S116, 2013. ISSN 10532498. doi: 10.1016/j.healun.2013.01.244.
[21] Dupont, E., Doucet, A., and Teh, Y . W. Augmented neural odes, 2019.
[22] Erol, T., Mendi, A. F., and Do ˘gan, D. The digital twin revolution in healthcare. In 2020 4th
International Symposium on Multidisciplinary Studies and Innovative Technologies (ISMSIT) ,
pp. 1–7, 2020. doi: 10.1109/ISMSIT50672.2020.9255249.
[23] Ferreira, A., Chen, S., Galati, D. G., Simaan, M. A., and Antaki, J. F. A dynamical state space
representation and performance analysis of a feedback controlled rotary left ventricular assist
device. In ASME International Mechanical Engineering Congress and Exposition , volume
42169, pp. 617–626, 2005.
[24] Filippo, M. D., Damiani, C., Vanoni, M., Maspero, D., Mauri, G., Alberghina, L., and Pescini,
D.Single-cell Digital Twins for Cancer Preclinical Investigation , pp. 331–343. Springer US,
New York, NY , 2020. ISBN 978-1-0716-0159-4. doi: 10.1007/978-1-0716-0159-4_15.
[25] Gottesman, O., Assadi, A., Mazwi, M., Shalit, U., Eytan, D., et al. icvs-inferring cardio-vascular
hidden states from physiological signals available at the bedside. Plos Computational Biology ,
19(9):e1010835–e1010835, 2023.
[26] Grandits, T., Pezzuto, S., Costabal, F. S., Perdikaris, P., Pock, T., Plank, G., and Krause,
R. Learning atrial fiber orientations and conductivity tensors from intracardiac maps using
physics-informed neural networks. In Ennis, D. B., Perotti, L. E., and Wang, V . Y . (eds.), Func-
tional Imaging and Modeling of the Heart , pp. 650–658, Cham, 2021. Springer International
Publishing.
[27] Gray, R. A. and Pathmanathan, P. Patient-specific cardiovascular computational modeling:
diversity of personalization and challenges. Journal of cardiovascular translational research ,
11:80–88, 2018.
[28] Hand, P. and Joshi, B. Global guarantees for blind demodulation with generative priors. In
Wallach, H., Larochelle, H., Beygelzimer, A., d 'Alché-Buc, F., Fox, E., and Garnett, R. (eds.),
Advances in Neural Information Processing Systems , volume 32. Curran Associates, Inc., 2019.
[29] Herrero Martin, C., Oved, A., Chowdhury, R. A., Ullmann, E., Peters, N. S., Bharath, A. A.,
and Varela, M. Ep-pinns: Cardiac electrophysiology characterisation using physics-informed
neural networks. Frontiers in Cardiovascular Medicine , 8, 2022. ISSN 2297-055X. doi:
10.3389/fcvm.2021.768419.
11[30] Hirschvogel, M., Jagschies, L., Maier, A., Wildhirt, S. M., and Gee, M. W. An in silico twin for
epicardial augmentation of the failing heart. International Journal for Numerical Methods in
Biomedical Engineering , 35(10):e3233, 2019. doi: https://doi.org/10.1002/cnm.3233. e3233
cnm.3233.
[31] Ienca, M., Ferretti, A., Hurst, S., Puhan, M., Lovis, C., and Vayena, E. Considerations for ethics
review of big data health research: A scoping review. PloS one , 13(10):e0204937, 2018.
[32] Izgi, C., Ozdemir, N., Cevik, C., Ozveren, O., Bakal, R. B., Kaymaz, C., and Ozkan, M.
Mitral valve resistance as a determinant of resting and stress pulmonary artery pressure in
patients with mitral stenosis: a dobutamine stress study. Journal of the American Society of
Echocardiography , 20(10):1160–1166, 2007.
[33] Jagtap, A. D., Kharazmi, E., and Karniadakis, G. E. Conservative physics-informed neural
networks on discrete domains for conservation laws: Applications to forward and inverse
problems. Computer Methods in Applied Mechanics and Engineering , 365:113028, 2020.
[34] Jin, K. H., McCann, M. T., Froustey, E., and Unser, M. Deep convolutional neural network for
inverse problems in imaging. IEEE Transactions on Image Processing , 26(9):4509–4522, 2017.
doi: 10.1109/TIP.2017.2713099.
[35] Kass, D. A., Yamazaki, T., Burkhoff, D., Maughan, W. L., and Sagawa, K. Determination of left
ventricular end-systolic pressure-volume relationships by the conductance (volume) catheter
technique. Circulation , 73(3):586–595, 1986.
[36] Kass, D. A., Md, M. M., Phd, W. G., Brinker Fsca, Jeffrey A., M., and Maughan, W. L.
Use of a conductance (volume) catheter and transient inferior vena caval occlusion for rapid
determination of pressure-volume relationships in man. Catheterization and Cardiovascular
Diagnosis , 15(3):192–202, 1988. doi: https://doi.org/10.1002/ccd.1810150314.
[37] Kharazmi, E., Zhang, Z., and Karniadakis, G. E. hp-vpinns: Variational physics-informed
neural networks with domain decomposition. Computer Methods in Applied Mechanics and
Engineering , 374:113547, 2021.
[38] Kind, T., Faes, T. J., Lankhaar, J.-W., V onk-Noordegraaf, A., and Verhaegen, M. Estimation
of three-and four-element windkessel parameters using subspace model identification. IEEE
Transactions on Biomedical Engineering , 57(7):1531–1538, 2010.
[39] Kissas, G., Yang, Y ., Hwuang, E., Witschey, W. R., Detre, J. A., and Perdikaris, P. Machine
learning in cardiovascular flows modeling: Predicting arterial blood pressure from non-invasive
4d flow mri data using physics-informed neural networks. Computer Methods in Applied
Mechanics and Engineering , 358:112623, 2020. ISSN 0045-7825. doi: https://doi.org/10.1016/
j.cma.2019.112623.
[40] Krishnapriyan, A., Gholami, A., Zhe, S., Kirby, R., and Mahoney, M. W. Characterizing
possible failure modes in physics-informed neural networks. In Ranzato, M., Beygelzimer, A.,
Dauphin, Y ., Liang, P., and Vaughan, J. W. (eds.), Advances in Neural Information Processing
Systems , volume 34, pp. 26548–26560. Curran Associates, Inc., 2021.
[41] Kupyn, O., Budzan, V ., Mykhailych, M., Mishkin, D., and Matas, J. Deblurgan: Blind motion
deblurring using conditional adversarial networks. In Proceedings of the IEEE Conference on
Computer Vision and Pattern Recognition (CVPR) , June 2018.
[42] Lai, Z., Mylonas, C., Nagarajaiah, S., and Chatzi, E. Structural identification with physics-
informed neural ordinary differential equations. Journal of Sound and Vibration , 508:116196,
2021.
[43] Le, M., Delingette, H., Kalpathy-Cramer, J., Gerstner, E. R., Batchelor, T., Unkelbach, J., and
Ayache, N. Mri based bayesian personalization of a tumor growth model. IEEE transactions on
medical imaging , 35(10):2329–2339, 2016. ISSN 0278-0062.
12[44] Leclerc, S., Smistad, E., Pedrosa, J., Ostvik, A., Cervenansky, F., Espinosa, F., Espeland, T.,
Berg, E. A. R., Jodoin, P. M., Grenier, T., Lartizien, C., Dhooge, J., Lovstakken, L., and
Bernard, O. Deep Learning for Segmentation Using an Open Large-Scale Dataset in 2D
Echocardiography. IEEE transactions on medical imaging , 38(9):2198–2210, 2019. ISSN
1558254X. doi: 10.1109/TMI.2019.2900516.
[45] Marwick, T. H. Ejection fraction pros and cons. Journal of the American College of Cardiology ,
72(19):2360–2379, 2018. doi: 10.1016/j.jacc.2018.08.2162.
[46] Mascherbauer, J., Schima, H., Rosenhek, R., Czerny, M., Maurer, G., and Baumgartner, H.
Value and limitations of aortic valve resistance with particular consideration of low flow–low
gradient aortic stenosis: an in vitro study. European heart journal , 25(9):787–793, 2004.
[47] Misra, I. and Maaten, L. v. d. Self-supervised learning of pretext-invariant representations.
InProceedings of the IEEE/CVF conference on computer vision and pattern recognition , pp.
6707–6717, 2020.
[48] Motshabi-Chakane, P. Cardiovascular pressure-volume loops. Southern African Journal of
Anaesthesia and Analgesia , pp. 1–5, 2023.
[49] Mousavi, A., Patel, A. B., and Baraniuk, R. G. A deep learning approach to structured signal
recovery. In 2015 53rd Annual Allerton Conference on Communication, Control, and Computing
(Allerton) , pp. 1336–1343, 2015. doi: 10.1109/ALLERTON.2015.7447163.
[50] Okegbile, S. D., Cai, J., Niyato, D., and Yi, C. Human digital twin for personalized healthcare:
Vision, architecture and future directions. IEEE Network , 37(2):262–269, 2023. doi: 10.1109/
MNET.118.2200071.
[51] Ongie, G., Jalal, A., Metzler, C. A., Baraniuk, R., Dimakis, A. G., and Willett, R. M. Deep
learning techniques for inverse problems in imaging. IEEE Journal on Selected Areas in
Information Theory , 1:39–56, 2020.
[52] O’Rourke, R. A. and Crawford, M. H. Mitral valve regurgitation. Current problems in
cardiology , 9(2):1–52, 1984.
[53] Ouyang, D., He, B., Ghorbani, A., Yuan, N., Ebinger, J., Langlotz, C. P., Heidenreich, P. A.,
Harrington, R. A., Liang, D. H., Ashley, E. A., and Zou, J. Y . Video-based AI for beat-to-beat
assessment of cardiac function. Nature , 580(7802):252–256, 2020. ISSN 14764687. doi:
10.1038/s41586-020-2145-8.
[54] Pang, G., Lu, L., and Karniadakis, G. E. fpinns: Fractional physics-informed neural networks.
SIAM Journal on Scientific Computing , 41(4):A2603–A2626, 2019. doi: 10.1137/18M1229845.
[55] Pappalardo, F., Russo, G., Tshinanu, F. M., and Viceconti, M. In silico clinical trials: concepts
and early adoptions. Briefings in bioinformatics , 20(5):1699–1708, 2019.
[56] Pappalardo, F., Russo, G., Tshinanu, F. M., and Viceconti, M. In silico clinical trials: concepts
and early adoptions. Briefings in bioinformatics , 20(5):1699–1708, 2019.
[57] Pearl, J. Causality . Cambridge university press, 2009.
[58] Pfrommer, J., Zimmerling, C., Liu, J., Kärger, L., Henning, F., and Beyerer, J. Optimisation of
manufacturing process parameters using deep neural networks as surrogate models. Procedia
CIRP , 72:426–431, 2018. ISSN 2212-8271. doi: https://doi.org/10.1016/j.procir.2018.03.046.
51st CIRP Conference on Manufacturing Systems.
[59] Potter, E. and Marwick, T. H. Assessment of left ventricular function by echocardiography.
JACC: Cardiovascular Imaging , 11(2_Part_1):260–274, 2018. doi: 10.1016/j.jcmg.2017.11.
017.
[60] Raissi, M., Perdikaris, P., and Karniadakis, G. E. Physics-informed neural networks: A
deep learning framework for solving forward and inverse problems involving nonlinear partial
differential equations. Journal of Computational physics , 378:686–707, 2019.
13[61] Ramabathiran, A. A. and Ramachandran, P. Spinn: sparse, physics-based, and partially
interpretable neural networks for pdes. Journal of Computational Physics , 445:110600, 2021.
[62] Sahli Costabal, F., Yang, Y ., Perdikaris, P., Hurtado, D. E., and Kuhl, E. Physics-informed
neural networks for cardiac activation mapping. Frontiers in Physics , 8:42, 2020.
[63] Sainte-Marie, J., Chapelle, D., Cimrman, R., and Sorine, M. Modeling and estimation of the
cardiac electromechanical activity. Computers and Structures , 84:1743–1759, 2006.
[64] Scheufele, K., Subramanian, S., and Biros, G. Fully automatic calibration of tumor-growth
models using a single mpmri scan. IEEE transactions on medical imaging , 40(1):193–204,
2021. ISSN 0278-0062.
[65] Seppelt, P. C., De Rosa, R., Mas-Peiro, S., Zeiher, A. M., and Vasa-Nicotera, M. Early
hemodynamic changes after transcatheter aortic valve implantation in patients with severe aortic
stenosis measured by invasive pressure volume loop analysis. Cardiovascular intervention and
therapeutics , 37(1):191–201, 2022. ISSN 1868-4300.
[66] Simaan, M. A., Ferreira, A., Chen, S., Antaki, J. F., and Galati, D. G. A dynamical state space
representation and performance analysis of a feedback-controlled rotary left ventricular assist
device. IEEE Transactions on Control Systems Technology , 17(1):15–28, 2008.
[67] Stergiopulos, N., Meister, J.-J., and Westerhof, N. Determinants of stroke volume and systolic
and diastolic aortic pressure. American Journal of Physiology-Heart and Circulatory Physiology ,
270(6):H2050–H2059, 1996.
[68] Stoyanov, D., Taylor, Z., Carneiro, G., Syeda-Mahmood, T., Martel, A., Maier-Hein, L., Tavares,
J. M. R., Bradley, A., Papa, J. P., Belagiannis, V ., et al. Deep learning in medical image analysis
and multimodal learning for clinical decision support: 4th international workshop, dlmia 2018,
and 8th international workshop, ml-cds 2018, held in conjunction with miccai 2018, granada,
spain, september 20, 2018, proceedings , volume 11045. Springer, 2018.
[69] Subramanian, K. Digital twin for drug discovery and development—the virtual liver. Journal of
the Indian Institute of Science , 100(4):653–662, 2020.
[70] Sun, T., He, X., and Li, Z. Digital twin in healthcare: Recent updates and challenges. DIGITAL
HEALTH , 9:20552076221149651, 2023. doi: 10.1177/20552076221149651.
[71] van Herten, R. L., Chiribiri, A., Breeuwer, M., Veta, M., and Scannell, C. M. Physics-informed
neural networks for myocardial perfusion mri quantification. Medical Image Analysis , 78:
102399, 2022. ISSN 1361-8415. doi: https://doi.org/10.1016/j.media.2022.102399.
[72] Viceconti, M., Henney, A., and Morley-Fletcher, E. In silico clinical trials: how computer
simulation will transform the biomedical industry. International Journal of Clinical Trials , 3(2):
37–46, 2016.
[73] Virtanen, P., Gommers, R., Oliphant, T. E., Haberland, M., Reddy, T., Cournapeau, D., Burovski,
E., Peterson, P., Weckesser, W., Bright, J., van der Walt, S. J., Brett, M., Wilson, J., Millman,
K. J., Mayorov, N., Nelson, A. R. J., Jones, E., Kern, R., Larson, E., Carey, C. J., Polat, ˙I.,
Feng, Y ., Moore, E. W., VanderPlas, J., Laxalde, D., Perktold, J., Cimrman, R., Henriksen, I.,
Quintero, E. A., Harris, C. R., Archibald, A. M., Ribeiro, A. H., Pedregosa, F., van Mulbregt, P.,
and SciPy 1.0 Contributors. SciPy 1.0: Fundamental Algorithms for Scientific Computing in
Python. Nature Methods , 17:261–272, 2020. doi: 10.1038/s41592-019-0686-2.
[74] V oigt, I., Inojosa, H., Dillenseger, A., Haase, R., Akgün, K., and Ziemssen, T. Digital twins for
multiple sclerosis. Frontiers in Immunology , 12, 2021. ISSN 1664-3224. doi: 10.3389/fimmu.
2021.669811.
[75] von Rueden, L., Mayer, S., Beckh, K., Georgiev, B., Giesselbach, S., Heese, R., Kirsch, B.,
Pfrommer, J., Pick, A., Ramamurthy, R., Walczak, M., Garcke, J., Bauckhage, C., and Schuecker,
J. Informed machine learning – a taxonomy and survey of integrating prior knowledge into
learning systems. IEEE Transactions on Knowledge and Data Engineering , 35(1):614–633,
2023. doi: 10.1109/TKDE.2021.3079836.
14[76] Wang, B., Zhou, H., Li, X., Yang, G., Zheng, P., Song, C., Yuan, Y ., Wuest, T., Yang, H., and
Wang, L. Human digital twin in the context of industry 5.0. Robotics and Computer-Integrated
Manufacturing , 85:102626, 2024. ISSN 0736-5845. doi: https://doi.org/10.1016/j.rcim.2023.
102626.
[77] Wei, A. E., Maslov, M. Y ., Pezone, M. J., Edelman, E. R., and Lovich, M. A. Use of pressure-
volume conductance catheters in real-time cardiovascular experimentation. Heart, Lung and
Circulation , 23(11):1059–1069, 2014. ISSN 1443-9506. doi: https://doi.org/10.1016/j.hlc.2014.
04.130.
[78] Werbos, P. An overview of neural networks for control. IEEE Control Systems Magazine , 11
(1):40–41, 1991. doi: 10.1109/37.103352.
[79] Westerhof, N., Lankhaar, J.-W., and Westerhof, B. E. The arterial windkessel. Medical &
biological engineering & computing , 47(2):131–141, 2009.
[80] Westermann, D., Kasner, M., Steendijk, P., Spillmann, F., Riad, A., Weitmann, K., Hoffmann,
W., Poller, W., Pauschinger, M., Schultheiss, H.-P., and Tschöpe, C. Role of left ventricular
stiffness in heart failure with normal ejection fraction. Circulation , 117(16):2051–2060, 2008.
doi: 10.1161/CIRCULATIONAHA.107.716886.
[81] Xu, K. and Darve, E. Physics constrained learning for data-driven inverse modeling from sparse
observations. Journal of Computational Physics , 453:110938, 2022. ISSN 0021-9991. doi:
https://doi.org/10.1016/j.jcp.2021.110938.
[82] Yang, L., Meng, X., and Karniadakis, G. E. B-pinns: Bayesian physics-informed neural
networks for forward and inverse pde problems with noisy data. Journal of Computational
Physics , 425:109913, 2021.
[83] Yu, Y .-C. Minimally invasive estimation of cardiovascular parameters . PhD thesis, University
of Pittsburgh, 1998.
[84] Zhao, W. L., Gentine, P., Reichstein, M., Zhang, Y ., Zhou, S., Wen, Y ., Lin, C., Li, X., and
Qiu, G. Y . Physics-constrained machine learning of evapotranspiration. Geophysical Research
Letters , 46(24):14496–14507, 2019. doi: https://doi.org/10.1029/2019GL085291.
[85] Zhu, B., Liu, J. Z., Cauley, S. F., Rosen, B. R., and Rosen, M. S. Image reconstruction by
domain-transform manifold learning. Nature , 555(7697):487–492, 2018.
[86] Zhu, J.-Y ., Park, T., Isola, P., and Efros, A. A. Unpaired image-to-image translation using
cycle-consistent adversarial networks. In 2017 IEEE International Conference on Computer
Vision (ICCV) , pp. 2242–2251, 2017. doi: 10.1109/ICCV .2017.244.
15AMathematical formulation of lumped-parameter hydraulic analogy model
The Simaan et al. (66) model of the cardiovascular system is characterized by the values of the
circuit elements, including the capacitances, resistances, and inductance, and by the initial conditions.
The model is governed by 17 parameters: eight static parameters that account for the circuit’s fixed
properties, four parameters that capture the elastance function, and five values describing the initial
conditions (see Appendix A.2). The elastance function relates the LV volume to the LV pressure
PLV(t) =E(t)·(VLV(t)−Vd), (14)
where Vdis the patient specific theoretical volume of the LV at zero pressure. The elastance function
is modeled in (66) as
E(t) = (EMAX−EMIN)·1.55·" tn
0.71.9
1 + tn
0.71.9#
·"
1
1 + tn
1.1721.9#
+EMIN, (15)
withtn=t/Tmax, where Tmax= 0.2 + 0 .15Tc, and Tcis the duration of a cardiac cycle. The
evolution over time of the state of the circuit at time tis described by a 5-element vector x:
x= [x1, x2, x3, x4, x5] = [PLV, PLA, PA, PAo, QT] (16)
where PLV, PLA, PA, PAoare pressures of the left-ventricle, left atrium, arteries, and aorta, respec-
tively, and QTis total blood flow. We perform a change of variables from the ( 66) formulation of the
model and write
x= [x′
1, x2, x3, x4, x5] = [VLV−Vd, PLA, PA, PAo, QT] (17)
for ease of computation.
In the model, t= 0corresponds to end-diastole (ED), the end time of the filling phase. We assume
the following constraints on the initial states
•There is no restriction on x′
1, the initial difference between LV volume and Vd. We write
x′
1(0) := start_v.
•ForPLA(0), the initial pressure in the left atrium, we know that the filling phase has finished,
and the pressures in the left atrium and LV must be equal (63).
•The initial arterial pressure PA(0), has to be equal to the aortic pressure as at ED there is no
current leaving the LV nor the aorta, so the pressures must be equal.
•The initial aortic pressure PAo(0), has to be larger than the LV pressure at end diastole
but by unspecified amount. We have a second free parameter, start_pao that defines this
pressure.
• At ED there is not blood leaving the LV , so the initial total flow is x5(0) = 0 .
Thus, the initial state vector at ED can be written
x(t= 0) = [ start_v ,start_v ·EMIN,start_pao ,start_pao ,0] (18)
Under these assumptions, the model’s degree of freedom is constrained, and the number of indepen-
dent parameters defining the system becomes 14 (8 for the static elements of the circuit, 4 capturing
the elastance function, and 2 for the initial conditions)
Θ = [ RM, RA, RC, RS, LS, CA, CR, CS, EMAX , EMIN, Tc, Vd,start_v ,start_pao ]. (19)
The evolution over time of the state vector is derived by application of Kirchoff’s current law at five
nodes, yielding the non-linear system of equations
˙ x=A1x+D1p(x), (20)
where A1is a 5×5 time-independent matrix, and D1is a5×2time-independent matrix representing
the activity of the diodes
A1=
0 0 0 0 0
0−1
RSCR1
RSCR0 0
01
RSCS−1
RSCS01
CS
0 0 0 0−1
CA
0 0−1
LS1
LS−RC
LS
;D1=
1−1
−1
CR0
0 0
01
CA0 0
. (21)
16The vector p(x)is given by
p(x) ="max{x2−x1·E(t),0}
RMmax{x1·E(t)−x4,0}
RA#
. (22)
The first element of pis the current entering the LV , and the second element of pis the current leaving
the LV . These currents depend on state of the valves, which depend on pressure differentials. Equation
20, combined with a set of initial conditions x(0), provides the evolution over time of the volume
of the LV VLVand the pressures in the system. The evolution of VLV(t)andPLV(t)gives patient
pressure-volume loops.
A.1 Addition of a feedback-controlled LV AD
We simulate the addition of a left ventricular assist device (LV AD) to the cardiac system. One end
of the device is connected between the left ventricle and the aorta, and the other end is connected
between the left ventricle and the left atrium. Many different LV ADs have been developed; we take
here the case of a rotary-controlled LV AD as described in (12; 66).
The presence of the LV AD induces the addition of a new state variable, x6, representing the blood
flow through the device. In addition, the LV AD representation in the electric circuit is described
by parameters R0,Ri,¯P,α,Li,L0,β0,β1,β2, — describing compliances, static resistances and
a time-varying resistances— and by the pump rotational speed, ω(t), which is a function of time.
The pump speed can be defined beforehand (e.g. a linear increasing function), or it can be updated
in real-time based on the state of the system. A more detailed description of the parameters and
equations of the LV AD can be found elsewhere (12; 66).
By application of circuit analysis laws, new equations of the circuit describing the cardiovascular-
LV AD system are given
˙ y=A2(t)y+D2p(y) +B(t) (23)
for new state vector y, containing the first five variables as in 18 in addition to the blood flow through
the LV AD, x6(t). The new matrices of the system are
A2(t) =
0 0 0 0 0 −1
0−1
RSCR1
RSCR0 0 0
01
RSCS−1
RSCS01
CS0
0 0 0 0−1
CA1
CA
0 0−1
LS1
LS−RC
LS0
−E(t)
−Li−L0+β10 01
−Li−L0+β10Ri+R0+Rk−β0
−Li−L0+β1
;D2=
1−1
−1
CR0
0 0
01
CA0 0
0 0
.
(24)
Rkis a time-dependent resistance, only allowing current flow through the LV AD when the pressure
in the left ventricle is below a threshold noted ¯P. It is given by
Rk= max {α·(x1·E(t)−¯P),0}. (25)
The vector p(x)is as defined in 22, and B(t)is given by
B(t) =
0
0
0
0
0
−β2
−Li−L0+β1·ω2(t)
. (26)
A.2 Parameters of the lumped-parameter hydraulic analogy model
B Identifiability of the ODE inverse problem in the cardiac experiments
A unique and valuable attribute of the ordinary differential equation (ODE) in our cardiac hemo-
dynamics experiments is its identifiability. In this experiment setting, we can demonstrate that the
model Mis well-defined and injective. To show this, we consider the inverse problem posed by
finding parameters of the Simaan et al. (66) model, written M(θ) =x.
17Parameter Physiological Meaning Reference Value Allowed range
Parameters representing static element of the circuit:
RM Mitral valve resistance 0.0050 mmHg ·s/ml (66; 83) [0.005, 0.1] mmHg ·s/ml)
RA Aortic valve resistance 0.0010 mmHg ·s/ml (66; 83) [0.0001, 0.25] mmHg ·s/ml)
RC Characteristic resistance 0.0398 mmHg ·s/ml (66; 83) Fixed (0.0398 mmHg ·s/ml)
RS Systemic vascular resistance,
related to the level of activity
of the patient (23)1.0000 mmHg ·s/ml ( 38;66;
83)Fixed (1.0 mmHg ·s/ml)
CA Aortic compliance 0.0800 ml/mmHg (66) Fixed (0.08 ml/mmHg)
CS Systemic compliance 1.3300 ml/mmHg (66; 83) Fixed (1.33 ml/mmHg)
CR Left atrial compliance, repre-
sents preload and pulmonary
circulation (66)4.4000 ml/mmHg (66; 83) Fixed (4.4 ml/mmHg)
LS Inertance of blood in the aorta 0.0005 mmHg ·s2/ml ( 66;23;
83)Fixed (0.0005 mmHg ·s2/ml)
Parameters describing the elastance function of left ventricle:
EMAX Maximum elastance, related
to the contractility of the heart
(67)1.5-2.0 mmHg/ml ( 66), 2.31
(67), 0.7-2.5 mmHg/ml (23)[0.5, 3.5] mmHg/ml
EMIN Minimum elastance 0.06 mmHg/ml ( 67), 0.05
mmHg/ml (66)[0.02, 0.1] mmHg/ml
Vd Theoretical LV volume at
zero pressure10 ml ( 23), 12 ml ( 66), 20 ml
(67)[4.0, 25.0] ml
Tc Heart cycle duration ( Tc=
60/HR )0.8-1.0 s (66) [0.4, 1.7] s (i.e. 35-150
beats/min)
Parameters describing the initial conditions:
start_v Initial condition related (and
not necessarily equal) to the
ED LV volume140 ml (66) [0, 280.0] ml
start_pao Initial condition related (and
not necessarily equal) to the
ED aortic pressure∼77mmHg (66) Fixed (75 mmHg)
Additional parameters used in describing the addition of the LV AD:
Ro Outlet resistance of cannulae 0.0677 mmHg.s/ml (66) Fixed (0.0677 mmHg.s/ml)
Ri Inlet resistance of cannulae 0.0677 mmHg.s/ml (66) Fixed (0.0677 mmHg.s/ml)
α LV AD pressure parameter -3.5s/ml (66) Fixed (-3.5s/ml)
¯P LV AD weight parameter 1 mmHg (66) Fixed (1 mmHg)
Li Inlet inertance of cannulae 0.0127 mmHg.s/ml (66) Fixed (0.0127 mmHg.s/ml)
Lo Outlet inertance of cannulae 0.0127 mmHg.s/ml (66) Fixed (0.0127 mmHg.s/ml)
β0 LV AD dependent pressure pa-
rameter-0.296 (12) Fixed (-0.296)
β1 LV AD dependent pressure pa-
rameter-0.027 (12) Fixed (-0.027)
β2 LV AD dependent pressure pa-
rameter9.9025×10−7(66) Fixed ( 9.9025×10−7)
H Circuit pressure difference
(inlet-outlet) defining LV AD
pressure parametersH=β0x6+β1dx6
dt+β2ω2
Table 3: Parameters of the lumped-parameter hydraulic analogy model of the left-ventricle.
First, this function is well defined: given θ, which includes parameters describing the initial system
state, there is a unique ODE solution x. Using Picard-Lindelöf, it is sufficient for A1x+D1p(x)to
be continuous in tand Lipschitz continuous in x. Asxdescribes pressures and flows that cannot be
discontinuous in t, the first condition is satisfied. As A1x+D1p(x)is linear in each of the four cases
defined by the pairwise possibilities for the rows of p(x)to be either positive or zero, we can take the
maximum needed Lipschitz constant amongst these four possibilities to see the entire equation is
Lipschitz continuous.
Conversely, given complete knowledge of x, we can find the twelve static model parameters in θ
uniquely. We assume that complete knowledge of xincludes knowledge of the five state variables
(VLV−Vd, PLA, PA, PAo, QT) over time in addition to the complete knowledge of PLV, VLV. The
18difference between VLVand the first state variable gives Vd. The ratio PLV/VLV−Vdgives E(t).
The maximum and minimum values of this function give EmaxandEmin, respectively. The value of
Tcis the length of a period of E(t). This gives the four parameters describing elastance.
Applying the Laplace transform L(f) =Z∞
0e−stf(t)dtto Equation 20, we have
sL(x)(s)−x(0) = A1L(x)(s) +D1L(p(x)). (27)
The vector L(p(x))is constant. For any fixed s,L(x)(s)is also a constant. Thus, each sgives a
linear system of five equations in the eight unknown static parameters governing the Simaan et al.
(66) model. Identifying these eight parameters uniquely simply requires choosing enough values of s
to solve each row as its own linear system. This shows that Mis injective.
C Comparison of problem set up with existent literature
C.1 Ill-posed inverse problems
Generally, inverse problems are the task of determine inputs θ∈Θfrom measurements y∈Yin
the set up F(θ) =ywith forward operator F: Θ→Y.Inverse problems are typically ill-posed,
meaning that the forward model Fmay be non-injective or that small perturbations of measurements
y(i.e. noise) cause large change in the corresponding inputs θ. Often, a variational approach is
taken to mitigate these challenges, meaning the problem is reformulated into the task of minimizing
over the possible solution set Θthe sum of a data fidelity term Dto represent fitting the model Fin
addition to a term incorporating solution criteria Rat some level α:
min
θ∈ΘD(θ,y) +αR(θ). (28)
For example, Dmight be ||F(θ)−y||to encourage model fitting and Rmight be ||θ||to encourage
input sparsity. This optimization task can been solved using analytical techniques to find θdirectly or
using generative learning techniques to approximate F−1to find θ.
We also seek to solve an ill-posed inverse problem as the forward model Fis non-injective. There are
different patient states that could look nearly identical on imaging. In our setting, as we further break
down this ill-posed task of inverting Fas that of inverting F=K ◦ M for components M: Θ→
XandK:X→Y, we seek to solve an ill-posed inverse problem with partially known forward
model. Other strategies for inverse problem with partially known forward model include adversarial
methods such as CycleGAN for unpaired signals and measurements and AmbientGAN for training
from measurements alone with parametric forward model. CycleGAN simultaneously learns the
forward and inverse process by minimizes the expected value of the difference between ground truth
inputs and outputs and with forward and inverse model composition outputs ( 86). AmbientGAN learns
the inverse model by discriminating between the distribution of the measurements and distribution of
the forward model applied to the modeled inputs ( 5). For settings with unlabeled data, ( 19) pioneers
Untrained Physically Informed Neural Networks (UPINNs), training a CNN to reconstruct images by
reducing the training error between the original measurements and outputs passed through a known
forward model.
These existent set ups differ from our task as our partially known model is really the composition
of a known and unknown model. We take a generative inverse problem approach and develop a
model for F−1, which we compare to other generative solutions in Table 4 across the following two
taxonomies: known versus unknown forward model A(row) and paired versus unpaired input-output
data (column). This taxonomy mirrors that in (51).
C.2 Physics informed neural networks and related approaches
Efforts to incorporate knowledge into neural network models to improve training and accuracy include
techniques to leverage physical models represented by differential equations ( 75). In big data settings,
physical laws may be learned during modeling. In smaller data settings, incorporating physics into
models can improve performance ( 75). This is especially pertinent to personalized medicine where
data is inherently limited. Physics-informed neural networks (PINNs) typically have the goal of
either finding solutions (forward) or system parameters (inverse) to systems of differential equations
19Paired
{(yi, θi)}Unpaired
{yj},{θi}Only{θi} Only{yi} Paired
{(yi,xi)}No or lim-
ited data
Known
FReconstruction
techniques
(34), De-
noising
autoen-
coder
(49)Same as
training
with paired
(θ,y)Same as
training
with paired
(θ,y)UPINN
(19)- Traditional
PINNs for
Equation
Discovery
(60)
Unknown
FSupervised
learning
(85)With data
distribu-
tions: ( 17),
CycleGAN
(86)- - - -
Know
distribu-
tion for
F- - Blind de-
modulation
(28), De-
blurGAN
(41)AmbientGAN
(5)- -
Know
M- - - - Our method -
Table 4: Comparison of problem set up and techniques for ill-posed inverse problems F(θ) =
K(M(θ)) = y. Abbreviations: UPINN= Untrained Physically Informed Neural Network,
GAN=Generative Adversarial Network.
(60;15). PINN methodologies define training loss as the sum of a data loss and a regularization term,
which is the differential equation itself. There is extensive development and mixed success in PINN
models for both goals (40).
The set up is the following. Given a state vector x∈Xdependent on time variable tand differential
equation fθ(x) = 0 constraining the solutions xsubject to a parametrization θwith initial or boundary
dataD(θ,x), PINNs construct a variational minimization task
minD(θ,x) +fθ(x) (29)
so that fθ(x)acts as a regularizer. This framework can be used to solve both the forward task of
solving fθforxand the inverse task of finding θ. The minimization is over the parameters of the
neural network in the case of the forward task and over θ∈Θin the inverse task. We call the forward
operator in this set up M, which is the task of solving the differential equation.
Several papers have used PINN approaches to study cardiac function, especially blood flow, including
papers that use non-invasive medical imaging data. van Herten et al. (71) learn parameters and
solutions of a model for myocardial perfusion using measurements from MRIs. Kissas et al. (39) use
a PINN approach to calibrate flow simulation model boundary conditions using data extracted from
MRIs. Herrero Martin et al. (29) study cardiac electrophysiology with PINNs and demonstrate the
ability of the method to learn a latent variable. Sahli Costabal et al. (62) and Grandits et al. (26) use a
PINN approach to study cardiac activation. Our set-up differs in that we learn from images rather
than through measurements obtained from images, and we predict informative latent parameters
directly and seek a model that works for an entire patient population as opposed to a single patient.
Our methodology differs in that the physical model is not integrated into the loss function during
training. Instead, we use supervised learning trained on data loss alone to generate a forward model
solving the ODE system and transfer this learning.
Drawbacks of the PINN approach include that the differential equation and boundary conditions need
not be exactly solved. Other approaches have solved fθas a hard constraint for these same aims in
physics-constrained learning (PCL), which mitigates this challenge. A variety of variants on these
traditional approaches continue to develop for both forward and inverse problems in various specific
problem set ups such as fPINNs ( 54), SPINNs ( 61), B-PINNs ( 82), VPINNs ( 37), and cPINNs ( 33),
which while not directly relevant in our experiments may be valuable in future digital twin tasks. We
compare related techniques to our own with examples in Table C.2.
20Forward task (learn x(t)) Inverse task (learn θ)
Traditional PINNs with f
as regularization term(39) (29) (62) (26) (71)(39)(29)
PCL: fas hard constraint (84) (81)
PI-NODEs: Train a neural
network to learn the non-
linear dynamics and a Neu-
ral ODE ( 10) to learn linear
components(42) (42)
P-SSL: fis used to gener-
ate synthetic data and use
data loss for training a gen-
erative solution to inform a
larger inverse taskOur method Our method could be in-
verted for this task
Table 5: Comparison of techniques for embedding knowledge of physics models M(θ) =x(t)in neu-
ral networks. Abbreviations: PINN=Physics-Informed Neural Network, PCL=Physics Constrained
Learning, PI-NODEs=Physics-Informed Neural Ordinary Differential Equations, P-SSL=Physics-
Informed Self-Supervised Learning.
C.3 Neural ODEs
Chen et al. (10) proposed the use of differential equation solvers for solving neural networks upon
noticing the similarity between ResNet gradient descent and Euler’s method. Viewing neural networks
as ODEs means forward propagation is the system solution. It also means that, in contrast, to ResNet
architectures, the network does not have a fixed number of layers. Neural ODEs are typically used to
model time series data to replace ResNets. The set up is as follows.
Let ODESolver represent a numerical ordinary differential equation (ODE) solver. A fully connected
neural network fwill represent the ODE the network learns to solve so that a forward pass looks like
ODESolver (f, t0, x0, T) (30)
for initial condition x(t0) =x0and prediction time series T. In this set up, fcan represent an ODE
that we seek to approximate, analogous to our setting. Neural ODEs are trained by back propagating
through the numerical ODE solver. Methods to reduce the computational cost of this backpropagation
include the adjoint state variable methods in ( 10) and augmenting the system to a higher dimensional
space (21).
Our fixed pre-training task for leveraging the physical model shares similarities with Neural ODEs
in that we train a network to learn to solve an ODE. Our aim differs as a Neural ODE can learn the
dynamics for a single patient. The ODE fwill be specific to a single patient parameter set θ, but we
seek to learn a map for a patient population.
D Electric circuit derivation of the (66) model
D.1 Deriving ODEs from circuit model
The Simaan et al. (66) model has five state variables which are determined by solving a system of
ordinary differential equations (ODEs). We derive five ODEs from basic circuit current laws. We
obtain equations for the derivative of each of the five state variables. Recall
x= [x1, x2, x3, x4, x5] = [PLV, PLA, PA, PAo, QT] (31)
and that in our case, current is flow and voltage is pressure.
The following basic electric circuit facts are sufficient for the derivation.
• For resistors: current = voltage /resistance, i.e. I=V/R .
•For capacitors: current = compliance * derivative of voltage with respect to time, i.e.
I=CdV
dt.
21• For inductors: voltage = inductance * derivative of current wrt t, i.e. V=LdI
dt.
•Kirchhoff’s laws: current must be conserved at any node and voltage sums to zero around
any loop.
•I=dQ
dtcurrent is the change in charge Q.
The first row of the ODE system is given by conserving the current Iat the red node in Figure 5 as
−I3=I1−I2
where I3= (C(t)x1)′=x′
1+C′(t)
C(t)x1,I1= max( x2−x1,0)/RMas the voltage flowing across
the resistor would be the difference between the voltage at the two capacitors (using Kirchhoff’s law)
and the diode prevents flow in the negative direction, and I2= max( x1−x4,0)/RA. Combining
and rearranging, we get
x′
1=−C′(t)/C(t)x1+ max( x2−x1,0)/(C(t)RM)−max( x1−x4,0)/(C(t)RA).
Figure 5: Nodes for deriving circuit equations. The fifth row is derived using total flow and inductance.
The second row is given as the following by conserving current at the yellow circled node in Figure 5
(x3−x2)/RS=CRx′
2+ max( x2−x1,0)/RM
x′
2= (x3−x2)/(RSCR)−max( x2−x1,0)/(RMCR).
The third row is given as
CSx′
3= (x2−x3)/RS+x5
x′
3= (x2−x3)/(RSCS) +x5/CS
by conserving current at the yellow node in Figure 5.
The fourth row is given as
CAx′
4=−x5+ max( x1−x4,0)/RA
x′
4=−x5/CA+ max( x1−x4,0)/(RACA)
by conserving current at the green node in Figure 5.
The fifth row is given using LdI
dt=Vas
LSx′
5= (x4−x3) + max( x1−x4,0)/RA
x′
5= (x4−x3)/LS+ max( x1−x4,0)/(RALS).
This relation is written using the relation for inductors above so the left hand of the first line is
LdI
dtand the right hand side is voltage. In total, after performing a change of variables of x1to
x′
1:=x1/E(t)these five equations give us Equation 20.
D.2 Circuit Equivalence
We sought to find a reduced order equivalent circuit to improve model performance but were
unsuccessful in finding an identifiable system. We began by ignoring diodes in our circuit to use
linear equivalence, as then our circuit would have only linear components (capcitors, inductors,
resistors), and we can use the follow result.
22RNO INO C(t)
Figure 6: Norton equivalent circuit.
Theorem D.1 (Norton) .Every linear circuit is equivalent to one with a single current source and
single resistor in parallel with a load of interest.
For our case this gives us the circuit in Figure 6, as we are interested in the capacitor representing
pressure change in the left ventricle.
To identify this circuit, we wrote the variables of this new circuit in terms of the state variables in
the (66) model. To calculate the resistance of the equivalent circuits, we start by shorting all voltage
sources (including capacitors) and opening all inductors. This gives us the circuit in Figure 7.
RM RA
C(t)RCRS
Figure 7: Calculating the resistance of a Norton equivalent circuit.
As this is in fact the resistors RSandRAin series and RMin parallel, using current divider rules,
the Norton resistance is
RNO=1
1
RM+1
RS+RA. (32)
With the addition of diodes, since ours are ideal, when current flow is in the diode’s forward direction,
we replace the diode with a short. In the reverse direction, we replace the diode with an open, which
would vary the calculated resistance to include and exclude resistances.
We would want to leverage the reduced circuit architecture to solve for PLV(t). We know that the
current through the load capacitor is Icap= (C(t)PLV(t))′using basic capacitor circuit relations.
The Norton equivalent circuit gives a node to solve using Kirchoff’s law,
IRNO=Icap+INO. (33)
where IRNOis the current flowing through the Norton resistor. Thus, we write
IRNO(t) =RNO+ (C(t)PLV(t))′(34)
P′
LV(t) =1
C(t)(−C′(t)PLV(t) +IRNO(t)−RNO) (35)
giving two unknown state variables IRNO(t), PLV(t)and one ODE, which is insufficient to determine
the circuit.
E Training details
The EchoNet model, achieving a Mean Absolute Error (MAE) of 5.40%, was trained for 3 hours over
13 epochs with a batch size of 100 and a learning rate of 0.001. In comparison, the CAMUS model,
23which reached an MAE of 6.81%, required 2 hours of training over 110 epochs with a batch size of
50 and a learning rate of 0.005.
In our experiments, we conducted a comprehensive hyperparameter search to ensure optimal per-
formance. We employed a grid search approach to systematically explore a range of values for key
hyperparameters. Specifically, we evaluated learning rates of 0.001, 0.005, and 0.0005, batch sizes of
50 and 100, and the number of epochs set to 300 and 500. We used the adam optimizer for training.
Models were trained on CPUs, each node featuring 24 cores (12 physical cores with hyper-threading)
and 128 GB of RAM.
F Additional figures from experiments
F.1 Validation with Mitral Stenosis labels on EchoNet
Figure 8: Overlaid PV loops for non-MS patients and MS patients with red patients being labeled as
having MS and black patients being without labels. Abbreviations: PV = pressure-volume, MS=mitral
stenosis, LVV = Left-ventricular volume, LVP = Left-ventricular pressure.
F.2 Validation and comparison of physics-informed pretext task
Figure 9: Testing the pre-training task on a second synthetic dataset of 1000 randomly sampled points.
The distribution of the loss is uniform across plausible parameter sets suggesting that our network is
not subject to poor approximations in extreme cases.
24Figure 10: Examples of patient-specific PINNs trained on synthetic data with 60 time points. Some
PINNs learn the volume curve well. Others do not learn their patient curve after 100,000 epochs.
Figure 11: Examples of patient-specific Neural ODEs trained on synthetic data with 60 time points
for each of the fives states in the cardiac model or trained only on volume state only.
Figure 12: Distribution of MAE on ejection fraction (EF) of the 20 best patient specific PINN and
Neural ODE models used to create averages in Table 2.
25NeurIPS Paper Checklist
1.Claims
Question: Do the main claims made in the abstract and introduction accurately reflect the
paper’s contributions and scope?
Answer: [Yes]
Justification: The abstract states that we propose a new non-invasive computational method
for constructing digital twins and experiment with a cardiac hemodynamics model. This is
indeed what the paper does.
Guidelines:
•The answer NA means that the abstract and introduction do not include the claims
made in the paper.
•The abstract and/or introduction should clearly state the claims made, including the
contributions made in the paper and important assumptions and limitations. A No or
NA answer to this question will not be perceived well by the reviewers.
•The claims made should match theoretical and experimental results, and reflect how
much the results can be expected to generalize to other settings.
•It is fine to include aspirational goals as motivation as long as it is clear that these goals
are not attained by the paper.
2.Limitations
Question: Does the paper discuss the limitations of the work performed by the authors?
Answer: [Yes]
Justification: We have a limitation section pointing out the need for additional clinical
validation of models built from these methods.
Guidelines:
•The answer NA means that the paper has no limitation while the answer No means that
the paper has limitations, but those are not discussed in the paper.
• The authors are encouraged to create a separate "Limitations" section in their paper.
•The paper should point out any strong assumptions and how robust the results are to
violations of these assumptions (e.g., independence assumptions, noiseless settings,
model well-specification, asymptotic approximations only holding locally). The authors
should reflect on how these assumptions might be violated in practice and what the
implications would be.
•The authors should reflect on the scope of the claims made, e.g., if the approach was
only tested on a few datasets or with a few runs. In general, empirical results often
depend on implicit assumptions, which should be articulated.
•The authors should reflect on the factors that influence the performance of the approach.
For example, a facial recognition algorithm may perform poorly when image resolution
is low or images are taken in low lighting. Or a speech-to-text system might not be
used reliably to provide closed captions for online lectures because it fails to handle
technical jargon.
•The authors should discuss the computational efficiency of the proposed algorithms
and how they scale with dataset size.
•If applicable, the authors should discuss possible limitations of their approach to
address problems of privacy and fairness.
•While the authors might fear that complete honesty about limitations might be used by
reviewers as grounds for rejection, a worse outcome might be that reviewers discover
limitations that aren’t acknowledged in the paper. The authors should use their best
judgment and recognize that individual actions in favor of transparency play an impor-
tant role in developing norms that preserve the integrity of the community. Reviewers
will be specifically instructed to not penalize honesty concerning limitations.
3.Theory Assumptions and Proofs
Question: For each theoretical result, does the paper provide the full set of assumptions and
a complete (and correct) proof?
26Answer: [Yes]
Justification: There is no theoretical results in the main text. For the small number of
theoretical results in the appendix, theorems used are clearly stated.
Guidelines:
• The answer NA means that the paper does not include theoretical results.
•All the theorems, formulas, and proofs in the paper should be numbered and cross-
referenced.
•All assumptions should be clearly stated or referenced in the statement of any theorems.
•The proofs can either appear in the main paper or the supplemental material, but if
they appear in the supplemental material, the authors are encouraged to provide a short
proof sketch to provide intuition.
•Inversely, any informal proof provided in the core of the paper should be complemented
by formal proofs provided in appendix or supplemental material.
• Theorems and Lemmas that the proof relies upon should be properly referenced.
4.Experimental Result Reproducibility
Question: Does the paper fully disclose all the information needed to reproduce the main ex-
perimental results of the paper to the extent that it affects the main claims and/or conclusions
of the paper (regardless of whether the code and data are provided or not)?
[Yes]
Justification: We provide a description of the data processing and model architecture in the
paper, and our code is publicly available on GitHub.
Guidelines:
• The answer NA means that the paper does not include experiments.
•If the paper includes experiments, a No answer to this question will not be perceived
well by the reviewers: Making the paper reproducible is important, regardless of
whether the code and data are provided or not.
•If the contribution is a dataset and/or model, the authors should describe the steps taken
to make their results reproducible or verifiable.
•Depending on the contribution, reproducibility can be accomplished in various ways.
For example, if the contribution is a novel architecture, describing the architecture fully
might suffice, or if the contribution is a specific model and empirical evaluation, it may
be necessary to either make it possible for others to replicate the model with the same
dataset, or provide access to the model. In general. releasing code and data is often
one good way to accomplish this, but reproducibility can also be provided via detailed
instructions for how to replicate the results, access to a hosted model (e.g., in the case
of a large language model), releasing of a model checkpoint, or other means that are
appropriate to the research performed.
•While NeurIPS does not require releasing code, the conference does require all submis-
sions to provide some reasonable avenue for reproducibility, which may depend on the
nature of the contribution. For example
(a)If the contribution is primarily a new algorithm, the paper should make it clear how
to reproduce that algorithm.
(b)If the contribution is primarily a new model architecture, the paper should describe
the architecture clearly and fully.
(c)If the contribution is a new model (e.g., a large language model), then there should
either be a way to access this model for reproducing the results or a way to reproduce
the model (e.g., with an open-source dataset or instructions for how to construct
the dataset).
(d)We recognize that reproducibility may be tricky in some cases, in which case
authors are welcome to describe the particular way they provide for reproducibility.
In the case of closed-source models, it may be that access to the model is limited in
some way (e.g., to registered users), but it should be possible for other researchers
to have some path to reproducing or verifying the results.
5.Open access to data and code
27Question: Does the paper provide open access to the data and code, with sufficient instruc-
tions to faithfully reproduce the main experimental results, as described in supplemental
material?
[Yes]
Justification: We use publicly available data and our code is already publicly available on
GitHub.
Guidelines:
• The answer NA means that paper does not include experiments requiring code.
•Please see the NeurIPS code and data submission guidelines ( https://nips.cc/
public/guides/CodeSubmissionPolicy ) for more details.
•While we encourage the release of code and data, we understand that this might not be
possible, so âNoâ is an acceptable answer. Papers cannot be rejected simply for not
including code, unless this is central to the contribution (e.g., for a new open-source
benchmark).
•The instructions should contain the exact command and environment needed to run to
reproduce the results. See the NeurIPS code and data submission guidelines ( https:
//nips.cc/public/guides/CodeSubmissionPolicy ) for more details.
•The authors should provide instructions on data access and preparation, including how
to access the raw data, preprocessed data, intermediate data, and generated data, etc.
•The authors should provide scripts to reproduce all experimental results for the new
proposed method and baselines. If only a subset of experiments are reproducible, they
should state which ones are omitted from the script and why.
•At submission time, to preserve anonymity, the authors should release anonymized
versions (if applicable).
•Providing as much information as possible in supplemental material (appended to the
paper) is recommended, but including URLs to data and code is permitted.
6.Experimental Setting/Details
Question: Does the paper specify all the training and test details (e.g., data splits, hyper-
parameters, how they were chosen, type of optimizer, etc.) necessary to understand the
results?
Answer:[Yes]
Justification: These are both detailed in the paper’s appendix and able to be referenced in
the released code.
Guidelines:
• The answer NA means that the paper does not include experiments.
•The experimental setting should be presented in the core of the paper to a level of detail
that is necessary to appreciate the results and make sense of them.
•The full details can be provided either with the code, in appendix, or as supplemental
material.
7.Experiment Statistical Significance
Question: Does the paper report error bars suitably and correctly defined or other appropriate
information about the statistical significance of the experiments?
Answer: [No]
Justification: Our experiments do not include the calculation of uncertainty in predictions.
For experiments where we present an average across patients, we show the distribution of
results in the appendix.
Guidelines:
• The answer NA means that the paper does not include experiments.
•The authors should answer "Yes" if the results are accompanied by error bars, confi-
dence intervals, or statistical significance tests, at least for the experiments that support
the main claims of the paper.
28•The factors of variability that the error bars are capturing should be clearly stated (for
example, train/test split, initialization, random drawing of some parameter, or overall
run with given experimental conditions).
•The method for calculating the error bars should be explained (closed form formula,
call to a library function, bootstrap, etc.)
• The assumptions made should be given (e.g., Normally distributed errors).
•It should be clear whether the error bar is the standard deviation or the standard error
of the mean.
•It is OK to report 1-sigma error bars, but one should state it. The authors should
preferably report a 2-sigma error bar than state that they have a 96% CI, if the hypothesis
of Normality of errors is not verified.
•For asymmetric distributions, the authors should be careful not to show in tables or
figures symmetric error bars that would yield results that are out of range (e.g. negative
error rates).
•If error bars are reported in tables or plots, The authors should explain in the text how
they were calculated and reference the corresponding figures or tables in the text.
8.Experiments Compute Resources
Question: For each experiment, does the paper provide sufficient information on the com-
puter resources (type of compute workers, memory, time of execution) needed to reproduce
the experiments?
Answer: [Yes]
Justification: We include compute resources under training details in the appendix.
Guidelines:
• The answer NA means that the paper does not include experiments.
•The paper should indicate the type of compute workers CPU or GPU, internal cluster,
or cloud provider, including relevant memory and storage.
•The paper should provide the amount of compute required for each of the individual
experimental runs as well as estimate the total compute.
•The paper should disclose whether the full research project required more compute
than the experiments reported in the paper (e.g., preliminary or failed experiments that
didn’t make it into the paper).
9.Code Of Ethics
Question: Does the research conducted in the paper conform, in every respect, with the
NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines ?
Answer: [Yes]
Justification: We adhere to these guidelines.
Guidelines:
•The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.
•If the authors answer No, they should explain the special circumstances that require a
deviation from the Code of Ethics.
•The authors should make sure to preserve anonymity (e.g., if there is a special consid-
eration due to laws or regulations in their jurisdiction).
10.Broader Impacts
Question: Does the paper discuss both potential positive societal impacts and negative
societal impacts of the work performed?
Answer: [Yes]
Justification: We discuss these implications in the introduction and conclusion.
Guidelines:
• The answer NA means that there is no societal impact of the work performed.
•If the authors answer NA or No, they should explain why their work has no societal
impact or why the paper does not address societal impact.
29•Examples of negative societal impacts include potential malicious or unintended uses
(e.g., disinformation, generating fake profiles, surveillance), fairness considerations
(e.g., deployment of technologies that could make decisions that unfairly impact specific
groups), privacy considerations, and security considerations.
•The conference expects that many papers will be foundational research and not tied
to particular applications, let alone deployments. However, if there is a direct path to
any negative applications, the authors should point it out. For example, it is legitimate
to point out that an improvement in the quality of generative models could be used to
generate deepfakes for disinformation. On the other hand, it is not needed to point out
that a generic algorithm for optimizing neural networks could enable people to train
models that generate Deepfakes faster.
•The authors should consider possible harms that could arise when the technology is
being used as intended and functioning correctly, harms that could arise when the
technology is being used as intended but gives incorrect results, and harms following
from (intentional or unintentional) misuse of the technology.
•If there are negative societal impacts, the authors could also discuss possible mitigation
strategies (e.g., gated release of models, providing defenses in addition to attacks,
mechanisms for monitoring misuse, mechanisms to monitor how a system learns from
feedback over time, improving the efficiency and accessibility of ML).
11.Safeguards
Question: Does the paper describe safeguards that have been put in place for responsible
release of data or models that have a high risk for misuse (e.g., pretrained language models,
image generators, or scraped datasets)?
Answer: [NA]
Justification: The paper does not release data nor use scraped data. While a clinical use case
is the subject of our experiments, the model is not intended to be used in any clinical setting
as discussed in limitations.
Guidelines:
• The answer NA means that the paper poses no such risks.
•Released models that have a high risk for misuse or dual-use should be released with
necessary safeguards to allow for controlled use of the model, for example by requiring
that users adhere to usage guidelines or restrictions to access the model or implementing
safety filters.
•Datasets that have been scraped from the Internet could pose safety risks. The authors
should describe how they avoided releasing unsafe images.
•We recognize that providing effective safeguards is challenging, and many papers do
not require this, but we encourage authors to take this into account and make a best
faith effort.
12.Licenses for existing assets
Question: Are the creators or original owners of assets (e.g., code, data, models), used in
the paper, properly credited and are the license and terms of use explicitly mentioned and
properly respected?
Answer: [Yes]
Justification: Data are cited. We use packages including ODE solvers which are cited.
Guidelines:
• The answer NA means that the paper does not use existing assets.
• The authors should cite the original paper that produced the code package or dataset.
•The authors should state which version of the asset is used and, if possible, include a
URL.
• The name of the license (e.g., CC-BY 4.0) should be included for each asset.
•For scraped data from a particular source (e.g., website), the copyright and terms of
service of that source should be provided.
30•If assets are released, the license, copyright information, and terms of use in the
package should be provided. For popular datasets, paperswithcode.com/datasets
has curated licenses for some datasets. Their licensing guide can help determine the
license of a dataset.
•For existing datasets that are re-packaged, both the original license and the license of
the derived asset (if it has changed) should be provided.
•If this information is not available online, the authors are encouraged to reach out to
the asset’s creators.
13.New Assets
Question: Are new assets introduced in the paper well documented and is the documentation
provided alongside the assets?
Answer: [Yes]
Justification: We have released our code along with its documentation.
Guidelines:
• The answer NA means that the paper does not release new assets.
•Researchers should communicate the details of the dataset/code/model as part of their
submissions via structured templates. This includes details about training, license,
limitations, etc.
•The paper should discuss whether and how consent was obtained from people whose
asset is used.
•At submission time, remember to anonymize your assets (if applicable). You can either
create an anonymized URL or include an anonymized zip file.
14.Crowdsourcing and Research with Human Subjects
Question: For crowdsourcing experiments and research with human subjects, does the paper
include the full text of instructions given to participants and screenshots, if applicable, as
well as details about compensation (if any)?
[NA]
Justification: This paper does not involve crowdsourcing or research with human subjects.
Guidelines:
•The answer NA means that the paper does not involve crowdsourcing nor research with
human subjects.
•Including this information in the supplemental material is fine, but if the main contribu-
tion of the paper involves human subjects, then as much detail as possible should be
included in the main paper.
•According to the NeurIPS Code of Ethics, workers involved in data collection, curation,
or other labor should be paid at least the minimum wage in the country of the data
collector.
15.Institutional Review Board (IRB) Approvals or Equivalent for Research with Human
Subjects
Question: Does the paper describe potential risks incurred by study participants, whether
such risks were disclosed to the subjects, and whether Institutional Review Board (IRB)
approvals (or an equivalent approval/review based on the requirements of your country or
institution) were obtained?
[NA]
Justification: This paper uses publicly available datasets rather than directly interacting
with any human subjects. Thus, this paper does not involve crowdsourcing or research with
human subjects.
Guidelines:
•The answer NA means that the paper does not involve crowdsourcing nor research with
human subjects.
31•Depending on the country in which research is conducted, IRB approval (or equivalent)
may be required for any human subjects research. If you obtained IRB approval, you
should clearly state this in the paper.
•We recognize that the procedures for this may vary significantly between institutions
and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the
guidelines for their institution.
•For initial submissions, do not include any information that would break anonymity (if
applicable), such as the institution conducting the review.
32